

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed May 28 15:21:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    57   000000                     
    58                           ; Generated 05/12/2024 GMT
    59                           ; 
    60                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000FE0                     bsr             equ	4064
    93   000FE9                     fsr0            equ	4073
    94   000FEA                     fsr0h           equ	4074
    95   000FE9                     fsr0l           equ	4073
    96   000FE1                     fsr1            equ	4065
    97   000FE2                     fsr1h           equ	4066
    98   000FE1                     fsr1l           equ	4065
    99   000FD9                     fsr2            equ	4057
   100   000FDA                     fsr2h           equ	4058
   101   000FD9                     fsr2l           equ	4057
   102   000FEF                     indf0           equ	4079
   103   000FE7                     indf1           equ	4071
   104   000FDF                     indf2           equ	4063
   105   000FF2                     intcon          equ	4082
   106   000000                     nvmcon          equ	0
   107   000FF9                     pcl             equ	4089
   108   000FFA                     pclath          equ	4090
   109   000FFB                     pclatu          equ	4091
   110   000FEB                     plusw0          equ	4075
   111   000FE3                     plusw1          equ	4067
   112   000FDB                     plusw2          equ	4059
   113   000FED                     postdec0        equ	4077
   114   000FE5                     postdec1        equ	4069
   115   000FDD                     postdec2        equ	4061
   116   000FEE                     postinc0        equ	4078
   117   000FE6                     postinc1        equ	4070
   118   000FDE                     postinc2        equ	4062
   119   000FEC                     preinc0         equ	4076
   120   000FE4                     preinc1         equ	4068
   121   000FDC                     preinc2         equ	4060
   122   000FF3                     prod            equ	4083
   123   000FF4                     prodh           equ	4084
   124   000FF3                     prodl           equ	4083
   125   000FD8                     status          equ	4056
   126   000FF5                     tablat          equ	4085
   127   000FF6                     tblptr          equ	4086
   128   000FF7                     tblptrh         equ	4087
   129   000FF6                     tblptrl         equ	4086
   130   000FF8                     tblptru         equ	4088
   131   000FFD                     tosl            equ	4093
   132   000FE8                     wreg            equ	4072
   133   000F62                     SPPDATA         equ	3938	;# 
   134   000F63                     SPPCFG          equ	3939	;# 
   135   000F64                     SPPEPS          equ	3940	;# 
   136   000F65                     SPPCON          equ	3941	;# 
   137   000F66                     UFRM            equ	3942	;# 
   138   000F66                     UFRML           equ	3942	;# 
   139   000F67                     UFRMH           equ	3943	;# 
   140   000F68                     UIR             equ	3944	;# 
   141   000F69                     UIE             equ	3945	;# 
   142   000F6A                     UEIR            equ	3946	;# 
   143   000F6B                     UEIE            equ	3947	;# 
   144   000F6C                     USTAT           equ	3948	;# 
   145   000F6D                     UCON            equ	3949	;# 
   146   000F6E                     UADDR           equ	3950	;# 
   147   000F6F                     UCFG            equ	3951	;# 
   148   000F70                     UEP0            equ	3952	;# 
   149   000F71                     UEP1            equ	3953	;# 
   150   000F72                     UEP2            equ	3954	;# 
   151   000F73                     UEP3            equ	3955	;# 
   152   000F74                     UEP4            equ	3956	;# 
   153   000F75                     UEP5            equ	3957	;# 
   154   000F76                     UEP6            equ	3958	;# 
   155   000F77                     UEP7            equ	3959	;# 
   156   000F78                     UEP8            equ	3960	;# 
   157   000F79                     UEP9            equ	3961	;# 
   158   000F7A                     UEP10           equ	3962	;# 
   159   000F7B                     UEP11           equ	3963	;# 
   160   000F7C                     UEP12           equ	3964	;# 
   161   000F7D                     UEP13           equ	3965	;# 
   162   000F7E                     UEP14           equ	3966	;# 
   163   000F7F                     UEP15           equ	3967	;# 
   164   000F80                     PORTA           equ	3968	;# 
   165   000F81                     PORTB           equ	3969	;# 
   166   000F82                     PORTC           equ	3970	;# 
   167   000F83                     PORTD           equ	3971	;# 
   168   000F84                     PORTE           equ	3972	;# 
   169   000F89                     LATA            equ	3977	;# 
   170   000F8A                     LATB            equ	3978	;# 
   171   000F8B                     LATC            equ	3979	;# 
   172   000F8C                     LATD            equ	3980	;# 
   173   000F8D                     LATE            equ	3981	;# 
   174   000F92                     TRISA           equ	3986	;# 
   175   000F92                     DDRA            equ	3986	;# 
   176   000F93                     TRISB           equ	3987	;# 
   177   000F93                     DDRB            equ	3987	;# 
   178   000F94                     TRISC           equ	3988	;# 
   179   000F94                     DDRC            equ	3988	;# 
   180   000F95                     TRISD           equ	3989	;# 
   181   000F95                     DDRD            equ	3989	;# 
   182   000F96                     TRISE           equ	3990	;# 
   183   000F96                     DDRE            equ	3990	;# 
   184   000F9B                     OSCTUNE         equ	3995	;# 
   185   000F9D                     PIE1            equ	3997	;# 
   186   000F9E                     PIR1            equ	3998	;# 
   187   000F9F                     IPR1            equ	3999	;# 
   188   000FA0                     PIE2            equ	4000	;# 
   189   000FA1                     PIR2            equ	4001	;# 
   190   000FA2                     IPR2            equ	4002	;# 
   191   000FA6                     EECON1          equ	4006	;# 
   192   000FA7                     EECON2          equ	4007	;# 
   193   000FA8                     EEDATA          equ	4008	;# 
   194   000FA9                     EEADR           equ	4009	;# 
   195   000FAB                     RCSTA           equ	4011	;# 
   196   000FAB                     RCSTA1          equ	4011	;# 
   197   000FAC                     TXSTA           equ	4012	;# 
   198   000FAC                     TXSTA1          equ	4012	;# 
   199   000FAD                     TXREG           equ	4013	;# 
   200   000FAD                     TXREG1          equ	4013	;# 
   201   000FAE                     RCREG           equ	4014	;# 
   202   000FAE                     RCREG1          equ	4014	;# 
   203   000FAF                     SPBRG           equ	4015	;# 
   204   000FAF                     SPBRG1          equ	4015	;# 
   205   000FB0                     SPBRGH          equ	4016	;# 
   206   000FB1                     T3CON           equ	4017	;# 
   207   000FB2                     TMR3            equ	4018	;# 
   208   000FB2                     TMR3L           equ	4018	;# 
   209   000FB3                     TMR3H           equ	4019	;# 
   210   000FB4                     CMCON           equ	4020	;# 
   211   000FB5                     CVRCON          equ	4021	;# 
   212   000FB6                     ECCP1AS         equ	4022	;# 
   213   000FB6                     CCP1AS          equ	4022	;# 
   214   000FB7                     ECCP1DEL        equ	4023	;# 
   215   000FB7                     CCP1DEL         equ	4023	;# 
   216   000FB8                     BAUDCON         equ	4024	;# 
   217   000FB8                     BAUDCTL         equ	4024	;# 
   218   000FBA                     CCP2CON         equ	4026	;# 
   219   000FBB                     CCPR2           equ	4027	;# 
   220   000FBB                     CCPR2L          equ	4027	;# 
   221   000FBC                     CCPR2H          equ	4028	;# 
   222   000FBD                     CCP1CON         equ	4029	;# 
   223   000FBD                     ECCP1CON        equ	4029	;# 
   224   000FBE                     CCPR1           equ	4030	;# 
   225   000FBE                     CCPR1L          equ	4030	;# 
   226   000FBF                     CCPR1H          equ	4031	;# 
   227   000FC0                     ADCON2          equ	4032	;# 
   228   000FC1                     ADCON1          equ	4033	;# 
   229   000FC2                     ADCON0          equ	4034	;# 
   230   000FC3                     ADRES           equ	4035	;# 
   231   000FC3                     ADRESL          equ	4035	;# 
   232   000FC4                     ADRESH          equ	4036	;# 
   233   000FC5                     SSPCON2         equ	4037	;# 
   234   000FC6                     SSPCON1         equ	4038	;# 
   235   000FC7                     SSPSTAT         equ	4039	;# 
   236   000FC8                     SSPADD          equ	4040	;# 
   237   000FC9                     SSPBUF          equ	4041	;# 
   238   000FCA                     T2CON           equ	4042	;# 
   239   000FCB                     PR2             equ	4043	;# 
   240   000FCB                     MEMCON          equ	4043	;# 
   241   000FCC                     TMR2            equ	4044	;# 
   242   000FCD                     T1CON           equ	4045	;# 
   243   000FCE                     TMR1            equ	4046	;# 
   244   000FCE                     TMR1L           equ	4046	;# 
   245   000FCF                     TMR1H           equ	4047	;# 
   246   000FD0                     RCON            equ	4048	;# 
   247   000FD1                     WDTCON          equ	4049	;# 
   248   000FD2                     HLVDCON         equ	4050	;# 
   249   000FD2                     LVDCON          equ	4050	;# 
   250   000FD3                     OSCCON          equ	4051	;# 
   251   000FD5                     T0CON           equ	4053	;# 
   252   000FD6                     TMR0            equ	4054	;# 
   253   000FD6                     TMR0L           equ	4054	;# 
   254   000FD7                     TMR0H           equ	4055	;# 
   255   000FD8                     STATUS          equ	4056	;# 
   256   000FD9                     FSR2            equ	4057	;# 
   257   000FD9                     FSR2L           equ	4057	;# 
   258   000FDA                     FSR2H           equ	4058	;# 
   259   000FDB                     PLUSW2          equ	4059	;# 
   260   000FDC                     PREINC2         equ	4060	;# 
   261   000FDD                     POSTDEC2        equ	4061	;# 
   262   000FDE                     POSTINC2        equ	4062	;# 
   263   000FDF                     INDF2           equ	4063	;# 
   264   000FE0                     BSR             equ	4064	;# 
   265   000FE1                     FSR1            equ	4065	;# 
   266   000FE1                     FSR1L           equ	4065	;# 
   267   000FE2                     FSR1H           equ	4066	;# 
   268   000FE3                     PLUSW1          equ	4067	;# 
   269   000FE4                     PREINC1         equ	4068	;# 
   270   000FE5                     POSTDEC1        equ	4069	;# 
   271   000FE6                     POSTINC1        equ	4070	;# 
   272   000FE7                     INDF1           equ	4071	;# 
   273   000FE8                     WREG            equ	4072	;# 
   274   000FE9                     FSR0            equ	4073	;# 
   275   000FE9                     FSR0L           equ	4073	;# 
   276   000FEA                     FSR0H           equ	4074	;# 
   277   000FEB                     PLUSW0          equ	4075	;# 
   278   000FEC                     PREINC0         equ	4076	;# 
   279   000FED                     POSTDEC0        equ	4077	;# 
   280   000FEE                     POSTINC0        equ	4078	;# 
   281   000FEF                     INDF0           equ	4079	;# 
   282   000FF0                     INTCON3         equ	4080	;# 
   283   000FF1                     INTCON2         equ	4081	;# 
   284   000FF2                     INTCON          equ	4082	;# 
   285   000FF3                     PROD            equ	4083	;# 
   286   000FF3                     PRODL           equ	4083	;# 
   287   000FF4                     PRODH           equ	4084	;# 
   288   000FF5                     TABLAT          equ	4085	;# 
   289   000FF6                     TBLPTR          equ	4086	;# 
   290   000FF6                     TBLPTRL         equ	4086	;# 
   291   000FF7                     TBLPTRH         equ	4087	;# 
   292   000FF8                     TBLPTRU         equ	4088	;# 
   293   000FF9                     PCLAT           equ	4089	;# 
   294   000FF9                     PC              equ	4089	;# 
   295   000FF9                     PCL             equ	4089	;# 
   296   000FFA                     PCLATH          equ	4090	;# 
   297   000FFB                     PCLATU          equ	4091	;# 
   298   000FFC                     STKPTR          equ	4092	;# 
   299   000FFD                     TOS             equ	4093	;# 
   300   000FFD                     TOSL            equ	4093	;# 
   301   000FFE                     TOSH            equ	4094	;# 
   302   000FFF                     TOSU            equ	4095	;# 
   303   000F62                     SPPDATA         equ	3938	;# 
   304   000F63                     SPPCFG          equ	3939	;# 
   305   000F64                     SPPEPS          equ	3940	;# 
   306   000F65                     SPPCON          equ	3941	;# 
   307   000F66                     UFRM            equ	3942	;# 
   308   000F66                     UFRML           equ	3942	;# 
   309   000F67                     UFRMH           equ	3943	;# 
   310   000F68                     UIR             equ	3944	;# 
   311   000F69                     UIE             equ	3945	;# 
   312   000F6A                     UEIR            equ	3946	;# 
   313   000F6B                     UEIE            equ	3947	;# 
   314   000F6C                     USTAT           equ	3948	;# 
   315   000F6D                     UCON            equ	3949	;# 
   316   000F6E                     UADDR           equ	3950	;# 
   317   000F6F                     UCFG            equ	3951	;# 
   318   000F70                     UEP0            equ	3952	;# 
   319   000F71                     UEP1            equ	3953	;# 
   320   000F72                     UEP2            equ	3954	;# 
   321   000F73                     UEP3            equ	3955	;# 
   322   000F74                     UEP4            equ	3956	;# 
   323   000F75                     UEP5            equ	3957	;# 
   324   000F76                     UEP6            equ	3958	;# 
   325   000F77                     UEP7            equ	3959	;# 
   326   000F78                     UEP8            equ	3960	;# 
   327   000F79                     UEP9            equ	3961	;# 
   328   000F7A                     UEP10           equ	3962	;# 
   329   000F7B                     UEP11           equ	3963	;# 
   330   000F7C                     UEP12           equ	3964	;# 
   331   000F7D                     UEP13           equ	3965	;# 
   332   000F7E                     UEP14           equ	3966	;# 
   333   000F7F                     UEP15           equ	3967	;# 
   334   000F80                     PORTA           equ	3968	;# 
   335   000F81                     PORTB           equ	3969	;# 
   336   000F82                     PORTC           equ	3970	;# 
   337   000F83                     PORTD           equ	3971	;# 
   338   000F84                     PORTE           equ	3972	;# 
   339   000F89                     LATA            equ	3977	;# 
   340   000F8A                     LATB            equ	3978	;# 
   341   000F8B                     LATC            equ	3979	;# 
   342   000F8C                     LATD            equ	3980	;# 
   343   000F8D                     LATE            equ	3981	;# 
   344   000F92                     TRISA           equ	3986	;# 
   345   000F92                     DDRA            equ	3986	;# 
   346   000F93                     TRISB           equ	3987	;# 
   347   000F93                     DDRB            equ	3987	;# 
   348   000F94                     TRISC           equ	3988	;# 
   349   000F94                     DDRC            equ	3988	;# 
   350   000F95                     TRISD           equ	3989	;# 
   351   000F95                     DDRD            equ	3989	;# 
   352   000F96                     TRISE           equ	3990	;# 
   353   000F96                     DDRE            equ	3990	;# 
   354   000F9B                     OSCTUNE         equ	3995	;# 
   355   000F9D                     PIE1            equ	3997	;# 
   356   000F9E                     PIR1            equ	3998	;# 
   357   000F9F                     IPR1            equ	3999	;# 
   358   000FA0                     PIE2            equ	4000	;# 
   359   000FA1                     PIR2            equ	4001	;# 
   360   000FA2                     IPR2            equ	4002	;# 
   361   000FA6                     EECON1          equ	4006	;# 
   362   000FA7                     EECON2          equ	4007	;# 
   363   000FA8                     EEDATA          equ	4008	;# 
   364   000FA9                     EEADR           equ	4009	;# 
   365   000FAB                     RCSTA           equ	4011	;# 
   366   000FAB                     RCSTA1          equ	4011	;# 
   367   000FAC                     TXSTA           equ	4012	;# 
   368   000FAC                     TXSTA1          equ	4012	;# 
   369   000FAD                     TXREG           equ	4013	;# 
   370   000FAD                     TXREG1          equ	4013	;# 
   371   000FAE                     RCREG           equ	4014	;# 
   372   000FAE                     RCREG1          equ	4014	;# 
   373   000FAF                     SPBRG           equ	4015	;# 
   374   000FAF                     SPBRG1          equ	4015	;# 
   375   000FB0                     SPBRGH          equ	4016	;# 
   376   000FB1                     T3CON           equ	4017	;# 
   377   000FB2                     TMR3            equ	4018	;# 
   378   000FB2                     TMR3L           equ	4018	;# 
   379   000FB3                     TMR3H           equ	4019	;# 
   380   000FB4                     CMCON           equ	4020	;# 
   381   000FB5                     CVRCON          equ	4021	;# 
   382   000FB6                     ECCP1AS         equ	4022	;# 
   383   000FB6                     CCP1AS          equ	4022	;# 
   384   000FB7                     ECCP1DEL        equ	4023	;# 
   385   000FB7                     CCP1DEL         equ	4023	;# 
   386   000FB8                     BAUDCON         equ	4024	;# 
   387   000FB8                     BAUDCTL         equ	4024	;# 
   388   000FBA                     CCP2CON         equ	4026	;# 
   389   000FBB                     CCPR2           equ	4027	;# 
   390   000FBB                     CCPR2L          equ	4027	;# 
   391   000FBC                     CCPR2H          equ	4028	;# 
   392   000FBD                     CCP1CON         equ	4029	;# 
   393   000FBD                     ECCP1CON        equ	4029	;# 
   394   000FBE                     CCPR1           equ	4030	;# 
   395   000FBE                     CCPR1L          equ	4030	;# 
   396   000FBF                     CCPR1H          equ	4031	;# 
   397   000FC0                     ADCON2          equ	4032	;# 
   398   000FC1                     ADCON1          equ	4033	;# 
   399   000FC2                     ADCON0          equ	4034	;# 
   400   000FC3                     ADRES           equ	4035	;# 
   401   000FC3                     ADRESL          equ	4035	;# 
   402   000FC4                     ADRESH          equ	4036	;# 
   403   000FC5                     SSPCON2         equ	4037	;# 
   404   000FC6                     SSPCON1         equ	4038	;# 
   405   000FC7                     SSPSTAT         equ	4039	;# 
   406   000FC8                     SSPADD          equ	4040	;# 
   407   000FC9                     SSPBUF          equ	4041	;# 
   408   000FCA                     T2CON           equ	4042	;# 
   409   000FCB                     PR2             equ	4043	;# 
   410   000FCB                     MEMCON          equ	4043	;# 
   411   000FCC                     TMR2            equ	4044	;# 
   412   000FCD                     T1CON           equ	4045	;# 
   413   000FCE                     TMR1            equ	4046	;# 
   414   000FCE                     TMR1L           equ	4046	;# 
   415   000FCF                     TMR1H           equ	4047	;# 
   416   000FD0                     RCON            equ	4048	;# 
   417   000FD1                     WDTCON          equ	4049	;# 
   418   000FD2                     HLVDCON         equ	4050	;# 
   419   000FD2                     LVDCON          equ	4050	;# 
   420   000FD3                     OSCCON          equ	4051	;# 
   421   000FD5                     T0CON           equ	4053	;# 
   422   000FD6                     TMR0            equ	4054	;# 
   423   000FD6                     TMR0L           equ	4054	;# 
   424   000FD7                     TMR0H           equ	4055	;# 
   425   000FD8                     STATUS          equ	4056	;# 
   426   000FD9                     FSR2            equ	4057	;# 
   427   000FD9                     FSR2L           equ	4057	;# 
   428   000FDA                     FSR2H           equ	4058	;# 
   429   000FDB                     PLUSW2          equ	4059	;# 
   430   000FDC                     PREINC2         equ	4060	;# 
   431   000FDD                     POSTDEC2        equ	4061	;# 
   432   000FDE                     POSTINC2        equ	4062	;# 
   433   000FDF                     INDF2           equ	4063	;# 
   434   000FE0                     BSR             equ	4064	;# 
   435   000FE1                     FSR1            equ	4065	;# 
   436   000FE1                     FSR1L           equ	4065	;# 
   437   000FE2                     FSR1H           equ	4066	;# 
   438   000FE3                     PLUSW1          equ	4067	;# 
   439   000FE4                     PREINC1         equ	4068	;# 
   440   000FE5                     POSTDEC1        equ	4069	;# 
   441   000FE6                     POSTINC1        equ	4070	;# 
   442   000FE7                     INDF1           equ	4071	;# 
   443   000FE8                     WREG            equ	4072	;# 
   444   000FE9                     FSR0            equ	4073	;# 
   445   000FE9                     FSR0L           equ	4073	;# 
   446   000FEA                     FSR0H           equ	4074	;# 
   447   000FEB                     PLUSW0          equ	4075	;# 
   448   000FEC                     PREINC0         equ	4076	;# 
   449   000FED                     POSTDEC0        equ	4077	;# 
   450   000FEE                     POSTINC0        equ	4078	;# 
   451   000FEF                     INDF0           equ	4079	;# 
   452   000FF0                     INTCON3         equ	4080	;# 
   453   000FF1                     INTCON2         equ	4081	;# 
   454   000FF2                     INTCON          equ	4082	;# 
   455   000FF3                     PROD            equ	4083	;# 
   456   000FF3                     PRODL           equ	4083	;# 
   457   000FF4                     PRODH           equ	4084	;# 
   458   000FF5                     TABLAT          equ	4085	;# 
   459   000FF6                     TBLPTR          equ	4086	;# 
   460   000FF6                     TBLPTRL         equ	4086	;# 
   461   000FF7                     TBLPTRH         equ	4087	;# 
   462   000FF8                     TBLPTRU         equ	4088	;# 
   463   000FF9                     PCLAT           equ	4089	;# 
   464   000FF9                     PC              equ	4089	;# 
   465   000FF9                     PCL             equ	4089	;# 
   466   000FFA                     PCLATH          equ	4090	;# 
   467   000FFB                     PCLATU          equ	4091	;# 
   468   000FFC                     STKPTR          equ	4092	;# 
   469   000FFD                     TOS             equ	4093	;# 
   470   000FFD                     TOSL            equ	4093	;# 
   471   000FFE                     TOSH            equ	4094	;# 
   472   000FFF                     TOSU            equ	4095	;# 
   473   000F62                     SPPDATA         equ	3938	;# 
   474   000F63                     SPPCFG          equ	3939	;# 
   475   000F64                     SPPEPS          equ	3940	;# 
   476   000F65                     SPPCON          equ	3941	;# 
   477   000F66                     UFRM            equ	3942	;# 
   478   000F66                     UFRML           equ	3942	;# 
   479   000F67                     UFRMH           equ	3943	;# 
   480   000F68                     UIR             equ	3944	;# 
   481   000F69                     UIE             equ	3945	;# 
   482   000F6A                     UEIR            equ	3946	;# 
   483   000F6B                     UEIE            equ	3947	;# 
   484   000F6C                     USTAT           equ	3948	;# 
   485   000F6D                     UCON            equ	3949	;# 
   486   000F6E                     UADDR           equ	3950	;# 
   487   000F6F                     UCFG            equ	3951	;# 
   488   000F70                     UEP0            equ	3952	;# 
   489   000F71                     UEP1            equ	3953	;# 
   490   000F72                     UEP2            equ	3954	;# 
   491   000F73                     UEP3            equ	3955	;# 
   492   000F74                     UEP4            equ	3956	;# 
   493   000F75                     UEP5            equ	3957	;# 
   494   000F76                     UEP6            equ	3958	;# 
   495   000F77                     UEP7            equ	3959	;# 
   496   000F78                     UEP8            equ	3960	;# 
   497   000F79                     UEP9            equ	3961	;# 
   498   000F7A                     UEP10           equ	3962	;# 
   499   000F7B                     UEP11           equ	3963	;# 
   500   000F7C                     UEP12           equ	3964	;# 
   501   000F7D                     UEP13           equ	3965	;# 
   502   000F7E                     UEP14           equ	3966	;# 
   503   000F7F                     UEP15           equ	3967	;# 
   504   000F80                     PORTA           equ	3968	;# 
   505   000F81                     PORTB           equ	3969	;# 
   506   000F82                     PORTC           equ	3970	;# 
   507   000F83                     PORTD           equ	3971	;# 
   508   000F84                     PORTE           equ	3972	;# 
   509   000F89                     LATA            equ	3977	;# 
   510   000F8A                     LATB            equ	3978	;# 
   511   000F8B                     LATC            equ	3979	;# 
   512   000F8C                     LATD            equ	3980	;# 
   513   000F8D                     LATE            equ	3981	;# 
   514   000F92                     TRISA           equ	3986	;# 
   515   000F92                     DDRA            equ	3986	;# 
   516   000F93                     TRISB           equ	3987	;# 
   517   000F93                     DDRB            equ	3987	;# 
   518   000F94                     TRISC           equ	3988	;# 
   519   000F94                     DDRC            equ	3988	;# 
   520   000F95                     TRISD           equ	3989	;# 
   521   000F95                     DDRD            equ	3989	;# 
   522   000F96                     TRISE           equ	3990	;# 
   523   000F96                     DDRE            equ	3990	;# 
   524   000F9B                     OSCTUNE         equ	3995	;# 
   525   000F9D                     PIE1            equ	3997	;# 
   526   000F9E                     PIR1            equ	3998	;# 
   527   000F9F                     IPR1            equ	3999	;# 
   528   000FA0                     PIE2            equ	4000	;# 
   529   000FA1                     PIR2            equ	4001	;# 
   530   000FA2                     IPR2            equ	4002	;# 
   531   000FA6                     EECON1          equ	4006	;# 
   532   000FA7                     EECON2          equ	4007	;# 
   533   000FA8                     EEDATA          equ	4008	;# 
   534   000FA9                     EEADR           equ	4009	;# 
   535   000FAB                     RCSTA           equ	4011	;# 
   536   000FAB                     RCSTA1          equ	4011	;# 
   537   000FAC                     TXSTA           equ	4012	;# 
   538   000FAC                     TXSTA1          equ	4012	;# 
   539   000FAD                     TXREG           equ	4013	;# 
   540   000FAD                     TXREG1          equ	4013	;# 
   541   000FAE                     RCREG           equ	4014	;# 
   542   000FAE                     RCREG1          equ	4014	;# 
   543   000FAF                     SPBRG           equ	4015	;# 
   544   000FAF                     SPBRG1          equ	4015	;# 
   545   000FB0                     SPBRGH          equ	4016	;# 
   546   000FB1                     T3CON           equ	4017	;# 
   547   000FB2                     TMR3            equ	4018	;# 
   548   000FB2                     TMR3L           equ	4018	;# 
   549   000FB3                     TMR3H           equ	4019	;# 
   550   000FB4                     CMCON           equ	4020	;# 
   551   000FB5                     CVRCON          equ	4021	;# 
   552   000FB6                     ECCP1AS         equ	4022	;# 
   553   000FB6                     CCP1AS          equ	4022	;# 
   554   000FB7                     ECCP1DEL        equ	4023	;# 
   555   000FB7                     CCP1DEL         equ	4023	;# 
   556   000FB8                     BAUDCON         equ	4024	;# 
   557   000FB8                     BAUDCTL         equ	4024	;# 
   558   000FBA                     CCP2CON         equ	4026	;# 
   559   000FBB                     CCPR2           equ	4027	;# 
   560   000FBB                     CCPR2L          equ	4027	;# 
   561   000FBC                     CCPR2H          equ	4028	;# 
   562   000FBD                     CCP1CON         equ	4029	;# 
   563   000FBD                     ECCP1CON        equ	4029	;# 
   564   000FBE                     CCPR1           equ	4030	;# 
   565   000FBE                     CCPR1L          equ	4030	;# 
   566   000FBF                     CCPR1H          equ	4031	;# 
   567   000FC0                     ADCON2          equ	4032	;# 
   568   000FC1                     ADCON1          equ	4033	;# 
   569   000FC2                     ADCON0          equ	4034	;# 
   570   000FC3                     ADRES           equ	4035	;# 
   571   000FC3                     ADRESL          equ	4035	;# 
   572   000FC4                     ADRESH          equ	4036	;# 
   573   000FC5                     SSPCON2         equ	4037	;# 
   574   000FC6                     SSPCON1         equ	4038	;# 
   575   000FC7                     SSPSTAT         equ	4039	;# 
   576   000FC8                     SSPADD          equ	4040	;# 
   577   000FC9                     SSPBUF          equ	4041	;# 
   578   000FCA                     T2CON           equ	4042	;# 
   579   000FCB                     PR2             equ	4043	;# 
   580   000FCB                     MEMCON          equ	4043	;# 
   581   000FCC                     TMR2            equ	4044	;# 
   582   000FCD                     T1CON           equ	4045	;# 
   583   000FCE                     TMR1            equ	4046	;# 
   584   000FCE                     TMR1L           equ	4046	;# 
   585   000FCF                     TMR1H           equ	4047	;# 
   586   000FD0                     RCON            equ	4048	;# 
   587   000FD1                     WDTCON          equ	4049	;# 
   588   000FD2                     HLVDCON         equ	4050	;# 
   589   000FD2                     LVDCON          equ	4050	;# 
   590   000FD3                     OSCCON          equ	4051	;# 
   591   000FD5                     T0CON           equ	4053	;# 
   592   000FD6                     TMR0            equ	4054	;# 
   593   000FD6                     TMR0L           equ	4054	;# 
   594   000FD7                     TMR0H           equ	4055	;# 
   595   000FD8                     STATUS          equ	4056	;# 
   596   000FD9                     FSR2            equ	4057	;# 
   597   000FD9                     FSR2L           equ	4057	;# 
   598   000FDA                     FSR2H           equ	4058	;# 
   599   000FDB                     PLUSW2          equ	4059	;# 
   600   000FDC                     PREINC2         equ	4060	;# 
   601   000FDD                     POSTDEC2        equ	4061	;# 
   602   000FDE                     POSTINC2        equ	4062	;# 
   603   000FDF                     INDF2           equ	4063	;# 
   604   000FE0                     BSR             equ	4064	;# 
   605   000FE1                     FSR1            equ	4065	;# 
   606   000FE1                     FSR1L           equ	4065	;# 
   607   000FE2                     FSR1H           equ	4066	;# 
   608   000FE3                     PLUSW1          equ	4067	;# 
   609   000FE4                     PREINC1         equ	4068	;# 
   610   000FE5                     POSTDEC1        equ	4069	;# 
   611   000FE6                     POSTINC1        equ	4070	;# 
   612   000FE7                     INDF1           equ	4071	;# 
   613   000FE8                     WREG            equ	4072	;# 
   614   000FE9                     FSR0            equ	4073	;# 
   615   000FE9                     FSR0L           equ	4073	;# 
   616   000FEA                     FSR0H           equ	4074	;# 
   617   000FEB                     PLUSW0          equ	4075	;# 
   618   000FEC                     PREINC0         equ	4076	;# 
   619   000FED                     POSTDEC0        equ	4077	;# 
   620   000FEE                     POSTINC0        equ	4078	;# 
   621   000FEF                     INDF0           equ	4079	;# 
   622   000FF0                     INTCON3         equ	4080	;# 
   623   000FF1                     INTCON2         equ	4081	;# 
   624   000FF2                     INTCON          equ	4082	;# 
   625   000FF3                     PROD            equ	4083	;# 
   626   000FF3                     PRODL           equ	4083	;# 
   627   000FF4                     PRODH           equ	4084	;# 
   628   000FF5                     TABLAT          equ	4085	;# 
   629   000FF6                     TBLPTR          equ	4086	;# 
   630   000FF6                     TBLPTRL         equ	4086	;# 
   631   000FF7                     TBLPTRH         equ	4087	;# 
   632   000FF8                     TBLPTRU         equ	4088	;# 
   633   000FF9                     PCLAT           equ	4089	;# 
   634   000FF9                     PC              equ	4089	;# 
   635   000FF9                     PCL             equ	4089	;# 
   636   000FFA                     PCLATH          equ	4090	;# 
   637   000FFB                     PCLATU          equ	4091	;# 
   638   000FFC                     STKPTR          equ	4092	;# 
   639   000FFD                     TOS             equ	4093	;# 
   640   000FFD                     TOSL            equ	4093	;# 
   641   000FFE                     TOSH            equ	4094	;# 
   642   000FFF                     TOSU            equ	4095	;# 
   643   000F62                     SPPDATA         equ	3938	;# 
   644   000F63                     SPPCFG          equ	3939	;# 
   645   000F64                     SPPEPS          equ	3940	;# 
   646   000F65                     SPPCON          equ	3941	;# 
   647   000F66                     UFRM            equ	3942	;# 
   648   000F66                     UFRML           equ	3942	;# 
   649   000F67                     UFRMH           equ	3943	;# 
   650   000F68                     UIR             equ	3944	;# 
   651   000F69                     UIE             equ	3945	;# 
   652   000F6A                     UEIR            equ	3946	;# 
   653   000F6B                     UEIE            equ	3947	;# 
   654   000F6C                     USTAT           equ	3948	;# 
   655   000F6D                     UCON            equ	3949	;# 
   656   000F6E                     UADDR           equ	3950	;# 
   657   000F6F                     UCFG            equ	3951	;# 
   658   000F70                     UEP0            equ	3952	;# 
   659   000F71                     UEP1            equ	3953	;# 
   660   000F72                     UEP2            equ	3954	;# 
   661   000F73                     UEP3            equ	3955	;# 
   662   000F74                     UEP4            equ	3956	;# 
   663   000F75                     UEP5            equ	3957	;# 
   664   000F76                     UEP6            equ	3958	;# 
   665   000F77                     UEP7            equ	3959	;# 
   666   000F78                     UEP8            equ	3960	;# 
   667   000F79                     UEP9            equ	3961	;# 
   668   000F7A                     UEP10           equ	3962	;# 
   669   000F7B                     UEP11           equ	3963	;# 
   670   000F7C                     UEP12           equ	3964	;# 
   671   000F7D                     UEP13           equ	3965	;# 
   672   000F7E                     UEP14           equ	3966	;# 
   673   000F7F                     UEP15           equ	3967	;# 
   674   000F80                     PORTA           equ	3968	;# 
   675   000F81                     PORTB           equ	3969	;# 
   676   000F82                     PORTC           equ	3970	;# 
   677   000F83                     PORTD           equ	3971	;# 
   678   000F84                     PORTE           equ	3972	;# 
   679   000F89                     LATA            equ	3977	;# 
   680   000F8A                     LATB            equ	3978	;# 
   681   000F8B                     LATC            equ	3979	;# 
   682   000F8C                     LATD            equ	3980	;# 
   683   000F8D                     LATE            equ	3981	;# 
   684   000F92                     TRISA           equ	3986	;# 
   685   000F92                     DDRA            equ	3986	;# 
   686   000F93                     TRISB           equ	3987	;# 
   687   000F93                     DDRB            equ	3987	;# 
   688   000F94                     TRISC           equ	3988	;# 
   689   000F94                     DDRC            equ	3988	;# 
   690   000F95                     TRISD           equ	3989	;# 
   691   000F95                     DDRD            equ	3989	;# 
   692   000F96                     TRISE           equ	3990	;# 
   693   000F96                     DDRE            equ	3990	;# 
   694   000F9B                     OSCTUNE         equ	3995	;# 
   695   000F9D                     PIE1            equ	3997	;# 
   696   000F9E                     PIR1            equ	3998	;# 
   697   000F9F                     IPR1            equ	3999	;# 
   698   000FA0                     PIE2            equ	4000	;# 
   699   000FA1                     PIR2            equ	4001	;# 
   700   000FA2                     IPR2            equ	4002	;# 
   701   000FA6                     EECON1          equ	4006	;# 
   702   000FA7                     EECON2          equ	4007	;# 
   703   000FA8                     EEDATA          equ	4008	;# 
   704   000FA9                     EEADR           equ	4009	;# 
   705   000FAB                     RCSTA           equ	4011	;# 
   706   000FAB                     RCSTA1          equ	4011	;# 
   707   000FAC                     TXSTA           equ	4012	;# 
   708   000FAC                     TXSTA1          equ	4012	;# 
   709   000FAD                     TXREG           equ	4013	;# 
   710   000FAD                     TXREG1          equ	4013	;# 
   711   000FAE                     RCREG           equ	4014	;# 
   712   000FAE                     RCREG1          equ	4014	;# 
   713   000FAF                     SPBRG           equ	4015	;# 
   714   000FAF                     SPBRG1          equ	4015	;# 
   715   000FB0                     SPBRGH          equ	4016	;# 
   716   000FB1                     T3CON           equ	4017	;# 
   717   000FB2                     TMR3            equ	4018	;# 
   718   000FB2                     TMR3L           equ	4018	;# 
   719   000FB3                     TMR3H           equ	4019	;# 
   720   000FB4                     CMCON           equ	4020	;# 
   721   000FB5                     CVRCON          equ	4021	;# 
   722   000FB6                     ECCP1AS         equ	4022	;# 
   723   000FB6                     CCP1AS          equ	4022	;# 
   724   000FB7                     ECCP1DEL        equ	4023	;# 
   725   000FB7                     CCP1DEL         equ	4023	;# 
   726   000FB8                     BAUDCON         equ	4024	;# 
   727   000FB8                     BAUDCTL         equ	4024	;# 
   728   000FBA                     CCP2CON         equ	4026	;# 
   729   000FBB                     CCPR2           equ	4027	;# 
   730   000FBB                     CCPR2L          equ	4027	;# 
   731   000FBC                     CCPR2H          equ	4028	;# 
   732   000FBD                     CCP1CON         equ	4029	;# 
   733   000FBD                     ECCP1CON        equ	4029	;# 
   734   000FBE                     CCPR1           equ	4030	;# 
   735   000FBE                     CCPR1L          equ	4030	;# 
   736   000FBF                     CCPR1H          equ	4031	;# 
   737   000FC0                     ADCON2          equ	4032	;# 
   738   000FC1                     ADCON1          equ	4033	;# 
   739   000FC2                     ADCON0          equ	4034	;# 
   740   000FC3                     ADRES           equ	4035	;# 
   741   000FC3                     ADRESL          equ	4035	;# 
   742   000FC4                     ADRESH          equ	4036	;# 
   743   000FC5                     SSPCON2         equ	4037	;# 
   744   000FC6                     SSPCON1         equ	4038	;# 
   745   000FC7                     SSPSTAT         equ	4039	;# 
   746   000FC8                     SSPADD          equ	4040	;# 
   747   000FC9                     SSPBUF          equ	4041	;# 
   748   000FCA                     T2CON           equ	4042	;# 
   749   000FCB                     PR2             equ	4043	;# 
   750   000FCB                     MEMCON          equ	4043	;# 
   751   000FCC                     TMR2            equ	4044	;# 
   752   000FCD                     T1CON           equ	4045	;# 
   753   000FCE                     TMR1            equ	4046	;# 
   754   000FCE                     TMR1L           equ	4046	;# 
   755   000FCF                     TMR1H           equ	4047	;# 
   756   000FD0                     RCON            equ	4048	;# 
   757   000FD1                     WDTCON          equ	4049	;# 
   758   000FD2                     HLVDCON         equ	4050	;# 
   759   000FD2                     LVDCON          equ	4050	;# 
   760   000FD3                     OSCCON          equ	4051	;# 
   761   000FD5                     T0CON           equ	4053	;# 
   762   000FD6                     TMR0            equ	4054	;# 
   763   000FD6                     TMR0L           equ	4054	;# 
   764   000FD7                     TMR0H           equ	4055	;# 
   765   000FD8                     STATUS          equ	4056	;# 
   766   000FD9                     FSR2            equ	4057	;# 
   767   000FD9                     FSR2L           equ	4057	;# 
   768   000FDA                     FSR2H           equ	4058	;# 
   769   000FDB                     PLUSW2          equ	4059	;# 
   770   000FDC                     PREINC2         equ	4060	;# 
   771   000FDD                     POSTDEC2        equ	4061	;# 
   772   000FDE                     POSTINC2        equ	4062	;# 
   773   000FDF                     INDF2           equ	4063	;# 
   774   000FE0                     BSR             equ	4064	;# 
   775   000FE1                     FSR1            equ	4065	;# 
   776   000FE1                     FSR1L           equ	4065	;# 
   777   000FE2                     FSR1H           equ	4066	;# 
   778   000FE3                     PLUSW1          equ	4067	;# 
   779   000FE4                     PREINC1         equ	4068	;# 
   780   000FE5                     POSTDEC1        equ	4069	;# 
   781   000FE6                     POSTINC1        equ	4070	;# 
   782   000FE7                     INDF1           equ	4071	;# 
   783   000FE8                     WREG            equ	4072	;# 
   784   000FE9                     FSR0            equ	4073	;# 
   785   000FE9                     FSR0L           equ	4073	;# 
   786   000FEA                     FSR0H           equ	4074	;# 
   787   000FEB                     PLUSW0          equ	4075	;# 
   788   000FEC                     PREINC0         equ	4076	;# 
   789   000FED                     POSTDEC0        equ	4077	;# 
   790   000FEE                     POSTINC0        equ	4078	;# 
   791   000FEF                     INDF0           equ	4079	;# 
   792   000FF0                     INTCON3         equ	4080	;# 
   793   000FF1                     INTCON2         equ	4081	;# 
   794   000FF2                     INTCON          equ	4082	;# 
   795   000FF3                     PROD            equ	4083	;# 
   796   000FF3                     PRODL           equ	4083	;# 
   797   000FF4                     PRODH           equ	4084	;# 
   798   000FF5                     TABLAT          equ	4085	;# 
   799   000FF6                     TBLPTR          equ	4086	;# 
   800   000FF6                     TBLPTRL         equ	4086	;# 
   801   000FF7                     TBLPTRH         equ	4087	;# 
   802   000FF8                     TBLPTRU         equ	4088	;# 
   803   000FF9                     PCLAT           equ	4089	;# 
   804   000FF9                     PC              equ	4089	;# 
   805   000FF9                     PCL             equ	4089	;# 
   806   000FFA                     PCLATH          equ	4090	;# 
   807   000FFB                     PCLATU          equ	4091	;# 
   808   000FFC                     STKPTR          equ	4092	;# 
   809   000FFD                     TOS             equ	4093	;# 
   810   000FFD                     TOSL            equ	4093	;# 
   811   000FFE                     TOSH            equ	4094	;# 
   812   000FFF                     TOSU            equ	4095	;# 
   813   000F62                     SPPDATA         equ	3938	;# 
   814   000F63                     SPPCFG          equ	3939	;# 
   815   000F64                     SPPEPS          equ	3940	;# 
   816   000F65                     SPPCON          equ	3941	;# 
   817   000F66                     UFRM            equ	3942	;# 
   818   000F66                     UFRML           equ	3942	;# 
   819   000F67                     UFRMH           equ	3943	;# 
   820   000F68                     UIR             equ	3944	;# 
   821   000F69                     UIE             equ	3945	;# 
   822   000F6A                     UEIR            equ	3946	;# 
   823   000F6B                     UEIE            equ	3947	;# 
   824   000F6C                     USTAT           equ	3948	;# 
   825   000F6D                     UCON            equ	3949	;# 
   826   000F6E                     UADDR           equ	3950	;# 
   827   000F6F                     UCFG            equ	3951	;# 
   828   000F70                     UEP0            equ	3952	;# 
   829   000F71                     UEP1            equ	3953	;# 
   830   000F72                     UEP2            equ	3954	;# 
   831   000F73                     UEP3            equ	3955	;# 
   832   000F74                     UEP4            equ	3956	;# 
   833   000F75                     UEP5            equ	3957	;# 
   834   000F76                     UEP6            equ	3958	;# 
   835   000F77                     UEP7            equ	3959	;# 
   836   000F78                     UEP8            equ	3960	;# 
   837   000F79                     UEP9            equ	3961	;# 
   838   000F7A                     UEP10           equ	3962	;# 
   839   000F7B                     UEP11           equ	3963	;# 
   840   000F7C                     UEP12           equ	3964	;# 
   841   000F7D                     UEP13           equ	3965	;# 
   842   000F7E                     UEP14           equ	3966	;# 
   843   000F7F                     UEP15           equ	3967	;# 
   844   000F80                     PORTA           equ	3968	;# 
   845   000F81                     PORTB           equ	3969	;# 
   846   000F82                     PORTC           equ	3970	;# 
   847   000F83                     PORTD           equ	3971	;# 
   848   000F84                     PORTE           equ	3972	;# 
   849   000F89                     LATA            equ	3977	;# 
   850   000F8A                     LATB            equ	3978	;# 
   851   000F8B                     LATC            equ	3979	;# 
   852   000F8C                     LATD            equ	3980	;# 
   853   000F8D                     LATE            equ	3981	;# 
   854   000F92                     TRISA           equ	3986	;# 
   855   000F92                     DDRA            equ	3986	;# 
   856   000F93                     TRISB           equ	3987	;# 
   857   000F93                     DDRB            equ	3987	;# 
   858   000F94                     TRISC           equ	3988	;# 
   859   000F94                     DDRC            equ	3988	;# 
   860   000F95                     TRISD           equ	3989	;# 
   861   000F95                     DDRD            equ	3989	;# 
   862   000F96                     TRISE           equ	3990	;# 
   863   000F96                     DDRE            equ	3990	;# 
   864   000F9B                     OSCTUNE         equ	3995	;# 
   865   000F9D                     PIE1            equ	3997	;# 
   866   000F9E                     PIR1            equ	3998	;# 
   867   000F9F                     IPR1            equ	3999	;# 
   868   000FA0                     PIE2            equ	4000	;# 
   869   000FA1                     PIR2            equ	4001	;# 
   870   000FA2                     IPR2            equ	4002	;# 
   871   000FA6                     EECON1          equ	4006	;# 
   872   000FA7                     EECON2          equ	4007	;# 
   873   000FA8                     EEDATA          equ	4008	;# 
   874   000FA9                     EEADR           equ	4009	;# 
   875   000FAB                     RCSTA           equ	4011	;# 
   876   000FAB                     RCSTA1          equ	4011	;# 
   877   000FAC                     TXSTA           equ	4012	;# 
   878   000FAC                     TXSTA1          equ	4012	;# 
   879   000FAD                     TXREG           equ	4013	;# 
   880   000FAD                     TXREG1          equ	4013	;# 
   881   000FAE                     RCREG           equ	4014	;# 
   882   000FAE                     RCREG1          equ	4014	;# 
   883   000FAF                     SPBRG           equ	4015	;# 
   884   000FAF                     SPBRG1          equ	4015	;# 
   885   000FB0                     SPBRGH          equ	4016	;# 
   886   000FB1                     T3CON           equ	4017	;# 
   887   000FB2                     TMR3            equ	4018	;# 
   888   000FB2                     TMR3L           equ	4018	;# 
   889   000FB3                     TMR3H           equ	4019	;# 
   890   000FB4                     CMCON           equ	4020	;# 
   891   000FB5                     CVRCON          equ	4021	;# 
   892   000FB6                     ECCP1AS         equ	4022	;# 
   893   000FB6                     CCP1AS          equ	4022	;# 
   894   000FB7                     ECCP1DEL        equ	4023	;# 
   895   000FB7                     CCP1DEL         equ	4023	;# 
   896   000FB8                     BAUDCON         equ	4024	;# 
   897   000FB8                     BAUDCTL         equ	4024	;# 
   898   000FBA                     CCP2CON         equ	4026	;# 
   899   000FBB                     CCPR2           equ	4027	;# 
   900   000FBB                     CCPR2L          equ	4027	;# 
   901   000FBC                     CCPR2H          equ	4028	;# 
   902   000FBD                     CCP1CON         equ	4029	;# 
   903   000FBD                     ECCP1CON        equ	4029	;# 
   904   000FBE                     CCPR1           equ	4030	;# 
   905   000FBE                     CCPR1L          equ	4030	;# 
   906   000FBF                     CCPR1H          equ	4031	;# 
   907   000FC0                     ADCON2          equ	4032	;# 
   908   000FC1                     ADCON1          equ	4033	;# 
   909   000FC2                     ADCON0          equ	4034	;# 
   910   000FC3                     ADRES           equ	4035	;# 
   911   000FC3                     ADRESL          equ	4035	;# 
   912   000FC4                     ADRESH          equ	4036	;# 
   913   000FC5                     SSPCON2         equ	4037	;# 
   914   000FC6                     SSPCON1         equ	4038	;# 
   915   000FC7                     SSPSTAT         equ	4039	;# 
   916   000FC8                     SSPADD          equ	4040	;# 
   917   000FC9                     SSPBUF          equ	4041	;# 
   918   000FCA                     T2CON           equ	4042	;# 
   919   000FCB                     PR2             equ	4043	;# 
   920   000FCB                     MEMCON          equ	4043	;# 
   921   000FCC                     TMR2            equ	4044	;# 
   922   000FCD                     T1CON           equ	4045	;# 
   923   000FCE                     TMR1            equ	4046	;# 
   924   000FCE                     TMR1L           equ	4046	;# 
   925   000FCF                     TMR1H           equ	4047	;# 
   926   000FD0                     RCON            equ	4048	;# 
   927   000FD1                     WDTCON          equ	4049	;# 
   928   000FD2                     HLVDCON         equ	4050	;# 
   929   000FD2                     LVDCON          equ	4050	;# 
   930   000FD3                     OSCCON          equ	4051	;# 
   931   000FD5                     T0CON           equ	4053	;# 
   932   000FD6                     TMR0            equ	4054	;# 
   933   000FD6                     TMR0L           equ	4054	;# 
   934   000FD7                     TMR0H           equ	4055	;# 
   935   000FD8                     STATUS          equ	4056	;# 
   936   000FD9                     FSR2            equ	4057	;# 
   937   000FD9                     FSR2L           equ	4057	;# 
   938   000FDA                     FSR2H           equ	4058	;# 
   939   000FDB                     PLUSW2          equ	4059	;# 
   940   000FDC                     PREINC2         equ	4060	;# 
   941   000FDD                     POSTDEC2        equ	4061	;# 
   942   000FDE                     POSTINC2        equ	4062	;# 
   943   000FDF                     INDF2           equ	4063	;# 
   944   000FE0                     BSR             equ	4064	;# 
   945   000FE1                     FSR1            equ	4065	;# 
   946   000FE1                     FSR1L           equ	4065	;# 
   947   000FE2                     FSR1H           equ	4066	;# 
   948   000FE3                     PLUSW1          equ	4067	;# 
   949   000FE4                     PREINC1         equ	4068	;# 
   950   000FE5                     POSTDEC1        equ	4069	;# 
   951   000FE6                     POSTINC1        equ	4070	;# 
   952   000FE7                     INDF1           equ	4071	;# 
   953   000FE8                     WREG            equ	4072	;# 
   954   000FE9                     FSR0            equ	4073	;# 
   955   000FE9                     FSR0L           equ	4073	;# 
   956   000FEA                     FSR0H           equ	4074	;# 
   957   000FEB                     PLUSW0          equ	4075	;# 
   958   000FEC                     PREINC0         equ	4076	;# 
   959   000FED                     POSTDEC0        equ	4077	;# 
   960   000FEE                     POSTINC0        equ	4078	;# 
   961   000FEF                     INDF0           equ	4079	;# 
   962   000FF0                     INTCON3         equ	4080	;# 
   963   000FF1                     INTCON2         equ	4081	;# 
   964   000FF2                     INTCON          equ	4082	;# 
   965   000FF3                     PROD            equ	4083	;# 
   966   000FF3                     PRODL           equ	4083	;# 
   967   000FF4                     PRODH           equ	4084	;# 
   968   000FF5                     TABLAT          equ	4085	;# 
   969   000FF6                     TBLPTR          equ	4086	;# 
   970   000FF6                     TBLPTRL         equ	4086	;# 
   971   000FF7                     TBLPTRH         equ	4087	;# 
   972   000FF8                     TBLPTRU         equ	4088	;# 
   973   000FF9                     PCLAT           equ	4089	;# 
   974   000FF9                     PC              equ	4089	;# 
   975   000FF9                     PCL             equ	4089	;# 
   976   000FFA                     PCLATH          equ	4090	;# 
   977   000FFB                     PCLATU          equ	4091	;# 
   978   000FFC                     STKPTR          equ	4092	;# 
   979   000FFD                     TOS             equ	4093	;# 
   980   000FFD                     TOSL            equ	4093	;# 
   981   000FFE                     TOSH            equ	4094	;# 
   982   000FFF                     TOSU            equ	4095	;# 
   983   000F62                     SPPDATA         equ	3938	;# 
   984   000F63                     SPPCFG          equ	3939	;# 
   985   000F64                     SPPEPS          equ	3940	;# 
   986   000F65                     SPPCON          equ	3941	;# 
   987   000F66                     UFRM            equ	3942	;# 
   988   000F66                     UFRML           equ	3942	;# 
   989   000F67                     UFRMH           equ	3943	;# 
   990   000F68                     UIR             equ	3944	;# 
   991   000F69                     UIE             equ	3945	;# 
   992   000F6A                     UEIR            equ	3946	;# 
   993   000F6B                     UEIE            equ	3947	;# 
   994   000F6C                     USTAT           equ	3948	;# 
   995   000F6D                     UCON            equ	3949	;# 
   996   000F6E                     UADDR           equ	3950	;# 
   997   000F6F                     UCFG            equ	3951	;# 
   998   000F70                     UEP0            equ	3952	;# 
   999   000F71                     UEP1            equ	3953	;# 
  1000   000F72                     UEP2            equ	3954	;# 
  1001   000F73                     UEP3            equ	3955	;# 
  1002   000F74                     UEP4            equ	3956	;# 
  1003   000F75                     UEP5            equ	3957	;# 
  1004   000F76                     UEP6            equ	3958	;# 
  1005   000F77                     UEP7            equ	3959	;# 
  1006   000F78                     UEP8            equ	3960	;# 
  1007   000F79                     UEP9            equ	3961	;# 
  1008   000F7A                     UEP10           equ	3962	;# 
  1009   000F7B                     UEP11           equ	3963	;# 
  1010   000F7C                     UEP12           equ	3964	;# 
  1011   000F7D                     UEP13           equ	3965	;# 
  1012   000F7E                     UEP14           equ	3966	;# 
  1013   000F7F                     UEP15           equ	3967	;# 
  1014   000F80                     PORTA           equ	3968	;# 
  1015   000F81                     PORTB           equ	3969	;# 
  1016   000F82                     PORTC           equ	3970	;# 
  1017   000F83                     PORTD           equ	3971	;# 
  1018   000F84                     PORTE           equ	3972	;# 
  1019   000F89                     LATA            equ	3977	;# 
  1020   000F8A                     LATB            equ	3978	;# 
  1021   000F8B                     LATC            equ	3979	;# 
  1022   000F8C                     LATD            equ	3980	;# 
  1023   000F8D                     LATE            equ	3981	;# 
  1024   000F92                     TRISA           equ	3986	;# 
  1025   000F92                     DDRA            equ	3986	;# 
  1026   000F93                     TRISB           equ	3987	;# 
  1027   000F93                     DDRB            equ	3987	;# 
  1028   000F94                     TRISC           equ	3988	;# 
  1029   000F94                     DDRC            equ	3988	;# 
  1030   000F95                     TRISD           equ	3989	;# 
  1031   000F95                     DDRD            equ	3989	;# 
  1032   000F96                     TRISE           equ	3990	;# 
  1033   000F96                     DDRE            equ	3990	;# 
  1034   000F9B                     OSCTUNE         equ	3995	;# 
  1035   000F9D                     PIE1            equ	3997	;# 
  1036   000F9E                     PIR1            equ	3998	;# 
  1037   000F9F                     IPR1            equ	3999	;# 
  1038   000FA0                     PIE2            equ	4000	;# 
  1039   000FA1                     PIR2            equ	4001	;# 
  1040   000FA2                     IPR2            equ	4002	;# 
  1041   000FA6                     EECON1          equ	4006	;# 
  1042   000FA7                     EECON2          equ	4007	;# 
  1043   000FA8                     EEDATA          equ	4008	;# 
  1044   000FA9                     EEADR           equ	4009	;# 
  1045   000FAB                     RCSTA           equ	4011	;# 
  1046   000FAB                     RCSTA1          equ	4011	;# 
  1047   000FAC                     TXSTA           equ	4012	;# 
  1048   000FAC                     TXSTA1          equ	4012	;# 
  1049   000FAD                     TXREG           equ	4013	;# 
  1050   000FAD                     TXREG1          equ	4013	;# 
  1051   000FAE                     RCREG           equ	4014	;# 
  1052   000FAE                     RCREG1          equ	4014	;# 
  1053   000FAF                     SPBRG           equ	4015	;# 
  1054   000FAF                     SPBRG1          equ	4015	;# 
  1055   000FB0                     SPBRGH          equ	4016	;# 
  1056   000FB1                     T3CON           equ	4017	;# 
  1057   000FB2                     TMR3            equ	4018	;# 
  1058   000FB2                     TMR3L           equ	4018	;# 
  1059   000FB3                     TMR3H           equ	4019	;# 
  1060   000FB4                     CMCON           equ	4020	;# 
  1061   000FB5                     CVRCON          equ	4021	;# 
  1062   000FB6                     ECCP1AS         equ	4022	;# 
  1063   000FB6                     CCP1AS          equ	4022	;# 
  1064   000FB7                     ECCP1DEL        equ	4023	;# 
  1065   000FB7                     CCP1DEL         equ	4023	;# 
  1066   000FB8                     BAUDCON         equ	4024	;# 
  1067   000FB8                     BAUDCTL         equ	4024	;# 
  1068   000FBA                     CCP2CON         equ	4026	;# 
  1069   000FBB                     CCPR2           equ	4027	;# 
  1070   000FBB                     CCPR2L          equ	4027	;# 
  1071   000FBC                     CCPR2H          equ	4028	;# 
  1072   000FBD                     CCP1CON         equ	4029	;# 
  1073   000FBD                     ECCP1CON        equ	4029	;# 
  1074   000FBE                     CCPR1           equ	4030	;# 
  1075   000FBE                     CCPR1L          equ	4030	;# 
  1076   000FBF                     CCPR1H          equ	4031	;# 
  1077   000FC0                     ADCON2          equ	4032	;# 
  1078   000FC1                     ADCON1          equ	4033	;# 
  1079   000FC2                     ADCON0          equ	4034	;# 
  1080   000FC3                     ADRES           equ	4035	;# 
  1081   000FC3                     ADRESL          equ	4035	;# 
  1082   000FC4                     ADRESH          equ	4036	;# 
  1083   000FC5                     SSPCON2         equ	4037	;# 
  1084   000FC6                     SSPCON1         equ	4038	;# 
  1085   000FC7                     SSPSTAT         equ	4039	;# 
  1086   000FC8                     SSPADD          equ	4040	;# 
  1087   000FC9                     SSPBUF          equ	4041	;# 
  1088   000FCA                     T2CON           equ	4042	;# 
  1089   000FCB                     PR2             equ	4043	;# 
  1090   000FCB                     MEMCON          equ	4043	;# 
  1091   000FCC                     TMR2            equ	4044	;# 
  1092   000FCD                     T1CON           equ	4045	;# 
  1093   000FCE                     TMR1            equ	4046	;# 
  1094   000FCE                     TMR1L           equ	4046	;# 
  1095   000FCF                     TMR1H           equ	4047	;# 
  1096   000FD0                     RCON            equ	4048	;# 
  1097   000FD1                     WDTCON          equ	4049	;# 
  1098   000FD2                     HLVDCON         equ	4050	;# 
  1099   000FD2                     LVDCON          equ	4050	;# 
  1100   000FD3                     OSCCON          equ	4051	;# 
  1101   000FD5                     T0CON           equ	4053	;# 
  1102   000FD6                     TMR0            equ	4054	;# 
  1103   000FD6                     TMR0L           equ	4054	;# 
  1104   000FD7                     TMR0H           equ	4055	;# 
  1105   000FD8                     STATUS          equ	4056	;# 
  1106   000FD9                     FSR2            equ	4057	;# 
  1107   000FD9                     FSR2L           equ	4057	;# 
  1108   000FDA                     FSR2H           equ	4058	;# 
  1109   000FDB                     PLUSW2          equ	4059	;# 
  1110   000FDC                     PREINC2         equ	4060	;# 
  1111   000FDD                     POSTDEC2        equ	4061	;# 
  1112   000FDE                     POSTINC2        equ	4062	;# 
  1113   000FDF                     INDF2           equ	4063	;# 
  1114   000FE0                     BSR             equ	4064	;# 
  1115   000FE1                     FSR1            equ	4065	;# 
  1116   000FE1                     FSR1L           equ	4065	;# 
  1117   000FE2                     FSR1H           equ	4066	;# 
  1118   000FE3                     PLUSW1          equ	4067	;# 
  1119   000FE4                     PREINC1         equ	4068	;# 
  1120   000FE5                     POSTDEC1        equ	4069	;# 
  1121   000FE6                     POSTINC1        equ	4070	;# 
  1122   000FE7                     INDF1           equ	4071	;# 
  1123   000FE8                     WREG            equ	4072	;# 
  1124   000FE9                     FSR0            equ	4073	;# 
  1125   000FE9                     FSR0L           equ	4073	;# 
  1126   000FEA                     FSR0H           equ	4074	;# 
  1127   000FEB                     PLUSW0          equ	4075	;# 
  1128   000FEC                     PREINC0         equ	4076	;# 
  1129   000FED                     POSTDEC0        equ	4077	;# 
  1130   000FEE                     POSTINC0        equ	4078	;# 
  1131   000FEF                     INDF0           equ	4079	;# 
  1132   000FF0                     INTCON3         equ	4080	;# 
  1133   000FF1                     INTCON2         equ	4081	;# 
  1134   000FF2                     INTCON          equ	4082	;# 
  1135   000FF3                     PROD            equ	4083	;# 
  1136   000FF3                     PRODL           equ	4083	;# 
  1137   000FF4                     PRODH           equ	4084	;# 
  1138   000FF5                     TABLAT          equ	4085	;# 
  1139   000FF6                     TBLPTR          equ	4086	;# 
  1140   000FF6                     TBLPTRL         equ	4086	;# 
  1141   000FF7                     TBLPTRH         equ	4087	;# 
  1142   000FF8                     TBLPTRU         equ	4088	;# 
  1143   000FF9                     PCLAT           equ	4089	;# 
  1144   000FF9                     PC              equ	4089	;# 
  1145   000FF9                     PCL             equ	4089	;# 
  1146   000FFA                     PCLATH          equ	4090	;# 
  1147   000FFB                     PCLATU          equ	4091	;# 
  1148   000FFC                     STKPTR          equ	4092	;# 
  1149   000FFD                     TOS             equ	4093	;# 
  1150   000FFD                     TOSL            equ	4093	;# 
  1151   000FFE                     TOSH            equ	4094	;# 
  1152   000FFF                     TOSU            equ	4095	;# 
  1153   000F62                     SPPDATA         equ	3938	;# 
  1154   000F63                     SPPCFG          equ	3939	;# 
  1155   000F64                     SPPEPS          equ	3940	;# 
  1156   000F65                     SPPCON          equ	3941	;# 
  1157   000F66                     UFRM            equ	3942	;# 
  1158   000F66                     UFRML           equ	3942	;# 
  1159   000F67                     UFRMH           equ	3943	;# 
  1160   000F68                     UIR             equ	3944	;# 
  1161   000F69                     UIE             equ	3945	;# 
  1162   000F6A                     UEIR            equ	3946	;# 
  1163   000F6B                     UEIE            equ	3947	;# 
  1164   000F6C                     USTAT           equ	3948	;# 
  1165   000F6D                     UCON            equ	3949	;# 
  1166   000F6E                     UADDR           equ	3950	;# 
  1167   000F6F                     UCFG            equ	3951	;# 
  1168   000F70                     UEP0            equ	3952	;# 
  1169   000F71                     UEP1            equ	3953	;# 
  1170   000F72                     UEP2            equ	3954	;# 
  1171   000F73                     UEP3            equ	3955	;# 
  1172   000F74                     UEP4            equ	3956	;# 
  1173   000F75                     UEP5            equ	3957	;# 
  1174   000F76                     UEP6            equ	3958	;# 
  1175   000F77                     UEP7            equ	3959	;# 
  1176   000F78                     UEP8            equ	3960	;# 
  1177   000F79                     UEP9            equ	3961	;# 
  1178   000F7A                     UEP10           equ	3962	;# 
  1179   000F7B                     UEP11           equ	3963	;# 
  1180   000F7C                     UEP12           equ	3964	;# 
  1181   000F7D                     UEP13           equ	3965	;# 
  1182   000F7E                     UEP14           equ	3966	;# 
  1183   000F7F                     UEP15           equ	3967	;# 
  1184   000F80                     PORTA           equ	3968	;# 
  1185   000F81                     PORTB           equ	3969	;# 
  1186   000F82                     PORTC           equ	3970	;# 
  1187   000F83                     PORTD           equ	3971	;# 
  1188   000F84                     PORTE           equ	3972	;# 
  1189   000F89                     LATA            equ	3977	;# 
  1190   000F8A                     LATB            equ	3978	;# 
  1191   000F8B                     LATC            equ	3979	;# 
  1192   000F8C                     LATD            equ	3980	;# 
  1193   000F8D                     LATE            equ	3981	;# 
  1194   000F92                     TRISA           equ	3986	;# 
  1195   000F92                     DDRA            equ	3986	;# 
  1196   000F93                     TRISB           equ	3987	;# 
  1197   000F93                     DDRB            equ	3987	;# 
  1198   000F94                     TRISC           equ	3988	;# 
  1199   000F94                     DDRC            equ	3988	;# 
  1200   000F95                     TRISD           equ	3989	;# 
  1201   000F95                     DDRD            equ	3989	;# 
  1202   000F96                     TRISE           equ	3990	;# 
  1203   000F96                     DDRE            equ	3990	;# 
  1204   000F9B                     OSCTUNE         equ	3995	;# 
  1205   000F9D                     PIE1            equ	3997	;# 
  1206   000F9E                     PIR1            equ	3998	;# 
  1207   000F9F                     IPR1            equ	3999	;# 
  1208   000FA0                     PIE2            equ	4000	;# 
  1209   000FA1                     PIR2            equ	4001	;# 
  1210   000FA2                     IPR2            equ	4002	;# 
  1211   000FA6                     EECON1          equ	4006	;# 
  1212   000FA7                     EECON2          equ	4007	;# 
  1213   000FA8                     EEDATA          equ	4008	;# 
  1214   000FA9                     EEADR           equ	4009	;# 
  1215   000FAB                     RCSTA           equ	4011	;# 
  1216   000FAB                     RCSTA1          equ	4011	;# 
  1217   000FAC                     TXSTA           equ	4012	;# 
  1218   000FAC                     TXSTA1          equ	4012	;# 
  1219   000FAD                     TXREG           equ	4013	;# 
  1220   000FAD                     TXREG1          equ	4013	;# 
  1221   000FAE                     RCREG           equ	4014	;# 
  1222   000FAE                     RCREG1          equ	4014	;# 
  1223   000FAF                     SPBRG           equ	4015	;# 
  1224   000FAF                     SPBRG1          equ	4015	;# 
  1225   000FB0                     SPBRGH          equ	4016	;# 
  1226   000FB1                     T3CON           equ	4017	;# 
  1227   000FB2                     TMR3            equ	4018	;# 
  1228   000FB2                     TMR3L           equ	4018	;# 
  1229   000FB3                     TMR3H           equ	4019	;# 
  1230   000FB4                     CMCON           equ	4020	;# 
  1231   000FB5                     CVRCON          equ	4021	;# 
  1232   000FB6                     ECCP1AS         equ	4022	;# 
  1233   000FB6                     CCP1AS          equ	4022	;# 
  1234   000FB7                     ECCP1DEL        equ	4023	;# 
  1235   000FB7                     CCP1DEL         equ	4023	;# 
  1236   000FB8                     BAUDCON         equ	4024	;# 
  1237   000FB8                     BAUDCTL         equ	4024	;# 
  1238   000FBA                     CCP2CON         equ	4026	;# 
  1239   000FBB                     CCPR2           equ	4027	;# 
  1240   000FBB                     CCPR2L          equ	4027	;# 
  1241   000FBC                     CCPR2H          equ	4028	;# 
  1242   000FBD                     CCP1CON         equ	4029	;# 
  1243   000FBD                     ECCP1CON        equ	4029	;# 
  1244   000FBE                     CCPR1           equ	4030	;# 
  1245   000FBE                     CCPR1L          equ	4030	;# 
  1246   000FBF                     CCPR1H          equ	4031	;# 
  1247   000FC0                     ADCON2          equ	4032	;# 
  1248   000FC1                     ADCON1          equ	4033	;# 
  1249   000FC2                     ADCON0          equ	4034	;# 
  1250   000FC3                     ADRES           equ	4035	;# 
  1251   000FC3                     ADRESL          equ	4035	;# 
  1252   000FC4                     ADRESH          equ	4036	;# 
  1253   000FC5                     SSPCON2         equ	4037	;# 
  1254   000FC6                     SSPCON1         equ	4038	;# 
  1255   000FC7                     SSPSTAT         equ	4039	;# 
  1256   000FC8                     SSPADD          equ	4040	;# 
  1257   000FC9                     SSPBUF          equ	4041	;# 
  1258   000FCA                     T2CON           equ	4042	;# 
  1259   000FCB                     PR2             equ	4043	;# 
  1260   000FCB                     MEMCON          equ	4043	;# 
  1261   000FCC                     TMR2            equ	4044	;# 
  1262   000FCD                     T1CON           equ	4045	;# 
  1263   000FCE                     TMR1            equ	4046	;# 
  1264   000FCE                     TMR1L           equ	4046	;# 
  1265   000FCF                     TMR1H           equ	4047	;# 
  1266   000FD0                     RCON            equ	4048	;# 
  1267   000FD1                     WDTCON          equ	4049	;# 
  1268   000FD2                     HLVDCON         equ	4050	;# 
  1269   000FD2                     LVDCON          equ	4050	;# 
  1270   000FD3                     OSCCON          equ	4051	;# 
  1271   000FD5                     T0CON           equ	4053	;# 
  1272   000FD6                     TMR0            equ	4054	;# 
  1273   000FD6                     TMR0L           equ	4054	;# 
  1274   000FD7                     TMR0H           equ	4055	;# 
  1275   000FD8                     STATUS          equ	4056	;# 
  1276   000FD9                     FSR2            equ	4057	;# 
  1277   000FD9                     FSR2L           equ	4057	;# 
  1278   000FDA                     FSR2H           equ	4058	;# 
  1279   000FDB                     PLUSW2          equ	4059	;# 
  1280   000FDC                     PREINC2         equ	4060	;# 
  1281   000FDD                     POSTDEC2        equ	4061	;# 
  1282   000FDE                     POSTINC2        equ	4062	;# 
  1283   000FDF                     INDF2           equ	4063	;# 
  1284   000FE0                     BSR             equ	4064	;# 
  1285   000FE1                     FSR1            equ	4065	;# 
  1286   000FE1                     FSR1L           equ	4065	;# 
  1287   000FE2                     FSR1H           equ	4066	;# 
  1288   000FE3                     PLUSW1          equ	4067	;# 
  1289   000FE4                     PREINC1         equ	4068	;# 
  1290   000FE5                     POSTDEC1        equ	4069	;# 
  1291   000FE6                     POSTINC1        equ	4070	;# 
  1292   000FE7                     INDF1           equ	4071	;# 
  1293   000FE8                     WREG            equ	4072	;# 
  1294   000FE9                     FSR0            equ	4073	;# 
  1295   000FE9                     FSR0L           equ	4073	;# 
  1296   000FEA                     FSR0H           equ	4074	;# 
  1297   000FEB                     PLUSW0          equ	4075	;# 
  1298   000FEC                     PREINC0         equ	4076	;# 
  1299   000FED                     POSTDEC0        equ	4077	;# 
  1300   000FEE                     POSTINC0        equ	4078	;# 
  1301   000FEF                     INDF0           equ	4079	;# 
  1302   000FF0                     INTCON3         equ	4080	;# 
  1303   000FF1                     INTCON2         equ	4081	;# 
  1304   000FF2                     INTCON          equ	4082	;# 
  1305   000FF3                     PROD            equ	4083	;# 
  1306   000FF3                     PRODL           equ	4083	;# 
  1307   000FF4                     PRODH           equ	4084	;# 
  1308   000FF5                     TABLAT          equ	4085	;# 
  1309   000FF6                     TBLPTR          equ	4086	;# 
  1310   000FF6                     TBLPTRL         equ	4086	;# 
  1311   000FF7                     TBLPTRH         equ	4087	;# 
  1312   000FF8                     TBLPTRU         equ	4088	;# 
  1313   000FF9                     PCLAT           equ	4089	;# 
  1314   000FF9                     PC              equ	4089	;# 
  1315   000FF9                     PCL             equ	4089	;# 
  1316   000FFA                     PCLATH          equ	4090	;# 
  1317   000FFB                     PCLATU          equ	4091	;# 
  1318   000FFC                     STKPTR          equ	4092	;# 
  1319   000FFD                     TOS             equ	4093	;# 
  1320   000FFD                     TOSL            equ	4093	;# 
  1321   000FFE                     TOSH            equ	4094	;# 
  1322   000FFF                     TOSU            equ	4095	;# 
  1323   000F62                     SPPDATA         equ	3938	;# 
  1324   000F63                     SPPCFG          equ	3939	;# 
  1325   000F64                     SPPEPS          equ	3940	;# 
  1326   000F65                     SPPCON          equ	3941	;# 
  1327   000F66                     UFRM            equ	3942	;# 
  1328   000F66                     UFRML           equ	3942	;# 
  1329   000F67                     UFRMH           equ	3943	;# 
  1330   000F68                     UIR             equ	3944	;# 
  1331   000F69                     UIE             equ	3945	;# 
  1332   000F6A                     UEIR            equ	3946	;# 
  1333   000F6B                     UEIE            equ	3947	;# 
  1334   000F6C                     USTAT           equ	3948	;# 
  1335   000F6D                     UCON            equ	3949	;# 
  1336   000F6E                     UADDR           equ	3950	;# 
  1337   000F6F                     UCFG            equ	3951	;# 
  1338   000F70                     UEP0            equ	3952	;# 
  1339   000F71                     UEP1            equ	3953	;# 
  1340   000F72                     UEP2            equ	3954	;# 
  1341   000F73                     UEP3            equ	3955	;# 
  1342   000F74                     UEP4            equ	3956	;# 
  1343   000F75                     UEP5            equ	3957	;# 
  1344   000F76                     UEP6            equ	3958	;# 
  1345   000F77                     UEP7            equ	3959	;# 
  1346   000F78                     UEP8            equ	3960	;# 
  1347   000F79                     UEP9            equ	3961	;# 
  1348   000F7A                     UEP10           equ	3962	;# 
  1349   000F7B                     UEP11           equ	3963	;# 
  1350   000F7C                     UEP12           equ	3964	;# 
  1351   000F7D                     UEP13           equ	3965	;# 
  1352   000F7E                     UEP14           equ	3966	;# 
  1353   000F7F                     UEP15           equ	3967	;# 
  1354   000F80                     PORTA           equ	3968	;# 
  1355   000F81                     PORTB           equ	3969	;# 
  1356   000F82                     PORTC           equ	3970	;# 
  1357   000F83                     PORTD           equ	3971	;# 
  1358   000F84                     PORTE           equ	3972	;# 
  1359   000F89                     LATA            equ	3977	;# 
  1360   000F8A                     LATB            equ	3978	;# 
  1361   000F8B                     LATC            equ	3979	;# 
  1362   000F8C                     LATD            equ	3980	;# 
  1363   000F8D                     LATE            equ	3981	;# 
  1364   000F92                     TRISA           equ	3986	;# 
  1365   000F92                     DDRA            equ	3986	;# 
  1366   000F93                     TRISB           equ	3987	;# 
  1367   000F93                     DDRB            equ	3987	;# 
  1368   000F94                     TRISC           equ	3988	;# 
  1369   000F94                     DDRC            equ	3988	;# 
  1370   000F95                     TRISD           equ	3989	;# 
  1371   000F95                     DDRD            equ	3989	;# 
  1372   000F96                     TRISE           equ	3990	;# 
  1373   000F96                     DDRE            equ	3990	;# 
  1374   000F9B                     OSCTUNE         equ	3995	;# 
  1375   000F9D                     PIE1            equ	3997	;# 
  1376   000F9E                     PIR1            equ	3998	;# 
  1377   000F9F                     IPR1            equ	3999	;# 
  1378   000FA0                     PIE2            equ	4000	;# 
  1379   000FA1                     PIR2            equ	4001	;# 
  1380   000FA2                     IPR2            equ	4002	;# 
  1381   000FA6                     EECON1          equ	4006	;# 
  1382   000FA7                     EECON2          equ	4007	;# 
  1383   000FA8                     EEDATA          equ	4008	;# 
  1384   000FA9                     EEADR           equ	4009	;# 
  1385   000FAB                     RCSTA           equ	4011	;# 
  1386   000FAB                     RCSTA1          equ	4011	;# 
  1387   000FAC                     TXSTA           equ	4012	;# 
  1388   000FAC                     TXSTA1          equ	4012	;# 
  1389   000FAD                     TXREG           equ	4013	;# 
  1390   000FAD                     TXREG1          equ	4013	;# 
  1391   000FAE                     RCREG           equ	4014	;# 
  1392   000FAE                     RCREG1          equ	4014	;# 
  1393   000FAF                     SPBRG           equ	4015	;# 
  1394   000FAF                     SPBRG1          equ	4015	;# 
  1395   000FB0                     SPBRGH          equ	4016	;# 
  1396   000FB1                     T3CON           equ	4017	;# 
  1397   000FB2                     TMR3            equ	4018	;# 
  1398   000FB2                     TMR3L           equ	4018	;# 
  1399   000FB3                     TMR3H           equ	4019	;# 
  1400   000FB4                     CMCON           equ	4020	;# 
  1401   000FB5                     CVRCON          equ	4021	;# 
  1402   000FB6                     ECCP1AS         equ	4022	;# 
  1403   000FB6                     CCP1AS          equ	4022	;# 
  1404   000FB7                     ECCP1DEL        equ	4023	;# 
  1405   000FB7                     CCP1DEL         equ	4023	;# 
  1406   000FB8                     BAUDCON         equ	4024	;# 
  1407   000FB8                     BAUDCTL         equ	4024	;# 
  1408   000FBA                     CCP2CON         equ	4026	;# 
  1409   000FBB                     CCPR2           equ	4027	;# 
  1410   000FBB                     CCPR2L          equ	4027	;# 
  1411   000FBC                     CCPR2H          equ	4028	;# 
  1412   000FBD                     CCP1CON         equ	4029	;# 
  1413   000FBD                     ECCP1CON        equ	4029	;# 
  1414   000FBE                     CCPR1           equ	4030	;# 
  1415   000FBE                     CCPR1L          equ	4030	;# 
  1416   000FBF                     CCPR1H          equ	4031	;# 
  1417   000FC0                     ADCON2          equ	4032	;# 
  1418   000FC1                     ADCON1          equ	4033	;# 
  1419   000FC2                     ADCON0          equ	4034	;# 
  1420   000FC3                     ADRES           equ	4035	;# 
  1421   000FC3                     ADRESL          equ	4035	;# 
  1422   000FC4                     ADRESH          equ	4036	;# 
  1423   000FC5                     SSPCON2         equ	4037	;# 
  1424   000FC6                     SSPCON1         equ	4038	;# 
  1425   000FC7                     SSPSTAT         equ	4039	;# 
  1426   000FC8                     SSPADD          equ	4040	;# 
  1427   000FC9                     SSPBUF          equ	4041	;# 
  1428   000FCA                     T2CON           equ	4042	;# 
  1429   000FCB                     PR2             equ	4043	;# 
  1430   000FCB                     MEMCON          equ	4043	;# 
  1431   000FCC                     TMR2            equ	4044	;# 
  1432   000FCD                     T1CON           equ	4045	;# 
  1433   000FCE                     TMR1            equ	4046	;# 
  1434   000FCE                     TMR1L           equ	4046	;# 
  1435   000FCF                     TMR1H           equ	4047	;# 
  1436   000FD0                     RCON            equ	4048	;# 
  1437   000FD1                     WDTCON          equ	4049	;# 
  1438   000FD2                     HLVDCON         equ	4050	;# 
  1439   000FD2                     LVDCON          equ	4050	;# 
  1440   000FD3                     OSCCON          equ	4051	;# 
  1441   000FD5                     T0CON           equ	4053	;# 
  1442   000FD6                     TMR0            equ	4054	;# 
  1443   000FD6                     TMR0L           equ	4054	;# 
  1444   000FD7                     TMR0H           equ	4055	;# 
  1445   000FD8                     STATUS          equ	4056	;# 
  1446   000FD9                     FSR2            equ	4057	;# 
  1447   000FD9                     FSR2L           equ	4057	;# 
  1448   000FDA                     FSR2H           equ	4058	;# 
  1449   000FDB                     PLUSW2          equ	4059	;# 
  1450   000FDC                     PREINC2         equ	4060	;# 
  1451   000FDD                     POSTDEC2        equ	4061	;# 
  1452   000FDE                     POSTINC2        equ	4062	;# 
  1453   000FDF                     INDF2           equ	4063	;# 
  1454   000FE0                     BSR             equ	4064	;# 
  1455   000FE1                     FSR1            equ	4065	;# 
  1456   000FE1                     FSR1L           equ	4065	;# 
  1457   000FE2                     FSR1H           equ	4066	;# 
  1458   000FE3                     PLUSW1          equ	4067	;# 
  1459   000FE4                     PREINC1         equ	4068	;# 
  1460   000FE5                     POSTDEC1        equ	4069	;# 
  1461   000FE6                     POSTINC1        equ	4070	;# 
  1462   000FE7                     INDF1           equ	4071	;# 
  1463   000FE8                     WREG            equ	4072	;# 
  1464   000FE9                     FSR0            equ	4073	;# 
  1465   000FE9                     FSR0L           equ	4073	;# 
  1466   000FEA                     FSR0H           equ	4074	;# 
  1467   000FEB                     PLUSW0          equ	4075	;# 
  1468   000FEC                     PREINC0         equ	4076	;# 
  1469   000FED                     POSTDEC0        equ	4077	;# 
  1470   000FEE                     POSTINC0        equ	4078	;# 
  1471   000FEF                     INDF0           equ	4079	;# 
  1472   000FF0                     INTCON3         equ	4080	;# 
  1473   000FF1                     INTCON2         equ	4081	;# 
  1474   000FF2                     INTCON          equ	4082	;# 
  1475   000FF3                     PROD            equ	4083	;# 
  1476   000FF3                     PRODL           equ	4083	;# 
  1477   000FF4                     PRODH           equ	4084	;# 
  1478   000FF5                     TABLAT          equ	4085	;# 
  1479   000FF6                     TBLPTR          equ	4086	;# 
  1480   000FF6                     TBLPTRL         equ	4086	;# 
  1481   000FF7                     TBLPTRH         equ	4087	;# 
  1482   000FF8                     TBLPTRU         equ	4088	;# 
  1483   000FF9                     PCLAT           equ	4089	;# 
  1484   000FF9                     PC              equ	4089	;# 
  1485   000FF9                     PCL             equ	4089	;# 
  1486   000FFA                     PCLATH          equ	4090	;# 
  1487   000FFB                     PCLATU          equ	4091	;# 
  1488   000FFC                     STKPTR          equ	4092	;# 
  1489   000FFD                     TOS             equ	4093	;# 
  1490   000FFD                     TOSL            equ	4093	;# 
  1491   000FFE                     TOSH            equ	4094	;# 
  1492   000FFF                     TOSU            equ	4095	;# 
  1493                           
  1494 ;;_i	offset	0
  1495 ;;_selected	offset	1
  1496 ;;_highest_priority	offset	2
  1497 ;;_i	offset	0
  1498 ;;_selected	offset	1
  1499 ;;_highest_priority	offset	2
  1500   000FFD                     _TOS            set	4093
  1501   000FD6                     _TMR0           set	4054
  1502   000FD5                     _T0CONbits      set	4053
  1503   000F83                     _PORTDbits      set	3971
  1504   000F95                     _TRISDbits      set	3989
  1505   000F8C                     _LATDbits       set	3980
  1506   000FF1                     _INTCON2bits    set	4081
  1507   000F93                     _TRISBbits      set	3987
  1508   000FBA                     _CCP2CONbits    set	4026
  1509   000FBB                     _CCPR2L         set	4027
  1510   000FBD                     _CCP1CONbits    set	4029
  1511   000FBE                     _CCPR1L         set	4030
  1512   000FBA                     _CCP2CON        set	4026
  1513   000FBD                     _CCP1CON        set	4029
  1514   000F94                     _TRISCbits      set	3988
  1515   000FCA                     _T2CON          set	4042
  1516   000FCB                     _PR2            set	4043
  1517   000FC3                     _ADRESL         set	4035
  1518   000FC4                     _ADRESH         set	4036
  1519   000FC2                     _ADCON0bits     set	4034
  1520   000FC0                     _ADCON2         set	4032
  1521   000FC1                     _ADCON1         set	4033
  1522   000FC2                     _ADCON0         set	4034
  1523   000FFC                     _STKPTR         set	4092
  1524   000FE8                     _WREG           set	4072
  1525   000FD8                     _STATUS         set	4056
  1526   000FE0                     _BSR            set	4064
  1527   000FF2                     _INTCONbits     set	4082
  1528                           
  1529                           ; #config settings
  1530                           
  1531                           	psect	cinit
  1532   001FE2                     __pcinit:
  1533                           	callstack 0
  1534   001FE2                     start_initialization:
  1535                           	callstack 0
  1536   001FE2                     __initialization:
  1537                           	callstack 0
  1538                           
  1539                           ; Clear objects allocated to BIGRAM (539 bytes)
  1540   001FE2  EE01  F06D         	lfsr	0,__pbssBIGRAM
  1541   001FE6  EE22 F01B          	lfsr	2,539
  1542   001FEA                     clear_0:
  1543   001FEA  6AEE               	clrf	postinc0,c
  1544   001FEC  50DD               	movf	postdec2,w,c
  1545   001FEE  50D9               	movf	fsr2l,w,c
  1546   001FF0  E1FC               	bnz	clear_0
  1547   001FF2  50DA               	movf	fsr2h,w,c
  1548   001FF4  E1FA               	bnz	clear_0
  1549                           
  1550                           ; Clear objects allocated to BANK0 (88 bytes)
  1551   001FF6  EE00  F060         	lfsr	0,__pbssBANK0
  1552   001FFA  0E58               	movlw	88
  1553   001FFC                     clear_1:
  1554   001FFC  6AEE               	clrf	postinc0,c
  1555   001FFE  06E8               	decf	wreg,f,c
  1556   002000  E1FD               	bnz	clear_1
  1557                           
  1558                           ; Clear objects allocated to COMRAM (22 bytes)
  1559   002002  EE00  F021         	lfsr	0,__pbssCOMRAM
  1560   002006  0E16               	movlw	22
  1561   002008                     clear_2:
  1562   002008  6AEE               	clrf	postinc0,c
  1563   00200A  06E8               	decf	wreg,f,c
  1564   00200C  E1FD               	bnz	clear_2
  1565   00200E                     end_of_initialization:
  1566                           	callstack 0
  1567   00200E                     __end_of__initialization:
  1568                           	callstack 0
  1569   00200E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1570   002010  6EF8               	movwf	tblptru,c
  1571   002012  0100               	movlb	0
  1572   002014  EFD9  F00E         	goto	_main	;jump to C main() function
  1573                           
  1574                           	psect	bssCOMRAM
  1575   000021                     __pbssCOMRAM:
  1576                           	callstack 0
  1577   000021                     _ext_int_callback:
  1578                           	callstack 0
  1579   000021                     	ds	2
  1580   000023                     _est_flag:
  1581                           	callstack 0
  1582   000023                     	ds	1
  1583   000024                     _accel_pipe:
  1584                           	callstack 0
  1585   000024                     	ds	19
  1586                           
  1587                           	psect	bssBANK0
  1588   000060                     __pbssBANK0:
  1589                           	callstack 0
  1590   000060                     _accel_data:
  1591                           	callstack 0
  1592   000060                     	ds	1
  1593   000061                     __uDynamicHeap:
  1594                           	callstack 0
  1595   000061                     	ds	80
  1596   0000B1                     _buffer_mutex:
  1597                           	callstack 0
  1598   0000B1                     	ds	7
  1599                           
  1600                           	psect	bssBIGRAM
  1601   00016D                     __pbssBIGRAM:
  1602                           	callstack 0
  1603   00016D                     _r_queue:
  1604                           	callstack 0
  1605   00016D                     	ds	539
  1606                           
  1607                           	psect	cstackBANK1
  1608   000100                     __pcstackBANK1:
  1609                           	callstack 0
  1610   000100                     ??_idle:
  1611                           
  1612                           ; 1 bytes @ 0x0
  1613   000100                     	ds	1
  1614   000101                     create_task@id:
  1615                           	callstack 0
  1616                           
  1617                           ; 1 bytes @ 0x1
  1618   000101                     	ds	1
  1619   000102                     create_task@new_task:
  1620                           	callstack 0
  1621                           
  1622                           ; 107 bytes @ 0x2
  1623   000102                     	ds	16
  1624   000112                     ?___lldiv:
  1625                           	callstack 0
  1626   000112                     ___lldiv@dividend:
  1627                           	callstack 0
  1628                           
  1629                           ; 4 bytes @ 0x12
  1630   000112                     	ds	4
  1631   000116                     ___lldiv@divisor:
  1632                           	callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x16
  1635   000116                     	ds	4
  1636   00011A                     ___lldiv@quotient:
  1637                           	callstack 0
  1638                           
  1639                           ; 4 bytes @ 0x1A
  1640   00011A                     	ds	4
  1641   00011E                     ___lldiv@counter:
  1642                           	callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x1E
  1645   00011E                     	ds	1
  1646   00011F                     ??_pwm_set:
  1647                           
  1648                           ; 1 bytes @ 0x1F
  1649   00011F                     	ds	2
  1650   000121                     pwm_set@channel:
  1651                           	callstack 0
  1652                           
  1653                           ; 1 bytes @ 0x21
  1654   000121                     	ds	1
  1655   000122                     pwm_set@duty:
  1656                           	callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x22
  1659   000122                     	ds	2
  1660   000124                     delay@time:
  1661                           	callstack 0
  1662   000124                     ??_change_state:
  1663                           
  1664                           ; 1 bytes @ 0x24
  1665   000124                     	ds	2
  1666   000126                     ??_delay:
  1667                           
  1668                           ; 1 bytes @ 0x26
  1669   000126                     	ds	5
  1670   00012B                     change_state@new_state:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x2B
  1674   00012B                     	ds	2
  1675   00012D                     
  1676                           ; 1 bytes @ 0x2D
  1677   00012D                     	ds	64
  1678                           
  1679                           	psect	cstackBANK0
  1680   0000B8                     __pcstackBANK0:
  1681                           	callstack 0
  1682   0000B8                     ?_adc_read:
  1683                           	callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x0
  1686   0000B8                     	ds	2
  1687   0000BA                     ??_adc_read:
  1688                           
  1689                           ; 1 bytes @ 0x2
  1690   0000BA                     	ds	2
  1691   0000BC                     adc_read@channel:
  1692                           	callstack 0
  1693                           
  1694                           ; 1 bytes @ 0x4
  1695   0000BC                     	ds	4
  1696   0000C0                     write_pipe@p:
  1697                           	callstack 0
  1698                           
  1699                           ; 1 bytes @ 0x8
  1700   0000C0                     	ds	1
  1701   0000C1                     write_pipe@data:
  1702                           	callstack 0
  1703                           
  1704                           ; 1 bytes @ 0x9
  1705   0000C1                     	ds	1
  1706   0000C2                     ??_write_pipe:
  1707                           
  1708                           ; 1 bytes @ 0xA
  1709   0000C2                     	ds	1
  1710   0000C3                     ??_tarefa_acelerador:
  1711                           
  1712                           ; 1 bytes @ 0xB
  1713   0000C3                     	ds	2
  1714   0000C5                     tarefa_acelerador@raw:
  1715                           	callstack 0
  1716                           
  1717                           ; 2 bytes @ 0xD
  1718   0000C5                     	ds	2
  1719   0000C7                     tarefa_acelerador@data:
  1720                           	callstack 0
  1721                           
  1722                           ; 1 bytes @ 0xF
  1723   0000C7                     	ds	1
  1724   0000C8                     ?___awmod:
  1725                           	callstack 0
  1726   0000C8                     sem_wait@sem:
  1727                           	callstack 0
  1728   0000C8                     sem_post@sem:
  1729                           	callstack 0
  1730   0000C8                     ___awmod@dividend:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x10
  1734   0000C8                     	ds	1
  1735   0000C9                     ??_sem_wait:
  1736   0000C9                     ??_sem_post:
  1737                           
  1738                           ; 1 bytes @ 0x11
  1739   0000C9                     	ds	1
  1740   0000CA                     ___awmod@divisor:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x12
  1744   0000CA                     	ds	2
  1745   0000CC                     ___awmod@counter:
  1746                           	callstack 0
  1747   0000CC                     
  1748                           ; 1 bytes @ 0x14
  1749   0000CC                     	ds	1
  1750   0000CD                     ___awmod@sign:
  1751                           	callstack 0
  1752                           
  1753                           ; 1 bytes @ 0x15
  1754   0000CD                     	ds	3
  1755   0000D0                     read_pipe@p:
  1756                           	callstack 0
  1757                           
  1758                           ; 1 bytes @ 0x18
  1759   0000D0                     	ds	1
  1760   0000D1                     read_pipe@data:
  1761                           	callstack 0
  1762                           
  1763                           ; 1 bytes @ 0x19
  1764   0000D1                     	ds	1
  1765   0000D2                     ??_read_pipe:
  1766                           
  1767                           ; 1 bytes @ 0x1A
  1768   0000D2                     	ds	1
  1769   0000D3                     tarefa_controle_central@duty:
  1770                           	callstack 0
  1771   0000D3                     
  1772                           ; 1 bytes @ 0x1B
  1773   0000D3                     	ds	1
  1774   0000D4                     tarefa_controle_central@data:
  1775                           	callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x1C
  1778   0000D4                     	ds	1
  1779   0000D5                     ?___lmul:
  1780                           	callstack 0
  1781   0000D5                     mutex_lock@m:
  1782                           	callstack 0
  1783   0000D5                     mutex_unlock@m:
  1784                           	callstack 0
  1785   0000D5                     ___lmul@multiplier:
  1786                           	callstack 0
  1787                           
  1788                           ; 4 bytes @ 0x1D
  1789   0000D5                     	ds	1
  1790   0000D6                     ??_mutex_lock:
  1791   0000D6                     ??_mutex_unlock:
  1792                           
  1793                           ; 1 bytes @ 0x1E
  1794   0000D6                     	ds	2
  1795   0000D8                     mutex_unlock@tid:
  1796                           	callstack 0
  1797                           
  1798                           ; 1 bytes @ 0x20
  1799   0000D8                     	ds	1
  1800   0000D9                     ___lmul@multiplicand:
  1801                           	callstack 0
  1802                           
  1803                           ; 4 bytes @ 0x21
  1804   0000D9                     	ds	4
  1805   0000DD                     ___lmul@product:
  1806                           	callstack 0
  1807   0000DD                     
  1808                           ; 1 bytes @ 0x25
  1809   0000DD                     	ds	4
  1810   0000E1                     pwm_set@duty_cycle:
  1811                           	callstack 0
  1812   0000E1                     
  1813                           ; 1 bytes @ 0x29
  1814   0000E1                     	ds	1
  1815   0000E2                     tarefa_injecao_eletronica@duty:
  1816                           	callstack 0
  1817   0000E2                     
  1818                           ; 1 bytes @ 0x2A
  1819   0000E2                     	ds	1
  1820                           
  1821                           	psect	cstackCOMRAM
  1822   000037                     __pcstackCOMRAM:
  1823                           	callstack 0
  1824   000037                     sem_init@sem:
  1825                           	callstack 0
  1826   000037                     mutex_init@m:
  1827                           	callstack 0
  1828   000037                     SRAMInitHeap@pHeap:
  1829                           	callstack 0
  1830   000037                     __SRAMmerge@pSegA:
  1831                           	callstack 0
  1832   000037                     create_task@priority:
  1833                           	callstack 0
  1834   000037                     int_ext_init@callback:
  1835                           	callstack 0
  1836   000037                     
  1837                           ; 1 bytes @ 0x0
  1838   000037                     	ds	1
  1839   000038                     sem_init@value:
  1840                           	callstack 0
  1841   000038                     SRAMInitHeap@count:
  1842                           	callstack 0
  1843   000038                     create_task@task:
  1844                           	callstack 0
  1845   000038                     ??__SRAMmerge:
  1846   000038                     
  1847                           ; 1 bytes @ 0x1
  1848   000038                     	ds	1
  1849   000039                     __SRAMmerge@uSum:
  1850                           	callstack 0
  1851   000039                     decrease_time@i:
  1852                           	callstack 0
  1853   000039                     
  1854                           ; 1 bytes @ 0x2
  1855   000039                     	ds	1
  1856   00003A                     __SRAMmerge@pSegB:
  1857                           	callstack 0
  1858   00003A                     ??_create_task:
  1859   00003A                     ??_ISR:
  1860                           
  1861                           ; 1 bytes @ 0x3
  1862   00003A                     	ds	1
  1863   00003B                     __SRAMmerge@uSegA:
  1864                           	callstack 0
  1865   00003B                     
  1866                           ; 1 bytes @ 0x4
  1867   00003B                     	ds	1
  1868   00003C                     __SRAMmerge@uSegB:
  1869                           	callstack 0
  1870                           
  1871                           ; 1 bytes @ 0x5
  1872   00003C                     	ds	1
  1873   00003D                     
  1874                           ; 1 bytes @ 0x6
  1875   00003D                     	ds	2
  1876   00003F                     ??_SRAMalloc:
  1877                           
  1878                           ; 1 bytes @ 0x8
  1879   00003F                     	ds	1
  1880   000040                     SRAMalloc@temp:
  1881                           	callstack 0
  1882                           
  1883                           ; 1 bytes @ 0x9
  1884   000040                     	ds	1
  1885   000041                     SRAMalloc@segLen:
  1886                           	callstack 0
  1887                           
  1888                           ; 1 bytes @ 0xA
  1889   000041                     	ds	1
  1890   000042                     SRAMalloc@segHeader:
  1891                           	callstack 0
  1892                           
  1893                           ; 1 bytes @ 0xB
  1894   000042                     	ds	1
  1895   000043                     SRAMalloc@nBytes:
  1896                           	callstack 0
  1897                           
  1898                           ; 1 bytes @ 0xC
  1899   000043                     	ds	1
  1900   000044                     SRAMalloc@pHeap:
  1901                           	callstack 0
  1902                           
  1903                           ; 1 bytes @ 0xD
  1904   000044                     	ds	1
  1905   000045                     create_pipe@p:
  1906                           	callstack 0
  1907                           
  1908                           ; 1 bytes @ 0xE
  1909   000045                     	ds	1
  1910   000046                     ??_create_pipe:
  1911                           
  1912                           ; 1 bytes @ 0xF
  1913   000046                     	ds	1
  1914   000047                     
  1915                           ; 1 bytes @ 0x10
  1916   000047                     	ds	6
  1917                           
  1918 ;;
  1919 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1920 ;;
  1921 ;; *************** function _main *****************
  1922 ;; Defined at:
  1923 ;;		line 4 in file "main.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  2   18[None  ] int 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels required when called: 13
  1943 ;; This function calls:
  1944 ;;		_create_task
  1945 ;;		_os_init
  1946 ;;		_os_start
  1947 ;; This function is called by:
  1948 ;;		Startup code after reset
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text0
  1953   001DB2                     __ptext0:
  1954                           	callstack 0
  1955   001DB2                     _main:
  1956                           	callstack 18
  1957   001DB2                     
  1958                           ;main.c: 6:     os_init();
  1959   001DB2  EC99  F010         	call	_os_init	;wreg free
  1960                           
  1961                           ;main.c: 8:     create_task(1, 1, tarefa_acelerador);
  1962   001DB6  0E01               	movlw	1
  1963   001DB8  6E37               	movwf	create_task@priority^0,c
  1964   001DBA  0E5A               	movlw	low _tarefa_acelerador
  1965   001DBC  6E38               	movwf	create_task@task^0,c
  1966   001DBE  0E1F               	movlw	high _tarefa_acelerador
  1967   001DC0  6E39               	movwf	(create_task@task+1)^0,c
  1968   001DC2  0E01               	movlw	1
  1969   001DC4  EC05  F00F         	call	_create_task
  1970                           
  1971                           ;main.c: 9:     create_task(2, 2, tarefa_controle_central);
  1972   001DC8  0E02               	movlw	2
  1973   001DCA  6E37               	movwf	create_task@priority^0,c
  1974   001DCC  0EB6               	movlw	low _tarefa_controle_central
  1975   001DCE  6E38               	movwf	create_task@task^0,c
  1976   001DD0  0E1E               	movlw	high _tarefa_controle_central
  1977   001DD2  6E39               	movwf	(create_task@task+1)^0,c
  1978   001DD4  0E02               	movlw	2
  1979   001DD6  EC05  F00F         	call	_create_task
  1980                           
  1981                           ;main.c: 10:     create_task(3, 2, tarefa_injecao_eletronica);
  1982   001DDA  0E02               	movlw	2
  1983   001DDC  6E37               	movwf	create_task@priority^0,c
  1984   001DDE  0EA2               	movlw	low _tarefa_injecao_eletronica
  1985   001DE0  6E38               	movwf	create_task@task^0,c
  1986   001DE2  0E1F               	movlw	high _tarefa_injecao_eletronica
  1987   001DE4  6E39               	movwf	(create_task@task+1)^0,c
  1988   001DE6  0E03               	movlw	3
  1989   001DE8  EC05  F00F         	call	_create_task
  1990                           
  1991                           ;main.c: 11:     create_task(4, 3, tarefa_estabilidade);
  1992   001DEC  0E03               	movlw	3
  1993   001DEE  6E37               	movwf	create_task@priority^0,c
  1994   001DF0  0E4E               	movlw	low _tarefa_estabilidade
  1995   001DF2  6E38               	movwf	create_task@task^0,c
  1996   001DF4  0E20               	movlw	high _tarefa_estabilidade
  1997   001DF6  6E39               	movwf	(create_task@task+1)^0,c
  1998   001DF8  0E04               	movlw	4
  1999   001DFA  EC05  F00F         	call	_create_task
  2000   001DFE                     
  2001                           ;main.c: 13:     os_start();
  2002   001DFE  ECE2  F010         	call	_os_start	;wreg free
  2003   001E02                     l19:
  2004   001E02  EF01  F00F         	goto	l19
  2005   001E06  EF06  F000         	goto	start
  2006   001E0A                     __end_of_main:
  2007                           	callstack 0
  2008                           
  2009 ;; *************** function _os_start *****************
  2010 ;; Defined at:
  2011 ;;		line 66 in file "kernel.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 12
  2032 ;; This function calls:
  2033 ;;		_start_timer0
  2034 ;;		_user_config
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text1
  2041   0021C4                     __ptext1:
  2042                           	callstack 0
  2043   0021C4                     _os_start:
  2044                           	callstack 18
  2045   0021C4                     
  2046                           ;kernel.c: 71:     user_config();
  2047   0021C4  EC57  F010         	call	_user_config	;wreg free
  2048   0021C8                     
  2049                           ;kernel.c: 74:     (INTCONbits.GIE = 1);
  2050   0021C8  8EF2               	bsf	242,7,c	;volatile
  2051   0021CA                     
  2052                           ;kernel.c: 77:     start_timer0();
  2053   0021CA  ECF4  F010         	call	_start_timer0	;wreg free
  2054   0021CE  0012               	return		;funcret
  2055   0021D0                     __end_of_os_start:
  2056                           	callstack 0
  2057                           
  2058 ;; *************** function _user_config *****************
  2059 ;; Defined at:
  2060 ;;		line 87 in file "user_app.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2074 ;;      Params:         0       0       0       0       0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 11
  2081 ;; This function calls:
  2082 ;;		_adc_init
  2083 ;;		_create_pipe
  2084 ;;		_int_ext_init
  2085 ;;		_mutex_init
  2086 ;;		_pwm_init
  2087 ;; This function is called by:
  2088 ;;		_os_start
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text2
  2093   0020AE                     __ptext2:
  2094                           	callstack 0
  2095   0020AE                     _user_config:
  2096                           	callstack 18
  2097   0020AE                     
  2098                           ;user_app.c: 90:     TRISDbits.RD0 = 0;
  2099   0020AE  9095               	bcf	149,0,c	;volatile
  2100                           
  2101                           ;user_app.c: 91:     TRISDbits.RD1 = 0;
  2102   0020B0  9295               	bcf	149,1,c	;volatile
  2103                           
  2104                           ;user_app.c: 92:     TRISDbits.RD2 = 0;
  2105   0020B2  9495               	bcf	149,2,c	;volatile
  2106                           
  2107                           ;user_app.c: 93:     TRISDbits.RD3 = 0;
  2108   0020B4  9695               	bcf	149,3,c	;volatile
  2109   0020B6                     
  2110                           ;user_app.c: 95:     create_pipe(&accel_pipe);
  2111   0020B6  0E24               	movlw	low _accel_pipe
  2112   0020B8  6E45               	movwf	create_pipe@p^0,c
  2113   0020BA  EC85  F00F         	call	_create_pipe	;wreg free
  2114   0020BE                     
  2115                           ;user_app.c: 96:     mutex_init(&buffer_mutex);
  2116   0020BE  0EB1               	movlw	low _buffer_mutex
  2117   0020C0  6E37               	movwf	mutex_init@m^0,c
  2118   0020C2  ECAD  F010         	call	_mutex_init	;wreg free
  2119   0020C6                     
  2120                           ;user_app.c: 99:     adc_init();
  2121   0020C6  ECE8  F010         	call	_adc_init	;wreg free
  2122   0020CA                     
  2123                           ;user_app.c: 100:     pwm_init();
  2124   0020CA  ECCD  F010         	call	_pwm_init	;wreg free
  2125   0020CE                     
  2126                           ;user_app.c: 101:     int_ext_init(stability_callback);
  2127   0020CE  0EE2               	movlw	low _stability_callback
  2128   0020D0  6E37               	movwf	int_ext_init@callback^0,c
  2129   0020D2  0E21               	movlw	high _stability_callback
  2130   0020D4  6E38               	movwf	(int_ext_init@callback+1)^0,c
  2131   0020D6  ECD8  F010         	call	_int_ext_init	;# 
  2132   0020DA  0012               	return		;funcret
  2133   0020DC                     __end_of_user_config:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _pwm_init *****************
  2137 ;; Defined at:
  2138 ;;		line 25 in file "io.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 8
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_user_config
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text3
  2167   00219A                     __ptext3:
  2168                           	callstack 0
  2169   00219A                     _pwm_init:
  2170                           	callstack 20
  2171   00219A                     
  2172                           ;io.c: 28:     PR2 = 249;
  2173   00219A  0EF9               	movlw	249
  2174   00219C  6ECB               	movwf	203,c	;volatile
  2175                           
  2176                           ;io.c: 29:     T2CON = 0b00000111;
  2177   00219E  0E07               	movlw	7
  2178   0021A0  6ECA               	movwf	202,c	;volatile
  2179   0021A2                     
  2180                           ;io.c: 31:     TRISCbits.TRISC2 = 0;
  2181   0021A2  9494               	bcf	148,2,c	;volatile
  2182                           
  2183                           ;io.c: 32:     CCP1CON = 0b00001100;
  2184   0021A4  0E0C               	movlw	12
  2185   0021A6  6EBD               	movwf	189,c	;volatile
  2186   0021A8                     
  2187                           ;io.c: 34:     TRISCbits.TRISC1 = 0;
  2188   0021A8  9294               	bcf	148,1,c	;volatile
  2189                           
  2190                           ;io.c: 35:     CCP2CON = 0b00001100;
  2191   0021AA  0E0C               	movlw	12
  2192   0021AC  6EBA               	movwf	186,c	;volatile
  2193   0021AE  0012               	return		;funcret
  2194   0021B0                     __end_of_pwm_init:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _mutex_init *****************
  2198 ;; Defined at:
  2199 ;;		line 48 in file "sync.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  m               1    0[COMRAM] PTR struct mutex
  2202 ;;		 -> buffer_mutex(7), 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         1       0       0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2217 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 8
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_user_config
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text4
  2229   00215A                     __ptext4:
  2230                           	callstack 0
  2231   00215A                     _mutex_init:
  2232                           	callstack 20
  2233   00215A                     
  2234                           ;sync.c: 48: void mutex_init(mutex_t *m);sync.c: 49: {;sync.c: 50:     m->flag = 1;
  2235   00215A  5037               	movf	mutex_init@m^0,w,c
  2236   00215C  6ED9               	movwf	fsr2l,c
  2237   00215E  6ADA               	clrf	fsr2h,c
  2238   002160  0E01               	movlw	1
  2239   002162  6EDF               	movwf	indf2,c
  2240   002164                     
  2241                           ;sync.c: 51:     m->s_size = 0;
  2242   002164  5037               	movf	mutex_init@m^0,w,c
  2243   002166  6ED9               	movwf	fsr2l,c
  2244   002168  6ADA               	clrf	fsr2h,c
  2245   00216A  0E05               	movlw	5
  2246   00216C  26D9               	addwf	fsr2l,f,c
  2247   00216E  6ADF               	clrf	indf2,c
  2248   002170                     
  2249                           ;sync.c: 52:     m->s_pos_out = 0;
  2250   002170  5037               	movf	mutex_init@m^0,w,c
  2251   002172  6ED9               	movwf	fsr2l,c
  2252   002174  6ADA               	clrf	fsr2h,c
  2253   002176  0E06               	movlw	6
  2254   002178  26D9               	addwf	fsr2l,f,c
  2255   00217A  6ADF               	clrf	indf2,c
  2256   00217C  0012               	return		;funcret
  2257   00217E                     __end_of_mutex_init:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _int_ext_init *****************
  2261 ;; Defined at:
  2262 ;;		line 59 in file "io.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  callback        2    0[COMRAM] PTR FTN()void 
  2265 ;;		 -> stability_callback(1), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2277 ;;      Params:         2       0       0       0       0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2280 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2281 ;;Total ram usage:        2 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 8
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_user_config
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text5
  2292   0021B0                     __ptext5:
  2293                           	callstack 0
  2294   0021B0                     _int_ext_init:
  2295                           	callstack 20
  2296   0021B0                     
  2297                           ;io.c: 59: void int_ext_init(void (*callback)(void));io.c: 60: {;io.c: 61:     ext_int_c
      +                          allback = callback;
  2298   0021B0  C037  F021         	movff	int_ext_init@callback,_ext_int_callback
  2299   0021B4  C038  F022         	movff	int_ext_init@callback+1,_ext_int_callback+1
  2300   0021B8                     
  2301                           ;io.c: 63:     TRISBbits.TRISB0 = 1;
  2302   0021B8  8093               	bsf	147,0,c	;volatile
  2303   0021BA                     
  2304                           ;io.c: 65:     INTCON2bits.RBPU = 0;
  2305   0021BA  9EF1               	bcf	241,7,c	;volatile
  2306   0021BC                     
  2307                           ;io.c: 67:     INTCON2bits.INTEDG0 = 1;
  2308   0021BC  8CF1               	bsf	241,6,c	;volatile
  2309   0021BE                     
  2310                           ;io.c: 69:     INTCONbits.INT0IF = 0;
  2311   0021BE  92F2               	bcf	242,1,c	;volatile
  2312   0021C0                     
  2313                           ;io.c: 70:     INTCONbits.INT0IE = 1;
  2314   0021C0  88F2               	bsf	242,4,c	;volatile
  2315   0021C2  0012               	return		;funcret
  2316   0021C4                     __end_of_int_ext_init:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _create_pipe *****************
  2320 ;; Defined at:
  2321 ;;		line 4 in file "pipe.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  p               1   14[COMRAM] PTR struct pipe
  2324 ;;		 -> accel_pipe(19), 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2336 ;;      Params:         1       0       0       0       0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2338 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2339 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2340 ;;Total ram usage:        2 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 10
  2343 ;; This function calls:
  2344 ;;		_SRAMalloc
  2345 ;;		_sem_init
  2346 ;; This function is called by:
  2347 ;;		_user_config
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text6
  2352   001F0A                     __ptext6:
  2353                           	callstack 0
  2354   001F0A                     _create_pipe:
  2355                           	callstack 18
  2356   001F0A                     
  2357                           ;pipe.c: 4: void create_pipe(pipe_t *p);pipe.c: 5: {;pipe.c: 6:     p->pipe_msg = (uint8
      +                          _t *)SRAMalloc(3);
  2358   001F0A  0E03               	movlw	3
  2359   001F0C  EC89  F00B         	call	_SRAMalloc
  2360   001F10  6E46               	movwf	??_create_pipe^0,c
  2361   001F12  5045               	movf	create_pipe@p^0,w,c
  2362   001F14  6ED9               	movwf	fsr2l,c
  2363   001F16  6ADA               	clrf	fsr2h,c
  2364   001F18  C046  FFDF         	movff	??_create_pipe,indf2
  2365   001F1C                     
  2366                           ;pipe.c: 7:     p->pipe_pos_read = 0;
  2367   001F1C  5045               	movf	create_pipe@p^0,w,c
  2368   001F1E  6ED9               	movwf	fsr2l,c
  2369   001F20  6ADA               	clrf	fsr2h,c
  2370   001F22  0E01               	movlw	1
  2371   001F24  26D9               	addwf	fsr2l,f,c
  2372   001F26  6ADF               	clrf	indf2,c
  2373   001F28                     
  2374                           ;pipe.c: 8:     p->pipe_pos_write = 0;
  2375   001F28  5045               	movf	create_pipe@p^0,w,c
  2376   001F2A  6ED9               	movwf	fsr2l,c
  2377   001F2C  6ADA               	clrf	fsr2h,c
  2378   001F2E  0E02               	movlw	2
  2379   001F30  26D9               	addwf	fsr2l,f,c
  2380   001F32  6ADF               	clrf	indf2,c
  2381   001F34                     
  2382                           ;pipe.c: 9:     sem_init(&p->pipe_sem_read, 0);
  2383   001F34  5045               	movf	create_pipe@p^0,w,c
  2384   001F36  0F03               	addlw	3
  2385   001F38  6E37               	movwf	sem_init@sem^0,c
  2386   001F3A  0E00               	movlw	0
  2387   001F3C  6E39               	movwf	(sem_init@value+1)^0,c
  2388   001F3E  0E00               	movlw	0
  2389   001F40  6E38               	movwf	sem_init@value^0,c
  2390   001F42  EC85  F010         	call	_sem_init	;wreg free
  2391   001F46                     
  2392                           ;pipe.c: 10:     sem_init(&p->pipe_sem_write, 3);
  2393   001F46  5045               	movf	create_pipe@p^0,w,c
  2394   001F48  0F0B               	addlw	11
  2395   001F4A  6E37               	movwf	sem_init@sem^0,c
  2396   001F4C  0E00               	movlw	0
  2397   001F4E  6E39               	movwf	(sem_init@value+1)^0,c
  2398   001F50  0E03               	movlw	3
  2399   001F52  6E38               	movwf	sem_init@value^0,c
  2400   001F54  EC85  F010         	call	_sem_init	;wreg free
  2401   001F58  0012               	return		;funcret
  2402   001F5A                     __end_of_create_pipe:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _sem_init *****************
  2406 ;; Defined at:
  2407 ;;		line 11 in file "sync.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  sem             1    0[COMRAM] PTR struct sem
  2410 ;;		 -> accel_pipe(19), 
  2411 ;;  value           2    1[COMRAM] short 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2423 ;;      Params:         3       0       0       0       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2426 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2427 ;;Total ram usage:        3 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 8
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_create_pipe
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text7
  2438   00210A                     __ptext7:
  2439                           	callstack 0
  2440   00210A                     _sem_init:
  2441                           	callstack 19
  2442   00210A                     
  2443                           ;sync.c: 11: void sem_init(sem_t *sem, int16_t value);sync.c: 12: {;sync.c: 13:     sem-
      +                          >s_value = value;
  2444   00210A  5037               	movf	sem_init@sem^0,w,c
  2445   00210C  6ED9               	movwf	fsr2l,c
  2446   00210E  6ADA               	clrf	fsr2h,c
  2447   002110  C038  FFDE         	movff	sem_init@value,postinc2
  2448   002114  C039  FFDD         	movff	sem_init@value+1,postdec2
  2449   002118                     
  2450                           ;sync.c: 14:     sem->s_size = 0;
  2451   002118  5037               	movf	sem_init@sem^0,w,c
  2452   00211A  6ED9               	movwf	fsr2l,c
  2453   00211C  6ADA               	clrf	fsr2h,c
  2454   00211E  0E06               	movlw	6
  2455   002120  26D9               	addwf	fsr2l,f,c
  2456   002122  6ADF               	clrf	indf2,c
  2457   002124                     
  2458                           ;sync.c: 15:     sem->s_pos_out = 0;
  2459   002124  5037               	movf	sem_init@sem^0,w,c
  2460   002126  6ED9               	movwf	fsr2l,c
  2461   002128  6ADA               	clrf	fsr2h,c
  2462   00212A  0E07               	movlw	7
  2463   00212C  26D9               	addwf	fsr2l,f,c
  2464   00212E  6ADF               	clrf	indf2,c
  2465   002130  0012               	return		;funcret
  2466   002132                     __end_of_sem_init:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _SRAMalloc *****************
  2470 ;; Defined at:
  2471 ;;		line 138 in file "mem.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  nBytes          1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  nBytes          1   12[COMRAM] unsigned char 
  2476 ;;  pHeap           1   13[COMRAM] PTR struct _SALLOC
  2477 ;;		 -> _uDynamicHeap(80), 
  2478 ;;  segHeader       1   11[COMRAM] struct _SALLOC
  2479 ;;  segLen          1   10[COMRAM] unsigned char 
  2480 ;;  temp            1    9[COMRAM] PTR struct _SALLOC
  2481 ;;		 -> _uDynamicHeap(80), 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    6[COMRAM] PTR unsigned char 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2491 ;;      Params:         2       0       0       0       0       0       0       0       0
  2492 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2493 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2494 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2495 ;;Total ram usage:        8 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 9
  2498 ;; This function calls:
  2499 ;;		__SRAMmerge
  2500 ;; This function is called by:
  2501 ;;		_create_pipe
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text8
  2506   001712                     __ptext8:
  2507                           	callstack 0
  2508   001712                     _SRAMalloc:
  2509                           	callstack 18
  2510                           
  2511                           ;incstack = 0
  2512                           ;SRAMalloc@nBytes stored from wreg
  2513   001712  6E43               	movwf	SRAMalloc@nBytes^0,c
  2514   001714                     
  2515                           ;mem.c: 138: unsigned char * SRAMalloc( unsigned char nBytes);mem.c: 139: {;mem.c: 140: 
      +                              SALLOC * pHeap;;mem.c: 141:     SALLOC * temp;;mem.c: 142:          SALLOC segHeader
      +                          ;;mem.c: 143:          unsigned char segLen;;mem.c: 146:     if (nBytes > (0x7F - 1))
  2516   001714  0E7E               	movlw	126
  2517   001716  6443               	cpfsgt	SRAMalloc@nBytes^0,c
  2518   001718  EF90  F00B         	goto	u771
  2519   00171C  EF92  F00B         	goto	u770
  2520   001720                     u771:
  2521   001720  EF95  F00B         	goto	l1859
  2522   001724                     u770:
  2523   001724                     l1855:
  2524                           
  2525                           ;mem.c: 147:         return (0);
  2526   001724  0E00               	movlw	0
  2527   001726  EFF3  F00B         	goto	l138
  2528   00172A                     l1859:
  2529                           
  2530                           ;mem.c: 150:     pHeap = (SALLOC *)_uDynamicHeap;
  2531   00172A  0E61               	movlw	low __uDynamicHeap
  2532   00172C  6E44               	movwf	SRAMalloc@pHeap^0,c
  2533   00172E                     l1861:
  2534                           
  2535                           ;mem.c: 153:     {;mem.c: 155:         segHeader = *pHeap;
  2536   00172E  5044               	movf	SRAMalloc@pHeap^0,w,c
  2537   001730  6ED9               	movwf	fsr2l,c
  2538   001732  6ADA               	clrf	fsr2h,c
  2539   001734  50DF               	movf	indf2,w,c
  2540   001736  6E42               	movwf	SRAMalloc@segHeader^0,c
  2541   001738                     
  2542                           ;mem.c: 158:         segLen = segHeader.bits.count - 1;
  2543   001738  5042               	movf	SRAMalloc@segHeader^0,w,c
  2544   00173A  0B7F               	andlw	127
  2545   00173C  6E3F               	movwf	??_SRAMalloc^0,c
  2546   00173E  043F               	decf	??_SRAMalloc^0,w,c
  2547   001740  6E41               	movwf	SRAMalloc@segLen^0,c
  2548   001742                     
  2549                           ;mem.c: 161:         if (segHeader.byte == 0)
  2550   001742  5042               	movf	SRAMalloc@segHeader^0,w,c
  2551   001744  A4D8               	btfss	status,2,c
  2552   001746  EFA7  F00B         	goto	u781
  2553   00174A  EFA9  F00B         	goto	u780
  2554   00174E                     u781:
  2555   00174E  EFAB  F00B         	goto	l140
  2556   001752                     u780:
  2557   001752  EF92  F00B         	goto	l1855
  2558   001756                     l140:
  2559                           
  2560                           ;mem.c: 165:         if (!(segHeader.bits.alloc))
  2561   001756  BE42               	btfsc	SRAMalloc@segHeader^0,7,c
  2562   001758  EFB0  F00B         	goto	u791
  2563   00175C  EFB2  F00B         	goto	u790
  2564   001760                     u791:
  2565   001760  EFC7  F00B         	goto	l1875
  2566   001764                     u790:
  2567   001764                     
  2568                           ;mem.c: 166:         {;mem.c: 168:             if (nBytes > segLen)
  2569   001764  5043               	movf	SRAMalloc@nBytes^0,w,c
  2570   001766  5C41               	subwf	SRAMalloc@segLen^0,w,c
  2571   001768  B0D8               	btfsc	status,0,c
  2572   00176A  EFB9  F00B         	goto	u801
  2573   00176E  EFBB  F00B         	goto	u800
  2574   001772                     u801:
  2575   001772  EFCE  F00B         	goto	l1877
  2576   001776                     u800:
  2577   001776                     
  2578                           ;mem.c: 169:             {;mem.c: 171:                 if (!(_SRAMmerge(pHeap)))
  2579   001776  C044  F037         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  2580   00177A  ECF4  F00B         	call	__SRAMmerge	;wreg free
  2581   00177E  0900               	iorlw	0
  2582   001780  A4D8               	btfss	status,2,c
  2583   001782  EFC5  F00B         	goto	u811
  2584   001786  EFC7  F00B         	goto	u810
  2585   00178A                     u811:
  2586   00178A  EFF1  F00B         	goto	l147
  2587   00178E                     u810:
  2588   00178E                     l1875:
  2589                           
  2590                           ;mem.c: 172:                     pHeap += segHeader.bits.count;
  2591   00178E  5042               	movf	SRAMalloc@segHeader^0,w,c
  2592   001790  0B7F               	andlw	127
  2593   001792  0D01               	mullw	1
  2594   001794  50F3               	movf	243,w,c
  2595   001796  2644               	addwf	SRAMalloc@pHeap^0,f,c
  2596   001798  EF97  F00B         	goto	l1861
  2597   00179C                     l1877:
  2598                           
  2599                           ;mem.c: 178:                 if (nBytes == segLen)
  2600   00179C  5041               	movf	SRAMalloc@segLen^0,w,c
  2601   00179E  1843               	xorwf	SRAMalloc@nBytes^0,w,c
  2602   0017A0  A4D8               	btfss	status,2,c
  2603   0017A2  EFD5  F00B         	goto	u821
  2604   0017A6  EFD7  F00B         	goto	u820
  2605   0017AA                     u821:
  2606   0017AA  EFDE  F00B         	goto	l1887
  2607   0017AE                     u820:
  2608   0017AE                     
  2609                           ;mem.c: 179:                 {;mem.c: 181:                     (*pHeap).bits.alloc = 1;
  2610   0017AE  5044               	movf	SRAMalloc@pHeap^0,w,c
  2611   0017B0  6ED9               	movwf	fsr2l,c
  2612   0017B2  6ADA               	clrf	fsr2h,c
  2613   0017B4  8EDF               	bsf	indf2,7,c
  2614   0017B6                     
  2615                           ;mem.c: 184:                     return ((unsigned char *)(pHeap + 1));
  2616   0017B6  2844               	incf	SRAMalloc@pHeap^0,w,c
  2617   0017B8  EFF3  F00B         	goto	l138
  2618   0017BC                     l1887:
  2619                           
  2620                           ;mem.c: 189:                 {;mem.c: 191:                     (*pHeap).byte = nBytes + 
      +                          0x81;
  2621   0017BC  5044               	movf	SRAMalloc@pHeap^0,w,c
  2622   0017BE  6ED9               	movwf	fsr2l,c
  2623   0017C0  6ADA               	clrf	fsr2h,c
  2624   0017C2  5043               	movf	SRAMalloc@nBytes^0,w,c
  2625   0017C4  0F81               	addlw	129
  2626   0017C6  6EDF               	movwf	indf2,c
  2627   0017C8                     
  2628                           ;mem.c: 194:                     temp = pHeap + 1;
  2629   0017C8  2844               	incf	SRAMalloc@pHeap^0,w,c
  2630   0017CA  6E40               	movwf	SRAMalloc@temp^0,c
  2631   0017CC                     
  2632                           ;mem.c: 197:                     pHeap += (nBytes + 1);
  2633   0017CC  2843               	incf	SRAMalloc@nBytes^0,w,c
  2634   0017CE  2644               	addwf	SRAMalloc@pHeap^0,f,c
  2635                           
  2636                           ;mem.c: 200:                     (*pHeap).byte = segLen - nBytes;
  2637   0017D0  5044               	movf	SRAMalloc@pHeap^0,w,c
  2638   0017D2  6ED9               	movwf	fsr2l,c
  2639   0017D4  6ADA               	clrf	fsr2h,c
  2640   0017D6  5043               	movf	SRAMalloc@nBytes^0,w,c
  2641   0017D8  5C41               	subwf	SRAMalloc@segLen^0,w,c
  2642   0017DA  6EDF               	movwf	indf2,c
  2643   0017DC                     
  2644                           ;mem.c: 203:                     return ((unsigned char *)temp);
  2645   0017DC  5040               	movf	SRAMalloc@temp^0,w,c
  2646   0017DE  EFF3  F00B         	goto	l138
  2647   0017E2                     l147:
  2648   0017E2  EF97  F00B         	goto	l1861
  2649   0017E6                     l138:
  2650   0017E6  0012               	return		;funcret
  2651   0017E8                     __end_of_SRAMalloc:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function __SRAMmerge *****************
  2655 ;; Defined at:
  2656 ;;		line 302 in file "mem.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  pSegA           1    0[COMRAM] PTR struct _SALLOC
  2659 ;;		 -> _uDynamicHeap(80), 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  uSegB           1    5[COMRAM] struct _SALLOC
  2662 ;;  uSegA           1    4[COMRAM] struct _SALLOC
  2663 ;;  pSegB           1    3[COMRAM] PTR struct _SALLOC
  2664 ;;		 -> _uDynamicHeap(80), 
  2665 ;;  uSum            1    2[COMRAM] struct _SALLOC
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      unsigned char 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2675 ;;      Params:         1       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        6 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 8
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_SRAMalloc
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text9
  2690   0017E8                     __ptext9:
  2691                           	callstack 0
  2692   0017E8                     __SRAMmerge:
  2693                           	callstack 18
  2694   0017E8                     
  2695                           ;mem.c: 302:      unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 303: {;mem.c: 304:    
      +                           SALLOC * pSegB;;mem.c: 305:          SALLOC uSegA, uSegB, uSum;;mem.c: 308:     pSegB =
      +                           pSegA + (*pSegA).byte;
  2696   0017E8  5037               	movf	__SRAMmerge@pSegA^0,w,c
  2697   0017EA  6ED9               	movwf	fsr2l,c
  2698   0017EC  6ADA               	clrf	fsr2h,c
  2699   0017EE  50DF               	movf	indf2,w,c
  2700   0017F0  6E38               	movwf	??__SRAMmerge^0,c
  2701   0017F2  5037               	movf	__SRAMmerge@pSegA^0,w,c
  2702   0017F4  2438               	addwf	??__SRAMmerge^0,w,c
  2703   0017F6  6E3A               	movwf	__SRAMmerge@pSegB^0,c
  2704   0017F8                     
  2705                           ;mem.c: 311:     uSegA = *pSegA;
  2706   0017F8  5037               	movf	__SRAMmerge@pSegA^0,w,c
  2707   0017FA  6ED9               	movwf	fsr2l,c
  2708   0017FC  6ADA               	clrf	fsr2h,c
  2709   0017FE  50DF               	movf	indf2,w,c
  2710   001800  6E3B               	movwf	__SRAMmerge@uSegA^0,c
  2711   001802                     
  2712                           ;mem.c: 312:     uSegB = *pSegB;
  2713   001802  503A               	movf	__SRAMmerge@pSegB^0,w,c
  2714   001804  6ED9               	movwf	fsr2l,c
  2715   001806  6ADA               	clrf	fsr2h,c
  2716   001808  50DF               	movf	indf2,w,c
  2717   00180A  6E3C               	movwf	__SRAMmerge@uSegB^0,c
  2718   00180C                     
  2719                           ;mem.c: 315:     if (uSegB.byte == 0)
  2720   00180C  503C               	movf	__SRAMmerge@uSegB^0,w,c
  2721   00180E  A4D8               	btfss	status,2,c
  2722   001810  EF0C  F00C         	goto	u721
  2723   001814  EF0E  F00C         	goto	u720
  2724   001818                     u721:
  2725   001818  EF11  F00C         	goto	l163
  2726   00181C                     u720:
  2727   00181C                     l1811:
  2728                           
  2729                           ;mem.c: 316:         return (0);
  2730   00181C  0E00               	movlw	0
  2731   00181E  EF52  F00C         	goto	l164
  2732   001822                     l163:
  2733                           
  2734                           ;mem.c: 319:     if (uSegA.bits.alloc || uSegB.bits.alloc)
  2735   001822  BE3B               	btfsc	__SRAMmerge@uSegA^0,7,c
  2736   001824  EF16  F00C         	goto	u731
  2737   001828  EF18  F00C         	goto	u730
  2738   00182C                     u731:
  2739   00182C  EF0E  F00C         	goto	l1811
  2740   001830                     u730:
  2741   001830  AE3C               	btfss	__SRAMmerge@uSegB^0,7,c
  2742   001832  EF1D  F00C         	goto	u741
  2743   001836  EF1F  F00C         	goto	u740
  2744   00183A                     u741:
  2745   00183A  EF21  F00C         	goto	l1821
  2746   00183E                     u740:
  2747   00183E  EF0E  F00C         	goto	l1811
  2748   001842                     l1821:
  2749                           
  2750                           ;mem.c: 323:     if (uSegA.bits.count == 0x7F)
  2751   001842  503B               	movf	__SRAMmerge@uSegA^0,w,c
  2752   001844  0B7F               	andlw	127
  2753   001846  0A7F               	xorlw	127
  2754   001848  A4D8               	btfss	status,2,c
  2755   00184A  EF29  F00C         	goto	u751
  2756   00184E  EF2B  F00C         	goto	u750
  2757   001852                     u751:
  2758   001852  EF2D  F00C         	goto	l1827
  2759   001856                     u750:
  2760   001856  EF0E  F00C         	goto	l1811
  2761   00185A                     l1827:
  2762                           
  2763                           ;mem.c: 327:     uSum.byte = uSegA.byte + uSegB.byte;
  2764   00185A  503B               	movf	__SRAMmerge@uSegA^0,w,c
  2765   00185C  243C               	addwf	__SRAMmerge@uSegB^0,w,c
  2766   00185E  6E39               	movwf	__SRAMmerge@uSum^0,c
  2767                           
  2768                           ;mem.c: 332:     if ((uSum.byte) > 0x7F)
  2769   001860  0E7F               	movlw	127
  2770   001862  6439               	cpfsgt	__SRAMmerge@uSum^0,c
  2771   001864  EF36  F00C         	goto	u761
  2772   001868  EF38  F00C         	goto	u760
  2773   00186C                     u761:
  2774   00186C  EF4C  F00C         	goto	l1843
  2775   001870                     u760:
  2776   001870                     
  2777                           ;mem.c: 333:     {;mem.c: 334:         (*pSegA).byte = 0x7F;
  2778   001870  5037               	movf	__SRAMmerge@pSegA^0,w,c
  2779   001872  6ED9               	movwf	fsr2l,c
  2780   001874  6ADA               	clrf	fsr2h,c
  2781   001876  0E7F               	movlw	127
  2782   001878  6EDF               	movwf	indf2,c
  2783   00187A                     
  2784                           ;mem.c: 335:         pSegA += 0x7F;
  2785   00187A  0E7F               	movlw	127
  2786   00187C  2637               	addwf	__SRAMmerge@pSegA^0,f,c
  2787   00187E                     
  2788                           ;mem.c: 336:         pSegB += uSegB.byte;
  2789   00187E  503C               	movf	__SRAMmerge@uSegB^0,w,c
  2790   001880  0D01               	mullw	1
  2791   001882  50F3               	movf	243,w,c
  2792   001884  263A               	addwf	__SRAMmerge@pSegB^0,f,c
  2793   001886                     
  2794                           ;mem.c: 337:         (*pSegA).byte = (unsigned char)(pSegB - pSegA);
  2795   001886  5037               	movf	__SRAMmerge@pSegA^0,w,c
  2796   001888  6ED9               	movwf	fsr2l,c
  2797   00188A  6ADA               	clrf	fsr2h,c
  2798   00188C  5037               	movf	__SRAMmerge@pSegA^0,w,c
  2799   00188E  5C3A               	subwf	__SRAMmerge@pSegB^0,w,c
  2800   001890  6EDF               	movwf	indf2,c
  2801   001892                     
  2802                           ;mem.c: 339:         return (0x7F);
  2803   001892  0E7F               	movlw	127
  2804   001894  EF52  F00C         	goto	l164
  2805   001898                     l1843:
  2806                           
  2807                           ;mem.c: 344:     {;mem.c: 345:         return ((*pSegA).byte = uSum.byte);
  2808   001898  5037               	movf	__SRAMmerge@pSegA^0,w,c
  2809   00189A  6ED9               	movwf	fsr2l,c
  2810   00189C  6ADA               	clrf	fsr2h,c
  2811   00189E  C039  FFDF         	movff	__SRAMmerge@uSum,indf2
  2812   0018A2  50DF               	movf	223,w,c
  2813   0018A4                     l164:
  2814   0018A4  0012               	return		;funcret
  2815   0018A6                     __end_of__SRAMmerge:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _adc_init *****************
  2819 ;; Defined at:
  2820 ;;		line 8 in file "io.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 8
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_user_config
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text10
  2849   0021D0                     __ptext10:
  2850                           	callstack 0
  2851   0021D0                     _adc_init:
  2852                           	callstack 20
  2853   0021D0                     
  2854                           ;io.c: 10:     ADCON0 = 0x00;
  2855   0021D0  6AC2               	clrf	194,c	;volatile
  2856   0021D2                     
  2857                           ;io.c: 11:     ADCON1 = 0x0E;
  2858   0021D2  0E0E               	movlw	14
  2859   0021D4  6EC1               	movwf	193,c	;volatile
  2860                           
  2861                           ;io.c: 12:     ADCON2 = 0b10101010;
  2862   0021D6  0EAA               	movlw	170
  2863   0021D8  6EC0               	movwf	192,c	;volatile
  2864   0021DA  0012               	return		;funcret
  2865   0021DC                     __end_of_adc_init:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _start_timer0 *****************
  2869 ;; Defined at:
  2870 ;;		line 46 in file "timer.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		None
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 8
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_os_start
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text11
  2899   0021E8                     __ptext11:
  2900                           	callstack 0
  2901   0021E8                     _start_timer0:
  2902                           	callstack 21
  2903   0021E8                     
  2904                           ;timer.c: 48:     T0CONbits.TMR0ON = 1;
  2905   0021E8  8ED5               	bsf	213,7,c	;volatile
  2906   0021EA  0012               	return		;funcret
  2907   0021EC                     __end_of_start_timer0:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _os_init *****************
  2911 ;; Defined at:
  2912 ;;		line 50 in file "kernel.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; Hardware stack levels required when called: 9
  2933 ;; This function calls:
  2934 ;;		_SRAMInitHeap
  2935 ;;		_config_timer0
  2936 ;;		_create_task
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text12
  2943   002132                     __ptext12:
  2944                           	callstack 0
  2945   002132                     _os_init:
  2946                           	callstack 21
  2947   002132                     
  2948                           ;kernel.c: 52:     r_queue.ready_queue_size = 0;
  2949   002132  0E00               	movlw	0
  2950   002134  CFE8 F385          	movff	wreg,_r_queue+536
  2951                           
  2952                           ;kernel.c: 53:     r_queue.task_running = 0;
  2953   002138  0E00               	movlw	0
  2954   00213A  CFE8 F384          	movff	wreg,_r_queue+535
  2955   00213E                     
  2956                           ;kernel.c: 56:     create_task(0, 0, idle);
  2957   00213E  0E00               	movlw	0
  2958   002140  6E37               	movwf	create_task@priority^0,c
  2959   002142  0E7E               	movlw	low _idle
  2960   002144  6E38               	movwf	create_task@task^0,c
  2961   002146  0E20               	movlw	high _idle
  2962   002148  6E39               	movwf	(create_task@task+1)^0,c
  2963   00214A  0E00               	movlw	0
  2964   00214C  EC05  F00F         	call	_create_task	;# 
  2965   002150                     
  2966                           ;kernel.c: 59:     config_timer0();
  2967   002150  ECBF  F010         	call	_config_timer0	;wreg free
  2968   002154                     
  2969                           ;kernel.c: 62:     SRAMInitHeap();
  2970   002154  EC30  F00F         	call	_SRAMInitHeap	;wreg free
  2971   002158  0012               	return		;funcret
  2972   00215A                     __end_of_os_init:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _create_task *****************
  2976 ;; Defined at:
  2977 ;;		line 11 in file "kernel.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  id              1    wreg     unsigned char 
  2980 ;;  priority        1    0[COMRAM] unsigned char 
  2981 ;;  task            2    1[COMRAM] PTR FTN()void 
  2982 ;;		 -> idle(1), tarefa_estabilidade(1), tarefa_injecao_eletronica(1), tarefa_controle_central(1), 
  2983 ;;		 -> tarefa_acelerador(1), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  id              1    1[BANK1 ] unsigned char 
  2986 ;;  new_task      107    2[BANK1 ] struct tcb
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2996 ;;      Params:         3       0       0       0       0       0       0       0       0
  2997 ;;      Locals:         0       0     108       0       0       0       0       0       0
  2998 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2999 ;;      Totals:         4       0     108       0       0       0       0       0       0
  3000 ;;Total ram usage:      112 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 8
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;;		_os_init
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text13
  3012   001E0A                     __ptext13:
  3013                           	callstack 0
  3014   001E0A                     _create_task:
  3015                           	callstack 21
  3016                           
  3017                           ;incstack = 0
  3018                           ;create_task@id stored from wreg
  3019   001E0A  0101               	movlb	1	; () banked
  3020   001E0C  6F01               	movwf	create_task@id& (0+255),b
  3021   001E0E                     
  3022                           ;kernel.c: 11: void create_task(uint8_t id, uint8_t priority, f_ptr task);kernel.c: 12: 
      +                          {;kernel.c: 13:     tcb_t new_task;;kernel.c: 15:     new_task.task_id = id;
  3023   001E0E  C101  F102         	movff	create_task@id,create_task@new_task
  3024   001E12                     
  3025                           ;kernel.c: 16:     new_task.task_priority = priority;
  3026   001E12  C037  F103         	movff	create_task@priority,create_task@new_task+1
  3027   001E16                     
  3028                           ;kernel.c: 17:     new_task.task_f = task;
  3029   001E16  C038  F105         	movff	create_task@task,create_task@new_task+3
  3030   001E1A  C039  F106         	movff	create_task@task+1,create_task@new_task+4
  3031   001E1E                     
  3032                           ;kernel.c: 19:     new_task.task_sp = 0;
  3033   001E1E  0101               	movlb	1	; () banked
  3034   001E20  6B6C               	clrf	(create_task@new_task+106)& (0+255),b
  3035   001E22                     
  3036                           ; BSR set to: 1
  3037                           ;kernel.c: 20:     new_task.time_sleeping = 0;
  3038   001E22  0E00               	movlw	0
  3039   001E24  6F08               	movwf	(create_task@new_task+6)& (0+255),b
  3040   001E26  0E00               	movlw	0
  3041   001E28  6F07               	movwf	(create_task@new_task+5)& (0+255),b
  3042   001E2A                     
  3043                           ; BSR set to: 1
  3044                           ;kernel.c: 21:     new_task.task_state = READY;
  3045   001E2A  6B04               	clrf	(create_task@new_task+2)& (0+255),b
  3046   001E2C                     
  3047                           ; BSR set to: 1
  3048                           ;kernel.c: 23:     new_task.BSR_REG = 0x000;
  3049   001E2C  6B0B               	clrf	(create_task@new_task+9)& (0+255),b
  3050   001E2E                     
  3051                           ; BSR set to: 1
  3052                           ;kernel.c: 24:     new_task.W_REG = 0x000;
  3053   001E2E  6B09               	clrf	(create_task@new_task+7)& (0+255),b
  3054   001E30                     
  3055                           ; BSR set to: 1
  3056                           ;kernel.c: 25:     new_task.STATUS_REG = 0x000;
  3057   001E30  6B0A               	clrf	(create_task@new_task+8)& (0+255),b
  3058   001E32                     
  3059                           ; BSR set to: 1
  3060                           ;kernel.c: 27:     r_queue.ready_queue[r_queue.ready_queue_size] = new_task;
  3061   001E32  EE21  F002         	lfsr	2,create_task@new_task
  3062   001E36  C385  F03A         	movff	_r_queue+536,??_create_task
  3063   001E3A  503A               	movf	??_create_task^0,w,c
  3064   001E3C  0D6B               	mullw	107
  3065   001E3E  0E6D               	movlw	low _r_queue
  3066   001E40  24F3               	addwf	243,w,c
  3067   001E42  6EE9               	movwf	fsr0l,c
  3068   001E44  0E01               	movlw	high _r_queue
  3069   001E46  20F4               	addwfc	prodh,w,c
  3070   001E48  6EEA               	movwf	fsr0h,c
  3071   001E4A  0E6A               	movlw	106
  3072   001E4C                     u831:
  3073   001E4C  CFDB FFEB          	movff	plusw2,plusw0
  3074   001E50  06E8               	decf	wreg,f,c
  3075   001E52  E2FC               	bc	u831
  3076   001E54                     
  3077                           ; BSR set to: 1
  3078                           ;kernel.c: 28:     r_queue.ready_queue_size += 1;
  3079   001E54  C385  FFE8         	movff	_r_queue+536,wreg
  3080   001E58  0F01               	addlw	1
  3081   001E5A  CFE8 F385          	movff	wreg,_r_queue+536
  3082   001E5E                     
  3083                           ; BSR set to: 1
  3084   001E5E  0012               	return		;funcret
  3085   001E60                     __end_of_create_task:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _config_timer0 *****************
  3089 ;; Defined at:
  3090 ;;		line 35 in file "timer.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 8
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_os_init
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text14
  3119   00217E                     __ptext14:
  3120                           	callstack 0
  3121   00217E                     _config_timer0:
  3122                           	callstack 21
  3123   00217E                     
  3124                           ;timer.c: 37:     INTCONbits.PEIE = 1;
  3125   00217E  8CF2               	bsf	242,6,c	;volatile
  3126                           
  3127                           ;timer.c: 38:     INTCONbits.TMR0IE = 1;
  3128   002180  8AF2               	bsf	242,5,c	;volatile
  3129                           
  3130                           ;timer.c: 39:     INTCONbits.TMR0IF = 0;
  3131   002182  94F2               	bcf	242,2,c	;volatile
  3132                           
  3133                           ;timer.c: 40:     T0CONbits.T0CS = 0;
  3134   002184  9AD5               	bcf	213,5,c	;volatile
  3135                           
  3136                           ;timer.c: 41:     T0CONbits.PSA = 0;
  3137   002186  96D5               	bcf	213,3,c	;volatile
  3138   002188                     
  3139                           ;timer.c: 42:     T0CONbits.T0PS = 0b101;
  3140   002188  50D5               	movf	213,w,c	;volatile
  3141   00218A  0BF8               	andlw	-8
  3142   00218C  0905               	iorlw	5
  3143   00218E  6ED5               	movwf	213,c	;volatile
  3144                           
  3145                           ;timer.c: 43:     TMR0 = 0;
  3146   002190  0E00               	movlw	0
  3147   002192  6ED7               	movwf	215,c	;volatile
  3148   002194  0E00               	movlw	0
  3149   002196  6ED6               	movwf	214,c	;volatile
  3150   002198  0012               	return		;funcret
  3151   00219A                     __end_of_config_timer0:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _SRAMInitHeap *****************
  3155 ;; Defined at:
  3156 ;;		line 259 in file "mem.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  count           2    1[COMRAM] unsigned int 
  3161 ;;  pHeap           1    0[COMRAM] PTR unsigned char 
  3162 ;;		 -> _uDynamicHeap(80), 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        3 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 8
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_os_init
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text15
  3187   001E60                     __ptext15:
  3188                           	callstack 0
  3189   001E60                     _SRAMInitHeap:
  3190                           	callstack 21
  3191   001E60                     
  3192                           ;mem.c: 261:     unsigned char * pHeap;;mem.c: 262:          unsigned int count;;mem.c: 
      +                          264:     pHeap = _uDynamicHeap;
  3193   001E60  0E61               	movlw	low __uDynamicHeap
  3194   001E62  6E37               	movwf	SRAMInitHeap@pHeap^0,c
  3195   001E64                     
  3196                           ;mem.c: 265:     count = 0x50 - 1;
  3197   001E64  0E00               	movlw	0
  3198   001E66  6E39               	movwf	(SRAMInitHeap@count+1)^0,c
  3199   001E68  0E4F               	movlw	79
  3200   001E6A  6E38               	movwf	SRAMInitHeap@count^0,c
  3201   001E6C                     l2029:
  3202                           
  3203                           ;mem.c: 268:     {;mem.c: 269:         if (count > 0x7F)
  3204   001E6C  5039               	movf	(SRAMInitHeap@count+1)^0,w,c
  3205   001E6E  E109               	bnz	u940
  3206   001E70  0E80               	movlw	128
  3207   001E72  5C38               	subwf	SRAMInitHeap@count^0,w,c
  3208   001E74  A0D8               	btfss	status,0,c
  3209   001E76  EF3F  F00F         	goto	u941
  3210   001E7A  EF41  F00F         	goto	u940
  3211   001E7E                     u941:
  3212   001E7E  EF50  F00F         	goto	l2037
  3213   001E82                     u940:
  3214   001E82                     
  3215                           ;mem.c: 270:         {;mem.c: 271:             *pHeap = 0x7F;
  3216   001E82  5037               	movf	SRAMInitHeap@pHeap^0,w,c
  3217   001E84  6ED9               	movwf	fsr2l,c
  3218   001E86  6ADA               	clrf	fsr2h,c
  3219   001E88  0E7F               	movlw	127
  3220   001E8A  6EDF               	movwf	indf2,c
  3221   001E8C                     
  3222                           ;mem.c: 272:             pHeap += 0x7F;
  3223   001E8C  0E7F               	movlw	127
  3224   001E8E  2637               	addwf	SRAMInitHeap@pHeap^0,f,c
  3225   001E90                     
  3226                           ;mem.c: 273:             count = count - 0x7F;
  3227   001E90  0E81               	movlw	129
  3228   001E92  2438               	addwf	SRAMInitHeap@count^0,w,c
  3229   001E94  6E38               	movwf	SRAMInitHeap@count^0,c
  3230   001E96  0EFF               	movlw	255
  3231   001E98  2039               	addwfc	(SRAMInitHeap@count+1)^0,w,c
  3232   001E9A  6E39               	movwf	(SRAMInitHeap@count+1)^0,c
  3233                           
  3234                           ;mem.c: 274:         }
  3235   001E9C  EF36  F00F         	goto	l2029
  3236   001EA0                     l2037:
  3237                           
  3238                           ;mem.c: 276:         {;mem.c: 277:             *pHeap = (unsigned char)count;
  3239   001EA0  5037               	movf	SRAMInitHeap@pHeap^0,w,c
  3240   001EA2  6ED9               	movwf	fsr2l,c
  3241   001EA4  6ADA               	clrf	fsr2h,c
  3242   001EA6  C038  FFDF         	movff	SRAMInitHeap@count,indf2
  3243   001EAA                     
  3244                           ;mem.c: 278:             *(pHeap + count) = 0;
  3245   001EAA  5037               	movf	SRAMInitHeap@pHeap^0,w,c
  3246   001EAC  2438               	addwf	SRAMInitHeap@count^0,w,c
  3247   001EAE  6ED9               	movwf	fsr2l,c
  3248   001EB0  6ADA               	clrf	fsr2h,c
  3249   001EB2  6ADF               	clrf	indf2,c
  3250   001EB4  0012               	return		;funcret
  3251   001EB6                     __end_of_SRAMInitHeap:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _tarefa_acelerador *****************
  3255 ;; Defined at:
  3256 ;;		line 16 in file "user_app.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  raw             2   13[BANK0 ] unsigned short 
  3261 ;;  data            1   15[BANK0 ] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0
  3272 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3273 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3274 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3275 ;;Total ram usage:        5 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 7
  3278 ;; This function calls:
  3279 ;;		_adc_read
  3280 ;;		_delay
  3281 ;;		_write_pipe
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text16
  3288   001F5A                     __ptext16:
  3289                           	callstack 0
  3290   001F5A                     _tarefa_acelerador:
  3291                           	callstack 18
  3292   001F5A                     l278:
  3293   001F5A                     
  3294                           ;user_app.c: 19:     {;user_app.c: 20:         uint16_t raw = adc_read(0);
  3295   001F5A  0E00               	movlw	0
  3296   001F5C  EC0C  F010         	call	_adc_read
  3297   001F60  C0B8  F0C5         	movff	?_adc_read,tarefa_acelerador@raw
  3298   001F64  C0B9  F0C6         	movff	?_adc_read+1,tarefa_acelerador@raw+1
  3299   001F68                     
  3300                           ;user_app.c: 21:         uint8_t data = (uint8_t)(raw >> 2);
  3301   001F68  C0C5  F0C3         	movff	tarefa_acelerador@raw,??_tarefa_acelerador
  3302   001F6C  C0C6  F0C4         	movff	tarefa_acelerador@raw+1,??_tarefa_acelerador+1
  3303   001F70  0100               	movlb	0	; () banked
  3304   001F72  90D8               	bcf	status,0,c
  3305   001F74  33C4               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3306   001F76  33C3               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3307   001F78  90D8               	bcf	status,0,c
  3308   001F7A  33C4               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3309   001F7C  33C3               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3310   001F7E  51C3               	movf	??_tarefa_acelerador& (0+255),w,b
  3311   001F80  6FC7               	movwf	tarefa_acelerador@data& (0+255),b
  3312   001F82                     
  3313                           ; BSR set to: 0
  3314                           ;user_app.c: 22:         write_pipe(&accel_pipe, data);
  3315   001F82  0E24               	movlw	low _accel_pipe
  3316   001F84  6FC0               	movwf	write_pipe@p& (0+255),b
  3317   001F86  C0C7  F0C1         	movff	tarefa_acelerador@data,write_pipe@data
  3318   001F8A  EC69  F00E         	call	_write_pipe	;wreg free
  3319   001F8E                     
  3320                           ;user_app.c: 23:         delay(10);
  3321   001F8E  0E00               	movlw	0
  3322   001F90  0101               	movlb	1	; () banked
  3323   001F92  6F25               	movwf	(delay@time+1)& (0+255),b
  3324   001F94  0E0A               	movlw	10
  3325   001F96  6F24               	movwf	delay@time& (0+255),b
  3326   001F98  EC70  F008         	call	_delay	;wreg free
  3327   001F9C  EFAD  F00F         	goto	l278
  3328   001FA0  0012               	return		;funcret
  3329   001FA2                     __end_of_tarefa_acelerador:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _write_pipe *****************
  3333 ;; Defined at:
  3334 ;;		line 13 in file "pipe.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  p               1    8[BANK0 ] PTR struct pipe
  3337 ;;		 -> accel_pipe(19), 
  3338 ;;  data            1    9[BANK0 ] unsigned char 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3350 ;;      Params:         0       2       0       0       0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3352 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3353 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        3 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 6
  3357 ;; This function calls:
  3358 ;;		___awmod
  3359 ;;		_sem_post
  3360 ;;		_sem_wait
  3361 ;; This function is called by:
  3362 ;;		_tarefa_acelerador
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text17
  3367   001CD2                     __ptext17:
  3368                           	callstack 0
  3369   001CD2                     _write_pipe:
  3370                           	callstack 18
  3371   001CD2                     
  3372                           ;pipe.c: 13: void write_pipe(pipe_t *p, uint8_t data);pipe.c: 14: {;pipe.c: 15:     (INT
      +                          CONbits.GIE = 0);
  3373   001CD2  9EF2               	bcf	242,7,c	;volatile
  3374   001CD4                     
  3375                           ;pipe.c: 16:     sem_wait(&p->pipe_sem_write);
  3376   001CD4  0100               	movlb	0	; () banked
  3377   001CD6  51C0               	movf	write_pipe@p& (0+255),w,b
  3378   001CD8  0F0B               	addlw	11
  3379   001CDA  6FC8               	movwf	sem_wait@sem& (0+255),b
  3380   001CDC  ECFD  F006         	call	_sem_wait	;wreg free
  3381   001CE0                     
  3382                           ;pipe.c: 17:     p->pipe_msg[p->pipe_pos_write] = data;
  3383   001CE0  0100               	movlb	0	; () banked
  3384   001CE2  51C0               	movf	write_pipe@p& (0+255),w,b
  3385   001CE4  6ED9               	movwf	fsr2l,c
  3386   001CE6  6ADA               	clrf	fsr2h,c
  3387   001CE8  0E02               	movlw	2
  3388   001CEA  26D9               	addwf	fsr2l,f,c
  3389   001CEC  50DF               	movf	indf2,w,c
  3390   001CEE  6FC2               	movwf	??_write_pipe& (0+255),b
  3391   001CF0  51C0               	movf	write_pipe@p& (0+255),w,b
  3392   001CF2  6ED9               	movwf	fsr2l,c
  3393   001CF4  6ADA               	clrf	fsr2h,c
  3394   001CF6  50DF               	movf	indf2,w,c
  3395   001CF8  25C2               	addwf	??_write_pipe& (0+255),w,b
  3396   001CFA  6ED9               	movwf	fsr2l,c
  3397   001CFC  6ADA               	clrf	fsr2h,c
  3398   001CFE  C0C1  FFDF         	movff	write_pipe@data,indf2
  3399   001D02                     
  3400                           ; BSR set to: 0
  3401                           ;pipe.c: 18:     p->pipe_pos_write = (p->pipe_pos_write + 1) % 3;
  3402   001D02  51C0               	movf	write_pipe@p& (0+255),w,b
  3403   001D04  6ED9               	movwf	fsr2l,c
  3404   001D06  6ADA               	clrf	fsr2h,c
  3405   001D08  0E02               	movlw	2
  3406   001D0A  26D9               	addwf	fsr2l,f,c
  3407   001D0C  51C0               	movf	write_pipe@p& (0+255),w,b
  3408   001D0E  6EE9               	movwf	fsr0l,c
  3409   001D10  6AEA               	clrf	fsr0h,c
  3410   001D12  0E02               	movlw	2
  3411   001D14  26E9               	addwf	fsr0l,f,c
  3412   001D16  50EF               	movf	indf0,w,c
  3413   001D18  6FC2               	movwf	??_write_pipe& (0+255),b
  3414   001D1A  0E01               	movlw	1
  3415   001D1C  25C2               	addwf	??_write_pipe& (0+255),w,b
  3416   001D1E  6FC8               	movwf	___awmod@dividend& (0+255),b
  3417   001D20  6BC9               	clrf	(___awmod@dividend+1)& (0+255),b
  3418   001D22  0E00               	movlw	0
  3419   001D24  23C9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3420   001D26  0E00               	movlw	0
  3421   001D28  6FCB               	movwf	(___awmod@divisor+1)& (0+255),b
  3422   001D2A  0E03               	movlw	3
  3423   001D2C  6FCA               	movwf	___awmod@divisor& (0+255),b
  3424   001D2E  ECB2  F00C         	call	___awmod	;wreg free
  3425   001D32  0100               	movlb	0	; () banked
  3426   001D34  51C8               	movf	?___awmod& (0+255),w,b
  3427   001D36  6EDF               	movwf	indf2,c
  3428   001D38                     
  3429                           ; BSR set to: 0
  3430                           ;pipe.c: 19:     sem_post(&p->pipe_sem_read);
  3431   001D38  51C0               	movf	write_pipe@p& (0+255),w,b
  3432   001D3A  0F03               	addlw	3
  3433   001D3C  6FC8               	movwf	sem_post@sem& (0+255),b
  3434   001D3E  ECE9  F00D         	call	_sem_post	;wreg free
  3435   001D42                     
  3436                           ;pipe.c: 20:     (INTCONbits.GIE = 1);
  3437   001D42  8EF2               	bsf	242,7,c	;volatile
  3438   001D44  0012               	return		;funcret
  3439   001D46                     __end_of_write_pipe:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function _sem_wait *****************
  3443 ;; Defined at:
  3444 ;;		line 18 in file "sync.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  sem             1   16[BANK0 ] PTR struct sem
  3447 ;;		 -> accel_pipe(19), 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3459 ;;      Params:         0       1       0       0       0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3461 ;;      Temps:          0       7       0       0       0       0       0       0       0
  3462 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3463 ;;Total ram usage:        8 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 5
  3466 ;; This function calls:
  3467 ;;		_scheduler
  3468 ;; This function is called by:
  3469 ;;		_write_pipe
  3470 ;;		_read_pipe
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text18
  3475   000DFA                     __ptext18:
  3476                           	callstack 0
  3477   000DFA                     _sem_wait:
  3478                           	callstack 18
  3479   000DFA                     
  3480                           ;sync.c: 18: void sem_wait(sem_t *sem);sync.c: 19: {;sync.c: 20:     (INTCONbits.GIE = 0
      +                          );
  3481   000DFA  9EF2               	bcf	242,7,c	;volatile
  3482   000DFC                     
  3483                           ;sync.c: 21:     sem->s_value--;
  3484   000DFC  0100               	movlb	0	; () banked
  3485   000DFE  51C8               	movf	sem_wait@sem& (0+255),w,b
  3486   000E00  6ED9               	movwf	fsr2l,c
  3487   000E02  6ADA               	clrf	fsr2h,c
  3488   000E04  06DE               	decf	postinc2,f,c
  3489   000E06  0E00               	movlw	0
  3490   000E08  5ADD               	subwfb	postdec2,f,c
  3491                           
  3492                           ;sync.c: 22:     if (sem->s_value < 0)
  3493   000E0A  51C8               	movf	sem_wait@sem& (0+255),w,b
  3494   000E0C  6ED9               	movwf	fsr2l,c
  3495   000E0E  6ADA               	clrf	fsr2h,c
  3496   000E10  0E01               	movlw	1
  3497   000E12  BEDB               	btfsc	plusw2,7,c
  3498   000E14  EF10  F007         	goto	i1u146_20
  3499   000E18  EF0E  F007         	goto	i1u146_21
  3500   000E1C                     i1u146_21:
  3501   000E1C  EF6E  F008         	goto	i1l2517
  3502   000E20                     i1u146_20:
  3503   000E20                     
  3504                           ; BSR set to: 0
  3505                           ;sync.c: 23:     {;sync.c: 25:         sem->s_queue[sem->s_size] = r_queue.task_running;
  3506   000E20  EE23  F084         	lfsr	2,_r_queue+535
  3507   000E24  51C8               	movf	sem_wait@sem& (0+255),w,b
  3508   000E26  6EE9               	movwf	fsr0l,c
  3509   000E28  6AEA               	clrf	fsr0h,c
  3510   000E2A  0E06               	movlw	6
  3511   000E2C  26E9               	addwf	fsr0l,f,c
  3512   000E2E  50EF               	movf	indf0,w,c
  3513   000E30  6FC9               	movwf	??_sem_wait& (0+255),b
  3514   000E32  51C8               	movf	sem_wait@sem& (0+255),w,b
  3515   000E34  25C9               	addwf	??_sem_wait& (0+255),w,b
  3516   000E36  6EE9               	movwf	fsr0l,c
  3517   000E38  6AEA               	clrf	fsr0h,c
  3518   000E3A  0E02               	movlw	2
  3519   000E3C  26E9               	addwf	fsr0l,f,c
  3520   000E3E  CFDF FFEF          	movff	indf2,indf0
  3521                           
  3522                           ;sync.c: 26:         sem->s_size = (sem->s_size + 1) % 4;
  3523   000E42  51C8               	movf	sem_wait@sem& (0+255),w,b
  3524   000E44  6ED9               	movwf	fsr2l,c
  3525   000E46  6ADA               	clrf	fsr2h,c
  3526   000E48  0E06               	movlw	6
  3527   000E4A  26D9               	addwf	fsr2l,f,c
  3528   000E4C  51C8               	movf	sem_wait@sem& (0+255),w,b
  3529   000E4E  6EE9               	movwf	fsr0l,c
  3530   000E50  6AEA               	clrf	fsr0h,c
  3531   000E52  0E06               	movlw	6
  3532   000E54  26E9               	addwf	fsr0l,f,c
  3533   000E56  50EF               	movf	indf0,w,c
  3534   000E58  6FC9               	movwf	??_sem_wait& (0+255),b
  3535   000E5A  29C9               	incf	??_sem_wait& (0+255),w,b
  3536   000E5C  0B03               	andlw	3
  3537   000E5E  6EDF               	movwf	indf2,c
  3538   000E60                     
  3539                           ; BSR set to: 0
  3540   000E60  C384  F0C9         	movff	_r_queue+535,??_sem_wait
  3541   000E64  51C9               	movf	??_sem_wait& (0+255),w,b
  3542   000E66  0D6B               	mullw	107
  3543   000E68  0E6D               	movlw	low _r_queue
  3544   000E6A  24F3               	addwf	243,w,c
  3545   000E6C  6FCA               	movwf	(??_sem_wait+1)& (0+255),b
  3546   000E6E  0E01               	movlw	high _r_queue
  3547   000E70  20F4               	addwfc	prodh,w,c
  3548   000E72  6FCB               	movwf	(??_sem_wait+2)& (0+255),b
  3549   000E74  C0CA  F386         	movff	??_sem_wait+1,_r_queue+537
  3550   000E78  C0CB  F387         	movff	??_sem_wait+2,_r_queue+538
  3551   000E7C                     
  3552                           ; BSR set to: 0
  3553   000E7C  EE23  F086         	lfsr	2,_r_queue+537
  3554   000E80  EE00 F002          	lfsr	0,2
  3555   000E84  50DE               	movf	postinc2,w,c
  3556   000E86  26E9               	addwf	fsr0l,f,c
  3557   000E88  50DD               	movf	postdec2,w,c
  3558   000E8A  22EA               	addwfc	fsr0h,f,c
  3559   000E8C  04EE               	decf	postinc0,w,c
  3560   000E8E  A4D8               	btfss	status,2,c
  3561   000E90  EF4C  F007         	goto	i1u147_21
  3562   000E94  EF4E  F007         	goto	i1u147_20
  3563   000E98                     i1u147_21:
  3564   000E98  EFBC  F007         	goto	i1l2499
  3565   000E9C                     i1u147_20:
  3566   000E9C                     
  3567                           ; BSR set to: 0
  3568   000E9C  EE23  F086         	lfsr	2,_r_queue+537
  3569   000EA0  EE00 F009          	lfsr	0,9
  3570   000EA4  50DE               	movf	postinc2,w,c
  3571   000EA6  26E9               	addwf	fsr0l,f,c
  3572   000EA8  50DD               	movf	postdec2,w,c
  3573   000EAA  22EA               	addwfc	fsr0h,f,c
  3574   000EAC  CFE0 FFEF          	movff	bsr,indf0	;volatile
  3575   000EB0  EE23  F086         	lfsr	2,_r_queue+537
  3576   000EB4  EE00 F008          	lfsr	0,8
  3577   000EB8  50DE               	movf	postinc2,w,c
  3578   000EBA  26E9               	addwf	fsr0l,f,c
  3579   000EBC  50DD               	movf	postdec2,w,c
  3580   000EBE  22EA               	addwfc	fsr0h,f,c
  3581   000EC0  CFD8 FFEF          	movff	status,indf0	;volatile
  3582   000EC4  EE23  F086         	lfsr	2,_r_queue+537
  3583   000EC8  EE00 F007          	lfsr	0,7
  3584   000ECC  50DE               	movf	postinc2,w,c
  3585   000ECE  26E9               	addwf	fsr0l,f,c
  3586   000ED0  50DD               	movf	postdec2,w,c
  3587   000ED2  22EA               	addwfc	fsr0h,f,c
  3588   000ED4  CFE8 FFEF          	movff	wreg,indf0	;volatile
  3589   000ED8  EE23  F086         	lfsr	2,_r_queue+537
  3590   000EDC  EE00 F06A          	lfsr	0,106
  3591   000EE0  50DE               	movf	postinc2,w,c
  3592   000EE2  26E9               	addwf	fsr0l,f,c
  3593   000EE4  50DD               	movf	postdec2,w,c
  3594   000EE6  22EA               	addwfc	fsr0h,f,c
  3595   000EE8  6AEF               	clrf	indf0,c
  3596   000EEA  EE23  F086         	lfsr	2,_r_queue+537
  3597   000EEE  EE00 F002          	lfsr	0,2
  3598   000EF2  50DE               	movf	postinc2,w,c
  3599   000EF4  26E9               	addwf	fsr0l,f,c
  3600   000EF6  50DD               	movf	postdec2,w,c
  3601   000EF8  22EA               	addwfc	fsr0h,f,c
  3602   000EFA  0E03               	movlw	3
  3603   000EFC  6EEF               	movwf	indf0,c
  3604   000EFE  EFB4  F007         	goto	i1l2497
  3605   000F02                     i1l2493:
  3606   000F02  EE23  F086         	lfsr	2,_r_queue+537
  3607   000F06  EE00 F06A          	lfsr	0,106
  3608   000F0A  50DE               	movf	postinc2,w,c
  3609   000F0C  26E9               	addwf	fsr0l,f,c
  3610   000F0E  50DD               	movf	postdec2,w,c
  3611   000F10  22EA               	addwfc	fsr0h,f,c
  3612   000F12  50EF               	movf	indf0,w,c
  3613   000F14  0100               	movlb	0	; () banked
  3614   000F16  6FC9               	movwf	??_sem_wait& (0+255),b
  3615   000F18  51C9               	movf	??_sem_wait& (0+255),w,b
  3616   000F1A  0D03               	mullw	3
  3617   000F1C  CFF3 F0CA          	movff	prodl,??_sem_wait+1
  3618   000F20  CFF4 F0CB          	movff	prodh,??_sem_wait+2
  3619   000F24  EE23  F086         	lfsr	2,_r_queue+537
  3620   000F28  CFDE F0CC          	movff	postinc2,??_sem_wait+3
  3621   000F2C  CFDD F0CD          	movff	postdec2,??_sem_wait+4
  3622   000F30  51CA               	movf	(??_sem_wait+1)& (0+255),w,b
  3623   000F32  25CC               	addwf	(??_sem_wait+3)& (0+255),w,b
  3624   000F34  6FCE               	movwf	(??_sem_wait+5)& (0+255),b
  3625   000F36  51CB               	movf	(??_sem_wait+2)& (0+255),w,b
  3626   000F38  21CD               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3627   000F3A  6FCF               	movwf	(??_sem_wait+6)& (0+255),b
  3628   000F3C  0E0A               	movlw	10
  3629   000F3E  25CE               	addwf	(??_sem_wait+5)& (0+255),w,b
  3630   000F40  6ED9               	movwf	fsr2l,c
  3631   000F42  0E00               	movlw	0
  3632   000F44  21CF               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3633   000F46  6EDA               	movwf	fsr2h,c
  3634   000F48  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3635   000F4C  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3636   000F50  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3637   000F54                     
  3638                           ; BSR set to: 0
  3639   000F54  EE23  F086         	lfsr	2,_r_queue+537
  3640   000F58  EE00 F06A          	lfsr	0,106
  3641   000F5C  50DE               	movf	postinc2,w,c
  3642   000F5E  26E9               	addwf	fsr0l,f,c
  3643   000F60  50DD               	movf	postdec2,w,c
  3644   000F62  22EA               	addwfc	fsr0h,f,c
  3645   000F64  2AEF               	incf	indf0,f,c
  3646   000F66  0006               	pop		;# 
  3647   000F68                     i1l2497:
  3648   000F68  50FC               	movf	252,w,c	;volatile
  3649   000F6A  A4D8               	btfss	status,2,c
  3650   000F6C  EFBA  F007         	goto	i1u148_21
  3651   000F70  EFBC  F007         	goto	i1u148_20
  3652   000F74                     i1u148_21:
  3653   000F74  EF81  F007         	goto	i1l2493
  3654   000F78                     i1u148_20:
  3655   000F78                     i1l2499:
  3656                           
  3657                           ;sync.c: 28:         scheduler();
  3658   000F78  ECEE  F010         	call	_scheduler	;wreg free
  3659   000F7C  C384  F0C9         	movff	_r_queue+535,??_sem_wait
  3660   000F80  0100               	movlb	0	; () banked
  3661   000F82  51C9               	movf	??_sem_wait& (0+255),w,b
  3662   000F84  0D6B               	mullw	107
  3663   000F86  0E6D               	movlw	low _r_queue
  3664   000F88  24F3               	addwf	243,w,c
  3665   000F8A  6FCA               	movwf	(??_sem_wait+1)& (0+255),b
  3666   000F8C  0E01               	movlw	high _r_queue
  3667   000F8E  20F4               	addwfc	prodh,w,c
  3668   000F90  6FCB               	movwf	(??_sem_wait+2)& (0+255),b
  3669   000F92  C0CA  F386         	movff	??_sem_wait+1,_r_queue+537
  3670   000F96  C0CB  F387         	movff	??_sem_wait+2,_r_queue+538
  3671   000F9A                     
  3672                           ; BSR set to: 0
  3673   000F9A  EE23  F086         	lfsr	2,_r_queue+537
  3674   000F9E  EE00 F002          	lfsr	0,2
  3675   000FA2  50DE               	movf	postinc2,w,c
  3676   000FA4  26E9               	addwf	fsr0l,f,c
  3677   000FA6  50DD               	movf	postdec2,w,c
  3678   000FA8  22EA               	addwfc	fsr0h,f,c
  3679   000FAA  50EF               	movf	indf0,w,c
  3680   000FAC  A4D8               	btfss	status,2,c
  3681   000FAE  EFDB  F007         	goto	i1u149_21
  3682   000FB2  EFDD  F007         	goto	i1u149_20
  3683   000FB6                     i1u149_21:
  3684   000FB6  EF6E  F008         	goto	i1l2517
  3685   000FBA                     i1u149_20:
  3686   000FBA                     
  3687                           ; BSR set to: 0
  3688   000FBA  6AFC               	clrf	252,c	;volatile
  3689   000FBC                     
  3690                           ; BSR set to: 0
  3691   000FBC  EE23  F086         	lfsr	2,_r_queue+537
  3692   000FC0  EE00 F06A          	lfsr	0,106
  3693   000FC4  50DE               	movf	postinc2,w,c
  3694   000FC6  26E9               	addwf	fsr0l,f,c
  3695   000FC8  50DD               	movf	postdec2,w,c
  3696   000FCA  22EA               	addwfc	fsr0h,f,c
  3697   000FCC  50EF               	movf	indf0,w,c
  3698   000FCE  B4D8               	btfsc	status,2,c
  3699   000FD0  EFEC  F007         	goto	i1u150_21
  3700   000FD4  EFEE  F007         	goto	i1u150_20
  3701   000FD8                     i1u150_21:
  3702   000FD8  EF52  F008         	goto	i1l74
  3703   000FDC                     i1u150_20:
  3704   000FDC                     
  3705                           ; BSR set to: 0
  3706   000FDC  EE23  F086         	lfsr	2,_r_queue+537
  3707   000FE0  EE00 F009          	lfsr	0,9
  3708   000FE4  50DE               	movf	postinc2,w,c
  3709   000FE6  26E9               	addwf	fsr0l,f,c
  3710   000FE8  50DD               	movf	postdec2,w,c
  3711   000FEA  22EA               	addwfc	fsr0h,f,c
  3712   000FEC  50EF               	movf	indf0,w,c
  3713   000FEE  6EE0               	movwf	224,c	;volatile
  3714   000FF0  EE23  F086         	lfsr	2,_r_queue+537
  3715   000FF4  EE00 F008          	lfsr	0,8
  3716   000FF8  50DE               	movf	postinc2,w,c
  3717   000FFA  26E9               	addwf	fsr0l,f,c
  3718   000FFC  50DD               	movf	postdec2,w,c
  3719   000FFE  22EA               	addwfc	fsr0h,f,c
  3720   001000  50EF               	movf	indf0,w,c
  3721   001002  6ED8               	movwf	216,c	;volatile
  3722   001004  EE23  F086         	lfsr	2,_r_queue+537
  3723   001008  EE00 F007          	lfsr	0,7
  3724   00100C  50DE               	movf	postinc2,w,c
  3725   00100E  26E9               	addwf	fsr0l,f,c
  3726   001010  50DD               	movf	postdec2,w,c
  3727   001012  22EA               	addwfc	fsr0h,f,c
  3728   001014  50EF               	movf	indf0,w,c
  3729   001016  6FC9               	movwf	??_sem_wait& (0+255),b
  3730   001018  51C9               	movf	??_sem_wait& (0+255),w,b
  3731   00101A                     i1l75:
  3732                           
  3733                           ; BSR set to: 0
  3734   00101A  0005               	push		;# 
  3735   00101C  EE23  F086         	lfsr	2,_r_queue+537
  3736   001020  EE00 F06A          	lfsr	0,106
  3737   001024  50DE               	movf	postinc2,w,c
  3738   001026  26E9               	addwf	fsr0l,f,c
  3739   001028  50DD               	movf	postdec2,w,c
  3740   00102A  22EA               	addwfc	fsr0h,f,c
  3741   00102C  06EF               	decf	indf0,f,c
  3742   00102E  EE23  F086         	lfsr	2,_r_queue+537
  3743   001032  EE00 F06A          	lfsr	0,106
  3744   001036  50DE               	movf	postinc2,w,c
  3745   001038  26E9               	addwf	fsr0l,f,c
  3746   00103A  50DD               	movf	postdec2,w,c
  3747   00103C  22EA               	addwfc	fsr0h,f,c
  3748   00103E  50EF               	movf	indf0,w,c
  3749   001040  0100               	movlb	0	; () banked
  3750   001042  6FC9               	movwf	??_sem_wait& (0+255),b
  3751   001044  51C9               	movf	??_sem_wait& (0+255),w,b
  3752   001046  0D03               	mullw	3
  3753   001048  CFF3 F0CA          	movff	prodl,??_sem_wait+1
  3754   00104C  CFF4 F0CB          	movff	prodh,??_sem_wait+2
  3755   001050  EE23  F086         	lfsr	2,_r_queue+537
  3756   001054  CFDE F0CC          	movff	postinc2,??_sem_wait+3
  3757   001058  CFDD F0CD          	movff	postdec2,??_sem_wait+4
  3758   00105C  51CA               	movf	(??_sem_wait+1)& (0+255),w,b
  3759   00105E  25CC               	addwf	(??_sem_wait+3)& (0+255),w,b
  3760   001060  6FCE               	movwf	(??_sem_wait+5)& (0+255),b
  3761   001062  51CB               	movf	(??_sem_wait+2)& (0+255),w,b
  3762   001064  21CD               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3763   001066  6FCF               	movwf	(??_sem_wait+6)& (0+255),b
  3764   001068  0E0A               	movlw	10
  3765   00106A  25CE               	addwf	(??_sem_wait+5)& (0+255),w,b
  3766   00106C  6ED9               	movwf	fsr2l,c
  3767   00106E  0E00               	movlw	0
  3768   001070  21CF               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3769   001072  6EDA               	movwf	fsr2h,c
  3770   001074  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3771   001078  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3772   00107C  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3773   001080                     
  3774                           ; BSR set to: 0
  3775   001080  EE23  F086         	lfsr	2,_r_queue+537
  3776   001084  EE00 F06A          	lfsr	0,106
  3777   001088  50DE               	movf	postinc2,w,c
  3778   00108A  26E9               	addwf	fsr0l,f,c
  3779   00108C  50DD               	movf	postdec2,w,c
  3780   00108E  22EA               	addwfc	fsr0h,f,c
  3781   001090  50EF               	movf	indf0,w,c
  3782   001092  A4D8               	btfss	status,2,c
  3783   001094  EF4E  F008         	goto	i1u151_21
  3784   001098  EF50  F008         	goto	i1u151_20
  3785   00109C                     i1u151_21:
  3786   00109C  EF0D  F008         	goto	i1l75
  3787   0010A0                     i1u151_20:
  3788   0010A0  EF64  F008         	goto	i1l77
  3789   0010A4                     i1l74:
  3790                           
  3791                           ; BSR set to: 0
  3792   0010A4  0005               	push		;# 
  3793   0010A6  EE23  F086         	lfsr	2,_r_queue+537
  3794   0010AA  EE00 F003          	lfsr	0,3
  3795   0010AE  50DE               	movf	postinc2,w,c
  3796   0010B0  26E9               	addwf	fsr0l,f,c
  3797   0010B2  50DD               	movf	postdec2,w,c
  3798   0010B4  22EA               	addwfc	fsr0h,f,c
  3799   0010B6  CFEE F0C9          	movff	postinc0,??_sem_wait
  3800   0010BA  CFED F0CA          	movff	postdec0,??_sem_wait+1
  3801   0010BE  C0C9  FFFD         	movff	??_sem_wait,tosl	;volatile
  3802   0010C2  C0CA  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  3803   0010C6  6AFF               	clrf	255,c	;volatile
  3804   0010C8                     i1l77:
  3805   0010C8  EE23  F086         	lfsr	2,_r_queue+537
  3806   0010CC  EE00 F002          	lfsr	0,2
  3807   0010D0  50DE               	movf	postinc2,w,c
  3808   0010D2  26E9               	addwf	fsr0l,f,c
  3809   0010D4  50DD               	movf	postdec2,w,c
  3810   0010D6  22EA               	addwfc	fsr0h,f,c
  3811   0010D8  0E01               	movlw	1
  3812   0010DA  6EEF               	movwf	indf0,c
  3813   0010DC                     i1l2517:
  3814                           
  3815                           ;sync.c: 31:     (INTCONbits.GIE = 1);
  3816   0010DC  8EF2               	bsf	242,7,c	;volatile
  3817   0010DE  0012               	return		;funcret
  3818   0010E0                     __end_of_sem_wait:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _sem_post *****************
  3822 ;; Defined at:
  3823 ;;		line 34 in file "sync.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  sem             1   16[BANK0 ] PTR struct sem
  3826 ;;		 -> accel_pipe(19), 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3838 ;;      Params:         0       1       0       0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3840 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3841 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3842 ;;Total ram usage:        3 bytes
  3843 ;; Hardware stack levels used: 1
  3844 ;; Hardware stack levels required when called: 3
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_write_pipe
  3849 ;;		_read_pipe
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text19
  3854   001BD2                     __ptext19:
  3855                           	callstack 0
  3856   001BD2                     _sem_post:
  3857                           	callstack 20
  3858   001BD2                     
  3859                           ;sync.c: 34: void sem_post(sem_t *sem);sync.c: 35: {;sync.c: 36:     (INTCONbits.GIE = 0
      +                          );
  3860   001BD2  9EF2               	bcf	242,7,c	;volatile
  3861   001BD4                     
  3862                           ;sync.c: 37:     sem->s_value++;
  3863   001BD4  0100               	movlb	0	; () banked
  3864   001BD6  51C8               	movf	sem_post@sem& (0+255),w,b
  3865   001BD8  6ED9               	movwf	fsr2l,c
  3866   001BDA  6ADA               	clrf	fsr2h,c
  3867   001BDC  2ADE               	incf	postinc2,f,c
  3868   001BDE  0E00               	movlw	0
  3869   001BE0  22DD               	addwfc	postdec2,f,c
  3870                           
  3871                           ;sync.c: 38:     if (sem->s_value <= 0)
  3872   001BE2  51C8               	movf	sem_post@sem& (0+255),w,b
  3873   001BE4  6ED9               	movwf	fsr2l,c
  3874   001BE6  6ADA               	clrf	fsr2h,c
  3875   001BE8  0E01               	movlw	1
  3876   001BEA  BEDB               	btfsc	plusw2,7,c
  3877   001BEC  EF03  F00E         	goto	i1u152_20
  3878   001BF0  0E01               	movlw	1
  3879   001BF2  50DB               	movf	plusw2,w,c
  3880   001BF4  E106               	bnz	i1u152_21
  3881   001BF6  04DE               	decf	postinc2,w,c
  3882   001BF8  B0D8               	btfsc	status,0,c
  3883   001BFA  EF01  F00E         	goto	i1u152_21
  3884   001BFE  EF03  F00E         	goto	i1u152_20
  3885   001C02                     i1u152_21:
  3886   001C02  EF2A  F00E         	goto	i1l2527
  3887   001C06                     i1u152_20:
  3888   001C06                     
  3889                           ; BSR set to: 0
  3890                           ;sync.c: 39:     {;sync.c: 41:         r_queue.ready_queue[sem->s_queue[sem->s_pos_out]]
      +                          .task_state = READY;
  3891   001C06  51C8               	movf	sem_post@sem& (0+255),w,b
  3892   001C08  6ED9               	movwf	fsr2l,c
  3893   001C0A  6ADA               	clrf	fsr2h,c
  3894   001C0C  0E07               	movlw	7
  3895   001C0E  26D9               	addwf	fsr2l,f,c
  3896   001C10  50DF               	movf	indf2,w,c
  3897   001C12  6FC9               	movwf	??_sem_post& (0+255),b
  3898   001C14  51C8               	movf	sem_post@sem& (0+255),w,b
  3899   001C16  25C9               	addwf	??_sem_post& (0+255),w,b
  3900   001C18  6ED9               	movwf	fsr2l,c
  3901   001C1A  6ADA               	clrf	fsr2h,c
  3902   001C1C  0E02               	movlw	2
  3903   001C1E  26D9               	addwf	fsr2l,f,c
  3904   001C20  50DF               	movf	indf2,w,c
  3905   001C22  6FCA               	movwf	(??_sem_post+1)& (0+255),b
  3906   001C24  51CA               	movf	(??_sem_post+1)& (0+255),w,b
  3907   001C26  0D6B               	mullw	107
  3908   001C28  0E6F               	movlw	low (_r_queue+2)
  3909   001C2A  24F3               	addwf	243,w,c
  3910   001C2C  6ED9               	movwf	fsr2l,c
  3911   001C2E  0E01               	movlw	high (_r_queue+2)
  3912   001C30  20F4               	addwfc	prodh,w,c
  3913   001C32  6EDA               	movwf	fsr2h,c
  3914   001C34  6ADF               	clrf	indf2,c
  3915   001C36                     
  3916                           ; BSR set to: 0
  3917                           ;sync.c: 42:         sem->s_pos_out = (sem->s_pos_out + 1) % 4;
  3918   001C36  51C8               	movf	sem_post@sem& (0+255),w,b
  3919   001C38  6ED9               	movwf	fsr2l,c
  3920   001C3A  6ADA               	clrf	fsr2h,c
  3921   001C3C  0E07               	movlw	7
  3922   001C3E  26D9               	addwf	fsr2l,f,c
  3923   001C40  51C8               	movf	sem_post@sem& (0+255),w,b
  3924   001C42  6EE9               	movwf	fsr0l,c
  3925   001C44  6AEA               	clrf	fsr0h,c
  3926   001C46  0E07               	movlw	7
  3927   001C48  26E9               	addwf	fsr0l,f,c
  3928   001C4A  50EF               	movf	indf0,w,c
  3929   001C4C  6FC9               	movwf	??_sem_post& (0+255),b
  3930   001C4E  29C9               	incf	??_sem_post& (0+255),w,b
  3931   001C50  0B03               	andlw	3
  3932   001C52  6EDF               	movwf	indf2,c
  3933   001C54                     i1l2527:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;sync.c: 44:     (INTCONbits.GIE = 1);
  3937   001C54  8EF2               	bsf	242,7,c	;volatile
  3938   001C56                     
  3939                           ; BSR set to: 0
  3940   001C56  0012               	return		;funcret
  3941   001C58                     __end_of_sem_post:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function ___awmod *****************
  3945 ;; Defined at:
  3946 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awmod.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  dividend        2   16[BANK0 ] int 
  3949 ;;  divisor         2   18[BANK0 ] int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  sign            1   21[BANK0 ] unsigned char 
  3952 ;;  counter         1   20[BANK0 ] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2   16[BANK0 ] int 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3962 ;;      Params:         0       4       0       0       0       0       0       0       0
  3963 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3965 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3966 ;;Total ram usage:        6 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 3
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_write_pipe
  3973 ;;		_read_pipe
  3974 ;;		_tarefa_controle_central
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text20
  3979   001964                     __ptext20:
  3980                           	callstack 0
  3981   001964                     ___awmod:
  3982                           	callstack 20
  3983   001964  0100               	movlb	0	; () banked
  3984   001966  6BCD               	clrf	___awmod@sign& (0+255),b
  3985   001968                     
  3986                           ; BSR set to: 0
  3987   001968  BFC9               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3988   00196A  EFBB  F00C         	goto	i1u158_20
  3989   00196E  EFB9  F00C         	goto	i1u158_21
  3990   001972                     i1u158_21:
  3991   001972  EFC1  F00C         	goto	i1l2569
  3992   001976                     i1u158_20:
  3993   001976                     
  3994                           ; BSR set to: 0
  3995   001976  6DC8               	negf	___awmod@dividend& (0+255),b
  3996   001978  1FC9               	comf	(___awmod@dividend+1)& (0+255),f,b
  3997   00197A  B0D8               	btfsc	status,0,c
  3998   00197C  2BC9               	incf	(___awmod@dividend+1)& (0+255),f,b
  3999   00197E                     
  4000                           ; BSR set to: 0
  4001   00197E  0E01               	movlw	1
  4002   001980  6FCD               	movwf	___awmod@sign& (0+255),b
  4003   001982                     i1l2569:
  4004                           
  4005                           ; BSR set to: 0
  4006   001982  BFCB               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4007   001984  EFC8  F00C         	goto	i1u159_20
  4008   001988  EFC6  F00C         	goto	i1u159_21
  4009   00198C                     i1u159_21:
  4010   00198C  EFCC  F00C         	goto	i1l2573
  4011   001990                     i1u159_20:
  4012   001990                     
  4013                           ; BSR set to: 0
  4014   001990  6DCA               	negf	___awmod@divisor& (0+255),b
  4015   001992  1FCB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4016   001994  B0D8               	btfsc	status,0,c
  4017   001996  2BCB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4018   001998                     i1l2573:
  4019                           
  4020                           ; BSR set to: 0
  4021   001998  51CA               	movf	___awmod@divisor& (0+255),w,b
  4022   00199A  11CB               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4023   00199C  B4D8               	btfsc	status,2,c
  4024   00199E  EFD3  F00C         	goto	i1u160_21
  4025   0019A2  EFD5  F00C         	goto	i1u160_20
  4026   0019A6                     i1u160_21:
  4027   0019A6  EFF9  F00C         	goto	i1l2589
  4028   0019AA                     i1u160_20:
  4029   0019AA                     
  4030                           ; BSR set to: 0
  4031   0019AA  0E01               	movlw	1
  4032   0019AC  6FCC               	movwf	___awmod@counter& (0+255),b
  4033   0019AE  EFDD  F00C         	goto	i1l2579
  4034   0019B2                     i1l2577:
  4035                           
  4036                           ; BSR set to: 0
  4037   0019B2  90D8               	bcf	status,0,c
  4038   0019B4  37CA               	rlcf	___awmod@divisor& (0+255),f,b
  4039   0019B6  37CB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4040   0019B8  2BCC               	incf	___awmod@counter& (0+255),f,b
  4041   0019BA                     i1l2579:
  4042                           
  4043                           ; BSR set to: 0
  4044   0019BA  AFCB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4045   0019BC  EFE2  F00C         	goto	i1u161_21
  4046   0019C0  EFE4  F00C         	goto	i1u161_20
  4047   0019C4                     i1u161_21:
  4048   0019C4  EFD9  F00C         	goto	i1l2577
  4049   0019C8                     i1u161_20:
  4050   0019C8                     i1l2581:
  4051                           
  4052                           ; BSR set to: 0
  4053   0019C8  51CA               	movf	___awmod@divisor& (0+255),w,b
  4054   0019CA  5DC8               	subwf	___awmod@dividend& (0+255),w,b
  4055   0019CC  51CB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4056   0019CE  59C9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4057   0019D0  A0D8               	btfss	status,0,c
  4058   0019D2  EFED  F00C         	goto	i1u162_21
  4059   0019D6  EFEF  F00C         	goto	i1u162_20
  4060   0019DA                     i1u162_21:
  4061   0019DA  EFF3  F00C         	goto	i1l2585
  4062   0019DE                     i1u162_20:
  4063   0019DE                     
  4064                           ; BSR set to: 0
  4065   0019DE  51CA               	movf	___awmod@divisor& (0+255),w,b
  4066   0019E0  5FC8               	subwf	___awmod@dividend& (0+255),f,b
  4067   0019E2  51CB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4068   0019E4  5BC9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4069   0019E6                     i1l2585:
  4070                           
  4071                           ; BSR set to: 0
  4072   0019E6  90D8               	bcf	status,0,c
  4073   0019E8  33CB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4074   0019EA  33CA               	rrcf	___awmod@divisor& (0+255),f,b
  4075   0019EC                     
  4076                           ; BSR set to: 0
  4077   0019EC  2FCC               	decfsz	___awmod@counter& (0+255),f,b
  4078   0019EE  EFE4  F00C         	goto	i1l2581
  4079   0019F2                     i1l2589:
  4080                           
  4081                           ; BSR set to: 0
  4082   0019F2  51CD               	movf	___awmod@sign& (0+255),w,b
  4083   0019F4  B4D8               	btfsc	status,2,c
  4084   0019F6  EFFF  F00C         	goto	i1u163_21
  4085   0019FA  EF01  F00D         	goto	i1u163_20
  4086   0019FE                     i1u163_21:
  4087   0019FE  EF05  F00D         	goto	i1l2593
  4088   001A02                     i1u163_20:
  4089   001A02                     
  4090                           ; BSR set to: 0
  4091   001A02  6DC8               	negf	___awmod@dividend& (0+255),b
  4092   001A04  1FC9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4093   001A06  B0D8               	btfsc	status,0,c
  4094   001A08  2BC9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4095   001A0A                     i1l2593:
  4096                           
  4097                           ; BSR set to: 0
  4098   001A0A  C0C8  F0C8         	movff	___awmod@dividend,?___awmod
  4099   001A0E  C0C9  F0C9         	movff	___awmod@dividend+1,?___awmod+1
  4100   001A12                     
  4101                           ; BSR set to: 0
  4102   001A12  0012               	return		;funcret
  4103   001A14                     __end_of___awmod:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _delay *****************
  4107 ;; Defined at:
  4108 ;;		line 31 in file "kernel.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  time            2   36[BANK1 ] unsigned short 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4122 ;;      Params:         0       0       2       0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4124 ;;      Temps:          0       0       7       0       0       0       0       0       0
  4125 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4126 ;;Total ram usage:        9 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 5
  4129 ;; This function calls:
  4130 ;;		_scheduler
  4131 ;; This function is called by:
  4132 ;;		_tarefa_acelerador
  4133 ;;		_tarefa_controle_central
  4134 ;;		_tarefa_injecao_eletronica
  4135 ;;		_tarefa_estabilidade
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text21
  4140   0010E0                     __ptext21:
  4141                           	callstack 0
  4142   0010E0                     _delay:
  4143                           	callstack 19
  4144   0010E0                     
  4145                           ;kernel.c: 31: void delay(uint16_t time);kernel.c: 32: {;kernel.c: 33:     (INTCONbits.G
      +                          IE = 0);
  4146   0010E0  9EF2               	bcf	242,7,c	;volatile
  4147   0010E2  C384  F126         	movff	_r_queue+535,??_delay
  4148   0010E6  0101               	movlb	1	; () banked
  4149   0010E8  5126               	movf	??_delay& (0+255),w,b
  4150   0010EA  0D6B               	mullw	107
  4151   0010EC  0E6D               	movlw	low _r_queue
  4152   0010EE  24F3               	addwf	243,w,c
  4153   0010F0  6F27               	movwf	(??_delay+1)& (0+255),b
  4154   0010F2  0E01               	movlw	high _r_queue
  4155   0010F4  20F4               	addwfc	prodh,w,c
  4156   0010F6  6F28               	movwf	(??_delay+2)& (0+255),b
  4157   0010F8  C127  F386         	movff	??_delay+1,_r_queue+537
  4158   0010FC  C128  F387         	movff	??_delay+2,_r_queue+538
  4159   001100                     
  4160                           ; BSR set to: 1
  4161   001100  EE23  F086         	lfsr	2,_r_queue+537
  4162   001104  EE00 F002          	lfsr	0,2
  4163   001108  50DE               	movf	postinc2,w,c
  4164   00110A  26E9               	addwf	fsr0l,f,c
  4165   00110C  50DD               	movf	postdec2,w,c
  4166   00110E  22EA               	addwfc	fsr0h,f,c
  4167   001110  04EE               	decf	postinc0,w,c
  4168   001112  A4D8               	btfss	status,2,c
  4169   001114  EF8E  F008         	goto	i1u209_21
  4170   001118  EF90  F008         	goto	i1u209_20
  4171   00111C                     i1u209_21:
  4172   00111C  EFFE  F008         	goto	i1l3109
  4173   001120                     i1u209_20:
  4174   001120                     
  4175                           ; BSR set to: 1
  4176   001120  EE23  F086         	lfsr	2,_r_queue+537
  4177   001124  EE00 F009          	lfsr	0,9
  4178   001128  50DE               	movf	postinc2,w,c
  4179   00112A  26E9               	addwf	fsr0l,f,c
  4180   00112C  50DD               	movf	postdec2,w,c
  4181   00112E  22EA               	addwfc	fsr0h,f,c
  4182   001130  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4183   001134  EE23  F086         	lfsr	2,_r_queue+537
  4184   001138  EE00 F008          	lfsr	0,8
  4185   00113C  50DE               	movf	postinc2,w,c
  4186   00113E  26E9               	addwf	fsr0l,f,c
  4187   001140  50DD               	movf	postdec2,w,c
  4188   001142  22EA               	addwfc	fsr0h,f,c
  4189   001144  CFD8 FFEF          	movff	status,indf0	;volatile
  4190   001148  EE23  F086         	lfsr	2,_r_queue+537
  4191   00114C  EE00 F007          	lfsr	0,7
  4192   001150  50DE               	movf	postinc2,w,c
  4193   001152  26E9               	addwf	fsr0l,f,c
  4194   001154  50DD               	movf	postdec2,w,c
  4195   001156  22EA               	addwfc	fsr0h,f,c
  4196   001158  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4197   00115C  EE23  F086         	lfsr	2,_r_queue+537
  4198   001160  EE00 F06A          	lfsr	0,106
  4199   001164  50DE               	movf	postinc2,w,c
  4200   001166  26E9               	addwf	fsr0l,f,c
  4201   001168  50DD               	movf	postdec2,w,c
  4202   00116A  22EA               	addwfc	fsr0h,f,c
  4203   00116C  6AEF               	clrf	indf0,c
  4204   00116E  EE23  F086         	lfsr	2,_r_queue+537
  4205   001172  EE00 F002          	lfsr	0,2
  4206   001176  50DE               	movf	postinc2,w,c
  4207   001178  26E9               	addwf	fsr0l,f,c
  4208   00117A  50DD               	movf	postdec2,w,c
  4209   00117C  22EA               	addwfc	fsr0h,f,c
  4210   00117E  0E02               	movlw	2
  4211   001180  6EEF               	movwf	indf0,c
  4212   001182  EFF6  F008         	goto	i1l3107
  4213   001186                     i1l3103:
  4214   001186  EE23  F086         	lfsr	2,_r_queue+537
  4215   00118A  EE00 F06A          	lfsr	0,106
  4216   00118E  50DE               	movf	postinc2,w,c
  4217   001190  26E9               	addwf	fsr0l,f,c
  4218   001192  50DD               	movf	postdec2,w,c
  4219   001194  22EA               	addwfc	fsr0h,f,c
  4220   001196  50EF               	movf	indf0,w,c
  4221   001198  0101               	movlb	1	; () banked
  4222   00119A  6F26               	movwf	??_delay& (0+255),b
  4223   00119C  5126               	movf	??_delay& (0+255),w,b
  4224   00119E  0D03               	mullw	3
  4225   0011A0  CFF3 F127          	movff	prodl,??_delay+1
  4226   0011A4  CFF4 F128          	movff	prodh,??_delay+2
  4227   0011A8  EE23  F086         	lfsr	2,_r_queue+537
  4228   0011AC  CFDE F129          	movff	postinc2,??_delay+3
  4229   0011B0  CFDD F12A          	movff	postdec2,??_delay+4
  4230   0011B4  5127               	movf	(??_delay+1)& (0+255),w,b
  4231   0011B6  2529               	addwf	(??_delay+3)& (0+255),w,b
  4232   0011B8  6F2B               	movwf	(??_delay+5)& (0+255),b
  4233   0011BA  5128               	movf	(??_delay+2)& (0+255),w,b
  4234   0011BC  212A               	addwfc	(??_delay+4)& (0+255),w,b
  4235   0011BE  6F2C               	movwf	(??_delay+6)& (0+255),b
  4236   0011C0  0E0A               	movlw	10
  4237   0011C2  252B               	addwf	(??_delay+5)& (0+255),w,b
  4238   0011C4  6ED9               	movwf	fsr2l,c
  4239   0011C6  0E00               	movlw	0
  4240   0011C8  212C               	addwfc	(??_delay+6)& (0+255),w,b
  4241   0011CA  6EDA               	movwf	fsr2h,c
  4242   0011CC  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4243   0011D0  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4244   0011D4  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4245   0011D8                     
  4246                           ; BSR set to: 1
  4247   0011D8  EE23  F086         	lfsr	2,_r_queue+537
  4248   0011DC  EE00 F06A          	lfsr	0,106
  4249   0011E0  50DE               	movf	postinc2,w,c
  4250   0011E2  26E9               	addwf	fsr0l,f,c
  4251   0011E4  50DD               	movf	postdec2,w,c
  4252   0011E6  22EA               	addwfc	fsr0h,f,c
  4253   0011E8  2AEF               	incf	indf0,f,c
  4254   0011EA  0006               	pop		;# 
  4255   0011EC                     i1l3107:
  4256   0011EC  50FC               	movf	252,w,c	;volatile
  4257   0011EE  A4D8               	btfss	status,2,c
  4258   0011F0  EFFC  F008         	goto	i1u210_21
  4259   0011F4  EFFE  F008         	goto	i1u210_20
  4260   0011F8                     i1u210_21:
  4261   0011F8  EFC3  F008         	goto	i1l3103
  4262   0011FC                     i1u210_20:
  4263   0011FC                     i1l3109:
  4264                           
  4265                           ;kernel.c: 35:     r_queue.ready_queue[r_queue.task_running].time_sleeping = time;
  4266   0011FC  C384  F126         	movff	_r_queue+535,??_delay
  4267   001200  0101               	movlb	1	; () banked
  4268   001202  5126               	movf	??_delay& (0+255),w,b
  4269   001204  0D6B               	mullw	107
  4270   001206  0E72               	movlw	low (_r_queue+5)
  4271   001208  24F3               	addwf	243,w,c
  4272   00120A  6ED9               	movwf	fsr2l,c
  4273   00120C  0E01               	movlw	high (_r_queue+5)
  4274   00120E  20F4               	addwfc	prodh,w,c
  4275   001210  6EDA               	movwf	fsr2h,c
  4276   001212  C124  FFDE         	movff	delay@time,postinc2
  4277   001216  C125  FFDD         	movff	delay@time+1,postdec2
  4278   00121A                     
  4279                           ; BSR set to: 1
  4280                           ;kernel.c: 36:     scheduler();
  4281   00121A  ECEE  F010         	call	_scheduler	;wreg free
  4282   00121E  C384  F126         	movff	_r_queue+535,??_delay
  4283   001222  0101               	movlb	1	; () banked
  4284   001224  5126               	movf	??_delay& (0+255),w,b
  4285   001226  0D6B               	mullw	107
  4286   001228  0E6D               	movlw	low _r_queue
  4287   00122A  24F3               	addwf	243,w,c
  4288   00122C  6F27               	movwf	(??_delay+1)& (0+255),b
  4289   00122E  0E01               	movlw	high _r_queue
  4290   001230  20F4               	addwfc	prodh,w,c
  4291   001232  6F28               	movwf	(??_delay+2)& (0+255),b
  4292   001234  C127  F386         	movff	??_delay+1,_r_queue+537
  4293   001238  C128  F387         	movff	??_delay+2,_r_queue+538
  4294   00123C                     
  4295                           ; BSR set to: 1
  4296   00123C  EE23  F086         	lfsr	2,_r_queue+537
  4297   001240  EE00 F002          	lfsr	0,2
  4298   001244  50DE               	movf	postinc2,w,c
  4299   001246  26E9               	addwf	fsr0l,f,c
  4300   001248  50DD               	movf	postdec2,w,c
  4301   00124A  22EA               	addwfc	fsr0h,f,c
  4302   00124C  50EF               	movf	indf0,w,c
  4303   00124E  A4D8               	btfss	status,2,c
  4304   001250  EF2C  F009         	goto	i1u211_21
  4305   001254  EF2E  F009         	goto	i1u211_20
  4306   001258                     i1u211_21:
  4307   001258  EFBF  F009         	goto	i1l3129
  4308   00125C                     i1u211_20:
  4309   00125C                     
  4310                           ; BSR set to: 1
  4311   00125C  6AFC               	clrf	252,c	;volatile
  4312   00125E                     
  4313                           ; BSR set to: 1
  4314   00125E  EE23  F086         	lfsr	2,_r_queue+537
  4315   001262  EE00 F06A          	lfsr	0,106
  4316   001266  50DE               	movf	postinc2,w,c
  4317   001268  26E9               	addwf	fsr0l,f,c
  4318   00126A  50DD               	movf	postdec2,w,c
  4319   00126C  22EA               	addwfc	fsr0h,f,c
  4320   00126E  50EF               	movf	indf0,w,c
  4321   001270  B4D8               	btfsc	status,2,c
  4322   001272  EF3D  F009         	goto	i1u212_21
  4323   001276  EF3F  F009         	goto	i1u212_20
  4324   00127A                     i1u212_21:
  4325   00127A  EFA3  F009         	goto	i1l356
  4326   00127E                     i1u212_20:
  4327   00127E                     
  4328                           ; BSR set to: 1
  4329   00127E  EE23  F086         	lfsr	2,_r_queue+537
  4330   001282  EE00 F009          	lfsr	0,9
  4331   001286  50DE               	movf	postinc2,w,c
  4332   001288  26E9               	addwf	fsr0l,f,c
  4333   00128A  50DD               	movf	postdec2,w,c
  4334   00128C  22EA               	addwfc	fsr0h,f,c
  4335   00128E  50EF               	movf	indf0,w,c
  4336   001290  6EE0               	movwf	224,c	;volatile
  4337   001292  EE23  F086         	lfsr	2,_r_queue+537
  4338   001296  EE00 F008          	lfsr	0,8
  4339   00129A  50DE               	movf	postinc2,w,c
  4340   00129C  26E9               	addwf	fsr0l,f,c
  4341   00129E  50DD               	movf	postdec2,w,c
  4342   0012A0  22EA               	addwfc	fsr0h,f,c
  4343   0012A2  50EF               	movf	indf0,w,c
  4344   0012A4  6ED8               	movwf	216,c	;volatile
  4345   0012A6  EE23  F086         	lfsr	2,_r_queue+537
  4346   0012AA  EE00 F007          	lfsr	0,7
  4347   0012AE  50DE               	movf	postinc2,w,c
  4348   0012B0  26E9               	addwf	fsr0l,f,c
  4349   0012B2  50DD               	movf	postdec2,w,c
  4350   0012B4  22EA               	addwfc	fsr0h,f,c
  4351   0012B6  50EF               	movf	indf0,w,c
  4352   0012B8  6F26               	movwf	??_delay& (0+255),b
  4353   0012BA  5126               	movf	??_delay& (0+255),w,b
  4354   0012BC                     i1l357:
  4355                           
  4356                           ; BSR set to: 1
  4357   0012BC  0005               	push		;# 
  4358   0012BE  EE23  F086         	lfsr	2,_r_queue+537
  4359   0012C2  EE00 F06A          	lfsr	0,106
  4360   0012C6  50DE               	movf	postinc2,w,c
  4361   0012C8  26E9               	addwf	fsr0l,f,c
  4362   0012CA  50DD               	movf	postdec2,w,c
  4363   0012CC  22EA               	addwfc	fsr0h,f,c
  4364   0012CE  06EF               	decf	indf0,f,c
  4365   0012D0  EE23  F086         	lfsr	2,_r_queue+537
  4366   0012D4  EE00 F06A          	lfsr	0,106
  4367   0012D8  50DE               	movf	postinc2,w,c
  4368   0012DA  26E9               	addwf	fsr0l,f,c
  4369   0012DC  50DD               	movf	postdec2,w,c
  4370   0012DE  22EA               	addwfc	fsr0h,f,c
  4371   0012E0  50EF               	movf	indf0,w,c
  4372   0012E2  0101               	movlb	1	; () banked
  4373   0012E4  6F26               	movwf	??_delay& (0+255),b
  4374   0012E6  5126               	movf	??_delay& (0+255),w,b
  4375   0012E8  0D03               	mullw	3
  4376   0012EA  CFF3 F127          	movff	prodl,??_delay+1
  4377   0012EE  CFF4 F128          	movff	prodh,??_delay+2
  4378   0012F2  EE23  F086         	lfsr	2,_r_queue+537
  4379   0012F6  CFDE F129          	movff	postinc2,??_delay+3
  4380   0012FA  CFDD F12A          	movff	postdec2,??_delay+4
  4381   0012FE  5127               	movf	(??_delay+1)& (0+255),w,b
  4382   001300  2529               	addwf	(??_delay+3)& (0+255),w,b
  4383   001302  6F2B               	movwf	(??_delay+5)& (0+255),b
  4384   001304  5128               	movf	(??_delay+2)& (0+255),w,b
  4385   001306  212A               	addwfc	(??_delay+4)& (0+255),w,b
  4386   001308  6F2C               	movwf	(??_delay+6)& (0+255),b
  4387   00130A  0E0A               	movlw	10
  4388   00130C  252B               	addwf	(??_delay+5)& (0+255),w,b
  4389   00130E  6ED9               	movwf	fsr2l,c
  4390   001310  0E00               	movlw	0
  4391   001312  212C               	addwfc	(??_delay+6)& (0+255),w,b
  4392   001314  6EDA               	movwf	fsr2h,c
  4393   001316  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4394   00131A  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4395   00131E  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4396   001322                     
  4397                           ; BSR set to: 1
  4398   001322  EE23  F086         	lfsr	2,_r_queue+537
  4399   001326  EE00 F06A          	lfsr	0,106
  4400   00132A  50DE               	movf	postinc2,w,c
  4401   00132C  26E9               	addwf	fsr0l,f,c
  4402   00132E  50DD               	movf	postdec2,w,c
  4403   001330  22EA               	addwfc	fsr0h,f,c
  4404   001332  50EF               	movf	indf0,w,c
  4405   001334  A4D8               	btfss	status,2,c
  4406   001336  EF9F  F009         	goto	i1u213_21
  4407   00133A  EFA1  F009         	goto	i1u213_20
  4408   00133E                     i1u213_21:
  4409   00133E  EF5E  F009         	goto	i1l357
  4410   001342                     i1u213_20:
  4411   001342  EFB5  F009         	goto	i1l359
  4412   001346                     i1l356:
  4413                           
  4414                           ; BSR set to: 1
  4415   001346  0005               	push		;# 
  4416   001348  EE23  F086         	lfsr	2,_r_queue+537
  4417   00134C  EE00 F003          	lfsr	0,3
  4418   001350  50DE               	movf	postinc2,w,c
  4419   001352  26E9               	addwf	fsr0l,f,c
  4420   001354  50DD               	movf	postdec2,w,c
  4421   001356  22EA               	addwfc	fsr0h,f,c
  4422   001358  CFEE F126          	movff	postinc0,??_delay
  4423   00135C  CFED F127          	movff	postdec0,??_delay+1
  4424   001360  C126  FFFD         	movff	??_delay,tosl	;volatile
  4425   001364  C127  FFFE         	movff	??_delay+1,tosh	;volatile
  4426   001368  6AFF               	clrf	255,c	;volatile
  4427   00136A                     i1l359:
  4428   00136A  EE23  F086         	lfsr	2,_r_queue+537
  4429   00136E  EE00 F002          	lfsr	0,2
  4430   001372  50DE               	movf	postinc2,w,c
  4431   001374  26E9               	addwf	fsr0l,f,c
  4432   001376  50DD               	movf	postdec2,w,c
  4433   001378  22EA               	addwfc	fsr0h,f,c
  4434   00137A  0E01               	movlw	1
  4435   00137C  6EEF               	movwf	indf0,c
  4436   00137E                     i1l3129:
  4437                           
  4438                           ;kernel.c: 38:     (INTCONbits.GIE = 1);
  4439   00137E  8EF2               	bsf	242,7,c	;volatile
  4440   001380  0012               	return		;funcret
  4441   001382                     __end_of_delay:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _scheduler *****************
  4445 ;; Defined at:
  4446 ;;		line 7 in file "scheduler.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1  [STACK] void 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 4
  4467 ;; This function calls:
  4468 ;;		_priority_scheduler
  4469 ;; This function is called by:
  4470 ;;		_sem_wait
  4471 ;;		_mutex_lock
  4472 ;;		_delay
  4473 ;;		_change_state
  4474 ;;		_ISR
  4475 ;;		_yield
  4476 ;; This function uses a reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text22
  4480   0021DC                     __ptext22:
  4481                           	callstack 0
  4482   0021DC                     _scheduler:
  4483                           	callstack 15
  4484   0021DC                     
  4485                           ;scheduler.c: 12:     priority_scheduler();
  4486   0021DC  EC53  F00C         	call	_priority_scheduler	;wreg free
  4487   0021E0                     
  4488                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4489   0021E0  0012               	return		;funcret
  4490   0021E2                     __end_of_scheduler:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function _priority_scheduler *****************
  4494 ;; Defined at:
  4495 ;;		line 32 in file "scheduler.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  i               1  [STACK] unsigned char 
  4500 ;;  selected        1  [STACK] unsigned char 
  4501 ;;  highest_prio    1  [STACK] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1  [STACK] void 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4511 ;;      Params:         0       0       0       0       0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; Hardware stack levels required when called: 3
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_scheduler
  4522 ;; This function uses a reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text23
  4526   0018A6                     __ptext23:
  4527                           	callstack 0
  4528   0018A6                     _priority_scheduler:
  4529                           	callstack 0
  4530                           
  4531                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4532   0018A6  52E6               	movf	postinc1,f,c
  4533   0018A8  52E6               	movf	postinc1,f,c
  4534   0018AA  52E6               	movf	postinc1,f,c
  4535   0018AC                     
  4536                           ;scheduler.c: 34:     uint8_t highest_priority = 0;
  4537                           ;stkvar	_highest_priority @ sp[(-3)+2]
  4538   0018AC  0EFF               	movlw	-1
  4539   0018AE  6AE3               	clrf	plusw1,c
  4540                           
  4541                           ;scheduler.c: 35:     uint8_t selected = 0;
  4542                           ;stkvar	_selected @ sp[(-3)+1]
  4543   0018B0  0EFE               	movlw	-2
  4544   0018B2  6AE3               	clrf	plusw1,c
  4545   0018B4                     
  4546                           ;scheduler.c: 37:     for (uint8_t i = 1; i < r_queue.ready_queue_size; i++)
  4547                           ;stkvar	_i @ sp[(-3)+0]
  4548   0018B4  0EFD               	movlw	-3
  4549   0018B6  6AE3               	clrf	plusw1,c
  4550   0018B8  2AE3               	incf	plusw1,f,c
  4551   0018BA  EF9B  F00C         	goto	l2477
  4552   0018BE                     l2467:
  4553                           
  4554                           ;scheduler.c: 38:     {;scheduler.c: 39:         if (r_queue.ready_queue[i].task_state =
      +                          = READY &&
  4555                           ;stkvar	_i @ sp[(-3)+0]
  4556   0018BE  0EFD               	movlw	-3
  4557   0018C0  50E3               	movf	plusw1,w,c
  4558   0018C2  0D6B               	mullw	107
  4559   0018C4  0E6F               	movlw	low (_r_queue+2)
  4560   0018C6  24F3               	addwf	243,w,c
  4561   0018C8  6ED9               	movwf	fsr2l,c
  4562   0018CA  0E01               	movlw	high (_r_queue+2)
  4563   0018CC  20F4               	addwfc	prodh,w,c
  4564   0018CE  6EDA               	movwf	fsr2h,c
  4565   0018D0  50DF               	movf	indf2,w,c
  4566   0018D2  A4D8               	btfss	status,2,c
  4567   0018D4  EF6E  F00C         	goto	u143_21
  4568   0018D8  EF70  F00C         	goto	u143_20
  4569   0018DC                     u143_21:
  4570   0018DC  EF99  F00C         	goto	l2475
  4571   0018E0                     u143_20:
  4572   0018E0                     
  4573                           ;stkvar	_i @ sp[(-3)+0]
  4574   0018E0  0EFD               	movlw	-3
  4575   0018E2  50E3               	movf	plusw1,w,c
  4576   0018E4  0D6B               	mullw	107
  4577   0018E6  0E6E               	movlw	low (_r_queue+1)
  4578   0018E8  24F3               	addwf	243,w,c
  4579   0018EA  6ED9               	movwf	fsr2l,c
  4580   0018EC  0E01               	movlw	high (_r_queue+1)
  4581   0018EE  20F4               	addwfc	prodh,w,c
  4582   0018F0  6EDA               	movwf	fsr2h,c
  4583                           
  4584                           ;stkvar	_highest_priority @ sp[(-3)+2]
  4585   0018F2  0EFF               	movlw	-1
  4586   0018F4  CFE3 F001          	movff	plusw1,btemp
  4587   0018F8  50DE               	movf	postinc2,w,c
  4588   0018FA  5C01               	subwf	btemp^0,w,c
  4589   0018FC  B0D8               	btfsc	status,0,c
  4590   0018FE  EF83  F00C         	goto	u144_21
  4591   001902  EF85  F00C         	goto	u144_20
  4592   001906                     u144_21:
  4593   001906  EF99  F00C         	goto	l2475
  4594   00190A                     u144_20:
  4595   00190A                     
  4596                           ;scheduler.c: 41:         {;scheduler.c: 42:             highest_priority = r_queue.read
      +                          y_queue[i].task_priority;
  4597                           ;stkvar	_i @ sp[(-3)+0]
  4598   00190A  0EFD               	movlw	-3
  4599   00190C  50E3               	movf	plusw1,w,c
  4600   00190E  0D6B               	mullw	107
  4601   001910  0E6E               	movlw	low (_r_queue+1)
  4602   001912  24F3               	addwf	243,w,c
  4603   001914  6ED9               	movwf	fsr2l,c
  4604   001916  0E01               	movlw	high (_r_queue+1)
  4605   001918  20F4               	addwfc	prodh,w,c
  4606   00191A  6EDA               	movwf	fsr2h,c
  4607   00191C  50DF               	movf	indf2,w,c
  4608   00191E  6E0C               	movwf	(btemp+11)^0,c
  4609                           
  4610                           ;stkvar	_highest_priority @ sp[(-3)+2]
  4611   001920  0EFF               	movlw	-1
  4612   001922  C00C  FFE3         	movff	btemp+11,plusw1
  4613   001926                     
  4614                           ;scheduler.c: 43:             selected = i;
  4615                           ;stkvar	_i @ sp[(-3)+0]
  4616                           ;stkvar	_selected @ sp[(-3)+1]
  4617   001926  0EFD               	movlw	-3
  4618   001928  CFE3 F001          	movff	plusw1,btemp
  4619   00192C  0EFE               	movlw	-2
  4620   00192E  C001  FFE3         	movff	btemp,plusw1
  4621   001932                     l2475:
  4622                           
  4623                           ;scheduler.c: 45:     }
  4624                           ;stkvar	_i @ sp[(-3)+0]
  4625   001932  0EFD               	movlw	-3
  4626   001934  2AE3               	incf	plusw1,f,c
  4627   001936                     l2477:
  4628   001936  EE23  F085         	lfsr	2,_r_queue+536
  4629                           
  4630                           ;stkvar	_i @ sp[(-3)+0]
  4631   00193A  0EFD               	movlw	-3
  4632   00193C  CFE3 F001          	movff	plusw1,btemp
  4633   001940  50DE               	movf	postinc2,w,c
  4634   001942  5C01               	subwf	btemp^0,w,c
  4635   001944  A0D8               	btfss	status,0,c
  4636   001946  EFA7  F00C         	goto	u145_21
  4637   00194A  EFA9  F00C         	goto	u145_20
  4638   00194E                     u145_21:
  4639   00194E  EF5F  F00C         	goto	l2467
  4640   001952                     u145_20:
  4641   001952                     
  4642                           ;scheduler.c: 46:     r_queue.task_running = selected;
  4643                           ;stkvar	_selected @ sp[(-3)+1]
  4644   001952  0EFE               	movlw	-2
  4645   001954  CFE3 F00C          	movff	plusw1,btemp+11
  4646   001958  C00C  F384         	movff	btemp+11,_r_queue+535
  4647   00195C                     
  4648                           ; _priority_scheduler: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  4649   00195C  52E5               	movf	postdec1,f,c
  4650   00195E  52E5               	movf	postdec1,f,c
  4651   001960  52E5               	movf	postdec1,f,c
  4652   001962  0012               	return		;funcret
  4653   001964                     __end_of_priority_scheduler:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _adc_read *****************
  4657 ;; Defined at:
  4658 ;;		line 14 in file "io.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  channel         1    wreg     unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  channel         1    4[BANK0 ] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2    0[BANK0 ] unsigned short 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4672 ;;      Params:         0       2       0       0       0       0       0       0       0
  4673 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4674 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4675 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4676 ;;Total ram usage:        5 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; Hardware stack levels required when called: 3
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_tarefa_acelerador
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text24
  4687   002018                     __ptext24:
  4688                           	callstack 0
  4689   002018                     _adc_read:
  4690                           	callstack 21
  4691                           
  4692                           ;incstack = 0
  4693                           ;adc_read@channel stored from wreg
  4694   002018  0100               	movlb	0	; () banked
  4695   00201A  6FBC               	movwf	adc_read@channel& (0+255),b
  4696   00201C                     
  4697                           ;io.c: 14: uint16_t adc_read(uint8_t channel);io.c: 15: {;io.c: 16:     ADCON0 = (channe
      +                          l << 2) | 1;
  4698   00201C  0100               	movlb	0	; () banked
  4699   00201E  45BC               	rlncf	adc_read@channel& (0+255),w,b
  4700   002020  46E8               	rlncf	wreg,f,c
  4701   002022  0BFC               	andlw	252
  4702   002024  0901               	iorlw	1
  4703   002026  6EC2               	movwf	194,c	;volatile
  4704   002028                     
  4705                           ; BSR set to: 0
  4706                           ;io.c: 17:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  4707   002028  D000               	nop2		;2 cycle nop
  4708   00202A  D000               	nop2		;2 cycle nop
  4709   00202C  0000               	nop	
  4710   00202E                     
  4711                           ;io.c: 18:     ADCON0bits.GO = 1;
  4712   00202E  82C2               	bsf	194,1,c	;volatile
  4713   002030                     i1l216:
  4714                           
  4715                           ;io.c: 19:     while (ADCON0bits.GO)
  4716   002030  B2C2               	btfsc	194,1,c	;volatile
  4717   002032  EF1D  F010         	goto	i1u170_21
  4718   002036  EF1F  F010         	goto	i1u170_20
  4719   00203A                     i1u170_21:
  4720   00203A  EF18  F010         	goto	i1l216
  4721   00203E                     i1u170_20:
  4722   00203E                     
  4723                           ;io.c: 21:     return ((uint16_t)ADRESH << 8) | ADRESL;
  4724   00203E  50C4               	movf	196,w,c	;volatile
  4725   002040  0100               	movlb	0	; () banked
  4726   002042  6FBA               	movwf	??_adc_read& (0+255),b
  4727   002044  50C3               	movf	195,w,c	;volatile
  4728   002046  6FB8               	movwf	?_adc_read& (0+255),b
  4729   002048  C0BA  F0B9         	movff	??_adc_read,?_adc_read+1
  4730   00204C                     
  4731                           ; BSR set to: 0
  4732   00204C  0012               	return		;funcret
  4733   00204E                     __end_of_adc_read:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _tarefa_controle_central *****************
  4737 ;; Defined at:
  4738 ;;		line 28 in file "user_app.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  data            1   28[BANK0 ] unsigned char 
  4743 ;;  duty            1   27[BANK0 ] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0
  4754 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4756 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4757 ;;Total ram usage:        2 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 7
  4760 ;; This function calls:
  4761 ;;		___awmod
  4762 ;;		_delay
  4763 ;;		_mutex_lock
  4764 ;;		_mutex_unlock
  4765 ;;		_read_pipe
  4766 ;; This function is called by:
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text25
  4772   001EB6                     __ptext25:
  4773                           	callstack 0
  4774   001EB6                     _tarefa_controle_central:
  4775                           	callstack 18
  4776   001EB6                     l284:
  4777                           
  4778                           ;user_app.c: 31:     {;user_app.c: 32:         uint8_t data = 0;
  4779   001EB6  0100               	movlb	0	; () banked
  4780   001EB8  6BD4               	clrf	tarefa_controle_central@data& (0+255),b
  4781   001EBA                     
  4782                           ; BSR set to: 0
  4783                           ;user_app.c: 33:         read_pipe(&accel_pipe, &data);
  4784   001EBA  0E24               	movlw	low _accel_pipe
  4785   001EBC  6FD0               	movwf	read_pipe@p& (0+255),b
  4786   001EBE  0ED4               	movlw	low tarefa_controle_central@data
  4787   001EC0  6FD1               	movwf	read_pipe@data& (0+255),b
  4788   001EC2  EC2C  F00E         	call	_read_pipe	;wreg free
  4789   001EC6                     
  4790                           ;user_app.c: 35:         uint8_t duty = data % 100;
  4791   001EC6  C0D4  F0C8         	movff	tarefa_controle_central@data,___awmod@dividend
  4792   001ECA  0100               	movlb	0	; () banked
  4793   001ECC  6BC9               	clrf	(___awmod@dividend+1)& (0+255),b
  4794   001ECE  0E00               	movlw	0
  4795   001ED0  6FCB               	movwf	(___awmod@divisor+1)& (0+255),b
  4796   001ED2  0E64               	movlw	100
  4797   001ED4  6FCA               	movwf	___awmod@divisor& (0+255),b
  4798   001ED6  ECB2  F00C         	call	___awmod	;wreg free
  4799   001EDA  0100               	movlb	0	; () banked
  4800   001EDC  51C8               	movf	?___awmod& (0+255),w,b
  4801   001EDE  6FD3               	movwf	tarefa_controle_central@duty& (0+255),b
  4802   001EE0                     
  4803                           ; BSR set to: 0
  4804                           ;user_app.c: 37:         mutex_lock(&buffer_mutex);
  4805   001EE0  0EB1               	movlw	low _buffer_mutex
  4806   001EE2  6FD5               	movwf	mutex_lock@m& (0+255),b
  4807   001EE4  EC89  F005         	call	_mutex_lock	;wreg free
  4808   001EE8                     
  4809                           ;user_app.c: 38:         accel_data = duty;
  4810   001EE8  C0D3  F060         	movff	tarefa_controle_central@duty,_accel_data	;volatile
  4811   001EEC                     
  4812                           ;user_app.c: 39:         mutex_unlock(&buffer_mutex);
  4813   001EEC  0EB1               	movlw	low _buffer_mutex
  4814   001EEE  0100               	movlb	0	; () banked
  4815   001EF0  6FD5               	movwf	mutex_unlock@m& (0+255),b
  4816   001EF2  ECA4  F00D         	call	_mutex_unlock	;wreg free
  4817   001EF6                     
  4818                           ;user_app.c: 41:         delay(5);
  4819   001EF6  0E00               	movlw	0
  4820   001EF8  0101               	movlb	1	; () banked
  4821   001EFA  6F25               	movwf	(delay@time+1)& (0+255),b
  4822   001EFC  0E05               	movlw	5
  4823   001EFE  6F24               	movwf	delay@time& (0+255),b
  4824   001F00  EC70  F008         	call	_delay	;wreg free
  4825   001F04  EF5B  F00F         	goto	l284
  4826   001F08  0012               	return		;funcret
  4827   001F0A                     __end_of_tarefa_controle_central:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _read_pipe *****************
  4831 ;; Defined at:
  4832 ;;		line 23 in file "pipe.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  p               1   24[BANK0 ] PTR struct pipe
  4835 ;;		 -> accel_pipe(19), 
  4836 ;;  data            1   25[BANK0 ] PTR unsigned char 
  4837 ;;		 -> tarefa_controle_central@data(1), 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4849 ;;      Params:         0       2       0       0       0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4851 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4852 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4853 ;;Total ram usage:        3 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 6
  4856 ;; This function calls:
  4857 ;;		___awmod
  4858 ;;		_sem_post
  4859 ;;		_sem_wait
  4860 ;; This function is called by:
  4861 ;;		_tarefa_controle_central
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text26
  4866   001C58                     __ptext26:
  4867                           	callstack 0
  4868   001C58                     _read_pipe:
  4869                           	callstack 18
  4870   001C58                     
  4871                           ;pipe.c: 23: void read_pipe(pipe_t *p, uint8_t *data);pipe.c: 24: {;pipe.c: 25:     (INT
      +                          CONbits.GIE = 0);
  4872   001C58  9EF2               	bcf	242,7,c	;volatile
  4873   001C5A                     
  4874                           ;pipe.c: 26:     sem_wait(&p->pipe_sem_read);
  4875   001C5A  0100               	movlb	0	; () banked
  4876   001C5C  51D0               	movf	read_pipe@p& (0+255),w,b
  4877   001C5E  0F03               	addlw	3
  4878   001C60  6FC8               	movwf	sem_wait@sem& (0+255),b
  4879   001C62  ECFD  F006         	call	_sem_wait	;wreg free
  4880   001C66                     
  4881                           ;pipe.c: 27:     *data = p->pipe_msg[p->pipe_pos_read];
  4882   001C66  0100               	movlb	0	; () banked
  4883   001C68  51D0               	movf	read_pipe@p& (0+255),w,b
  4884   001C6A  6ED9               	movwf	fsr2l,c
  4885   001C6C  6ADA               	clrf	fsr2h,c
  4886   001C6E  0E01               	movlw	1
  4887   001C70  26D9               	addwf	fsr2l,f,c
  4888   001C72  50DF               	movf	indf2,w,c
  4889   001C74  6FD2               	movwf	??_read_pipe& (0+255),b
  4890   001C76  51D0               	movf	read_pipe@p& (0+255),w,b
  4891   001C78  6ED9               	movwf	fsr2l,c
  4892   001C7A  6ADA               	clrf	fsr2h,c
  4893   001C7C  50DF               	movf	indf2,w,c
  4894   001C7E  25D2               	addwf	??_read_pipe& (0+255),w,b
  4895   001C80  6ED9               	movwf	fsr2l,c
  4896   001C82  6ADA               	clrf	fsr2h,c
  4897   001C84  51D1               	movf	read_pipe@data& (0+255),w,b
  4898   001C86  6EE9               	movwf	fsr0l,c
  4899   001C88  6AEA               	clrf	fsr0h,c
  4900   001C8A  CFDF FFEF          	movff	indf2,indf0
  4901   001C8E                     
  4902                           ; BSR set to: 0
  4903                           ;pipe.c: 28:     p->pipe_pos_read = (p->pipe_pos_read + 1) % 3;
  4904   001C8E  51D0               	movf	read_pipe@p& (0+255),w,b
  4905   001C90  6ED9               	movwf	fsr2l,c
  4906   001C92  6ADA               	clrf	fsr2h,c
  4907   001C94  0E01               	movlw	1
  4908   001C96  26D9               	addwf	fsr2l,f,c
  4909   001C98  51D0               	movf	read_pipe@p& (0+255),w,b
  4910   001C9A  6EE9               	movwf	fsr0l,c
  4911   001C9C  6AEA               	clrf	fsr0h,c
  4912   001C9E  0E01               	movlw	1
  4913   001CA0  26E9               	addwf	fsr0l,f,c
  4914   001CA2  50EF               	movf	indf0,w,c
  4915   001CA4  6FD2               	movwf	??_read_pipe& (0+255),b
  4916   001CA6  0E01               	movlw	1
  4917   001CA8  25D2               	addwf	??_read_pipe& (0+255),w,b
  4918   001CAA  6FC8               	movwf	___awmod@dividend& (0+255),b
  4919   001CAC  6BC9               	clrf	(___awmod@dividend+1)& (0+255),b
  4920   001CAE  0E00               	movlw	0
  4921   001CB0  23C9               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4922   001CB2  0E00               	movlw	0
  4923   001CB4  6FCB               	movwf	(___awmod@divisor+1)& (0+255),b
  4924   001CB6  0E03               	movlw	3
  4925   001CB8  6FCA               	movwf	___awmod@divisor& (0+255),b
  4926   001CBA  ECB2  F00C         	call	___awmod	;wreg free
  4927   001CBE  0100               	movlb	0	; () banked
  4928   001CC0  51C8               	movf	?___awmod& (0+255),w,b
  4929   001CC2  6EDF               	movwf	indf2,c
  4930   001CC4                     
  4931                           ; BSR set to: 0
  4932                           ;pipe.c: 29:     sem_post(&p->pipe_sem_write);
  4933   001CC4  51D0               	movf	read_pipe@p& (0+255),w,b
  4934   001CC6  0F0B               	addlw	11
  4935   001CC8  6FC8               	movwf	sem_post@sem& (0+255),b
  4936   001CCA  ECE9  F00D         	call	_sem_post	;wreg free
  4937   001CCE                     
  4938                           ;pipe.c: 30:     (INTCONbits.GIE = 1);
  4939   001CCE  8EF2               	bsf	242,7,c	;volatile
  4940   001CD0  0012               	return		;funcret
  4941   001CD2                     __end_of_read_pipe:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _mutex_unlock *****************
  4945 ;; Defined at:
  4946 ;;		line 75 in file "sync.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  m               1   29[BANK0 ] PTR struct mutex
  4949 ;;		 -> buffer_mutex(7), 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  tid             1   32[BANK0 ] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4961 ;;      Params:         0       1       0       0       0       0       0       0       0
  4962 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4963 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4964 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4965 ;;Total ram usage:        4 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; Hardware stack levels required when called: 3
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_tarefa_controle_central
  4972 ;;		_tarefa_injecao_eletronica
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text27
  4977   001B48                     __ptext27:
  4978                           	callstack 0
  4979   001B48                     _mutex_unlock:
  4980                           	callstack 21
  4981   001B48                     
  4982                           ;sync.c: 75: void mutex_unlock(mutex_t *m);sync.c: 76: {;sync.c: 77:     (INTCONbits.GIE
      +                           = 0);
  4983   001B48  9EF2               	bcf	242,7,c	;volatile
  4984   001B4A                     
  4985                           ;sync.c: 78:     if (m->s_pos_out != m->s_size)
  4986   001B4A  0100               	movlb	0	; () banked
  4987   001B4C  51D5               	movf	mutex_unlock@m& (0+255),w,b
  4988   001B4E  6ED9               	movwf	fsr2l,c
  4989   001B50  6ADA               	clrf	fsr2h,c
  4990   001B52  0E05               	movlw	5
  4991   001B54  26D9               	addwf	fsr2l,f,c
  4992   001B56  51D5               	movf	mutex_unlock@m& (0+255),w,b
  4993   001B58  6EE9               	movwf	fsr0l,c
  4994   001B5A  6AEA               	clrf	fsr0h,c
  4995   001B5C  0E06               	movlw	6
  4996   001B5E  26E9               	addwf	fsr0l,f,c
  4997   001B60  50DE               	movf	postinc2,w,c
  4998   001B62  18EE               	xorwf	postinc0,w,c
  4999   001B64  B4D8               	btfsc	status,2,c
  5000   001B66  EFB7  F00D         	goto	i1u112_21
  5001   001B6A  EFB9  F00D         	goto	i1u112_20
  5002   001B6E                     i1u112_21:
  5003   001B6E  EFE2  F00D         	goto	i1l2197
  5004   001B72                     i1u112_20:
  5005   001B72                     
  5006                           ; BSR set to: 0
  5007                           ;sync.c: 79:     {;sync.c: 81:         uint8_t tid = m->s_queue[m->s_pos_out];
  5008   001B72  51D5               	movf	mutex_unlock@m& (0+255),w,b
  5009   001B74  6ED9               	movwf	fsr2l,c
  5010   001B76  6ADA               	clrf	fsr2h,c
  5011   001B78  0E06               	movlw	6
  5012   001B7A  26D9               	addwf	fsr2l,f,c
  5013   001B7C  50DF               	movf	indf2,w,c
  5014   001B7E  6FD6               	movwf	??_mutex_unlock& (0+255),b
  5015   001B80  51D5               	movf	mutex_unlock@m& (0+255),w,b
  5016   001B82  25D6               	addwf	??_mutex_unlock& (0+255),w,b
  5017   001B84  6ED9               	movwf	fsr2l,c
  5018   001B86  6ADA               	clrf	fsr2h,c
  5019   001B88  0E01               	movlw	1
  5020   001B8A  26D9               	addwf	fsr2l,f,c
  5021   001B8C  50DF               	movf	indf2,w,c
  5022   001B8E  6FD8               	movwf	mutex_unlock@tid& (0+255),b
  5023   001B90                     
  5024                           ; BSR set to: 0
  5025                           ;sync.c: 82:         r_queue.ready_queue[tid].task_state = READY;
  5026   001B90  51D8               	movf	mutex_unlock@tid& (0+255),w,b
  5027   001B92  0D6B               	mullw	107
  5028   001B94  0E6F               	movlw	low (_r_queue+2)
  5029   001B96  24F3               	addwf	243,w,c
  5030   001B98  6ED9               	movwf	fsr2l,c
  5031   001B9A  0E01               	movlw	high (_r_queue+2)
  5032   001B9C  20F4               	addwfc	prodh,w,c
  5033   001B9E  6EDA               	movwf	fsr2h,c
  5034   001BA0  6ADF               	clrf	indf2,c
  5035   001BA2                     
  5036                           ; BSR set to: 0
  5037                           ;sync.c: 83:         m->s_pos_out = (m->s_pos_out + 1) % 4;
  5038   001BA2  51D5               	movf	mutex_unlock@m& (0+255),w,b
  5039   001BA4  6ED9               	movwf	fsr2l,c
  5040   001BA6  6ADA               	clrf	fsr2h,c
  5041   001BA8  0E06               	movlw	6
  5042   001BAA  26D9               	addwf	fsr2l,f,c
  5043   001BAC  51D5               	movf	mutex_unlock@m& (0+255),w,b
  5044   001BAE  6EE9               	movwf	fsr0l,c
  5045   001BB0  6AEA               	clrf	fsr0h,c
  5046   001BB2  0E06               	movlw	6
  5047   001BB4  26E9               	addwf	fsr0l,f,c
  5048   001BB6  50EF               	movf	indf0,w,c
  5049   001BB8  6FD6               	movwf	??_mutex_unlock& (0+255),b
  5050   001BBA  29D6               	incf	??_mutex_unlock& (0+255),w,b
  5051   001BBC  0B03               	andlw	3
  5052   001BBE  6EDF               	movwf	indf2,c
  5053                           
  5054                           ;sync.c: 84:     }
  5055   001BC0  EFE7  F00D         	goto	i1l2199
  5056   001BC4                     i1l2197:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;sync.c: 86:     {;sync.c: 88:         m->flag = 1;
  5060   001BC4  51D5               	movf	mutex_unlock@m& (0+255),w,b
  5061   001BC6  6ED9               	movwf	fsr2l,c
  5062   001BC8  6ADA               	clrf	fsr2h,c
  5063   001BCA  0E01               	movlw	1
  5064   001BCC  6EDF               	movwf	indf2,c
  5065   001BCE                     i1l2199:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;sync.c: 90:     (INTCONbits.GIE = 1);
  5069   001BCE  8EF2               	bsf	242,7,c	;volatile
  5070   001BD0                     
  5071                           ; BSR set to: 0
  5072   001BD0  0012               	return		;funcret
  5073   001BD2                     __end_of_mutex_unlock:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _mutex_lock *****************
  5077 ;; Defined at:
  5078 ;;		line 55 in file "sync.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  m               1   29[BANK0 ] PTR struct mutex
  5081 ;;		 -> buffer_mutex(7), 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5093 ;;      Params:         0       1       0       0       0       0       0       0       0
  5094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5095 ;;      Temps:          0       7       0       0       0       0       0       0       0
  5096 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5097 ;;Total ram usage:        8 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 5
  5100 ;; This function calls:
  5101 ;;		_scheduler
  5102 ;; This function is called by:
  5103 ;;		_tarefa_controle_central
  5104 ;;		_tarefa_injecao_eletronica
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text28
  5109   000B12                     __ptext28:
  5110                           	callstack 0
  5111   000B12                     _mutex_lock:
  5112                           	callstack 19
  5113   000B12                     
  5114                           ;sync.c: 55: void mutex_lock(mutex_t *m);sync.c: 56: {;sync.c: 57:     (INTCONbits.GIE =
      +                           0);
  5115   000B12  9EF2               	bcf	242,7,c	;volatile
  5116   000B14                     
  5117                           ;sync.c: 58:     if (m->flag)
  5118   000B14  0100               	movlb	0	; () banked
  5119   000B16  51D5               	movf	mutex_lock@m& (0+255),w,b
  5120   000B18  6ED9               	movwf	fsr2l,c
  5121   000B1A  6ADA               	clrf	fsr2h,c
  5122   000B1C  50DF               	movf	indf2,w,c
  5123   000B1E  B4D8               	btfsc	status,2,c
  5124   000B20  EF94  F005         	goto	i1u164_21
  5125   000B24  EF96  F005         	goto	i1u164_20
  5126   000B28                     i1u164_21:
  5127   000B28  EF9D  F005         	goto	i1l2615
  5128   000B2C                     i1u164_20:
  5129   000B2C                     
  5130                           ; BSR set to: 0
  5131                           ;sync.c: 59:     {;sync.c: 60:         m->flag = 0;
  5132   000B2C  51D5               	movf	mutex_lock@m& (0+255),w,b
  5133   000B2E  6ED9               	movwf	fsr2l,c
  5134   000B30  6ADA               	clrf	fsr2h,c
  5135   000B32  6ADF               	clrf	indf2,c
  5136   000B34                     
  5137                           ; BSR set to: 0
  5138                           ;sync.c: 61:         (INTCONbits.GIE = 1);
  5139   000B34  8EF2               	bsf	242,7,c	;volatile
  5140                           
  5141                           ;sync.c: 62:     }
  5142   000B36  EFFC  F006         	goto	i1l104
  5143   000B3A                     i1l2615:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;sync.c: 64:     {;sync.c: 66:         m->s_queue[m->s_size] = r_queue.task_running;
  5147   000B3A  EE23  F084         	lfsr	2,_r_queue+535
  5148   000B3E  51D5               	movf	mutex_lock@m& (0+255),w,b
  5149   000B40  6EE9               	movwf	fsr0l,c
  5150   000B42  6AEA               	clrf	fsr0h,c
  5151   000B44  0E05               	movlw	5
  5152   000B46  26E9               	addwf	fsr0l,f,c
  5153   000B48  50EF               	movf	indf0,w,c
  5154   000B4A  6FD6               	movwf	??_mutex_lock& (0+255),b
  5155   000B4C  51D5               	movf	mutex_lock@m& (0+255),w,b
  5156   000B4E  25D6               	addwf	??_mutex_lock& (0+255),w,b
  5157   000B50  6EE9               	movwf	fsr0l,c
  5158   000B52  6AEA               	clrf	fsr0h,c
  5159   000B54  0E01               	movlw	1
  5160   000B56  26E9               	addwf	fsr0l,f,c
  5161   000B58  CFDF FFEF          	movff	indf2,indf0
  5162                           
  5163                           ;sync.c: 67:         m->s_size = (m->s_size + 1) % 4;
  5164   000B5C  51D5               	movf	mutex_lock@m& (0+255),w,b
  5165   000B5E  6ED9               	movwf	fsr2l,c
  5166   000B60  6ADA               	clrf	fsr2h,c
  5167   000B62  0E05               	movlw	5
  5168   000B64  26D9               	addwf	fsr2l,f,c
  5169   000B66  51D5               	movf	mutex_lock@m& (0+255),w,b
  5170   000B68  6EE9               	movwf	fsr0l,c
  5171   000B6A  6AEA               	clrf	fsr0h,c
  5172   000B6C  0E05               	movlw	5
  5173   000B6E  26E9               	addwf	fsr0l,f,c
  5174   000B70  50EF               	movf	indf0,w,c
  5175   000B72  6FD6               	movwf	??_mutex_lock& (0+255),b
  5176   000B74  29D6               	incf	??_mutex_lock& (0+255),w,b
  5177   000B76  0B03               	andlw	3
  5178   000B78  6EDF               	movwf	indf2,c
  5179   000B7A                     
  5180                           ; BSR set to: 0
  5181   000B7A  C384  F0D6         	movff	_r_queue+535,??_mutex_lock
  5182   000B7E  51D6               	movf	??_mutex_lock& (0+255),w,b
  5183   000B80  0D6B               	mullw	107
  5184   000B82  0E6D               	movlw	low _r_queue
  5185   000B84  24F3               	addwf	243,w,c
  5186   000B86  6FD7               	movwf	(??_mutex_lock+1)& (0+255),b
  5187   000B88  0E01               	movlw	high _r_queue
  5188   000B8A  20F4               	addwfc	prodh,w,c
  5189   000B8C  6FD8               	movwf	(??_mutex_lock+2)& (0+255),b
  5190   000B8E  C0D7  F386         	movff	??_mutex_lock+1,_r_queue+537
  5191   000B92  C0D8  F387         	movff	??_mutex_lock+2,_r_queue+538
  5192   000B96                     
  5193                           ; BSR set to: 0
  5194   000B96  EE23  F086         	lfsr	2,_r_queue+537
  5195   000B9A  EE00 F002          	lfsr	0,2
  5196   000B9E  50DE               	movf	postinc2,w,c
  5197   000BA0  26E9               	addwf	fsr0l,f,c
  5198   000BA2  50DD               	movf	postdec2,w,c
  5199   000BA4  22EA               	addwfc	fsr0h,f,c
  5200   000BA6  04EE               	decf	postinc0,w,c
  5201   000BA8  A4D8               	btfss	status,2,c
  5202   000BAA  EFD9  F005         	goto	i1u165_21
  5203   000BAE  EFDB  F005         	goto	i1u165_20
  5204   000BB2                     i1u165_21:
  5205   000BB2  EF49  F006         	goto	i1l2629
  5206   000BB6                     i1u165_20:
  5207   000BB6                     
  5208                           ; BSR set to: 0
  5209   000BB6  EE23  F086         	lfsr	2,_r_queue+537
  5210   000BBA  EE00 F009          	lfsr	0,9
  5211   000BBE  50DE               	movf	postinc2,w,c
  5212   000BC0  26E9               	addwf	fsr0l,f,c
  5213   000BC2  50DD               	movf	postdec2,w,c
  5214   000BC4  22EA               	addwfc	fsr0h,f,c
  5215   000BC6  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5216   000BCA  EE23  F086         	lfsr	2,_r_queue+537
  5217   000BCE  EE00 F008          	lfsr	0,8
  5218   000BD2  50DE               	movf	postinc2,w,c
  5219   000BD4  26E9               	addwf	fsr0l,f,c
  5220   000BD6  50DD               	movf	postdec2,w,c
  5221   000BD8  22EA               	addwfc	fsr0h,f,c
  5222   000BDA  CFD8 FFEF          	movff	status,indf0	;volatile
  5223   000BDE  EE23  F086         	lfsr	2,_r_queue+537
  5224   000BE2  EE00 F007          	lfsr	0,7
  5225   000BE6  50DE               	movf	postinc2,w,c
  5226   000BE8  26E9               	addwf	fsr0l,f,c
  5227   000BEA  50DD               	movf	postdec2,w,c
  5228   000BEC  22EA               	addwfc	fsr0h,f,c
  5229   000BEE  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5230   000BF2  EE23  F086         	lfsr	2,_r_queue+537
  5231   000BF6  EE00 F06A          	lfsr	0,106
  5232   000BFA  50DE               	movf	postinc2,w,c
  5233   000BFC  26E9               	addwf	fsr0l,f,c
  5234   000BFE  50DD               	movf	postdec2,w,c
  5235   000C00  22EA               	addwfc	fsr0h,f,c
  5236   000C02  6AEF               	clrf	indf0,c
  5237   000C04  EE23  F086         	lfsr	2,_r_queue+537
  5238   000C08  EE00 F002          	lfsr	0,2
  5239   000C0C  50DE               	movf	postinc2,w,c
  5240   000C0E  26E9               	addwf	fsr0l,f,c
  5241   000C10  50DD               	movf	postdec2,w,c
  5242   000C12  22EA               	addwfc	fsr0h,f,c
  5243   000C14  0E03               	movlw	3
  5244   000C16  6EEF               	movwf	indf0,c
  5245   000C18  EF41  F006         	goto	i1l2627
  5246   000C1C                     i1l2623:
  5247   000C1C  EE23  F086         	lfsr	2,_r_queue+537
  5248   000C20  EE00 F06A          	lfsr	0,106
  5249   000C24  50DE               	movf	postinc2,w,c
  5250   000C26  26E9               	addwf	fsr0l,f,c
  5251   000C28  50DD               	movf	postdec2,w,c
  5252   000C2A  22EA               	addwfc	fsr0h,f,c
  5253   000C2C  50EF               	movf	indf0,w,c
  5254   000C2E  0100               	movlb	0	; () banked
  5255   000C30  6FD6               	movwf	??_mutex_lock& (0+255),b
  5256   000C32  51D6               	movf	??_mutex_lock& (0+255),w,b
  5257   000C34  0D03               	mullw	3
  5258   000C36  CFF3 F0D7          	movff	prodl,??_mutex_lock+1
  5259   000C3A  CFF4 F0D8          	movff	prodh,??_mutex_lock+2
  5260   000C3E  EE23  F086         	lfsr	2,_r_queue+537
  5261   000C42  CFDE F0D9          	movff	postinc2,??_mutex_lock+3
  5262   000C46  CFDD F0DA          	movff	postdec2,??_mutex_lock+4
  5263   000C4A  51D7               	movf	(??_mutex_lock+1)& (0+255),w,b
  5264   000C4C  25D9               	addwf	(??_mutex_lock+3)& (0+255),w,b
  5265   000C4E  6FDB               	movwf	(??_mutex_lock+5)& (0+255),b
  5266   000C50  51D8               	movf	(??_mutex_lock+2)& (0+255),w,b
  5267   000C52  21DA               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  5268   000C54  6FDC               	movwf	(??_mutex_lock+6)& (0+255),b
  5269   000C56  0E0A               	movlw	10
  5270   000C58  25DB               	addwf	(??_mutex_lock+5)& (0+255),w,b
  5271   000C5A  6ED9               	movwf	fsr2l,c
  5272   000C5C  0E00               	movlw	0
  5273   000C5E  21DC               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  5274   000C60  6EDA               	movwf	fsr2h,c
  5275   000C62  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5276   000C66  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5277   000C6A  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5278   000C6E                     
  5279                           ; BSR set to: 0
  5280   000C6E  EE23  F086         	lfsr	2,_r_queue+537
  5281   000C72  EE00 F06A          	lfsr	0,106
  5282   000C76  50DE               	movf	postinc2,w,c
  5283   000C78  26E9               	addwf	fsr0l,f,c
  5284   000C7A  50DD               	movf	postdec2,w,c
  5285   000C7C  22EA               	addwfc	fsr0h,f,c
  5286   000C7E  2AEF               	incf	indf0,f,c
  5287   000C80  0006               	pop		;# 
  5288   000C82                     i1l2627:
  5289   000C82  50FC               	movf	252,w,c	;volatile
  5290   000C84  A4D8               	btfss	status,2,c
  5291   000C86  EF47  F006         	goto	i1u166_21
  5292   000C8A  EF49  F006         	goto	i1u166_20
  5293   000C8E                     i1u166_21:
  5294   000C8E  EF0E  F006         	goto	i1l2623
  5295   000C92                     i1u166_20:
  5296   000C92                     i1l2629:
  5297                           
  5298                           ;sync.c: 69:         scheduler();
  5299   000C92  ECEE  F010         	call	_scheduler	;wreg free
  5300   000C96  C384  F0D6         	movff	_r_queue+535,??_mutex_lock
  5301   000C9A  0100               	movlb	0	; () banked
  5302   000C9C  51D6               	movf	??_mutex_lock& (0+255),w,b
  5303   000C9E  0D6B               	mullw	107
  5304   000CA0  0E6D               	movlw	low _r_queue
  5305   000CA2  24F3               	addwf	243,w,c
  5306   000CA4  6FD7               	movwf	(??_mutex_lock+1)& (0+255),b
  5307   000CA6  0E01               	movlw	high _r_queue
  5308   000CA8  20F4               	addwfc	prodh,w,c
  5309   000CAA  6FD8               	movwf	(??_mutex_lock+2)& (0+255),b
  5310   000CAC  C0D7  F386         	movff	??_mutex_lock+1,_r_queue+537
  5311   000CB0  C0D8  F387         	movff	??_mutex_lock+2,_r_queue+538
  5312   000CB4                     
  5313                           ; BSR set to: 0
  5314   000CB4  EE23  F086         	lfsr	2,_r_queue+537
  5315   000CB8  EE00 F002          	lfsr	0,2
  5316   000CBC  50DE               	movf	postinc2,w,c
  5317   000CBE  26E9               	addwf	fsr0l,f,c
  5318   000CC0  50DD               	movf	postdec2,w,c
  5319   000CC2  22EA               	addwfc	fsr0h,f,c
  5320   000CC4  50EF               	movf	indf0,w,c
  5321   000CC6  A4D8               	btfss	status,2,c
  5322   000CC8  EF68  F006         	goto	i1u167_21
  5323   000CCC  EF6A  F006         	goto	i1u167_20
  5324   000CD0                     i1u167_21:
  5325   000CD0  EFFB  F006         	goto	i1l2647
  5326   000CD4                     i1u167_20:
  5327   000CD4                     
  5328                           ; BSR set to: 0
  5329   000CD4  6AFC               	clrf	252,c	;volatile
  5330   000CD6                     
  5331                           ; BSR set to: 0
  5332   000CD6  EE23  F086         	lfsr	2,_r_queue+537
  5333   000CDA  EE00 F06A          	lfsr	0,106
  5334   000CDE  50DE               	movf	postinc2,w,c
  5335   000CE0  26E9               	addwf	fsr0l,f,c
  5336   000CE2  50DD               	movf	postdec2,w,c
  5337   000CE4  22EA               	addwfc	fsr0h,f,c
  5338   000CE6  50EF               	movf	indf0,w,c
  5339   000CE8  B4D8               	btfsc	status,2,c
  5340   000CEA  EF79  F006         	goto	i1u168_21
  5341   000CEE  EF7B  F006         	goto	i1u168_20
  5342   000CF2                     i1u168_21:
  5343   000CF2  EFDF  F006         	goto	i1l99
  5344   000CF6                     i1u168_20:
  5345   000CF6                     
  5346                           ; BSR set to: 0
  5347   000CF6  EE23  F086         	lfsr	2,_r_queue+537
  5348   000CFA  EE00 F009          	lfsr	0,9
  5349   000CFE  50DE               	movf	postinc2,w,c
  5350   000D00  26E9               	addwf	fsr0l,f,c
  5351   000D02  50DD               	movf	postdec2,w,c
  5352   000D04  22EA               	addwfc	fsr0h,f,c
  5353   000D06  50EF               	movf	indf0,w,c
  5354   000D08  6EE0               	movwf	224,c	;volatile
  5355   000D0A  EE23  F086         	lfsr	2,_r_queue+537
  5356   000D0E  EE00 F008          	lfsr	0,8
  5357   000D12  50DE               	movf	postinc2,w,c
  5358   000D14  26E9               	addwf	fsr0l,f,c
  5359   000D16  50DD               	movf	postdec2,w,c
  5360   000D18  22EA               	addwfc	fsr0h,f,c
  5361   000D1A  50EF               	movf	indf0,w,c
  5362   000D1C  6ED8               	movwf	216,c	;volatile
  5363   000D1E  EE23  F086         	lfsr	2,_r_queue+537
  5364   000D22  EE00 F007          	lfsr	0,7
  5365   000D26  50DE               	movf	postinc2,w,c
  5366   000D28  26E9               	addwf	fsr0l,f,c
  5367   000D2A  50DD               	movf	postdec2,w,c
  5368   000D2C  22EA               	addwfc	fsr0h,f,c
  5369   000D2E  50EF               	movf	indf0,w,c
  5370   000D30  6FD6               	movwf	??_mutex_lock& (0+255),b
  5371   000D32  51D6               	movf	??_mutex_lock& (0+255),w,b
  5372   000D34                     i1l100:
  5373                           
  5374                           ; BSR set to: 0
  5375   000D34  0005               	push		;# 
  5376   000D36  EE23  F086         	lfsr	2,_r_queue+537
  5377   000D3A  EE00 F06A          	lfsr	0,106
  5378   000D3E  50DE               	movf	postinc2,w,c
  5379   000D40  26E9               	addwf	fsr0l,f,c
  5380   000D42  50DD               	movf	postdec2,w,c
  5381   000D44  22EA               	addwfc	fsr0h,f,c
  5382   000D46  06EF               	decf	indf0,f,c
  5383   000D48  EE23  F086         	lfsr	2,_r_queue+537
  5384   000D4C  EE00 F06A          	lfsr	0,106
  5385   000D50  50DE               	movf	postinc2,w,c
  5386   000D52  26E9               	addwf	fsr0l,f,c
  5387   000D54  50DD               	movf	postdec2,w,c
  5388   000D56  22EA               	addwfc	fsr0h,f,c
  5389   000D58  50EF               	movf	indf0,w,c
  5390   000D5A  0100               	movlb	0	; () banked
  5391   000D5C  6FD6               	movwf	??_mutex_lock& (0+255),b
  5392   000D5E  51D6               	movf	??_mutex_lock& (0+255),w,b
  5393   000D60  0D03               	mullw	3
  5394   000D62  CFF3 F0D7          	movff	prodl,??_mutex_lock+1
  5395   000D66  CFF4 F0D8          	movff	prodh,??_mutex_lock+2
  5396   000D6A  EE23  F086         	lfsr	2,_r_queue+537
  5397   000D6E  CFDE F0D9          	movff	postinc2,??_mutex_lock+3
  5398   000D72  CFDD F0DA          	movff	postdec2,??_mutex_lock+4
  5399   000D76  51D7               	movf	(??_mutex_lock+1)& (0+255),w,b
  5400   000D78  25D9               	addwf	(??_mutex_lock+3)& (0+255),w,b
  5401   000D7A  6FDB               	movwf	(??_mutex_lock+5)& (0+255),b
  5402   000D7C  51D8               	movf	(??_mutex_lock+2)& (0+255),w,b
  5403   000D7E  21DA               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  5404   000D80  6FDC               	movwf	(??_mutex_lock+6)& (0+255),b
  5405   000D82  0E0A               	movlw	10
  5406   000D84  25DB               	addwf	(??_mutex_lock+5)& (0+255),w,b
  5407   000D86  6ED9               	movwf	fsr2l,c
  5408   000D88  0E00               	movlw	0
  5409   000D8A  21DC               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  5410   000D8C  6EDA               	movwf	fsr2h,c
  5411   000D8E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5412   000D92  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5413   000D96  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5414   000D9A                     
  5415                           ; BSR set to: 0
  5416   000D9A  EE23  F086         	lfsr	2,_r_queue+537
  5417   000D9E  EE00 F06A          	lfsr	0,106
  5418   000DA2  50DE               	movf	postinc2,w,c
  5419   000DA4  26E9               	addwf	fsr0l,f,c
  5420   000DA6  50DD               	movf	postdec2,w,c
  5421   000DA8  22EA               	addwfc	fsr0h,f,c
  5422   000DAA  50EF               	movf	indf0,w,c
  5423   000DAC  A4D8               	btfss	status,2,c
  5424   000DAE  EFDB  F006         	goto	i1u169_21
  5425   000DB2  EFDD  F006         	goto	i1u169_20
  5426   000DB6                     i1u169_21:
  5427   000DB6  EF9A  F006         	goto	i1l100
  5428   000DBA                     i1u169_20:
  5429   000DBA  EFF1  F006         	goto	i1l102
  5430   000DBE                     i1l99:
  5431                           
  5432                           ; BSR set to: 0
  5433   000DBE  0005               	push		;# 
  5434   000DC0  EE23  F086         	lfsr	2,_r_queue+537
  5435   000DC4  EE00 F003          	lfsr	0,3
  5436   000DC8  50DE               	movf	postinc2,w,c
  5437   000DCA  26E9               	addwf	fsr0l,f,c
  5438   000DCC  50DD               	movf	postdec2,w,c
  5439   000DCE  22EA               	addwfc	fsr0h,f,c
  5440   000DD0  CFEE F0D6          	movff	postinc0,??_mutex_lock
  5441   000DD4  CFED F0D7          	movff	postdec0,??_mutex_lock+1
  5442   000DD8  C0D6  FFFD         	movff	??_mutex_lock,tosl	;volatile
  5443   000DDC  C0D7  FFFE         	movff	??_mutex_lock+1,tosh	;volatile
  5444   000DE0  6AFF               	clrf	255,c	;volatile
  5445   000DE2                     i1l102:
  5446   000DE2  EE23  F086         	lfsr	2,_r_queue+537
  5447   000DE6  EE00 F002          	lfsr	0,2
  5448   000DEA  50DE               	movf	postinc2,w,c
  5449   000DEC  26E9               	addwf	fsr0l,f,c
  5450   000DEE  50DD               	movf	postdec2,w,c
  5451   000DF0  22EA               	addwfc	fsr0h,f,c
  5452   000DF2  0E01               	movlw	1
  5453   000DF4  6EEF               	movwf	indf0,c
  5454   000DF6                     i1l2647:
  5455                           
  5456                           ;sync.c: 71:         (INTCONbits.GIE = 1);
  5457   000DF6  8EF2               	bsf	242,7,c	;volatile
  5458   000DF8                     i1l104:
  5459   000DF8  0012               	return		;funcret
  5460   000DFA                     __end_of_mutex_lock:
  5461                           	callstack 0
  5462                           
  5463 ;; *************** function _tarefa_injecao_eletronica *****************
  5464 ;; Defined at:
  5465 ;;		line 46 in file "user_app.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  duty            1   42[BANK0 ] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0
  5480 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5482 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5483 ;;Total ram usage:        1 bytes
  5484 ;; Hardware stack levels used: 1
  5485 ;; Hardware stack levels required when called: 6
  5486 ;; This function calls:
  5487 ;;		_delay
  5488 ;;		_mutex_lock
  5489 ;;		_mutex_unlock
  5490 ;;		_pwm_set
  5491 ;; This function is called by:
  5492 ;;		_main
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text29
  5497   001FA2                     __ptext29:
  5498                           	callstack 0
  5499   001FA2                     _tarefa_injecao_eletronica:
  5500                           	callstack 19
  5501   001FA2                     l290:
  5502   001FA2                     
  5503                           ;user_app.c: 49:     {;user_app.c: 50:         uint8_t duty;;user_app.c: 51:         mut
      +                          ex_lock(&buffer_mutex);
  5504   001FA2  0EB1               	movlw	low _buffer_mutex
  5505   001FA4  0100               	movlb	0	; () banked
  5506   001FA6  6FD5               	movwf	mutex_lock@m& (0+255),b
  5507   001FA8  EC89  F005         	call	_mutex_lock	;wreg free
  5508   001FAC                     
  5509                           ;user_app.c: 52:         duty = accel_data;
  5510   001FAC  C060  F0E2         	movff	_accel_data,tarefa_injecao_eletronica@duty	;volatile
  5511   001FB0                     
  5512                           ;user_app.c: 53:         mutex_unlock(&buffer_mutex);
  5513   001FB0  0EB1               	movlw	low _buffer_mutex
  5514   001FB2  0100               	movlb	0	; () banked
  5515   001FB4  6FD5               	movwf	mutex_unlock@m& (0+255),b
  5516   001FB6  ECA4  F00D         	call	_mutex_unlock	;wreg free
  5517   001FBA                     
  5518                           ;user_app.c: 55:         pwm_set(1, duty);
  5519   001FBA  C0E2  F0E1         	movff	tarefa_injecao_eletronica@duty,pwm_set@duty_cycle
  5520   001FBE  0E01               	movlw	1
  5521   001FC0  EC05  F00B         	call	_pwm_set
  5522   001FC4                     
  5523                           ;user_app.c: 56:         pwm_set(2, duty);
  5524   001FC4  C0E2  F0E1         	movff	tarefa_injecao_eletronica@duty,pwm_set@duty_cycle
  5525   001FC8  0E02               	movlw	2
  5526   001FCA  EC05  F00B         	call	_pwm_set
  5527   001FCE                     
  5528                           ;user_app.c: 59:         delay(5);
  5529   001FCE  0E00               	movlw	0
  5530   001FD0  0101               	movlb	1	; () banked
  5531   001FD2  6F25               	movwf	(delay@time+1)& (0+255),b
  5532   001FD4  0E05               	movlw	5
  5533   001FD6  6F24               	movwf	delay@time& (0+255),b
  5534   001FD8  EC70  F008         	call	_delay	;wreg free
  5535   001FDC  EFD1  F00F         	goto	l290
  5536   001FE0  0012               	return		;funcret
  5537   001FE2                     __end_of_tarefa_injecao_eletronica:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _pwm_set *****************
  5541 ;; Defined at:
  5542 ;;		line 39 in file "io.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  channel         1    wreg     unsigned char 
  5545 ;;  duty_cycle      1   41[BANK0 ] unsigned char 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  channel         1   33[BANK1 ] unsigned char 
  5548 ;;  duty            2   34[BANK1 ] unsigned short 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5558 ;;      Params:         0       1       0       0       0       0       0       0       0
  5559 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       2       0       0       0       0       0       0
  5561 ;;      Totals:         0       1       5       0       0       0       0       0       0
  5562 ;;Total ram usage:        6 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 4
  5565 ;; This function calls:
  5566 ;;		___lldiv
  5567 ;;		___lmul
  5568 ;; This function is called by:
  5569 ;;		_tarefa_injecao_eletronica
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text30
  5574   00160A                     __ptext30:
  5575                           	callstack 0
  5576   00160A                     _pwm_set:
  5577                           	callstack 20
  5578                           
  5579                           ;incstack = 0
  5580                           ;pwm_set@channel stored from wreg
  5581   00160A  0101               	movlb	1	; () banked
  5582   00160C  6F21               	movwf	pwm_set@channel& (0+255),b
  5583   00160E                     
  5584                           ;io.c: 39: void pwm_set(uint8_t channel, uint8_t duty_cycle);io.c: 40: {;io.c: 41:     u
      +                          int16_t duty = ((uint32_t)duty_cycle * (PR2 + 1)) / 100;
  5585   00160E  0100               	movlb	0	; () banked
  5586   001610  51E1               	movf	pwm_set@duty_cycle& (0+255),w,b
  5587   001612  6FD5               	movwf	___lmul@multiplier& (0+255),b
  5588   001614  6BD6               	clrf	(___lmul@multiplier+1)& (0+255),b
  5589   001616  6BD7               	clrf	(___lmul@multiplier+2)& (0+255),b
  5590   001618  6BD8               	clrf	(___lmul@multiplier+3)& (0+255),b
  5591   00161A  50CB               	movf	203,w,c	;volatile
  5592   00161C  0101               	movlb	1	; () banked
  5593   00161E  6F1F               	movwf	??_pwm_set& (0+255),b
  5594   001620  6B20               	clrf	(??_pwm_set+1)& (0+255),b
  5595   001622  0E01               	movlw	1
  5596   001624  271F               	addwf	??_pwm_set& (0+255),f,b
  5597   001626  0E00               	movlw	0
  5598   001628  2320               	addwfc	(??_pwm_set+1)& (0+255),f,b
  5599   00162A  C11F  F0D9         	movff	??_pwm_set,___lmul@multiplicand
  5600   00162E  C120  F0DA         	movff	??_pwm_set+1,___lmul@multiplicand+1
  5601   001632  0100               	movlb	0	; () banked
  5602   001634  0E00               	movlw	0
  5603   001636  BFDA               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
  5604   001638  0EFF               	movlw	-1
  5605   00163A  6FDB               	movwf	(___lmul@multiplicand+2)& (0+255),b
  5606   00163C  6FDC               	movwf	(___lmul@multiplicand+3)& (0+255),b
  5607   00163E  ECA3  F00E         	call	___lmul	;wreg free
  5608   001642  C0D5  F112         	movff	?___lmul,___lldiv@dividend
  5609   001646  C0D6  F113         	movff	?___lmul+1,___lldiv@dividend+1
  5610   00164A  C0D7  F114         	movff	?___lmul+2,___lldiv@dividend+2
  5611   00164E  C0D8  F115         	movff	?___lmul+3,___lldiv@dividend+3
  5612   001652  0E64               	movlw	100
  5613   001654  0101               	movlb	1	; () banked
  5614   001656  6F16               	movwf	___lldiv@divisor& (0+255),b
  5615   001658  0E00               	movlw	0
  5616   00165A  6F17               	movwf	(___lldiv@divisor+1)& (0+255),b
  5617   00165C  0E00               	movlw	0
  5618   00165E  6F18               	movwf	(___lldiv@divisor+2)& (0+255),b
  5619   001660  0E00               	movlw	0
  5620   001662  6F19               	movwf	(___lldiv@divisor+3)& (0+255),b
  5621   001664  EC0A  F00D         	call	___lldiv	;wreg free
  5622   001668  C112  F122         	movff	?___lldiv,pwm_set@duty
  5623   00166C  C113  F123         	movff	?___lldiv+1,pwm_set@duty+1
  5624                           
  5625                           ;io.c: 42:     switch (channel)
  5626   001670  EF78  F00B         	goto	i1l2691
  5627   001674                     i1l2685:
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;io.c: 45:         CCPR1L = duty >> 2;
  5631   001674  C122  F11F         	movff	pwm_set@duty,??_pwm_set
  5632   001678  C123  F120         	movff	pwm_set@duty+1,??_pwm_set+1
  5633   00167C  90D8               	bcf	status,0,c
  5634   00167E  3320               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5635   001680  331F               	rrcf	??_pwm_set& (0+255),f,b
  5636   001682  90D8               	bcf	status,0,c
  5637   001684  3320               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5638   001686  331F               	rrcf	??_pwm_set& (0+255),f,b
  5639   001688  511F               	movf	??_pwm_set& (0+255),w,b
  5640   00168A  6EBE               	movwf	190,c	;volatile
  5641                           
  5642                           ;io.c: 46:         CCP1CONbits.DC1B = duty & 0x3;
  5643   00168C  C122  F11F         	movff	pwm_set@duty,??_pwm_set
  5644   001690  0E03               	movlw	3
  5645   001692  171F               	andwf	??_pwm_set& (0+255),f,b
  5646   001694  3B1F               	swapf	??_pwm_set& (0+255),f,b
  5647   001696  50BD               	movf	189,w,c	;volatile
  5648   001698  191F               	xorwf	??_pwm_set& (0+255),w,b
  5649   00169A  0BCF               	andlw	-49
  5650   00169C  191F               	xorwf	??_pwm_set& (0+255),w,b
  5651   00169E  6EBD               	movwf	189,c	;volatile
  5652                           
  5653                           ;io.c: 47:         break;
  5654   0016A0  EF88  F00B         	goto	i1l230
  5655   0016A4                     i1l2687:
  5656                           
  5657                           ; BSR set to: 1
  5658                           ;io.c: 49:         CCPR2L = duty >> 2;
  5659   0016A4  C122  F11F         	movff	pwm_set@duty,??_pwm_set
  5660   0016A8  C123  F120         	movff	pwm_set@duty+1,??_pwm_set+1
  5661   0016AC  90D8               	bcf	status,0,c
  5662   0016AE  3320               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5663   0016B0  331F               	rrcf	??_pwm_set& (0+255),f,b
  5664   0016B2  90D8               	bcf	status,0,c
  5665   0016B4  3320               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5666   0016B6  331F               	rrcf	??_pwm_set& (0+255),f,b
  5667   0016B8  511F               	movf	??_pwm_set& (0+255),w,b
  5668   0016BA  6EBB               	movwf	187,c	;volatile
  5669                           
  5670                           ;io.c: 50:         CCP2CONbits.DC2B1 = (duty >> 1) & 1;
  5671   0016BC  90D8               	bcf	status,0,c
  5672   0016BE  3123               	rrcf	(pwm_set@duty+1)& (0+255),w,b
  5673   0016C0  6F20               	movwf	(??_pwm_set+1)& (0+255),b
  5674   0016C2  3122               	rrcf	pwm_set@duty& (0+255),w,b
  5675   0016C4  6F1F               	movwf	??_pwm_set& (0+255),b
  5676   0016C6  0E01               	movlw	1
  5677   0016C8  171F               	andwf	??_pwm_set& (0+255),f,b
  5678   0016CA  3B1F               	swapf	??_pwm_set& (0+255),f,b
  5679   0016CC  471F               	rlncf	??_pwm_set& (0+255),f,b
  5680   0016CE  50BA               	movf	186,w,c	;volatile
  5681   0016D0  191F               	xorwf	??_pwm_set& (0+255),w,b
  5682   0016D2  0BDF               	andlw	-33
  5683   0016D4  191F               	xorwf	??_pwm_set& (0+255),w,b
  5684   0016D6  6EBA               	movwf	186,c	;volatile
  5685                           
  5686                           ;io.c: 51:         CCP2CONbits.DC2B0 = duty & 1;
  5687   0016D8  C122  F11F         	movff	pwm_set@duty,??_pwm_set
  5688   0016DC  0E01               	movlw	1
  5689   0016DE  171F               	andwf	??_pwm_set& (0+255),f,b
  5690   0016E0  3B1F               	swapf	??_pwm_set& (0+255),f,b
  5691   0016E2  50BA               	movf	186,w,c	;volatile
  5692   0016E4  191F               	xorwf	??_pwm_set& (0+255),w,b
  5693   0016E6  0BEF               	andlw	-17
  5694   0016E8  191F               	xorwf	??_pwm_set& (0+255),w,b
  5695   0016EA  6EBA               	movwf	186,c	;volatile
  5696                           
  5697                           ;io.c: 52:         break;
  5698   0016EC  EF88  F00B         	goto	i1l230
  5699   0016F0                     i1l2691:
  5700   0016F0  0101               	movlb	1	; () banked
  5701   0016F2  5121               	movf	pwm_set@channel& (0+255),w,b
  5702                           
  5703                           ; Switch size 1, requested type "simple"
  5704                           ; Number of cases is 3, Range of values is 1 to 3
  5705                           ; switch strategies available:
  5706                           ; Name         Instructions Cycles
  5707                           ; simple_byte           10     6 (average)
  5708                           ;	Chosen strategy is simple_byte
  5709   0016F4  0A01               	xorlw	1	; case 1
  5710   0016F6  B4D8               	btfsc	status,2,c
  5711   0016F8  EF3A  F00B         	goto	i1l2685
  5712   0016FC  0A03               	xorlw	3	; case 2
  5713   0016FE  B4D8               	btfsc	status,2,c
  5714   001700  EF52  F00B         	goto	i1l2687
  5715   001704  0A01               	xorlw	1	; case 3
  5716   001706  B4D8               	btfsc	status,2,c
  5717   001708  EF88  F00B         	goto	i1l230
  5718   00170C  EF88  F00B         	goto	i1l230
  5719   001710                     i1l230:
  5720                           
  5721                           ; BSR set to: 1
  5722   001710  0012               	return		;funcret
  5723   001712                     __end_of_pwm_set:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function ___lmul *****************
  5727 ;; Defined at:
  5728 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  multiplier      4   29[BANK0 ] unsigned long 
  5731 ;;  multiplicand    4   33[BANK0 ] unsigned long 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  product         4   37[BANK0 ] unsigned long 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  4   29[BANK0 ] unsigned long 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         0       8       0       0       0       0       0       0       0
  5744 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5746 ;;      Totals:         0      12       0       0       0       0       0       0       0
  5747 ;;Total ram usage:       12 bytes
  5748 ;; Hardware stack levels used: 1
  5749 ;; Hardware stack levels required when called: 3
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_pwm_set
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text31
  5758   001D46                     __ptext31:
  5759                           	callstack 0
  5760   001D46                     ___lmul:
  5761                           	callstack 20
  5762   001D46  0E00               	movlw	0
  5763   001D48  0100               	movlb	0	; () banked
  5764   001D4A  6FDD               	movwf	___lmul@product& (0+255),b
  5765   001D4C  0E00               	movlw	0
  5766   001D4E  6FDE               	movwf	(___lmul@product+1)& (0+255),b
  5767   001D50  0E00               	movlw	0
  5768   001D52  6FDF               	movwf	(___lmul@product+2)& (0+255),b
  5769   001D54  0E00               	movlw	0
  5770   001D56  6FE0               	movwf	(___lmul@product+3)& (0+255),b
  5771   001D58                     i1l2531:
  5772                           
  5773                           ; BSR set to: 0
  5774   001D58  A1D5               	btfss	___lmul@multiplier& (0+255),0,b
  5775   001D5A  EFB1  F00E         	goto	i1u153_21
  5776   001D5E  EFB3  F00E         	goto	i1u153_20
  5777   001D62                     i1u153_21:
  5778   001D62  EFBB  F00E         	goto	i1l2535
  5779   001D66                     i1u153_20:
  5780   001D66                     
  5781                           ; BSR set to: 0
  5782   001D66  51D9               	movf	___lmul@multiplicand& (0+255),w,b
  5783   001D68  27DD               	addwf	___lmul@product& (0+255),f,b
  5784   001D6A  51DA               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  5785   001D6C  23DE               	addwfc	(___lmul@product+1)& (0+255),f,b
  5786   001D6E  51DB               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  5787   001D70  23DF               	addwfc	(___lmul@product+2)& (0+255),f,b
  5788   001D72  51DC               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  5789   001D74  23E0               	addwfc	(___lmul@product+3)& (0+255),f,b
  5790   001D76                     i1l2535:
  5791                           
  5792                           ; BSR set to: 0
  5793   001D76  90D8               	bcf	status,0,c
  5794   001D78  37D9               	rlcf	___lmul@multiplicand& (0+255),f,b
  5795   001D7A  37DA               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  5796   001D7C  37DB               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  5797   001D7E  37DC               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  5798   001D80                     
  5799                           ; BSR set to: 0
  5800   001D80  90D8               	bcf	status,0,c
  5801   001D82  33D8               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  5802   001D84  33D7               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  5803   001D86  33D6               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  5804   001D88  33D5               	rrcf	___lmul@multiplier& (0+255),f,b
  5805   001D8A  51D5               	movf	___lmul@multiplier& (0+255),w,b
  5806   001D8C  11D6               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  5807   001D8E  11D7               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  5808   001D90  11D8               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  5809   001D92  A4D8               	btfss	status,2,c
  5810   001D94  EFCE  F00E         	goto	i1u154_21
  5811   001D98  EFD0  F00E         	goto	i1u154_20
  5812   001D9C                     i1u154_21:
  5813   001D9C  EFAC  F00E         	goto	i1l2531
  5814   001DA0                     i1u154_20:
  5815   001DA0                     
  5816                           ; BSR set to: 0
  5817   001DA0  C0DD  F0D5         	movff	___lmul@product,?___lmul
  5818   001DA4  C0DE  F0D6         	movff	___lmul@product+1,?___lmul+1
  5819   001DA8  C0DF  F0D7         	movff	___lmul@product+2,?___lmul+2
  5820   001DAC  C0E0  F0D8         	movff	___lmul@product+3,?___lmul+3
  5821   001DB0                     
  5822                           ; BSR set to: 0
  5823   001DB0  0012               	return		;funcret
  5824   001DB2                     __end_of___lmul:
  5825                           	callstack 0
  5826                           
  5827 ;; *************** function ___lldiv *****************
  5828 ;; Defined at:
  5829 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  dividend        4   18[BANK1 ] unsigned long 
  5832 ;;  divisor         4   22[BANK1 ] unsigned long 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  quotient        4   26[BANK1 ] unsigned long 
  5835 ;;  counter         1   30[BANK1 ] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  4   18[BANK1 ] unsigned long 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5845 ;;      Params:         0       0       8       0       0       0       0       0       0
  5846 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5848 ;;      Totals:         0       0      13       0       0       0       0       0       0
  5849 ;;Total ram usage:       13 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 3
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_pwm_set
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text32
  5860   001A14                     __ptext32:
  5861                           	callstack 0
  5862   001A14                     ___lldiv:
  5863                           	callstack 20
  5864   001A14  0E00               	movlw	0
  5865   001A16  0101               	movlb	1	; () banked
  5866   001A18  6F1A               	movwf	___lldiv@quotient& (0+255),b
  5867   001A1A  0E00               	movlw	0
  5868   001A1C  6F1B               	movwf	(___lldiv@quotient+1)& (0+255),b
  5869   001A1E  0E00               	movlw	0
  5870   001A20  6F1C               	movwf	(___lldiv@quotient+2)& (0+255),b
  5871   001A22  0E00               	movlw	0
  5872   001A24  6F1D               	movwf	(___lldiv@quotient+3)& (0+255),b
  5873   001A26                     
  5874                           ; BSR set to: 1
  5875   001A26  5116               	movf	___lldiv@divisor& (0+255),w,b
  5876   001A28  1117               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5877   001A2A  1118               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5878   001A2C  1119               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5879   001A2E  B4D8               	btfsc	status,2,c
  5880   001A30  EF1C  F00D         	goto	i1u155_21
  5881   001A34  EF1E  F00D         	goto	i1u155_20
  5882   001A38                     i1u155_21:
  5883   001A38  EF54  F00D         	goto	i1l493
  5884   001A3C                     i1u155_20:
  5885   001A3C                     
  5886                           ; BSR set to: 1
  5887   001A3C  0E01               	movlw	1
  5888   001A3E  6F1E               	movwf	___lldiv@counter& (0+255),b
  5889   001A40  EF28  F00D         	goto	i1l2547
  5890   001A44                     i1l2545:
  5891                           
  5892                           ; BSR set to: 1
  5893   001A44  90D8               	bcf	status,0,c
  5894   001A46  3716               	rlcf	___lldiv@divisor& (0+255),f,b
  5895   001A48  3717               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5896   001A4A  3718               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5897   001A4C  3719               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5898   001A4E  2B1E               	incf	___lldiv@counter& (0+255),f,b
  5899   001A50                     i1l2547:
  5900                           
  5901                           ; BSR set to: 1
  5902   001A50  AF19               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5903   001A52  EF2D  F00D         	goto	i1u156_21
  5904   001A56  EF2F  F00D         	goto	i1u156_20
  5905   001A5A                     i1u156_21:
  5906   001A5A  EF22  F00D         	goto	i1l2545
  5907   001A5E                     i1u156_20:
  5908   001A5E                     i1l2549:
  5909                           
  5910                           ; BSR set to: 1
  5911   001A5E  90D8               	bcf	status,0,c
  5912   001A60  371A               	rlcf	___lldiv@quotient& (0+255),f,b
  5913   001A62  371B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5914   001A64  371C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5915   001A66  371D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5916   001A68                     
  5917                           ; BSR set to: 1
  5918   001A68  5116               	movf	___lldiv@divisor& (0+255),w,b
  5919   001A6A  5D12               	subwf	___lldiv@dividend& (0+255),w,b
  5920   001A6C  5117               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5921   001A6E  5913               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5922   001A70  5118               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5923   001A72  5914               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5924   001A74  5119               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5925   001A76  5915               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5926   001A78  A0D8               	btfss	status,0,c
  5927   001A7A  EF41  F00D         	goto	i1u157_21
  5928   001A7E  EF43  F00D         	goto	i1u157_20
  5929   001A82                     i1u157_21:
  5930   001A82  EF4C  F00D         	goto	i1l2557
  5931   001A86                     i1u157_20:
  5932   001A86                     
  5933                           ; BSR set to: 1
  5934   001A86  5116               	movf	___lldiv@divisor& (0+255),w,b
  5935   001A88  5F12               	subwf	___lldiv@dividend& (0+255),f,b
  5936   001A8A  5117               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5937   001A8C  5B13               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5938   001A8E  5118               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5939   001A90  5B14               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5940   001A92  5119               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5941   001A94  5B15               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5942   001A96                     
  5943                           ; BSR set to: 1
  5944   001A96  811A               	bsf	___lldiv@quotient& (0+255),0,b
  5945   001A98                     i1l2557:
  5946                           
  5947                           ; BSR set to: 1
  5948   001A98  90D8               	bcf	status,0,c
  5949   001A9A  3319               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5950   001A9C  3318               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5951   001A9E  3317               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5952   001AA0  3316               	rrcf	___lldiv@divisor& (0+255),f,b
  5953   001AA2                     
  5954                           ; BSR set to: 1
  5955   001AA2  2F1E               	decfsz	___lldiv@counter& (0+255),f,b
  5956   001AA4  EF2F  F00D         	goto	i1l2549
  5957   001AA8                     i1l493:
  5958                           
  5959                           ; BSR set to: 1
  5960   001AA8  C11A  F112         	movff	___lldiv@quotient,?___lldiv
  5961   001AAC  C11B  F113         	movff	___lldiv@quotient+1,?___lldiv+1
  5962   001AB0  C11C  F114         	movff	___lldiv@quotient+2,?___lldiv+2
  5963   001AB4  C11D  F115         	movff	___lldiv@quotient+3,?___lldiv+3
  5964   001AB8                     
  5965                           ; BSR set to: 1
  5966   001AB8  0012               	return		;funcret
  5967   001ABA                     __end_of___lldiv:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function _tarefa_estabilidade *****************
  5971 ;; Defined at:
  5972 ;;		line 70 in file "user_app.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 6
  5993 ;; This function calls:
  5994 ;;		_change_state
  5995 ;;		_delay
  5996 ;; This function is called by:
  5997 ;;		_main
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text33
  6002   00204E                     __ptext33:
  6003                           	callstack 0
  6004   00204E                     _tarefa_estabilidade:
  6005                           	callstack 19
  6006   00204E                     l299:
  6007   00204E                     
  6008                           ;user_app.c: 73:     {;user_app.c: 74:         if (est_flag)
  6009   00204E  5023               	movf	_est_flag^0,w,c	;volatile
  6010   002050  B4D8               	btfsc	status,2,c
  6011   002052  EF2D  F010         	goto	u214_21
  6012   002056  EF2F  F010         	goto	u214_20
  6013   00205A                     u214_21:
  6014   00205A  EF39  F010         	goto	l300
  6015   00205E                     u214_20:
  6016   00205E                     
  6017                           ;user_app.c: 75:         {;user_app.c: 76:             LATDbits.LD3 = 1;
  6018   00205E  868C               	bsf	140,3,c	;volatile
  6019   002060                     
  6020                           ;user_app.c: 77:             delay(100);
  6021   002060  0E00               	movlw	0
  6022   002062  0101               	movlb	1	; () banked
  6023   002064  6F25               	movwf	(delay@time+1)& (0+255),b
  6024   002066  0E64               	movlw	100
  6025   002068  6F24               	movwf	delay@time& (0+255),b
  6026   00206A  EC70  F008         	call	_delay	;wreg free
  6027   00206E                     
  6028                           ;user_app.c: 78:             LATDbits.LD3 = 0;
  6029   00206E  968C               	bcf	140,3,c	;volatile
  6030   002070                     
  6031                           ;user_app.c: 79:             est_flag = 0;
  6032   002070  6A23               	clrf	_est_flag^0,c	;volatile
  6033   002072                     l300:
  6034                           
  6035                           ;user_app.c: 82:         change_state(WAITING);
  6036   002072  0E02               	movlw	2
  6037   002074  ECC1  F009         	call	_change_state
  6038   002078  EF27  F010         	goto	l299
  6039   00207C  0012               	return		;funcret
  6040   00207E                     __end_of_tarefa_estabilidade:
  6041                           	callstack 0
  6042                           
  6043 ;; *************** function _change_state *****************
  6044 ;; Defined at:
  6045 ;;		line 80 in file "kernel.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  new_state       1    wreg     enum E3348
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  new_state       1   43[BANK1 ] enum E3348
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0
  6060 ;;      Locals:         0       0       1       0       0       0       0       0       0
  6061 ;;      Temps:          0       0       7       0       0       0       0       0       0
  6062 ;;      Totals:         0       0       8       0       0       0       0       0       0
  6063 ;;Total ram usage:        8 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 5
  6066 ;; This function calls:
  6067 ;;		_scheduler
  6068 ;; This function is called by:
  6069 ;;		_tarefa_estabilidade
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text34
  6074   001382                     __ptext34:
  6075                           	callstack 0
  6076   001382                     _change_state:
  6077                           	callstack 19
  6078                           
  6079                           ;incstack = 0
  6080                           ;change_state@new_state stored from wreg
  6081   001382  0101               	movlb	1	; () banked
  6082   001384  6F2B               	movwf	change_state@new_state& (0+255),b
  6083   001386                     
  6084                           ;kernel.c: 80: void change_state(state_t new_state);kernel.c: 81: {;kernel.c: 82:     (I
      +                          NTCONbits.GIE = 0);
  6085   001386  9EF2               	bcf	242,7,c	;volatile
  6086   001388  C384  F124         	movff	_r_queue+535,??_change_state
  6087   00138C  0101               	movlb	1	; () banked
  6088   00138E  5124               	movf	??_change_state& (0+255),w,b
  6089   001390  0D6B               	mullw	107
  6090   001392  0E6D               	movlw	low _r_queue
  6091   001394  24F3               	addwf	243,w,c
  6092   001396  6F25               	movwf	(??_change_state+1)& (0+255),b
  6093   001398  0E01               	movlw	high _r_queue
  6094   00139A  20F4               	addwfc	prodh,w,c
  6095   00139C  6F26               	movwf	(??_change_state+2)& (0+255),b
  6096   00139E  C125  F386         	movff	??_change_state+1,_r_queue+537
  6097   0013A2  C126  F387         	movff	??_change_state+2,_r_queue+538
  6098   0013A6                     
  6099                           ; BSR set to: 1
  6100   0013A6  EE23  F086         	lfsr	2,_r_queue+537
  6101   0013AA  EE00 F002          	lfsr	0,2
  6102   0013AE  50DE               	movf	postinc2,w,c
  6103   0013B0  26E9               	addwf	fsr0l,f,c
  6104   0013B2  50DD               	movf	postdec2,w,c
  6105   0013B4  22EA               	addwfc	fsr0h,f,c
  6106   0013B6  04EE               	decf	postinc0,w,c
  6107   0013B8  A4D8               	btfss	status,2,c
  6108   0013BA  EFE1  F009         	goto	i1u176_21
  6109   0013BE  EFE3  F009         	goto	i1u176_20
  6110   0013C2                     i1u176_21:
  6111   0013C2  EF51  F00A         	goto	i1l2743
  6112   0013C6                     i1u176_20:
  6113   0013C6                     
  6114                           ; BSR set to: 1
  6115   0013C6  EE23  F086         	lfsr	2,_r_queue+537
  6116   0013CA  EE00 F009          	lfsr	0,9
  6117   0013CE  50DE               	movf	postinc2,w,c
  6118   0013D0  26E9               	addwf	fsr0l,f,c
  6119   0013D2  50DD               	movf	postdec2,w,c
  6120   0013D4  22EA               	addwfc	fsr0h,f,c
  6121   0013D6  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6122   0013DA  EE23  F086         	lfsr	2,_r_queue+537
  6123   0013DE  EE00 F008          	lfsr	0,8
  6124   0013E2  50DE               	movf	postinc2,w,c
  6125   0013E4  26E9               	addwf	fsr0l,f,c
  6126   0013E6  50DD               	movf	postdec2,w,c
  6127   0013E8  22EA               	addwfc	fsr0h,f,c
  6128   0013EA  CFD8 FFEF          	movff	status,indf0	;volatile
  6129   0013EE  EE23  F086         	lfsr	2,_r_queue+537
  6130   0013F2  EE00 F007          	lfsr	0,7
  6131   0013F6  50DE               	movf	postinc2,w,c
  6132   0013F8  26E9               	addwf	fsr0l,f,c
  6133   0013FA  50DD               	movf	postdec2,w,c
  6134   0013FC  22EA               	addwfc	fsr0h,f,c
  6135   0013FE  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6136   001402  EE23  F086         	lfsr	2,_r_queue+537
  6137   001406  EE00 F06A          	lfsr	0,106
  6138   00140A  50DE               	movf	postinc2,w,c
  6139   00140C  26E9               	addwf	fsr0l,f,c
  6140   00140E  50DD               	movf	postdec2,w,c
  6141   001410  22EA               	addwfc	fsr0h,f,c
  6142   001412  6AEF               	clrf	indf0,c
  6143   001414  EE23  F086         	lfsr	2,_r_queue+537
  6144   001418  EE00 F002          	lfsr	0,2
  6145   00141C  50DE               	movf	postinc2,w,c
  6146   00141E  26E9               	addwf	fsr0l,f,c
  6147   001420  50DD               	movf	postdec2,w,c
  6148   001422  22EA               	addwfc	fsr0h,f,c
  6149   001424  C12B  FFEF         	movff	change_state@new_state,indf0
  6150   001428  EF49  F00A         	goto	i1l2741
  6151   00142C                     i1l2737:
  6152   00142C  EE23  F086         	lfsr	2,_r_queue+537
  6153   001430  EE00 F06A          	lfsr	0,106
  6154   001434  50DE               	movf	postinc2,w,c
  6155   001436  26E9               	addwf	fsr0l,f,c
  6156   001438  50DD               	movf	postdec2,w,c
  6157   00143A  22EA               	addwfc	fsr0h,f,c
  6158   00143C  50EF               	movf	indf0,w,c
  6159   00143E  0101               	movlb	1	; () banked
  6160   001440  6F24               	movwf	??_change_state& (0+255),b
  6161   001442  5124               	movf	??_change_state& (0+255),w,b
  6162   001444  0D03               	mullw	3
  6163   001446  CFF3 F125          	movff	prodl,??_change_state+1
  6164   00144A  CFF4 F126          	movff	prodh,??_change_state+2
  6165   00144E  EE23  F086         	lfsr	2,_r_queue+537
  6166   001452  CFDE F127          	movff	postinc2,??_change_state+3
  6167   001456  CFDD F128          	movff	postdec2,??_change_state+4
  6168   00145A  5125               	movf	(??_change_state+1)& (0+255),w,b
  6169   00145C  2527               	addwf	(??_change_state+3)& (0+255),w,b
  6170   00145E  6F29               	movwf	(??_change_state+5)& (0+255),b
  6171   001460  5126               	movf	(??_change_state+2)& (0+255),w,b
  6172   001462  2128               	addwfc	(??_change_state+4)& (0+255),w,b
  6173   001464  6F2A               	movwf	(??_change_state+6)& (0+255),b
  6174   001466  0E0A               	movlw	10
  6175   001468  2529               	addwf	(??_change_state+5)& (0+255),w,b
  6176   00146A  6ED9               	movwf	fsr2l,c
  6177   00146C  0E00               	movlw	0
  6178   00146E  212A               	addwfc	(??_change_state+6)& (0+255),w,b
  6179   001470  6EDA               	movwf	fsr2h,c
  6180   001472  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6181   001476  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6182   00147A  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6183   00147E                     
  6184                           ; BSR set to: 1
  6185   00147E  EE23  F086         	lfsr	2,_r_queue+537
  6186   001482  EE00 F06A          	lfsr	0,106
  6187   001486  50DE               	movf	postinc2,w,c
  6188   001488  26E9               	addwf	fsr0l,f,c
  6189   00148A  50DD               	movf	postdec2,w,c
  6190   00148C  22EA               	addwfc	fsr0h,f,c
  6191   00148E  2AEF               	incf	indf0,f,c
  6192   001490  0006               	pop		;# 
  6193   001492                     i1l2741:
  6194   001492  50FC               	movf	252,w,c	;volatile
  6195   001494  A4D8               	btfss	status,2,c
  6196   001496  EF4F  F00A         	goto	i1u177_21
  6197   00149A  EF51  F00A         	goto	i1u177_20
  6198   00149E                     i1u177_21:
  6199   00149E  EF16  F00A         	goto	i1l2737
  6200   0014A2                     i1u177_20:
  6201   0014A2                     i1l2743:
  6202                           
  6203                           ;kernel.c: 85:     scheduler();
  6204   0014A2  ECEE  F010         	call	_scheduler	;wreg free
  6205   0014A6  C384  F124         	movff	_r_queue+535,??_change_state
  6206   0014AA  0101               	movlb	1	; () banked
  6207   0014AC  5124               	movf	??_change_state& (0+255),w,b
  6208   0014AE  0D6B               	mullw	107
  6209   0014B0  0E6D               	movlw	low _r_queue
  6210   0014B2  24F3               	addwf	243,w,c
  6211   0014B4  6F25               	movwf	(??_change_state+1)& (0+255),b
  6212   0014B6  0E01               	movlw	high _r_queue
  6213   0014B8  20F4               	addwfc	prodh,w,c
  6214   0014BA  6F26               	movwf	(??_change_state+2)& (0+255),b
  6215   0014BC  C125  F386         	movff	??_change_state+1,_r_queue+537
  6216   0014C0  C126  F387         	movff	??_change_state+2,_r_queue+538
  6217   0014C4                     
  6218                           ; BSR set to: 1
  6219   0014C4  EE23  F086         	lfsr	2,_r_queue+537
  6220   0014C8  EE00 F002          	lfsr	0,2
  6221   0014CC  50DE               	movf	postinc2,w,c
  6222   0014CE  26E9               	addwf	fsr0l,f,c
  6223   0014D0  50DD               	movf	postdec2,w,c
  6224   0014D2  22EA               	addwfc	fsr0h,f,c
  6225   0014D4  50EF               	movf	indf0,w,c
  6226   0014D6  A4D8               	btfss	status,2,c
  6227   0014D8  EF70  F00A         	goto	i1u178_21
  6228   0014DC  EF72  F00A         	goto	i1u178_20
  6229   0014E0                     i1u178_21:
  6230   0014E0  EF03  F00B         	goto	i1l2761
  6231   0014E4                     i1u178_20:
  6232   0014E4                     
  6233                           ; BSR set to: 1
  6234   0014E4  6AFC               	clrf	252,c	;volatile
  6235   0014E6                     
  6236                           ; BSR set to: 1
  6237   0014E6  EE23  F086         	lfsr	2,_r_queue+537
  6238   0014EA  EE00 F06A          	lfsr	0,106
  6239   0014EE  50DE               	movf	postinc2,w,c
  6240   0014F0  26E9               	addwf	fsr0l,f,c
  6241   0014F2  50DD               	movf	postdec2,w,c
  6242   0014F4  22EA               	addwfc	fsr0h,f,c
  6243   0014F6  50EF               	movf	indf0,w,c
  6244   0014F8  B4D8               	btfsc	status,2,c
  6245   0014FA  EF81  F00A         	goto	i1u179_21
  6246   0014FE  EF83  F00A         	goto	i1u179_20
  6247   001502                     i1u179_21:
  6248   001502  EFE7  F00A         	goto	i1l394
  6249   001506                     i1u179_20:
  6250   001506                     
  6251                           ; BSR set to: 1
  6252   001506  EE23  F086         	lfsr	2,_r_queue+537
  6253   00150A  EE00 F009          	lfsr	0,9
  6254   00150E  50DE               	movf	postinc2,w,c
  6255   001510  26E9               	addwf	fsr0l,f,c
  6256   001512  50DD               	movf	postdec2,w,c
  6257   001514  22EA               	addwfc	fsr0h,f,c
  6258   001516  50EF               	movf	indf0,w,c
  6259   001518  6EE0               	movwf	224,c	;volatile
  6260   00151A  EE23  F086         	lfsr	2,_r_queue+537
  6261   00151E  EE00 F008          	lfsr	0,8
  6262   001522  50DE               	movf	postinc2,w,c
  6263   001524  26E9               	addwf	fsr0l,f,c
  6264   001526  50DD               	movf	postdec2,w,c
  6265   001528  22EA               	addwfc	fsr0h,f,c
  6266   00152A  50EF               	movf	indf0,w,c
  6267   00152C  6ED8               	movwf	216,c	;volatile
  6268   00152E  EE23  F086         	lfsr	2,_r_queue+537
  6269   001532  EE00 F007          	lfsr	0,7
  6270   001536  50DE               	movf	postinc2,w,c
  6271   001538  26E9               	addwf	fsr0l,f,c
  6272   00153A  50DD               	movf	postdec2,w,c
  6273   00153C  22EA               	addwfc	fsr0h,f,c
  6274   00153E  50EF               	movf	indf0,w,c
  6275   001540  6F24               	movwf	??_change_state& (0+255),b
  6276   001542  5124               	movf	??_change_state& (0+255),w,b
  6277   001544                     i1l395:
  6278                           
  6279                           ; BSR set to: 1
  6280   001544  0005               	push		;# 
  6281   001546  EE23  F086         	lfsr	2,_r_queue+537
  6282   00154A  EE00 F06A          	lfsr	0,106
  6283   00154E  50DE               	movf	postinc2,w,c
  6284   001550  26E9               	addwf	fsr0l,f,c
  6285   001552  50DD               	movf	postdec2,w,c
  6286   001554  22EA               	addwfc	fsr0h,f,c
  6287   001556  06EF               	decf	indf0,f,c
  6288   001558  EE23  F086         	lfsr	2,_r_queue+537
  6289   00155C  EE00 F06A          	lfsr	0,106
  6290   001560  50DE               	movf	postinc2,w,c
  6291   001562  26E9               	addwf	fsr0l,f,c
  6292   001564  50DD               	movf	postdec2,w,c
  6293   001566  22EA               	addwfc	fsr0h,f,c
  6294   001568  50EF               	movf	indf0,w,c
  6295   00156A  0101               	movlb	1	; () banked
  6296   00156C  6F24               	movwf	??_change_state& (0+255),b
  6297   00156E  5124               	movf	??_change_state& (0+255),w,b
  6298   001570  0D03               	mullw	3
  6299   001572  CFF3 F125          	movff	prodl,??_change_state+1
  6300   001576  CFF4 F126          	movff	prodh,??_change_state+2
  6301   00157A  EE23  F086         	lfsr	2,_r_queue+537
  6302   00157E  CFDE F127          	movff	postinc2,??_change_state+3
  6303   001582  CFDD F128          	movff	postdec2,??_change_state+4
  6304   001586  5125               	movf	(??_change_state+1)& (0+255),w,b
  6305   001588  2527               	addwf	(??_change_state+3)& (0+255),w,b
  6306   00158A  6F29               	movwf	(??_change_state+5)& (0+255),b
  6307   00158C  5126               	movf	(??_change_state+2)& (0+255),w,b
  6308   00158E  2128               	addwfc	(??_change_state+4)& (0+255),w,b
  6309   001590  6F2A               	movwf	(??_change_state+6)& (0+255),b
  6310   001592  0E0A               	movlw	10
  6311   001594  2529               	addwf	(??_change_state+5)& (0+255),w,b
  6312   001596  6ED9               	movwf	fsr2l,c
  6313   001598  0E00               	movlw	0
  6314   00159A  212A               	addwfc	(??_change_state+6)& (0+255),w,b
  6315   00159C  6EDA               	movwf	fsr2h,c
  6316   00159E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6317   0015A2  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6318   0015A6  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6319   0015AA                     
  6320                           ; BSR set to: 1
  6321   0015AA  EE23  F086         	lfsr	2,_r_queue+537
  6322   0015AE  EE00 F06A          	lfsr	0,106
  6323   0015B2  50DE               	movf	postinc2,w,c
  6324   0015B4  26E9               	addwf	fsr0l,f,c
  6325   0015B6  50DD               	movf	postdec2,w,c
  6326   0015B8  22EA               	addwfc	fsr0h,f,c
  6327   0015BA  50EF               	movf	indf0,w,c
  6328   0015BC  A4D8               	btfss	status,2,c
  6329   0015BE  EFE3  F00A         	goto	i1u180_21
  6330   0015C2  EFE5  F00A         	goto	i1u180_20
  6331   0015C6                     i1u180_21:
  6332   0015C6  EFA2  F00A         	goto	i1l395
  6333   0015CA                     i1u180_20:
  6334   0015CA  EFF9  F00A         	goto	i1l397
  6335   0015CE                     i1l394:
  6336                           
  6337                           ; BSR set to: 1
  6338   0015CE  0005               	push		;# 
  6339   0015D0  EE23  F086         	lfsr	2,_r_queue+537
  6340   0015D4  EE00 F003          	lfsr	0,3
  6341   0015D8  50DE               	movf	postinc2,w,c
  6342   0015DA  26E9               	addwf	fsr0l,f,c
  6343   0015DC  50DD               	movf	postdec2,w,c
  6344   0015DE  22EA               	addwfc	fsr0h,f,c
  6345   0015E0  CFEE F124          	movff	postinc0,??_change_state
  6346   0015E4  CFED F125          	movff	postdec0,??_change_state+1
  6347   0015E8  C124  FFFD         	movff	??_change_state,tosl	;volatile
  6348   0015EC  C125  FFFE         	movff	??_change_state+1,tosh	;volatile
  6349   0015F0  6AFF               	clrf	255,c	;volatile
  6350   0015F2                     i1l397:
  6351   0015F2  EE23  F086         	lfsr	2,_r_queue+537
  6352   0015F6  EE00 F002          	lfsr	0,2
  6353   0015FA  50DE               	movf	postinc2,w,c
  6354   0015FC  26E9               	addwf	fsr0l,f,c
  6355   0015FE  50DD               	movf	postdec2,w,c
  6356   001600  22EA               	addwfc	fsr0h,f,c
  6357   001602  0E01               	movlw	1
  6358   001604  6EEF               	movwf	indf0,c
  6359   001606                     i1l2761:
  6360                           
  6361                           ;kernel.c: 88:     (INTCONbits.GIE = 1);
  6362   001606  8EF2               	bsf	242,7,c	;volatile
  6363   001608  0012               	return		;funcret
  6364   00160A                     __end_of_change_state:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _idle *****************
  6368 ;; Defined at:
  6369 ;;		line 92 in file "kernel.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       1       0       0       0       0       0       0
  6386 ;;      Totals:         0       0       1       0       0       0       0       0       0
  6387 ;;Total ram usage:        1 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 3
  6390 ;; This function calls:
  6391 ;;		Nothing
  6392 ;; This function is called by:
  6393 ;;		_os_init
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text35
  6398   00207E                     __ptext35:
  6399                           	callstack 0
  6400   00207E                     _idle:
  6401                           	callstack 22
  6402   00207E                     
  6403                           ;kernel.c: 95:     TRISDbits.RD7 = 0;
  6404   00207E  9E95               	bcf	149,7,c	;volatile
  6405   002080                     l3197:
  6406                           
  6407                           ;kernel.c: 99:     {;kernel.c: 101:         LATDbits.LATD7 = ~PORTDbits.RD7;
  6408   002080  BE83               	btfsc	131,7,c	;volatile
  6409   002082  EF45  F010         	goto	u216_21
  6410   002086  EF48  F010         	goto	u216_20
  6411   00208A                     u216_21:
  6412   00208A  0E01               	movlw	1
  6413   00208C  EF49  F010         	goto	u216_26
  6414   002090                     u216_20:
  6415   002090  0E00               	movlw	0
  6416   002092                     u216_26:
  6417   002092  0AFF               	xorlw	255
  6418   002094  0101               	movlb	1	; () banked
  6419   002096  6F00               	movwf	??_idle& (0+255),b
  6420   002098  3300               	rrcf	??_idle& (0+255),f,b
  6421   00209A  3300               	rrcf	??_idle& (0+255),f,b
  6422   00209C  508C               	movf	140,w,c	;volatile
  6423   00209E  1900               	xorwf	??_idle& (0+255),w,b
  6424   0020A0  0B7F               	andlw	-129
  6425   0020A2  1900               	xorwf	??_idle& (0+255),w,b
  6426   0020A4  6E8C               	movwf	140,c	;volatile
  6427   0020A6                     
  6428                           ; BSR set to: 1
  6429                           ;kernel.c: 103:         __nop();
  6430   0020A6  0000               	nop	
  6431   0020A8  EF40  F010         	goto	l3197
  6432   0020AC  0012               	return		;funcret
  6433   0020AE                     __end_of_idle:
  6434                           	callstack 0
  6435                           
  6436 ;; *************** function _ISR *****************
  6437 ;; Defined at:
  6438 ;;		line 8 in file "timer.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+11, tosl, prod
      +l, prodh, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6454 ;;      Temps:         19       0       0       0       0       0       0       0       0
  6455 ;;      Totals:        19       0       0       0       0       0       0       0       0
  6456 ;;Total ram usage:       19 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 2
  6459 ;; This function calls:
  6460 ;;		_decrease_time
  6461 ;;		_ext_int_service
  6462 ;;		_scheduler
  6463 ;; This function is called by:
  6464 ;;		Interrupt level 2
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	intcode
  6469   000008                     __pintcode:
  6470                           	callstack 0
  6471   000008                     _ISR:
  6472                           	callstack 18
  6473                           
  6474                           ;incstack = 0
  6475   000008  ED01  F004         	call	int_func,f	;refresh shadow registers
  6476                           
  6477                           	psect	intcode_body
  6478   000802                     __pintcode_body:
  6479                           	callstack 18
  6480   000802                     int_func:
  6481                           	callstack 18
  6482   000802  0006               	pop		; remove dummy address from shadow register refresh
  6483   000804  CFFA F041          	movff	pclath,??_ISR+7
  6484   000808  CFFB F042          	movff	pclatu,??_ISR+8
  6485   00080C  CFE9 F043          	movff	fsr0l,??_ISR+9
  6486   000810  CFEA F044          	movff	fsr0h,??_ISR+10
  6487   000814  CFE1 F045          	movff	fsr1l,??_ISR+11
  6488   000818  CFE2 F046          	movff	fsr1h,??_ISR+12
  6489   00081C  CFD9 F047          	movff	fsr2l,??_ISR+13
  6490   000820  CFDA F048          	movff	fsr2h,??_ISR+14
  6491   000824  CFF3 F049          	movff	prodl,??_ISR+15
  6492   000828  CFF4 F04A          	movff	prodh,??_ISR+16
  6493   00082C  C001  F04B         	movff	btemp,??_ISR+17
  6494   000830  C00C  F04C         	movff	btemp+11,??_ISR+18
  6495   000834  EE15  F0C4         	lfsr	1,___inthi_sp
  6496   000838                     
  6497                           ;timer.c: 10:     (INTCONbits.GIE = 0);
  6498   000838  9EF2               	bcf	242,7,c	;volatile
  6499                           
  6500                           ;timer.c: 13:     if (INTCONbits.INT0IF)
  6501   00083A  A2F2               	btfss	242,1,c	;volatile
  6502   00083C  EF22  F004         	goto	i2u188_41
  6503   000840  EF24  F004         	goto	i2u188_40
  6504   000844                     i2u188_41:
  6505   000844  EF27  F004         	goto	i2l2855
  6506   000848                     i2u188_40:
  6507   000848                     
  6508                           ;timer.c: 14:     {;timer.c: 15:         INTCONbits.INT0IF = 0;
  6509   000848  92F2               	bcf	242,1,c	;volatile
  6510   00084A                     
  6511                           ;timer.c: 16:         ext_int_service();
  6512   00084A  EC6E  F010         	call	_ext_int_service	;wreg free
  6513   00084E                     i2l2855:
  6514                           
  6515                           ;timer.c: 20:     if (INTCONbits.TMR0IF)
  6516   00084E  A4F2               	btfss	242,2,c	;volatile
  6517   000850  EF2C  F004         	goto	i2u189_41
  6518   000854  EF2E  F004         	goto	i2u189_40
  6519   000858                     i2u189_41:
  6520   000858  EF6F  F005         	goto	i2l2893
  6521   00085C                     i2u189_40:
  6522   00085C                     
  6523                           ;timer.c: 21:     {;timer.c: 22:         INTCONbits.TMR0IF = 0;
  6524   00085C  94F2               	bcf	242,2,c	;volatile
  6525   00085E                     
  6526                           ;timer.c: 23:         TMR0 = 0;
  6527   00085E  0E00               	movlw	0
  6528   000860  6ED7               	movwf	215,c	;volatile
  6529   000862  0E00               	movlw	0
  6530   000864  6ED6               	movwf	214,c	;volatile
  6531   000866                     
  6532                           ;timer.c: 25:         decrease_time();
  6533   000866  EC5D  F00D         	call	_decrease_time	;wreg free
  6534   00086A  C384  F03A         	movff	_r_queue+535,??_ISR
  6535   00086E  503A               	movf	??_ISR^0,w,c
  6536   000870  0D6B               	mullw	107
  6537   000872  0E6D               	movlw	low _r_queue
  6538   000874  24F3               	addwf	243,w,c
  6539   000876  6E3B               	movwf	(??_ISR+1)^0,c
  6540   000878  0E01               	movlw	high _r_queue
  6541   00087A  20F4               	addwfc	prodh,w,c
  6542   00087C  6E3C               	movwf	(??_ISR+2)^0,c
  6543   00087E  C03B  F386         	movff	??_ISR+1,_r_queue+537
  6544   000882  C03C  F387         	movff	??_ISR+2,_r_queue+538
  6545   000886  EE23  F086         	lfsr	2,_r_queue+537
  6546   00088A  EE00 F002          	lfsr	0,2
  6547   00088E  50DE               	movf	postinc2,w,c
  6548   000890  26E9               	addwf	fsr0l,f,c
  6549   000892  50DD               	movf	postdec2,w,c
  6550   000894  22EA               	addwfc	fsr0h,f,c
  6551   000896  04EE               	decf	postinc0,w,c
  6552   000898  A4D8               	btfss	status,2,c
  6553   00089A  EF51  F004         	goto	i2u190_41
  6554   00089E  EF53  F004         	goto	i2u190_40
  6555   0008A2                     i2u190_41:
  6556   0008A2  EFBF  F004         	goto	i2l2875
  6557   0008A6                     i2u190_40:
  6558   0008A6  EE23  F086         	lfsr	2,_r_queue+537
  6559   0008AA  EE00 F009          	lfsr	0,9
  6560   0008AE  50DE               	movf	postinc2,w,c
  6561   0008B0  26E9               	addwf	fsr0l,f,c
  6562   0008B2  50DD               	movf	postdec2,w,c
  6563   0008B4  22EA               	addwfc	fsr0h,f,c
  6564   0008B6  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6565   0008BA  EE23  F086         	lfsr	2,_r_queue+537
  6566   0008BE  EE00 F008          	lfsr	0,8
  6567   0008C2  50DE               	movf	postinc2,w,c
  6568   0008C4  26E9               	addwf	fsr0l,f,c
  6569   0008C6  50DD               	movf	postdec2,w,c
  6570   0008C8  22EA               	addwfc	fsr0h,f,c
  6571   0008CA  CFD8 FFEF          	movff	status,indf0	;volatile
  6572   0008CE  EE23  F086         	lfsr	2,_r_queue+537
  6573   0008D2  EE00 F007          	lfsr	0,7
  6574   0008D6  50DE               	movf	postinc2,w,c
  6575   0008D8  26E9               	addwf	fsr0l,f,c
  6576   0008DA  50DD               	movf	postdec2,w,c
  6577   0008DC  22EA               	addwfc	fsr0h,f,c
  6578   0008DE  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6579   0008E2  EE23  F086         	lfsr	2,_r_queue+537
  6580   0008E6  EE00 F06A          	lfsr	0,106
  6581   0008EA  50DE               	movf	postinc2,w,c
  6582   0008EC  26E9               	addwf	fsr0l,f,c
  6583   0008EE  50DD               	movf	postdec2,w,c
  6584   0008F0  22EA               	addwfc	fsr0h,f,c
  6585   0008F2  6AEF               	clrf	indf0,c
  6586   0008F4  EE23  F086         	lfsr	2,_r_queue+537
  6587   0008F8  EE00 F002          	lfsr	0,2
  6588   0008FC  50DE               	movf	postinc2,w,c
  6589   0008FE  26E9               	addwf	fsr0l,f,c
  6590   000900  50DD               	movf	postdec2,w,c
  6591   000902  22EA               	addwfc	fsr0h,f,c
  6592   000904  6AEF               	clrf	indf0,c
  6593   000906  EFB7  F004         	goto	i2l2873
  6594   00090A                     i2l2869:
  6595   00090A  EE23  F086         	lfsr	2,_r_queue+537
  6596   00090E  EE00 F06A          	lfsr	0,106
  6597   000912  50DE               	movf	postinc2,w,c
  6598   000914  26E9               	addwf	fsr0l,f,c
  6599   000916  50DD               	movf	postdec2,w,c
  6600   000918  22EA               	addwfc	fsr0h,f,c
  6601   00091A  50EF               	movf	indf0,w,c
  6602   00091C  6E3A               	movwf	??_ISR^0,c
  6603   00091E  503A               	movf	??_ISR^0,w,c
  6604   000920  0D03               	mullw	3
  6605   000922  CFF3 F03B          	movff	prodl,??_ISR+1
  6606   000926  CFF4 F03C          	movff	prodh,??_ISR+2
  6607   00092A  EE23  F086         	lfsr	2,_r_queue+537
  6608   00092E  CFDE F03D          	movff	postinc2,??_ISR+3
  6609   000932  CFDD F03E          	movff	postdec2,??_ISR+4
  6610   000936  503B               	movf	(??_ISR+1)^0,w,c
  6611   000938  243D               	addwf	(??_ISR+3)^0,w,c
  6612   00093A  6E3F               	movwf	(??_ISR+5)^0,c
  6613   00093C  503C               	movf	(??_ISR+2)^0,w,c
  6614   00093E  203E               	addwfc	(??_ISR+4)^0,w,c
  6615   000940  6E40               	movwf	(??_ISR+6)^0,c
  6616   000942  0E0A               	movlw	10
  6617   000944  243F               	addwf	(??_ISR+5)^0,w,c
  6618   000946  6ED9               	movwf	fsr2l,c
  6619   000948  0E00               	movlw	0
  6620   00094A  2040               	addwfc	(??_ISR+6)^0,w,c
  6621   00094C  6EDA               	movwf	fsr2h,c
  6622   00094E  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6623   000952  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6624   000956  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6625   00095A  EE23  F086         	lfsr	2,_r_queue+537
  6626   00095E  EE00 F06A          	lfsr	0,106
  6627   000962  50DE               	movf	postinc2,w,c
  6628   000964  26E9               	addwf	fsr0l,f,c
  6629   000966  50DD               	movf	postdec2,w,c
  6630   000968  22EA               	addwfc	fsr0h,f,c
  6631   00096A  2AEF               	incf	indf0,f,c
  6632   00096C  0006               	pop		;# 
  6633   00096E                     i2l2873:
  6634   00096E  50FC               	movf	252,w,c	;volatile
  6635   000970  A4D8               	btfss	status,2,c
  6636   000972  EFBD  F004         	goto	i2u191_41
  6637   000976  EFBF  F004         	goto	i2u191_40
  6638   00097A                     i2u191_41:
  6639   00097A  EF85  F004         	goto	i2l2869
  6640   00097E                     i2u191_40:
  6641   00097E                     i2l2875:
  6642                           
  6643                           ;timer.c: 28:         scheduler();
  6644   00097E  ECEE  F010         	call	_scheduler	;wreg free
  6645   000982  C384  F03A         	movff	_r_queue+535,??_ISR
  6646   000986  503A               	movf	??_ISR^0,w,c
  6647   000988  0D6B               	mullw	107
  6648   00098A  0E6D               	movlw	low _r_queue
  6649   00098C  24F3               	addwf	243,w,c
  6650   00098E  6E3B               	movwf	(??_ISR+1)^0,c
  6651   000990  0E01               	movlw	high _r_queue
  6652   000992  20F4               	addwfc	prodh,w,c
  6653   000994  6E3C               	movwf	(??_ISR+2)^0,c
  6654   000996  C03B  F386         	movff	??_ISR+1,_r_queue+537
  6655   00099A  C03C  F387         	movff	??_ISR+2,_r_queue+538
  6656   00099E  EE23  F086         	lfsr	2,_r_queue+537
  6657   0009A2  EE00 F002          	lfsr	0,2
  6658   0009A6  50DE               	movf	postinc2,w,c
  6659   0009A8  26E9               	addwf	fsr0l,f,c
  6660   0009AA  50DD               	movf	postdec2,w,c
  6661   0009AC  22EA               	addwfc	fsr0h,f,c
  6662   0009AE  50EF               	movf	indf0,w,c
  6663   0009B0  A4D8               	btfss	status,2,c
  6664   0009B2  EFDD  F004         	goto	i2u192_41
  6665   0009B6  EFDF  F004         	goto	i2u192_40
  6666   0009BA                     i2u192_41:
  6667   0009BA  EF6F  F005         	goto	i2l2893
  6668   0009BE                     i2u192_40:
  6669   0009BE  6AFC               	clrf	252,c	;volatile
  6670   0009C0  EE23  F086         	lfsr	2,_r_queue+537
  6671   0009C4  EE00 F06A          	lfsr	0,106
  6672   0009C8  50DE               	movf	postinc2,w,c
  6673   0009CA  26E9               	addwf	fsr0l,f,c
  6674   0009CC  50DD               	movf	postdec2,w,c
  6675   0009CE  22EA               	addwfc	fsr0h,f,c
  6676   0009D0  50EF               	movf	indf0,w,c
  6677   0009D2  B4D8               	btfsc	status,2,c
  6678   0009D4  EFEE  F004         	goto	i2u193_41
  6679   0009D8  EFF0  F004         	goto	i2u193_40
  6680   0009DC                     i2u193_41:
  6681   0009DC  EF53  F005         	goto	i2l452
  6682   0009E0                     i2u193_40:
  6683   0009E0  EE23  F086         	lfsr	2,_r_queue+537
  6684   0009E4  EE00 F009          	lfsr	0,9
  6685   0009E8  50DE               	movf	postinc2,w,c
  6686   0009EA  26E9               	addwf	fsr0l,f,c
  6687   0009EC  50DD               	movf	postdec2,w,c
  6688   0009EE  22EA               	addwfc	fsr0h,f,c
  6689   0009F0  50EF               	movf	indf0,w,c
  6690   0009F2  6EE0               	movwf	224,c	;volatile
  6691   0009F4  EE23  F086         	lfsr	2,_r_queue+537
  6692   0009F8  EE00 F008          	lfsr	0,8
  6693   0009FC  50DE               	movf	postinc2,w,c
  6694   0009FE  26E9               	addwf	fsr0l,f,c
  6695   000A00  50DD               	movf	postdec2,w,c
  6696   000A02  22EA               	addwfc	fsr0h,f,c
  6697   000A04  50EF               	movf	indf0,w,c
  6698   000A06  6ED8               	movwf	216,c	;volatile
  6699   000A08  EE23  F086         	lfsr	2,_r_queue+537
  6700   000A0C  EE00 F007          	lfsr	0,7
  6701   000A10  50DE               	movf	postinc2,w,c
  6702   000A12  26E9               	addwf	fsr0l,f,c
  6703   000A14  50DD               	movf	postdec2,w,c
  6704   000A16  22EA               	addwfc	fsr0h,f,c
  6705   000A18  50EF               	movf	indf0,w,c
  6706   000A1A  6E3A               	movwf	??_ISR^0,c
  6707   000A1C  503A               	movf	??_ISR^0,w,c
  6708   000A1E                     i2l453:
  6709   000A1E  0005               	push		;# 
  6710   000A20  EE23  F086         	lfsr	2,_r_queue+537
  6711   000A24  EE00 F06A          	lfsr	0,106
  6712   000A28  50DE               	movf	postinc2,w,c
  6713   000A2A  26E9               	addwf	fsr0l,f,c
  6714   000A2C  50DD               	movf	postdec2,w,c
  6715   000A2E  22EA               	addwfc	fsr0h,f,c
  6716   000A30  06EF               	decf	indf0,f,c
  6717   000A32  EE23  F086         	lfsr	2,_r_queue+537
  6718   000A36  EE00 F06A          	lfsr	0,106
  6719   000A3A  50DE               	movf	postinc2,w,c
  6720   000A3C  26E9               	addwf	fsr0l,f,c
  6721   000A3E  50DD               	movf	postdec2,w,c
  6722   000A40  22EA               	addwfc	fsr0h,f,c
  6723   000A42  50EF               	movf	indf0,w,c
  6724   000A44  6E3A               	movwf	??_ISR^0,c
  6725   000A46  503A               	movf	??_ISR^0,w,c
  6726   000A48  0D03               	mullw	3
  6727   000A4A  CFF3 F03B          	movff	prodl,??_ISR+1
  6728   000A4E  CFF4 F03C          	movff	prodh,??_ISR+2
  6729   000A52  EE23  F086         	lfsr	2,_r_queue+537
  6730   000A56  CFDE F03D          	movff	postinc2,??_ISR+3
  6731   000A5A  CFDD F03E          	movff	postdec2,??_ISR+4
  6732   000A5E  503B               	movf	(??_ISR+1)^0,w,c
  6733   000A60  243D               	addwf	(??_ISR+3)^0,w,c
  6734   000A62  6E3F               	movwf	(??_ISR+5)^0,c
  6735   000A64  503C               	movf	(??_ISR+2)^0,w,c
  6736   000A66  203E               	addwfc	(??_ISR+4)^0,w,c
  6737   000A68  6E40               	movwf	(??_ISR+6)^0,c
  6738   000A6A  0E0A               	movlw	10
  6739   000A6C  243F               	addwf	(??_ISR+5)^0,w,c
  6740   000A6E  6ED9               	movwf	fsr2l,c
  6741   000A70  0E00               	movlw	0
  6742   000A72  2040               	addwfc	(??_ISR+6)^0,w,c
  6743   000A74  6EDA               	movwf	fsr2h,c
  6744   000A76  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6745   000A7A  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6746   000A7E  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6747   000A82  EE23  F086         	lfsr	2,_r_queue+537
  6748   000A86  EE00 F06A          	lfsr	0,106
  6749   000A8A  50DE               	movf	postinc2,w,c
  6750   000A8C  26E9               	addwf	fsr0l,f,c
  6751   000A8E  50DD               	movf	postdec2,w,c
  6752   000A90  22EA               	addwfc	fsr0h,f,c
  6753   000A92  50EF               	movf	indf0,w,c
  6754   000A94  A4D8               	btfss	status,2,c
  6755   000A96  EF4F  F005         	goto	i2u194_41
  6756   000A9A  EF51  F005         	goto	i2u194_40
  6757   000A9E                     i2u194_41:
  6758   000A9E  EF0F  F005         	goto	i2l453
  6759   000AA2                     i2u194_40:
  6760   000AA2  EF65  F005         	goto	i2l455
  6761   000AA6                     i2l452:
  6762   000AA6  0005               	push		;# 
  6763   000AA8  EE23  F086         	lfsr	2,_r_queue+537
  6764   000AAC  EE00 F003          	lfsr	0,3
  6765   000AB0  50DE               	movf	postinc2,w,c
  6766   000AB2  26E9               	addwf	fsr0l,f,c
  6767   000AB4  50DD               	movf	postdec2,w,c
  6768   000AB6  22EA               	addwfc	fsr0h,f,c
  6769   000AB8  CFEE F03A          	movff	postinc0,??_ISR
  6770   000ABC  CFED F03B          	movff	postdec0,??_ISR+1
  6771   000AC0  C03A  FFFD         	movff	??_ISR,tosl	;volatile
  6772   000AC4  C03B  FFFE         	movff	??_ISR+1,tosh	;volatile
  6773   000AC8  6AFF               	clrf	255,c	;volatile
  6774   000ACA                     i2l455:
  6775   000ACA  EE23  F086         	lfsr	2,_r_queue+537
  6776   000ACE  EE00 F002          	lfsr	0,2
  6777   000AD2  50DE               	movf	postinc2,w,c
  6778   000AD4  26E9               	addwf	fsr0l,f,c
  6779   000AD6  50DD               	movf	postdec2,w,c
  6780   000AD8  22EA               	addwfc	fsr0h,f,c
  6781   000ADA  0E01               	movlw	1
  6782   000ADC  6EEF               	movwf	indf0,c
  6783   000ADE                     i2l2893:
  6784                           
  6785                           ;timer.c: 32:     (INTCONbits.GIE = 1);
  6786   000ADE  8EF2               	bsf	242,7,c	;volatile
  6787   000AE0  C04C  F00C         	movff	??_ISR+18,btemp+11
  6788   000AE4  C04B  F001         	movff	??_ISR+17,btemp
  6789   000AE8  C04A  FFF4         	movff	??_ISR+16,prodh
  6790   000AEC  C049  FFF3         	movff	??_ISR+15,prodl
  6791   000AF0  C048  FFDA         	movff	??_ISR+14,fsr2h
  6792   000AF4  C047  FFD9         	movff	??_ISR+13,fsr2l
  6793   000AF8  C046  FFE2         	movff	??_ISR+12,fsr1h
  6794   000AFC  C045  FFE1         	movff	??_ISR+11,fsr1l
  6795   000B00  C044  FFEA         	movff	??_ISR+10,fsr0h
  6796   000B04  C043  FFE9         	movff	??_ISR+9,fsr0l
  6797   000B08  C042  FFFB         	movff	??_ISR+8,pclatu
  6798   000B0C  C041  FFFA         	movff	??_ISR+7,pclath
  6799   000B10  0011               	retfie		f
  6800   000B12                     __end_of_ISR:
  6801                           	callstack 0
  6802                           
  6803 ;; *************** function _ext_int_service *****************
  6804 ;; Defined at:
  6805 ;;		line 72 in file "io.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used: 1
  6825 ;; Hardware stack levels required when called: 1
  6826 ;; This function calls:
  6827 ;;		NULL
  6828 ;;		_stability_callback
  6829 ;; This function is called by:
  6830 ;;		_ISR
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           	psect	text37
  6835   0020DC                     __ptext37:
  6836                           	callstack 0
  6837   0020DC                     _ext_int_service:
  6838                           	callstack 18
  6839   0020DC                     
  6840                           ;io.c: 74:     if (ext_int_callback)
  6841   0020DC  5021               	movf	_ext_int_callback^0,w,c
  6842   0020DE  1022               	iorwf	(_ext_int_callback+1)^0,w,c
  6843   0020E0  B4D8               	btfsc	status,2,c
  6844   0020E2  EF75  F010         	goto	i2u114_41
  6845   0020E6  EF77  F010         	goto	i2u114_40
  6846   0020EA                     i2u114_41:
  6847   0020EA  EF84  F010         	goto	i2l237
  6848   0020EE                     i2u114_40:
  6849   0020EE                     
  6850                           ;io.c: 75:         ext_int_callback();
  6851   0020EE  D802               	call	i2u115_48
  6852   0020F0  EF84  F010         	goto	i2u115_49
  6853   0020F4                     i2u115_48:
  6854   0020F4  0005               	push	
  6855   0020F6  6EFA               	movwf	pclath,c
  6856   0020F8  5021               	movf	_ext_int_callback^0,w,c
  6857   0020FA  6EFD               	movwf	tosl,c
  6858   0020FC  5022               	movf	(_ext_int_callback+1)^0,w,c
  6859   0020FE  6EFE               	movwf	tosh,c
  6860   002100  50F8               	movf	tblptru,w,c
  6861   002102  6EFF               	movwf	tosu,c
  6862   002104  50FA               	movf	pclath,w,c
  6863   002106  0012               	return		;indir
  6864   002108                     i2u115_49:
  6865   002108                     i2l237:
  6866   002108  0012               	return		;funcret
  6867   00210A                     __end_of_ext_int_service:
  6868                           	callstack 0
  6869                           
  6870 ;; *************** function _stability_callback *****************
  6871 ;; Defined at:
  6872 ;;		line 64 in file "user_app.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;		None
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;		None
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      void 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6886 ;;      Params:         0       0       0       0       0       0       0       0       0
  6887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6889 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6890 ;;Total ram usage:        0 bytes
  6891 ;; Hardware stack levels used: 1
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_user_config
  6896 ;;		_ext_int_service
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text38
  6901   0021E2                     __ptext38:
  6902                           	callstack 0
  6903   0021E2                     _stability_callback:
  6904                           	callstack 18
  6905   0021E2                     
  6906                           ;user_app.c: 66:     est_flag = 1;
  6907   0021E2  0E01               	movlw	1
  6908   0021E4  6E23               	movwf	_est_flag^0,c	;volatile
  6909   0021E6  0012               	return		;funcret
  6910   0021E8                     __end_of_stability_callback:
  6911                           	callstack 0
  6912                           
  6913 ;; *************** function _decrease_time *****************
  6914 ;; Defined at:
  6915 ;;		line 107 in file "kernel.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;		None
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  i               1    2[COMRAM] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6929 ;;      Params:         0       0       0       0       0       0       0       0       0
  6930 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6931 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6932 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6933 ;;Total ram usage:        3 bytes
  6934 ;; Hardware stack levels used: 1
  6935 ;; This function calls:
  6936 ;;		Nothing
  6937 ;; This function is called by:
  6938 ;;		_ISR
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text39
  6943   001ABA                     __ptext39:
  6944                           	callstack 0
  6945   001ABA                     _decrease_time:
  6946                           	callstack 19
  6947   001ABA                     
  6948                           ;kernel.c: 109:     for (uint8_t i = 1; i < r_queue.ready_queue_size; i++)
  6949   001ABA  0E01               	movlw	1
  6950   001ABC  6E39               	movwf	decrease_time@i^0,c
  6951   001ABE  EF98  F00D         	goto	i2l2329
  6952   001AC2                     i2l2321:
  6953                           
  6954                           ;kernel.c: 110:     {;kernel.c: 111:         if (r_queue.ready_queue[i].time_sleeping > 
      +                          0)
  6955   001AC2  5039               	movf	decrease_time@i^0,w,c
  6956   001AC4  0D6B               	mullw	107
  6957   001AC6  0E72               	movlw	low (_r_queue+5)
  6958   001AC8  24F3               	addwf	243,w,c
  6959   001ACA  6ED9               	movwf	fsr2l,c
  6960   001ACC  0E01               	movlw	high (_r_queue+5)
  6961   001ACE  20F4               	addwfc	prodh,w,c
  6962   001AD0  6EDA               	movwf	fsr2h,c
  6963   001AD2  50DE               	movf	postinc2,w,c
  6964   001AD4  10DE               	iorwf	postinc2,w,c
  6965   001AD6  B4D8               	btfsc	status,2,c
  6966   001AD8  EF70  F00D         	goto	i2u126_41
  6967   001ADC  EF72  F00D         	goto	i2u126_40
  6968   001AE0                     i2u126_41:
  6969   001AE0  EF97  F00D         	goto	i2l2327
  6970   001AE4                     i2u126_40:
  6971   001AE4                     
  6972                           ;kernel.c: 112:         {;kernel.c: 113:             r_queue.ready_queue[i].time_sleepin
      +                          g--;
  6973   001AE4  5039               	movf	decrease_time@i^0,w,c
  6974   001AE6  0D6B               	mullw	107
  6975   001AE8  0E72               	movlw	low (_r_queue+5)
  6976   001AEA  24F3               	addwf	243,w,c
  6977   001AEC  6ED9               	movwf	fsr2l,c
  6978   001AEE  0E01               	movlw	high (_r_queue+5)
  6979   001AF0  20F4               	addwfc	prodh,w,c
  6980   001AF2  6EDA               	movwf	fsr2h,c
  6981   001AF4  06DE               	decf	postinc2,f,c
  6982   001AF6  0E00               	movlw	0
  6983   001AF8  5ADD               	subwfb	postdec2,f,c
  6984                           
  6985                           ;kernel.c: 114:             if (r_queue.ready_queue[i].time_sleeping == 0)
  6986   001AFA  5039               	movf	decrease_time@i^0,w,c
  6987   001AFC  0D6B               	mullw	107
  6988   001AFE  0E72               	movlw	low (_r_queue+5)
  6989   001B00  24F3               	addwf	243,w,c
  6990   001B02  6ED9               	movwf	fsr2l,c
  6991   001B04  0E01               	movlw	high (_r_queue+5)
  6992   001B06  20F4               	addwfc	prodh,w,c
  6993   001B08  6EDA               	movwf	fsr2h,c
  6994   001B0A  50DE               	movf	postinc2,w,c
  6995   001B0C  10DE               	iorwf	postinc2,w,c
  6996   001B0E  A4D8               	btfss	status,2,c
  6997   001B10  EF8C  F00D         	goto	i2u127_41
  6998   001B14  EF8E  F00D         	goto	i2u127_40
  6999   001B18                     i2u127_41:
  7000   001B18  EF97  F00D         	goto	i2l2327
  7001   001B1C                     i2u127_40:
  7002   001B1C                     
  7003                           ;kernel.c: 115:             {;kernel.c: 116:                 r_queue.ready_queue[i].task
      +                          _state = READY;
  7004   001B1C  5039               	movf	decrease_time@i^0,w,c
  7005   001B1E  0D6B               	mullw	107
  7006   001B20  0E6F               	movlw	low (_r_queue+2)
  7007   001B22  24F3               	addwf	243,w,c
  7008   001B24  6ED9               	movwf	fsr2l,c
  7009   001B26  0E01               	movlw	high (_r_queue+2)
  7010   001B28  20F4               	addwfc	prodh,w,c
  7011   001B2A  6EDA               	movwf	fsr2h,c
  7012   001B2C  6ADF               	clrf	indf2,c
  7013   001B2E                     i2l2327:
  7014                           
  7015                           ;kernel.c: 119:     }
  7016   001B2E  2A39               	incf	decrease_time@i^0,f,c
  7017   001B30                     i2l2329:
  7018   001B30  EE23  F085         	lfsr	2,_r_queue+536
  7019   001B34  50DE               	movf	postinc2,w,c
  7020   001B36  5C39               	subwf	decrease_time@i^0,w,c
  7021   001B38  A0D8               	btfss	status,0,c
  7022   001B3A  EFA1  F00D         	goto	i2u128_41
  7023   001B3E  EFA3  F00D         	goto	i2u128_40
  7024   001B42                     i2u128_41:
  7025   001B42  EF61  F00D         	goto	i2l2321
  7026   001B46                     i2u128_40:
  7027   001B46  0012               	return		;funcret
  7028   001B48                     __end_of_decrease_time:
  7029                           	callstack 0
  7030                           
  7031                           	psect	smallconst
  7032   000800                     __psmallconst:
  7033                           	callstack 0
  7034   000800  00                 	db	0
  7035   000801  00                 	db	0	; dummy byte at the end
  7036   000800                     __smallconst    set	__psmallconst
  7037   000800                     __mediumconst   set	__psmallconst
  7038   000002                     __activetblptr  equ	2
  7039                           
  7040                           	psect	rparam
  7041   000001                     ___rparam_used  equ	1
  7042   000000                     ___param_bank   equ	0
  7043   000000                     __Lparam        equ	__Lrparam
  7044   000000                     __Hparam        equ	__Hrparam
  7045                           
  7046                           	psect	temp
  7047   000001                     btemp:
  7048                           	callstack 0
  7049   000001                     	ds	32
  7050   000001                     wtemp0          set	btemp
  7051   000003                     wtemp1          set	btemp+2
  7052   000005                     wtemp2          set	btemp+4
  7053   000007                     wtemp3          set	btemp+6
  7054   000009                     wtemp4          set	btemp+8
  7055   00000B                     wtemp5          set	btemp+10
  7056   000002                     wtemp8          set	btemp+1
  7057   000001                     ttemp0          set	btemp
  7058   000004                     ttemp1          set	btemp+3
  7059   000007                     ttemp2          set	btemp+6
  7060   00000A                     ttemp3          set	btemp+9
  7061   000002                     ttemp5          set	btemp+1
  7062   000005                     ttemp6          set	btemp+4
  7063   000009                     ttemp7          set	btemp+8
  7064   000001                     ltemp0          set	btemp
  7065   000005                     ltemp1          set	btemp+4
  7066   000009                     ltemp2          set	btemp+8
  7067   000001                     lltemp0         set	btemp
  7068   000009                     lltemp1         set	btemp+8
  7069   000011                     lltemp2         set	btemp+16
  7070   000019                     lltemp3         set	btemp+24
  7071                           tosu	equ	0xFFF
  7072                           tosh	equ	0xFFE
  7073                           tosl	equ	0xFFD
  7074                           stkptr	equ	0xFFC
  7075                           pclatu	equ	0xFFB
  7076                           pclath	equ	0xFFA
  7077                           pcl	equ	0xFF9
  7078                           tblptru	equ	0xFF8
  7079                           tblptrh	equ	0xFF7
  7080                           tblptrl	equ	0xFF6
  7081                           tablat	equ	0xFF5
  7082                           prodh	equ	0xFF4
  7083                           prodl	equ	0xFF3
  7084                           indf0	equ	0xFEF
  7085                           postinc0	equ	0xFEE
  7086                           postdec0	equ	0xFED
  7087                           preinc0	equ	0xFEC
  7088                           plusw0	equ	0xFEB
  7089                           fsr0h	equ	0xFEA
  7090                           fsr0l	equ	0xFE9
  7091                           wreg	equ	0xFE8
  7092                           indf1	equ	0xFE7
  7093                           postinc1	equ	0xFE6
  7094                           postdec1	equ	0xFE5
  7095                           preinc1	equ	0xFE4
  7096                           plusw1	equ	0xFE3
  7097                           fsr1h	equ	0xFE2
  7098                           fsr1l	equ	0xFE1
  7099                           bsr	equ	0xFE0
  7100                           indf2	equ	0xFDF
  7101                           postinc2	equ	0xFDE
  7102                           postdec2	equ	0xFDD
  7103                           preinc2	equ	0xFDC
  7104                           plusw2	equ	0xFDB
  7105                           fsr2h	equ	0xFDA
  7106                           fsr2l	equ	0xFD9
  7107                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         649
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     22      44
    BANK0           160     43     131
    BANK1           256    109     109
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    accel_pipe$pipe_msg	PTR unsigned char  size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), NULL(NULL[0]), 

    create_pipe@p	PTR struct pipe size(1) Largest target is 20
		 -> accel_pipe(COMRAM[19]), 

    create_pipe@p$pipe_msg	PTR unsigned char  size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), NULL(NULL[0]), 

    create_task@task	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    ext_int_callback	PTR FTN()void  size(2) Largest target is 1
		 -> stability_callback(), NULL(), 

    int_ext_init@callback	PTR FTN()void  size(2) Largest target is 1
		 -> stability_callback(), 

    mutex_init@m	PTR struct mutex size(1) Largest target is 7
		 -> buffer_mutex(BANK0[7]), 

    mutex_lock@m	PTR struct mutex size(1) Largest target is 7
		 -> buffer_mutex(BANK0[7]), 

    mutex_unlock@m	PTR struct mutex size(1) Largest target is 7
		 -> buffer_mutex(BANK0[7]), 

    new_task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$ready_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), r_queue$ready_queue(BIGRAM[535]), 

    r_queue$task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    read_pipe@data	PTR unsigned char  size(1) Largest target is 1
		 -> tarefa_controle_central@data(BANK0[1]), 

    read_pipe@p	PTR struct pipe size(1) Largest target is 20
		 -> accel_pipe(COMRAM[19]), 

    read_pipe@p$pipe_msg	PTR unsigned char  size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), NULL(NULL[0]), 

    S264pipe$pipe_msg	PTR unsigned char  size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), NULL(NULL[0]), 

    S72tcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    S83ready_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), 

    sem_init@sem	PTR struct sem size(1) Largest target is 20
		 -> accel_pipe(COMRAM[19]), 

    sem_post@sem	PTR struct sem size(1) Largest target is 20
		 -> accel_pipe(COMRAM[19]), 

    sem_wait@sem	PTR struct sem size(1) Largest target is 20
		 -> accel_pipe(COMRAM[19]), 

    sp__SRAMalloc	PTR unsigned char  size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), NULL(NULL[0]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), 

    SRAMalloc@temp	PTR struct _SALLOC size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), 

    _SRAMmerge@pSegA	PTR struct _SALLOC size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), 

    write_pipe@p	PTR struct pipe size(1) Largest target is 20
		 -> accel_pipe(COMRAM[19]), 

    write_pipe@p$pipe_msg	PTR unsigned char  size(1) Largest target is 80
		 -> _uDynamicHeap(BANK0[80]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _user_config->_create_pipe
    _create_pipe->_SRAMalloc
    _SRAMalloc->__SRAMmerge
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_injecao_eletronica in COMRAM

    None.

Critical Paths under _tarefa_estabilidade in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_decrease_time

Critical Paths under _main in BANK0

    None.

Critical Paths under _tarefa_acelerador in BANK0

    _tarefa_acelerador->_write_pipe

Critical Paths under _tarefa_controle_central in BANK0

    _tarefa_controle_central->_read_pipe
    _read_pipe->_sem_wait

Critical Paths under _tarefa_injecao_eletronica in BANK0

    _tarefa_injecao_eletronica->_pwm_set
    _pwm_set->___lmul
    ___lldiv->___lmul

Critical Paths under _tarefa_estabilidade in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_create_task
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK1

    _tarefa_injecao_eletronica->_pwm_set
    _pwm_set->___lldiv

Critical Paths under _tarefa_estabilidade in BANK1

    _tarefa_estabilidade->_delay

Critical Paths under _idle in BANK1

    None.

Critical Paths under _idle in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tarefa_acelerador in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK2

    None.

Critical Paths under _tarefa_estabilidade in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tarefa_acelerador in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK3

    None.

Critical Paths under _tarefa_estabilidade in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tarefa_acelerador in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK4

    None.

Critical Paths under _tarefa_estabilidade in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tarefa_acelerador in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK5

    None.

Critical Paths under _tarefa_estabilidade in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tarefa_acelerador in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK6

    None.

Critical Paths under _tarefa_estabilidade in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tarefa_acelerador in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK7

    None.

Critical Paths under _tarefa_estabilidade in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1983
                        _create_task
                            _os_init
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1229
                       _start_timer0
                        _user_config
 ---------------------------------------------------------------------------------
 (2) _user_config                                          0     0      0    1229
                           _adc_init
                        _create_pipe
                       _int_ext_init
                         _mutex_init
                           _pwm_init
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           1     0      1      67
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _int_ext_init                                         2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          2     1      1    1139
                                             14 COMRAM     2     1      1
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             3     0      3      92
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                            8     6      2     936
                                              6 COMRAM     8     6      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           6     5      1     403
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (3) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_init                                              0     0      0     456
                       _SRAMInitHeap
                      _config_timer0
                        _create_task
 ---------------------------------------------------------------------------------
 (2) _create_task                                        112   109      3     298
                                              0 COMRAM     4     1      3
                                              1 BANK1    108   108      0
 ---------------------------------------------------------------------------------
 (2) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         3     3      0     158
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_acelerador                                    5     5      0    1875
                                             11 BANK0      5     5      0
                           _adc_read
                              _delay
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           3     1      2    1293
                                              8 BANK0      3     1      2
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             8     7      1     427
                                             16 BANK0      8     7      1
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             3     2      1     192
                                             16 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     451
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     365
                                             36 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     235
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     235
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              2     2      0    2979
                                             27 BANK0      2     2      0
                            ___awmod
                              _delay
                         _mutex_lock
                       _mutex_unlock
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            3     1      2    1293
                                             24 BANK0      3     1      2
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             8     7      1     427
                                             16 BANK0      8     7      1
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             3     2      1     192
                                             16 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     451
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         4     3      1     179
                                             29 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           8     7      1     427
                                             29 BANK0      8     7      1
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     365
                                             36 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     235
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     235
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_injecao_eletronica                            1     1      0    1757
                                             42 BANK0      1     1      0
                              _delay
                         _mutex_lock
                       _mutex_unlock
                            _pwm_set
 ---------------------------------------------------------------------------------
 (7) _pwm_set                                              6     5      1     631
                                             41 BANK0      1     0      1
                                             31 BANK1      5     5      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8     142
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     247
                                             18 BANK1     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         4     3      1     179
                                             29 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           8     7      1     427
                                             29 BANK0      8     7      1
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     365
                                             36 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     235
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     235
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_estabilidade                                  0     0      0     647
                       _change_state
                              _delay
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     365
                                             36 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _change_state                                         8     8      0     282
                                             36 BANK1      8     8      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     235
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     235
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                19    19      0     347
                                              3 COMRAM    19    19      0
                      _decrease_time
                    _ext_int_service
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     235
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     235
 ---------------------------------------------------------------------------------
 (12) _ext_int_service                                     0     0      0       0
                                NULL *
                 _stability_callback *
 ---------------------------------------------------------------------------------
 (13) _stability_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _decrease_time                                       3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _create_task
   _os_init
     _SRAMInitHeap
     _config_timer0
     _create_task
   _os_start
     _start_timer0
     _user_config
       _adc_init
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _int_ext_init
       _mutex_init
       _pwm_init

 _tarefa_acelerador (ROOT)
   _adc_read
   _delay
     _scheduler
       _priority_scheduler
   _write_pipe
     ___awmod
     _sem_post
     _sem_wait
       _scheduler

 _tarefa_controle_central (ROOT)
   ___awmod
   _delay
     _scheduler
       _priority_scheduler
   _mutex_lock
     _scheduler
   _mutex_unlock
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait
       _scheduler

 _tarefa_injecao_eletronica (ROOT)
   _delay
     _scheduler
       _priority_scheduler
   _mutex_lock
     _scheduler
   _mutex_unlock
   _pwm_set
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _tarefa_estabilidade (ROOT)
   _change_state
     _scheduler
       _priority_scheduler
   _delay
     _scheduler

 _idle (ROOT)

 _idle (ROOT)

 _ISR (ROOT)
   _decrease_time
   _ext_int_service
     NULL(Fake) *
     _stability_callback *
   _scheduler
     _priority_scheduler

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     539     26.3%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256    109     109     42.6%
BITBANK0           160      0       0      0.0%
BANK0              160     43     131     81.9%
BITBIGSFRh          66      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     22      44     69.8%
BITBIGSFRllh        45      0       0      0.0%
BITBIGSFRllll       35      0       0      0.0%
BITBIGSFRlllh        8      0       0      0.0%
BITBIGSFRlh          2      0       0      0.0%
STACK                0      0      18      0.0%
DATA                 0      0     870      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed May 28 15:21:51 2025

                               l20 1E02                                 l43 195C  
                               l19 1E02                                 l29 21E0  
                               l62 2130                                 l86 217C  
                     create_pipe@p 0045                      SRAMalloc@temp 0040  
                              l300 2072                                l140 1756  
                              l124 1F58                                l213 21DA  
                              l222 21AE                                l233 21C2  
                              l138 17E6                                l306 20DA  
                              l163 1822                                l147 17E2  
                              l164 18A4                                l158 1EB4  
                              l345 1E5E                                l290 1FA2  
                              l284 1EB6                                l460 2198  
                              l380 2158                                l278 1F5A  
                              l463 21EA                                l383 21CE  
                              l299 204E                   ?_ext_int_service 0037  
                              _BSR 0FE0                                _PR2 0FCB  
                              _ISR 0008                                u720 181C  
                              u800 1776                                u721 1818  
                              u801 1772                                u730 1830  
                              u810 178E                                u731 182C  
                              u811 178A                                u740 183E  
                              u820 17AE                                u741 183A  
                              u821 17AA                                u750 1856  
                              u831 1E4C                                u751 1852  
                              u760 1870                                u761 186C  
                              u770 1724                                u771 1720  
                              u940 1E82                                u780 1752  
                              u941 1E7E                                u781 174E  
                              u790 1764                                u791 1760  
                              _TOS 0FFD                      create_task@id 0101  
                     ___awmod@sign 00CD                                prod 0FF3  
                              tosl 0FFD                                wreg 0FE8  
             __end_of_change_state 160A                     SRAMalloc@pHeap 0044  
                SRAMInitHeap@pHeap 0037                 _priority_scheduler 18A6  
                             ?_ISR 0037                  SRAMInitHeap@count 0038  
                             l2031 1E82                               l2033 1E8C  
                             l2025 1E60                               l2035 1E90  
                             l2027 1E64                               l2051 20C6  
                             l2037 1EA0                               l2029 1E6C  
                             l2053 20CA                               l2045 20AE  
                             l2141 21CA                               l2039 1EAA  
                             l2055 20CE                               l2047 20B6  
                             l2057 217E                               l2049 20BE  
                             l2137 21C4                               l2059 2188  
                             l2139 21C8                               l3141 1F8E  
                             l3151 1EEC                               l3143 1EBA  
                             l3135 1F5A                               l3161 1FBA  
                             l3153 1EF6                               l3145 1EC6  
                             l3137 1F68                               l3171 2060  
                             l3163 1FC4                               l3155 1FA2  
                             l3147 1EE0                               l3139 1F82  
                             l1811 181C                               l1803 17E8  
                             l3173 206E                               l3165 1FCE  
                             l3157 1FAC                               l3149 1EE8  
                             l2605 21DC                               l1397 21E8  
                             l1821 1842                               l1805 17F8  
                             l1901 2164                               l3175 2070  
                             l3167 204E                               l3159 1FB0  
                             l2471 190A                               l2463 18AC  
                             l3183 2132                               l1831 187A  
                             l1815 1830                               l1807 1802  
                             l1911 1F34                               l1903 2170  
                             l3191 1DB2                               l3169 205E  
                             l2473 1926                               l2465 18B4  
                             l3185 213E                               l1833 187E  
                             l1809 180C                               l1913 1F46  
                             l1905 1F0A                               l1921 21A2  
                             l3193 1DFE                               l3195 207E  
                             l2475 1932                               l2467 18BE  
                             l3187 2150                               l1915 21D0  
                             l1835 1886                               l1843 1898  
                             l1827 185A                               l1851 2124  
                             l1907 1F1C                               l1931 21BC  
                             l1923 21A8                               l3197 2080  
                             l2469 18E0                               l2477 1936  
                             l1941 1E16                               l3189 2154  
                             l1917 21D2                               l1837 1892  
                             l1829 1870                               l1861 172E  
                             l1853 1714                               l1909 1F28  
                             l1933 21BE                               l1925 21B0  
                             l3199 20A6                               l2479 1952  
                             l1951 1E2E                               l1943 1E1E  
                             l1871 1764                               l1863 1738  
                             l1855 1724                               l1847 210A  
                             l1935 21C0                               l1927 21B8  
                             l1919 219A                               l1953 1E30  
                             l1945 1E22                               l1937 1E0E  
                             l1881 17B6                               l1873 1776  
                             l1865 1742                               l1849 2118  
                             l1929 21BA                               l1955 1E32  
                             l1947 1E2A                               l1939 1E12  
                             l1891 17CC                               l1875 178E  
                             l1859 172A                               l1957 1E54  
                             l1949 1E2C                               l1893 17DC  
                             l1877 179C                               l1879 17AE  
                             l1887 17BC                               l1889 17C8  
                             l1899 215A                               i1l74 10A4  
                             i1l83 1C56                               i1l75 101A  
                             i1l77 10C8                               i1l79 10DE  
                             i1l99 0DBE                               _TMR0 0FD6  
                             _WREG 0FE8                        _user_config 20AE  
                             _idle 207E                               _main 1DB2  
                             fsr0h 0FEA                               fsr1h 0FE2  
                             indf0 0FEF                               fsr2h 0FDA  
                             fsr0l 0FE9                               indf2 0FDF  
                             fsr1l 0FE1                               fsr2l 0FD9  
                             btemp 0001                       _start_timer0 21E8  
                             prodh 0FF4                               prodl 0FF3  
                             start 000C                    SRAMalloc@nBytes 0043  
  __end_of_tarefa_controle_central 1F0A                       ___param_bank 0000  
                  SRAMalloc@segLen 0041  __end_of_tarefa_injecao_eletronica 1FE2  
                            ??_ISR 003A                  _tarefa_acelerador 1F5A  
                            ?_idle 0037                              ?_main 0037  
            __end_of_decrease_time 1B48                    __end_of___awmod 1A14  
                  __end_of___lldiv 1ABA                              _T2CON 0FCA  
                            i1l100 0D34                              i1l102 0DE2  
                            i1l104 0DF8                              i1l130 1CD0  
                            i1l109 1BD0                              i1l230 1710  
                            i1l127 1D44                              i1l216 2030  
                            i1l219 204C                              i1l500 1AB8  
                            i1l361 1380                              i1l356 1346  
                            i1l357 12BC                              i1l710 1A12  
                            i1l359 136A                              i1l394 15CE  
                            i1l395 1544                              i2l413 1B46  
                            i2l237 2108                              i1l397 15F2  
                            i1l493 1AA8                              i1l477 1DA0  
                            i1l478 1DB0                              i1l399 1608  
                            i2l452 0AA6                              i2l453 0A1E  
                            i2l455 0ACA                              i2l296 21E6  
                            i2l457 0AE0                 ?_tarefa_acelerador 0037  
              ___lmul@multiplicand 00D9                         __SRAMmerge 17E8  
                            _delay 10E0                ??_tarefa_acelerador 00C3  
                  create_task@task 0038                    __end_of_os_init 215A  
                            pclath 0FFA                              pclatu 0FFB  
                            ltemp0 0001                              ltemp1 0005  
                            ltemp2 0009                              plusw0 0FEB  
                            plusw1 0FE3                              plusw2 0FDB  
                  __end_of_pwm_set 1712                              ttemp0 0001  
                            ttemp1 0004                              ttemp2 0007  
                            ttemp3 000A                              ttemp5 0002  
                            ttemp6 0005                              ttemp7 0009  
                            status 0FD8                    ??_config_timer0 0037  
                            wtemp0 0001                              wtemp1 0003  
                            wtemp2 0005                              wtemp3 0007  
                            wtemp4 0009                              wtemp5 000B  
                            wtemp8 0002                     write_pipe@data 00C1  
                  __initialization 1FE2                       __end_of_idle 20AE  
                     __end_of_main 1E0A          __end_of_tarefa_acelerador 1FA2  
                           ??_idle 0100                             ??_main 0047  
                    __activetblptr 0002                             ?_delay 0124  
                           _ADCON0 0FC2                             _ADCON1 0FC1  
                           _ADCON2 0FC0                             _ADRESH 0FC4  
                           _ADRESL 0FC3                             _CCPR1L 0FBE  
                           _CCPR2L 0FBB                   __end_of_adc_init 21DC  
                 __end_of_adc_read 204E                             i1l3101 1120  
                           i1l3111 121A                             i1l3103 1186  
                           i1l3121 127E                             i1l3113 121E  
                           i1l3105 11D8                             i1l3123 12D0  
                           i1l3115 123C                             i1l3107 11EC  
                           i1l3125 1322                             i1l3117 125C  
                           i1l3109 11FC                             i1l2501 0F7C  
                           i1l2191 1B72                             i1l3127 1348  
                           i1l3119 125E                             i1l2511 102E  
                           i1l2503 0F9A                             i1l2193 1B90  
                           i1l3129 137E                             i1l2521 1BD4  
                           i1l2513 1080                             i1l2505 0FBA  
                           i1l2531 1D58                             i1l2611 0B2C  
                           i1l2195 1BA2                             i1l2187 1B48  
                           i1l2523 1C06                             i1l2515 10A6  
                           i1l2507 0FBC                             i1l2541 1A26  
                           i1l2533 1D66                             i1l2621 0BB6  
                           i1l2613 0B34                             i1l2197 1BC4  
                           i1l2189 1B4A                             i1l2525 1C36  
                           i1l2509 0FDC                             i1l2517 10DC  
                           i1l2551 1A68                             i1l2543 1A3C  
                           i1l2535 1D76                             i1l2631 0C96  
                           i1l2623 0C1C                             i1l2615 0B3A  
                           i1l2607 0B12                             i1l2199 1BCE  
                           i1l3095 10E0                             i1l2527 1C54  
                           i1l2519 1BD2                             i1l2553 1A86  
                           i1l2545 1A44                             i1l2537 1D80  
                           i1l2529 1D46                             i1l2641 0D48  
                           i1l2633 0CB4                             i1l2625 0C6E  
                           i1l2617 0B7A                             i1l2609 0B14  
                           i1l3097 10E2                             i1l2561 1964  
                           i1l2481 0DFA                             i1l2731 1388  
                           i1l2555 1A96                             i1l2547 1A50  
                           i1l2539 1A14                             i1l2643 0D9A  
                           i1l2635 0CD4                             i1l2627 0C82  
                           i1l2619 0B96                             i1l3099 1100  
                           i1l2571 1990                             i1l2563 1968  
                           i1l2491 0E9C                             i1l2483 0DFC  
                           i1l2651 1CD4                             i1l2741 1492  
                           i1l2733 13A6                             i1l2557 1A98  
                           i1l2549 1A5E                             i1l2645 0DC0  
                           i1l2637 0CD6                             i1l2629 0C92  
                           i1l2661 1C58                             i1l2581 19C8  
                           i1l2573 1998                             i1l2565 1976  
                           i1l2493 0F02                             i1l2485 0E20  
                           i1l2653 1CE0                             i1l2751 14E6  
                           i1l2735 13C6                             i1l2743 14A2  
                           i1l2559 1AA2                             i1l2639 0CF6  
                           i1l2647 0DF6                             i1l2671 1CCE  
                           i1l2663 1C5A                             i1l2591 1A02  
                           i1l2583 19DE                             i1l2575 19AA  
                           i1l2567 197E                             i1l2495 0F54  
                           i1l2487 0E60                             i1l2655 1D02  
                           i1l2753 1506                             i1l2761 1606  
                           i1l2745 14A6                             i1l2737 142C  
                           i1l2729 1386                             i1l2665 1C66  
                           i1l2673 201C                             i1l2593 1A0A  
                           i1l2585 19E6                             i1l2577 19B2  
                           i1l2569 1982                             i1l2497 0F68  
                           i1l2489 0E7C                             i1l2657 1D38  
                           i1l2649 1CD2                             i2l2043 21E2  
                           i1l2755 1558                             i1l2747 14C4  
                           i1l2739 147E                             i1l2691 16F0  
                           i1l2683 160E                             i1l2667 1C8E  
                           i1l2675 2028                             i1l2587 19EC  
                           i1l2579 19BA                             i1l2499 0F78  
                           i1l2659 1D42                             i1l2757 15AA  
                           i1l2749 14E4                             i1l2685 1674  
                           i1l2669 1CC4                             i1l2677 202E  
                           i1l2589 19F2                             i1l2759 15D0  
                           i1l2687 16A4                             i1l2679 203E  
                           i2l2321 1AC2                             i2l2323 1AE4  
                           i2l2325 1B1C                             i2l2245 20DC  
                           i2l2327 1B2E                             i2l2319 1ABA  
                           i2l2247 20EE                             i2l2329 1B30  
                           u214_20 205E                             u214_21 205A  
                           u143_20 18E0                             u143_21 18DC  
                           i2l2851 0848                             i2l2861 0866  
                           i2l2853 084A                             i2l2871 095A  
                           i2l2863 086A                             i2l2855 084E  
                           u216_20 2090                             u144_20 190A  
                           i2l2881 09BE                             i2l2873 096E  
                           i2l2865 0886                             i2l2857 085C  
                           i2l2849 0838                             u216_21 208A  
                           u144_21 1906                             i2l2891 0AA8  
                           i2l2883 09C0                             i2l2867 08A6  
                           i2l2875 097E                             i2l2859 085E  
                           i2l2885 09E0                             i2l2877 0982  
                           i2l2869 090A                             i2l2893 0ADE  
                           u216_26 2092                             i2l2887 0A32  
                           i2l2879 099E                             u145_20 1952  
                           i2l2889 0A82                             u145_21 194E  
                           _STATUS 0FD8                             _STKPTR 0FFC  
                           ___lmul 1D46                          ??___awmod 00CC  
                        ??___lldiv 00E1                  __end_of_SRAMalloc 17E8  
                    mutex_unlock@m 00D5                             clear_0 1FEA  
                           clear_1 1FFC                             clear_2 2008  
                  ___awmod@divisor 00CA         __end_of_stability_callback 21E8  
                           isa$std 0001                    ___awmod@counter 00CC  
                    ?_int_ext_init 0037        __end_of_tarefa_estabilidade 207E  
                 __end_of_sem_init 2132                   __end_of_sem_wait 10E0  
                 __end_of_sem_post 1C58                   __end_of_os_start 21D0  
                           lltemp0 0001                             lltemp1 0009  
                           lltemp2 0011                             lltemp3 0019  
                     __mediumconst 0800                          ??_os_init 003B  
                           tblptru 0FF8                        ?__SRAMmerge 0037  
                 __end_of_pwm_init 21B0                          ??_pwm_set 011F  
                       __accesstop 0060            __end_of__initialization 200E  
                    ___rparam_used 0001                       _change_state 1382  
                   __pcstackCOMRAM 0037                         ___inthi_sp 05C4  
                       _accel_data 0060                      __end_of_delay 1382  
                       _accel_pipe 0024                     ??_int_ext_init 0039  
                  __SRAMmerge@uSum 0039                            ??_delay 0126  
                       __pbssBANK0 0060                       ?_user_config 0037  
                    __uDynamicHeap 0061                            ?___lmul 00D5  
                          _CCP1CON 0FBD                            _CCP2CON 0FBA  
                   ___lmul@product 00DD                          ?_adc_init 0037  
                        ?_adc_read 00B8           ?_tarefa_controle_central 0037  
                      sem_init@sem 0037                        sem_wait@sem 00C8  
                          __Hparam 0000                        sem_post@sem 00C8  
                        ?_sem_init 0037                          ?_sem_wait 00C8  
                        ?_sem_post 00C8                            __Lparam 0000  
                        ?_os_start 0037                            ___awmod 1964  
                          ___lldiv 1A14                          ?_pwm_init 0037  
                     __psmallconst 0800         ?_tarefa_injecao_eletronica 0037  
                          __pcinit 1FE2                            __ramtop 0800  
                    ?_SRAMInitHeap 0037                         ??_adc_init 0037  
                       ??_adc_read 00BA                            __ptext0 1DB2  
                          __ptext1 21C4                            __ptext2 20AE  
                          __ptext3 219A                            __ptext4 215A  
                          __ptext5 21B0                            __ptext6 1F0A  
                          __ptext7 210A                            __ptext8 1712  
                          __ptext9 17E8                          _T0CONbits 0FD5  
                 ___awmod@dividend 00C8                  __end_of_read_pipe 1CD2  
                          _r_queue 016D                            _os_init 2132  
                          _pwm_set 160A                  __end_of_scheduler 21E2  
                   __pintcode_body 0802               end_of_initialization 200E  
                    __Lmediumconst 0000               __end_of_int_ext_init 21C4  
                          int_func 0802              __end_of_config_timer0 219A  
                  ___lldiv@divisor 0116                         ??_sem_init 003A  
                  ___lldiv@counter 011E                         ??_sem_wait 00C9  
                       ??_sem_post 00C9                         ??_os_start 0047  
                     _buffer_mutex 00B1                            postdec0 0FED  
                          postdec1 0FE5                            postdec2 0FDD  
                          postinc0 0FEE                            postinc1 0FE6  
                          postinc2 0FDE                         ??_pwm_init 0037  
                   ??_SRAMInitHeap 0037                          _PORTDbits 0F83  
                        _SRAMalloc 1712                         _mutex_init 215A  
                       _mutex_lock 0B12                   _ext_int_callback 0021  
                        _TRISBbits 0F93                          _TRISCbits 0F94  
                        _TRISDbits 0F95                       ??__SRAMmerge 0038  
                    sem_init@value 0038                 _stability_callback 21E2  
                    ??_create_pipe 0046                      ??_create_task 003A  
                    ?_mutex_unlock 00D5                        _CCP1CONbits 0FBD  
                      _CCP2CONbits 0FBA                ?_stability_callback 0037  
                ??_ext_int_service 0037                 __end_of__SRAMmerge 18A6  
                   __end_of___lmul 1DB2                        mutex_init@m 0037  
                      mutex_lock@m 00D5                         _write_pipe 1CD2  
             ??_stability_callback 0037                      _decrease_time 1ABA  
                       ?_SRAMalloc 003D                start_initialization 1FE2  
               SRAMalloc@segHeader 0042                        __end_of_ISR 0B12  
                 __SRAMmerge@pSegA 0037                   __SRAMmerge@pSegB 003A  
                 __SRAMmerge@uSegA 003B                   __SRAMmerge@uSegB 003C  
                   ??_mutex_unlock 00D6                      ?_start_timer0 0037  
                      pwm_set@duty 0122                __end_of_create_pipe 1F5A  
              __end_of_create_task 1E60                           ??___lmul 00DD  
      tarefa_controle_central@data 00D4                  pwm_set@duty_cycle 00E1  
      tarefa_controle_central@duty 00D3                     ?_decrease_time 0037  
                       read_pipe@p 00D0                        __pbssBIGRAM 016D  
                      ?_mutex_init 0037                        ?_mutex_lock 00D5  
                      __pbssCOMRAM 0021                    adc_read@channel 00BC  
                    __pcstackBANK0 00B8                      __pcstackBANK1 0100  
                   ??_start_timer0 0037               __end_of_SRAMInitHeap 1EB6  
                        __pintcode 0008                           ?___awmod 00C8  
                         ?___lldiv 0112        ??_tarefa_injecao_eletronica 00E2  
                      ?_write_pipe 00C0                     pwm_set@channel 0121  
                     _int_ext_init 21B0                        __smallconst 0800  
                      ??_SRAMalloc 003F                           ?_os_init 0037  
                         ?_pwm_set 00E1                          _read_pipe 1C58  
                        delay@time 0124                          _scheduler 21DC  
                      _create_pipe 1F0A                        _create_task 1E0A  
                         _LATDbits 0F8C                           i1u112_20 1B72  
                         i1u112_21 1B6E                           i1u210_20 11FC  
                         i1u210_21 11F8                           i1u211_20 125C  
                         i1u211_21 1258                           i1u212_20 127E  
                         i1u212_21 127A                           i1u213_20 1342  
                         i1u213_21 133E                           i1u150_20 0FDC  
                         i1u150_21 0FD8                           i1u151_20 10A0  
                         i1u151_21 109C                           i1u160_20 19AA  
                         i1u152_20 1C06                           i1u160_21 19A6  
                         i1u152_21 1C02                           i1u153_20 1D66  
                         i1u209_20 1120                           i1u161_20 19C8  
                         i1u153_21 1D62                           i1u209_21 111C  
                         i1u161_21 19C4                           i1u154_20 1DA0  
                         i1u170_20 203E                           i1u162_20 19DE  
                         i1u146_20 0E20                           i1u154_21 1D9C  
                         i1u170_21 203A                           i1u162_21 19DA  
                         i1u146_21 0E1C                           i1u155_20 1A3C  
                         i1u163_20 1A02                           i1u147_20 0E9C  
                         i1u155_21 1A38                           i1u163_21 19FE  
                         i1u147_21 0E98                           i1u180_20 15CA  
                         i1u156_20 1A5E                           i1u164_20 0B2C  
                         i1u148_20 0F78                           i1u180_21 15C6  
                         i1u156_21 1A5A                           i1u164_21 0B28  
                         i1u148_21 0F74                           i1u157_20 1A86  
                         i1u165_20 0BB6                           i1u149_20 0FBA  
                         i1u157_21 1A82                           i1u165_21 0BB2  
                         i1u149_21 0FB6                           i1u166_20 0C92  
                         i1u158_20 1976                           i1u166_21 0C8E  
                         i1u158_21 1972                           i1u167_20 0CD4  
                         i1u159_20 1990                           i1u167_21 0CD0  
                         i1u159_21 198C                           i1u176_20 13C6  
                         i1u168_20 0CF6                           i1u176_21 13C2  
                         i1u168_21 0CF2                           i1u177_20 14A2  
                         i1u169_20 0DBA                           i1u177_21 149E  
                         i1u169_21 0DB6                           i1u178_20 14E4  
                         i1u178_21 14E0                           i2u114_40 20EE  
                         i2u114_41 20EA                           i1u179_20 1506  
                         i1u179_21 1502                           i2u115_48 20F4  
                         i2u115_49 2108                           i2u126_40 1AE4  
                         i2u126_41 1AE0                           i2u127_40 1B1C  
                         i2u127_41 1B18                           i2u128_40 1B46  
                         i2u128_41 1B42                           i2u190_40 08A6  
                         i2u190_41 08A2                           i2u191_40 097E  
                         i2u191_41 097A                           i2u192_40 09BE  
                         i2u192_41 09BA                           i2u193_40 09E0  
                         i2u193_41 09DC                           i2u194_40 0AA2  
                         i2u194_41 0A9E                           i2u188_40 0848  
                         i2u188_41 0844                           i2u189_40 085C  
                         i2u189_41 0858                create_task@new_task 0102  
       __end_of_priority_scheduler 1964                    ??_decrease_time 0037  
             __end_of_mutex_unlock 1BD2                         _ADCON0bits 0FC2  
              create_task@priority 0037              change_state@new_state 012B  
                      write_pipe@p 00C0                    _ext_int_service 20DC  
                   decrease_time@i 0039                  ___lmul@multiplier 00D5  
                      _INTCON2bits 0FF1                         ?_read_pipe 00D0  
        _tarefa_injecao_eletronica 1FA2              tarefa_acelerador@data 00C7  
                         __Hrparam 0000                      ?_change_state 0037  
                         __Lrparam 0000                _tarefa_estabilidade 204E  
                         _adc_init 21D0                           _adc_read 2018  
             __end_of_start_timer0 21EC                           __ptext10 21D0  
                         __ptext11 21E8                           __ptext20 1964  
                         __ptext12 2132                           __ptext21 10E0  
                         __ptext13 1E0A                           __ptext30 160A  
                         __ptext22 21DC                           __ptext14 217E  
                         __ptext31 1D46                           __ptext23 18A6  
                         __ptext15 1E60                           __ptext32 1A14  
                         __ptext24 2018                           __ptext16 1F5A  
                         __ptext33 204E                           __ptext25 1EB6  
                         __ptext17 1CD2                           __ptext34 1382  
                         __ptext26 1C58                           __ptext18 0DFA  
                         __ptext35 207E                           __ptext27 1B48  
                         __ptext19 1BD2                           __ptext28 0B12  
                         __ptext37 20DC                           __ptext29 1FA2  
                         __ptext38 21E2                           __ptext39 1ABA  
             ?_tarefa_estabilidade 0037            _tarefa_controle_central 1EB6  
                    ??_user_config 0047                           _est_flag 0023  
                  mutex_unlock@tid 00D8                     ??_change_state 0124  
                         _sem_init 210A                           _sem_wait 0DFA  
                         _sem_post 1BD2                           _os_start 21C4  
                         isa$xinst 0000                           _pwm_init 219A  
                     _SRAMInitHeap 1E60            __end_of_ext_int_service 210A  
                     ??_mutex_init 0038                       ??_mutex_lock 00D6  
             tarefa_acelerador@raw 00C5                         _INTCONbits 0FF2  
            ??_tarefa_estabilidade 012D                        ??_read_pipe 00D2  
                         intlevel1 0000                           intlevel2 0000  
                 ___lldiv@dividend 0112               int_ext_init@callback 0037  
                    _config_timer0 217E                __end_of_user_config 20DC  
               __end_of_mutex_init 217E                 __end_of_mutex_lock 0DFA  
    tarefa_injecao_eletronica@duty 00E2                       ??_write_pipe 00C2  
                 ___lldiv@quotient 011A                      read_pipe@data 00D1  
        ??_tarefa_controle_central 00D3                       ?_create_pipe 0045  
                     ?_create_task 0037                       _mutex_unlock 1B48  
               __end_of_write_pipe 1D46                     ?_config_timer0 0037  
