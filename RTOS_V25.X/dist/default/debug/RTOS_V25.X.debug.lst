

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed May 28 18:36:09 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    55   000000                     
    56                           ; Generated 05/12/2024 GMT
    57                           ; 
    58                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F62                     SPPDATA         equ	3938	;# 
   132   000F63                     SPPCFG          equ	3939	;# 
   133   000F64                     SPPEPS          equ	3940	;# 
   134   000F65                     SPPCON          equ	3941	;# 
   135   000F66                     UFRM            equ	3942	;# 
   136   000F66                     UFRML           equ	3942	;# 
   137   000F67                     UFRMH           equ	3943	;# 
   138   000F68                     UIR             equ	3944	;# 
   139   000F69                     UIE             equ	3945	;# 
   140   000F6A                     UEIR            equ	3946	;# 
   141   000F6B                     UEIE            equ	3947	;# 
   142   000F6C                     USTAT           equ	3948	;# 
   143   000F6D                     UCON            equ	3949	;# 
   144   000F6E                     UADDR           equ	3950	;# 
   145   000F6F                     UCFG            equ	3951	;# 
   146   000F70                     UEP0            equ	3952	;# 
   147   000F71                     UEP1            equ	3953	;# 
   148   000F72                     UEP2            equ	3954	;# 
   149   000F73                     UEP3            equ	3955	;# 
   150   000F74                     UEP4            equ	3956	;# 
   151   000F75                     UEP5            equ	3957	;# 
   152   000F76                     UEP6            equ	3958	;# 
   153   000F77                     UEP7            equ	3959	;# 
   154   000F78                     UEP8            equ	3960	;# 
   155   000F79                     UEP9            equ	3961	;# 
   156   000F7A                     UEP10           equ	3962	;# 
   157   000F7B                     UEP11           equ	3963	;# 
   158   000F7C                     UEP12           equ	3964	;# 
   159   000F7D                     UEP13           equ	3965	;# 
   160   000F7E                     UEP14           equ	3966	;# 
   161   000F7F                     UEP15           equ	3967	;# 
   162   000F80                     PORTA           equ	3968	;# 
   163   000F81                     PORTB           equ	3969	;# 
   164   000F82                     PORTC           equ	3970	;# 
   165   000F83                     PORTD           equ	3971	;# 
   166   000F84                     PORTE           equ	3972	;# 
   167   000F89                     LATA            equ	3977	;# 
   168   000F8A                     LATB            equ	3978	;# 
   169   000F8B                     LATC            equ	3979	;# 
   170   000F8C                     LATD            equ	3980	;# 
   171   000F8D                     LATE            equ	3981	;# 
   172   000F92                     TRISA           equ	3986	;# 
   173   000F92                     DDRA            equ	3986	;# 
   174   000F93                     TRISB           equ	3987	;# 
   175   000F93                     DDRB            equ	3987	;# 
   176   000F94                     TRISC           equ	3988	;# 
   177   000F94                     DDRC            equ	3988	;# 
   178   000F95                     TRISD           equ	3989	;# 
   179   000F95                     DDRD            equ	3989	;# 
   180   000F96                     TRISE           equ	3990	;# 
   181   000F96                     DDRE            equ	3990	;# 
   182   000F9B                     OSCTUNE         equ	3995	;# 
   183   000F9D                     PIE1            equ	3997	;# 
   184   000F9E                     PIR1            equ	3998	;# 
   185   000F9F                     IPR1            equ	3999	;# 
   186   000FA0                     PIE2            equ	4000	;# 
   187   000FA1                     PIR2            equ	4001	;# 
   188   000FA2                     IPR2            equ	4002	;# 
   189   000FA6                     EECON1          equ	4006	;# 
   190   000FA7                     EECON2          equ	4007	;# 
   191   000FA8                     EEDATA          equ	4008	;# 
   192   000FA9                     EEADR           equ	4009	;# 
   193   000FAB                     RCSTA           equ	4011	;# 
   194   000FAB                     RCSTA1          equ	4011	;# 
   195   000FAC                     TXSTA           equ	4012	;# 
   196   000FAC                     TXSTA1          equ	4012	;# 
   197   000FAD                     TXREG           equ	4013	;# 
   198   000FAD                     TXREG1          equ	4013	;# 
   199   000FAE                     RCREG           equ	4014	;# 
   200   000FAE                     RCREG1          equ	4014	;# 
   201   000FAF                     SPBRG           equ	4015	;# 
   202   000FAF                     SPBRG1          equ	4015	;# 
   203   000FB0                     SPBRGH          equ	4016	;# 
   204   000FB1                     T3CON           equ	4017	;# 
   205   000FB2                     TMR3            equ	4018	;# 
   206   000FB2                     TMR3L           equ	4018	;# 
   207   000FB3                     TMR3H           equ	4019	;# 
   208   000FB4                     CMCON           equ	4020	;# 
   209   000FB5                     CVRCON          equ	4021	;# 
   210   000FB6                     ECCP1AS         equ	4022	;# 
   211   000FB6                     CCP1AS          equ	4022	;# 
   212   000FB7                     ECCP1DEL        equ	4023	;# 
   213   000FB7                     CCP1DEL         equ	4023	;# 
   214   000FB8                     BAUDCON         equ	4024	;# 
   215   000FB8                     BAUDCTL         equ	4024	;# 
   216   000FBA                     CCP2CON         equ	4026	;# 
   217   000FBB                     CCPR2           equ	4027	;# 
   218   000FBB                     CCPR2L          equ	4027	;# 
   219   000FBC                     CCPR2H          equ	4028	;# 
   220   000FBD                     CCP1CON         equ	4029	;# 
   221   000FBD                     ECCP1CON        equ	4029	;# 
   222   000FBE                     CCPR1           equ	4030	;# 
   223   000FBE                     CCPR1L          equ	4030	;# 
   224   000FBF                     CCPR1H          equ	4031	;# 
   225   000FC0                     ADCON2          equ	4032	;# 
   226   000FC1                     ADCON1          equ	4033	;# 
   227   000FC2                     ADCON0          equ	4034	;# 
   228   000FC3                     ADRES           equ	4035	;# 
   229   000FC3                     ADRESL          equ	4035	;# 
   230   000FC4                     ADRESH          equ	4036	;# 
   231   000FC5                     SSPCON2         equ	4037	;# 
   232   000FC6                     SSPCON1         equ	4038	;# 
   233   000FC7                     SSPSTAT         equ	4039	;# 
   234   000FC8                     SSPADD          equ	4040	;# 
   235   000FC9                     SSPBUF          equ	4041	;# 
   236   000FCA                     T2CON           equ	4042	;# 
   237   000FCB                     PR2             equ	4043	;# 
   238   000FCB                     MEMCON          equ	4043	;# 
   239   000FCC                     TMR2            equ	4044	;# 
   240   000FCD                     T1CON           equ	4045	;# 
   241   000FCE                     TMR1            equ	4046	;# 
   242   000FCE                     TMR1L           equ	4046	;# 
   243   000FCF                     TMR1H           equ	4047	;# 
   244   000FD0                     RCON            equ	4048	;# 
   245   000FD1                     WDTCON          equ	4049	;# 
   246   000FD2                     HLVDCON         equ	4050	;# 
   247   000FD2                     LVDCON          equ	4050	;# 
   248   000FD3                     OSCCON          equ	4051	;# 
   249   000FD5                     T0CON           equ	4053	;# 
   250   000FD6                     TMR0            equ	4054	;# 
   251   000FD6                     TMR0L           equ	4054	;# 
   252   000FD7                     TMR0H           equ	4055	;# 
   253   000FD8                     STATUS          equ	4056	;# 
   254   000FD9                     FSR2            equ	4057	;# 
   255   000FD9                     FSR2L           equ	4057	;# 
   256   000FDA                     FSR2H           equ	4058	;# 
   257   000FDB                     PLUSW2          equ	4059	;# 
   258   000FDC                     PREINC2         equ	4060	;# 
   259   000FDD                     POSTDEC2        equ	4061	;# 
   260   000FDE                     POSTINC2        equ	4062	;# 
   261   000FDF                     INDF2           equ	4063	;# 
   262   000FE0                     BSR             equ	4064	;# 
   263   000FE1                     FSR1            equ	4065	;# 
   264   000FE1                     FSR1L           equ	4065	;# 
   265   000FE2                     FSR1H           equ	4066	;# 
   266   000FE3                     PLUSW1          equ	4067	;# 
   267   000FE4                     PREINC1         equ	4068	;# 
   268   000FE5                     POSTDEC1        equ	4069	;# 
   269   000FE6                     POSTINC1        equ	4070	;# 
   270   000FE7                     INDF1           equ	4071	;# 
   271   000FE8                     WREG            equ	4072	;# 
   272   000FE9                     FSR0            equ	4073	;# 
   273   000FE9                     FSR0L           equ	4073	;# 
   274   000FEA                     FSR0H           equ	4074	;# 
   275   000FEB                     PLUSW0          equ	4075	;# 
   276   000FEC                     PREINC0         equ	4076	;# 
   277   000FED                     POSTDEC0        equ	4077	;# 
   278   000FEE                     POSTINC0        equ	4078	;# 
   279   000FEF                     INDF0           equ	4079	;# 
   280   000FF0                     INTCON3         equ	4080	;# 
   281   000FF1                     INTCON2         equ	4081	;# 
   282   000FF2                     INTCON          equ	4082	;# 
   283   000FF3                     PROD            equ	4083	;# 
   284   000FF3                     PRODL           equ	4083	;# 
   285   000FF4                     PRODH           equ	4084	;# 
   286   000FF5                     TABLAT          equ	4085	;# 
   287   000FF6                     TBLPTR          equ	4086	;# 
   288   000FF6                     TBLPTRL         equ	4086	;# 
   289   000FF7                     TBLPTRH         equ	4087	;# 
   290   000FF8                     TBLPTRU         equ	4088	;# 
   291   000FF9                     PCLAT           equ	4089	;# 
   292   000FF9                     PC              equ	4089	;# 
   293   000FF9                     PCL             equ	4089	;# 
   294   000FFA                     PCLATH          equ	4090	;# 
   295   000FFB                     PCLATU          equ	4091	;# 
   296   000FFC                     STKPTR          equ	4092	;# 
   297   000FFD                     TOS             equ	4093	;# 
   298   000FFD                     TOSL            equ	4093	;# 
   299   000FFE                     TOSH            equ	4094	;# 
   300   000FFF                     TOSU            equ	4095	;# 
   301   000F62                     SPPDATA         equ	3938	;# 
   302   000F63                     SPPCFG          equ	3939	;# 
   303   000F64                     SPPEPS          equ	3940	;# 
   304   000F65                     SPPCON          equ	3941	;# 
   305   000F66                     UFRM            equ	3942	;# 
   306   000F66                     UFRML           equ	3942	;# 
   307   000F67                     UFRMH           equ	3943	;# 
   308   000F68                     UIR             equ	3944	;# 
   309   000F69                     UIE             equ	3945	;# 
   310   000F6A                     UEIR            equ	3946	;# 
   311   000F6B                     UEIE            equ	3947	;# 
   312   000F6C                     USTAT           equ	3948	;# 
   313   000F6D                     UCON            equ	3949	;# 
   314   000F6E                     UADDR           equ	3950	;# 
   315   000F6F                     UCFG            equ	3951	;# 
   316   000F70                     UEP0            equ	3952	;# 
   317   000F71                     UEP1            equ	3953	;# 
   318   000F72                     UEP2            equ	3954	;# 
   319   000F73                     UEP3            equ	3955	;# 
   320   000F74                     UEP4            equ	3956	;# 
   321   000F75                     UEP5            equ	3957	;# 
   322   000F76                     UEP6            equ	3958	;# 
   323   000F77                     UEP7            equ	3959	;# 
   324   000F78                     UEP8            equ	3960	;# 
   325   000F79                     UEP9            equ	3961	;# 
   326   000F7A                     UEP10           equ	3962	;# 
   327   000F7B                     UEP11           equ	3963	;# 
   328   000F7C                     UEP12           equ	3964	;# 
   329   000F7D                     UEP13           equ	3965	;# 
   330   000F7E                     UEP14           equ	3966	;# 
   331   000F7F                     UEP15           equ	3967	;# 
   332   000F80                     PORTA           equ	3968	;# 
   333   000F81                     PORTB           equ	3969	;# 
   334   000F82                     PORTC           equ	3970	;# 
   335   000F83                     PORTD           equ	3971	;# 
   336   000F84                     PORTE           equ	3972	;# 
   337   000F89                     LATA            equ	3977	;# 
   338   000F8A                     LATB            equ	3978	;# 
   339   000F8B                     LATC            equ	3979	;# 
   340   000F8C                     LATD            equ	3980	;# 
   341   000F8D                     LATE            equ	3981	;# 
   342   000F92                     TRISA           equ	3986	;# 
   343   000F92                     DDRA            equ	3986	;# 
   344   000F93                     TRISB           equ	3987	;# 
   345   000F93                     DDRB            equ	3987	;# 
   346   000F94                     TRISC           equ	3988	;# 
   347   000F94                     DDRC            equ	3988	;# 
   348   000F95                     TRISD           equ	3989	;# 
   349   000F95                     DDRD            equ	3989	;# 
   350   000F96                     TRISE           equ	3990	;# 
   351   000F96                     DDRE            equ	3990	;# 
   352   000F9B                     OSCTUNE         equ	3995	;# 
   353   000F9D                     PIE1            equ	3997	;# 
   354   000F9E                     PIR1            equ	3998	;# 
   355   000F9F                     IPR1            equ	3999	;# 
   356   000FA0                     PIE2            equ	4000	;# 
   357   000FA1                     PIR2            equ	4001	;# 
   358   000FA2                     IPR2            equ	4002	;# 
   359   000FA6                     EECON1          equ	4006	;# 
   360   000FA7                     EECON2          equ	4007	;# 
   361   000FA8                     EEDATA          equ	4008	;# 
   362   000FA9                     EEADR           equ	4009	;# 
   363   000FAB                     RCSTA           equ	4011	;# 
   364   000FAB                     RCSTA1          equ	4011	;# 
   365   000FAC                     TXSTA           equ	4012	;# 
   366   000FAC                     TXSTA1          equ	4012	;# 
   367   000FAD                     TXREG           equ	4013	;# 
   368   000FAD                     TXREG1          equ	4013	;# 
   369   000FAE                     RCREG           equ	4014	;# 
   370   000FAE                     RCREG1          equ	4014	;# 
   371   000FAF                     SPBRG           equ	4015	;# 
   372   000FAF                     SPBRG1          equ	4015	;# 
   373   000FB0                     SPBRGH          equ	4016	;# 
   374   000FB1                     T3CON           equ	4017	;# 
   375   000FB2                     TMR3            equ	4018	;# 
   376   000FB2                     TMR3L           equ	4018	;# 
   377   000FB3                     TMR3H           equ	4019	;# 
   378   000FB4                     CMCON           equ	4020	;# 
   379   000FB5                     CVRCON          equ	4021	;# 
   380   000FB6                     ECCP1AS         equ	4022	;# 
   381   000FB6                     CCP1AS          equ	4022	;# 
   382   000FB7                     ECCP1DEL        equ	4023	;# 
   383   000FB7                     CCP1DEL         equ	4023	;# 
   384   000FB8                     BAUDCON         equ	4024	;# 
   385   000FB8                     BAUDCTL         equ	4024	;# 
   386   000FBA                     CCP2CON         equ	4026	;# 
   387   000FBB                     CCPR2           equ	4027	;# 
   388   000FBB                     CCPR2L          equ	4027	;# 
   389   000FBC                     CCPR2H          equ	4028	;# 
   390   000FBD                     CCP1CON         equ	4029	;# 
   391   000FBD                     ECCP1CON        equ	4029	;# 
   392   000FBE                     CCPR1           equ	4030	;# 
   393   000FBE                     CCPR1L          equ	4030	;# 
   394   000FBF                     CCPR1H          equ	4031	;# 
   395   000FC0                     ADCON2          equ	4032	;# 
   396   000FC1                     ADCON1          equ	4033	;# 
   397   000FC2                     ADCON0          equ	4034	;# 
   398   000FC3                     ADRES           equ	4035	;# 
   399   000FC3                     ADRESL          equ	4035	;# 
   400   000FC4                     ADRESH          equ	4036	;# 
   401   000FC5                     SSPCON2         equ	4037	;# 
   402   000FC6                     SSPCON1         equ	4038	;# 
   403   000FC7                     SSPSTAT         equ	4039	;# 
   404   000FC8                     SSPADD          equ	4040	;# 
   405   000FC9                     SSPBUF          equ	4041	;# 
   406   000FCA                     T2CON           equ	4042	;# 
   407   000FCB                     PR2             equ	4043	;# 
   408   000FCB                     MEMCON          equ	4043	;# 
   409   000FCC                     TMR2            equ	4044	;# 
   410   000FCD                     T1CON           equ	4045	;# 
   411   000FCE                     TMR1            equ	4046	;# 
   412   000FCE                     TMR1L           equ	4046	;# 
   413   000FCF                     TMR1H           equ	4047	;# 
   414   000FD0                     RCON            equ	4048	;# 
   415   000FD1                     WDTCON          equ	4049	;# 
   416   000FD2                     HLVDCON         equ	4050	;# 
   417   000FD2                     LVDCON          equ	4050	;# 
   418   000FD3                     OSCCON          equ	4051	;# 
   419   000FD5                     T0CON           equ	4053	;# 
   420   000FD6                     TMR0            equ	4054	;# 
   421   000FD6                     TMR0L           equ	4054	;# 
   422   000FD7                     TMR0H           equ	4055	;# 
   423   000FD8                     STATUS          equ	4056	;# 
   424   000FD9                     FSR2            equ	4057	;# 
   425   000FD9                     FSR2L           equ	4057	;# 
   426   000FDA                     FSR2H           equ	4058	;# 
   427   000FDB                     PLUSW2          equ	4059	;# 
   428   000FDC                     PREINC2         equ	4060	;# 
   429   000FDD                     POSTDEC2        equ	4061	;# 
   430   000FDE                     POSTINC2        equ	4062	;# 
   431   000FDF                     INDF2           equ	4063	;# 
   432   000FE0                     BSR             equ	4064	;# 
   433   000FE1                     FSR1            equ	4065	;# 
   434   000FE1                     FSR1L           equ	4065	;# 
   435   000FE2                     FSR1H           equ	4066	;# 
   436   000FE3                     PLUSW1          equ	4067	;# 
   437   000FE4                     PREINC1         equ	4068	;# 
   438   000FE5                     POSTDEC1        equ	4069	;# 
   439   000FE6                     POSTINC1        equ	4070	;# 
   440   000FE7                     INDF1           equ	4071	;# 
   441   000FE8                     WREG            equ	4072	;# 
   442   000FE9                     FSR0            equ	4073	;# 
   443   000FE9                     FSR0L           equ	4073	;# 
   444   000FEA                     FSR0H           equ	4074	;# 
   445   000FEB                     PLUSW0          equ	4075	;# 
   446   000FEC                     PREINC0         equ	4076	;# 
   447   000FED                     POSTDEC0        equ	4077	;# 
   448   000FEE                     POSTINC0        equ	4078	;# 
   449   000FEF                     INDF0           equ	4079	;# 
   450   000FF0                     INTCON3         equ	4080	;# 
   451   000FF1                     INTCON2         equ	4081	;# 
   452   000FF2                     INTCON          equ	4082	;# 
   453   000FF3                     PROD            equ	4083	;# 
   454   000FF3                     PRODL           equ	4083	;# 
   455   000FF4                     PRODH           equ	4084	;# 
   456   000FF5                     TABLAT          equ	4085	;# 
   457   000FF6                     TBLPTR          equ	4086	;# 
   458   000FF6                     TBLPTRL         equ	4086	;# 
   459   000FF7                     TBLPTRH         equ	4087	;# 
   460   000FF8                     TBLPTRU         equ	4088	;# 
   461   000FF9                     PCLAT           equ	4089	;# 
   462   000FF9                     PC              equ	4089	;# 
   463   000FF9                     PCL             equ	4089	;# 
   464   000FFA                     PCLATH          equ	4090	;# 
   465   000FFB                     PCLATU          equ	4091	;# 
   466   000FFC                     STKPTR          equ	4092	;# 
   467   000FFD                     TOS             equ	4093	;# 
   468   000FFD                     TOSL            equ	4093	;# 
   469   000FFE                     TOSH            equ	4094	;# 
   470   000FFF                     TOSU            equ	4095	;# 
   471   000F62                     SPPDATA         equ	3938	;# 
   472   000F63                     SPPCFG          equ	3939	;# 
   473   000F64                     SPPEPS          equ	3940	;# 
   474   000F65                     SPPCON          equ	3941	;# 
   475   000F66                     UFRM            equ	3942	;# 
   476   000F66                     UFRML           equ	3942	;# 
   477   000F67                     UFRMH           equ	3943	;# 
   478   000F68                     UIR             equ	3944	;# 
   479   000F69                     UIE             equ	3945	;# 
   480   000F6A                     UEIR            equ	3946	;# 
   481   000F6B                     UEIE            equ	3947	;# 
   482   000F6C                     USTAT           equ	3948	;# 
   483   000F6D                     UCON            equ	3949	;# 
   484   000F6E                     UADDR           equ	3950	;# 
   485   000F6F                     UCFG            equ	3951	;# 
   486   000F70                     UEP0            equ	3952	;# 
   487   000F71                     UEP1            equ	3953	;# 
   488   000F72                     UEP2            equ	3954	;# 
   489   000F73                     UEP3            equ	3955	;# 
   490   000F74                     UEP4            equ	3956	;# 
   491   000F75                     UEP5            equ	3957	;# 
   492   000F76                     UEP6            equ	3958	;# 
   493   000F77                     UEP7            equ	3959	;# 
   494   000F78                     UEP8            equ	3960	;# 
   495   000F79                     UEP9            equ	3961	;# 
   496   000F7A                     UEP10           equ	3962	;# 
   497   000F7B                     UEP11           equ	3963	;# 
   498   000F7C                     UEP12           equ	3964	;# 
   499   000F7D                     UEP13           equ	3965	;# 
   500   000F7E                     UEP14           equ	3966	;# 
   501   000F7F                     UEP15           equ	3967	;# 
   502   000F80                     PORTA           equ	3968	;# 
   503   000F81                     PORTB           equ	3969	;# 
   504   000F82                     PORTC           equ	3970	;# 
   505   000F83                     PORTD           equ	3971	;# 
   506   000F84                     PORTE           equ	3972	;# 
   507   000F89                     LATA            equ	3977	;# 
   508   000F8A                     LATB            equ	3978	;# 
   509   000F8B                     LATC            equ	3979	;# 
   510   000F8C                     LATD            equ	3980	;# 
   511   000F8D                     LATE            equ	3981	;# 
   512   000F92                     TRISA           equ	3986	;# 
   513   000F92                     DDRA            equ	3986	;# 
   514   000F93                     TRISB           equ	3987	;# 
   515   000F93                     DDRB            equ	3987	;# 
   516   000F94                     TRISC           equ	3988	;# 
   517   000F94                     DDRC            equ	3988	;# 
   518   000F95                     TRISD           equ	3989	;# 
   519   000F95                     DDRD            equ	3989	;# 
   520   000F96                     TRISE           equ	3990	;# 
   521   000F96                     DDRE            equ	3990	;# 
   522   000F9B                     OSCTUNE         equ	3995	;# 
   523   000F9D                     PIE1            equ	3997	;# 
   524   000F9E                     PIR1            equ	3998	;# 
   525   000F9F                     IPR1            equ	3999	;# 
   526   000FA0                     PIE2            equ	4000	;# 
   527   000FA1                     PIR2            equ	4001	;# 
   528   000FA2                     IPR2            equ	4002	;# 
   529   000FA6                     EECON1          equ	4006	;# 
   530   000FA7                     EECON2          equ	4007	;# 
   531   000FA8                     EEDATA          equ	4008	;# 
   532   000FA9                     EEADR           equ	4009	;# 
   533   000FAB                     RCSTA           equ	4011	;# 
   534   000FAB                     RCSTA1          equ	4011	;# 
   535   000FAC                     TXSTA           equ	4012	;# 
   536   000FAC                     TXSTA1          equ	4012	;# 
   537   000FAD                     TXREG           equ	4013	;# 
   538   000FAD                     TXREG1          equ	4013	;# 
   539   000FAE                     RCREG           equ	4014	;# 
   540   000FAE                     RCREG1          equ	4014	;# 
   541   000FAF                     SPBRG           equ	4015	;# 
   542   000FAF                     SPBRG1          equ	4015	;# 
   543   000FB0                     SPBRGH          equ	4016	;# 
   544   000FB1                     T3CON           equ	4017	;# 
   545   000FB2                     TMR3            equ	4018	;# 
   546   000FB2                     TMR3L           equ	4018	;# 
   547   000FB3                     TMR3H           equ	4019	;# 
   548   000FB4                     CMCON           equ	4020	;# 
   549   000FB5                     CVRCON          equ	4021	;# 
   550   000FB6                     ECCP1AS         equ	4022	;# 
   551   000FB6                     CCP1AS          equ	4022	;# 
   552   000FB7                     ECCP1DEL        equ	4023	;# 
   553   000FB7                     CCP1DEL         equ	4023	;# 
   554   000FB8                     BAUDCON         equ	4024	;# 
   555   000FB8                     BAUDCTL         equ	4024	;# 
   556   000FBA                     CCP2CON         equ	4026	;# 
   557   000FBB                     CCPR2           equ	4027	;# 
   558   000FBB                     CCPR2L          equ	4027	;# 
   559   000FBC                     CCPR2H          equ	4028	;# 
   560   000FBD                     CCP1CON         equ	4029	;# 
   561   000FBD                     ECCP1CON        equ	4029	;# 
   562   000FBE                     CCPR1           equ	4030	;# 
   563   000FBE                     CCPR1L          equ	4030	;# 
   564   000FBF                     CCPR1H          equ	4031	;# 
   565   000FC0                     ADCON2          equ	4032	;# 
   566   000FC1                     ADCON1          equ	4033	;# 
   567   000FC2                     ADCON0          equ	4034	;# 
   568   000FC3                     ADRES           equ	4035	;# 
   569   000FC3                     ADRESL          equ	4035	;# 
   570   000FC4                     ADRESH          equ	4036	;# 
   571   000FC5                     SSPCON2         equ	4037	;# 
   572   000FC6                     SSPCON1         equ	4038	;# 
   573   000FC7                     SSPSTAT         equ	4039	;# 
   574   000FC8                     SSPADD          equ	4040	;# 
   575   000FC9                     SSPBUF          equ	4041	;# 
   576   000FCA                     T2CON           equ	4042	;# 
   577   000FCB                     PR2             equ	4043	;# 
   578   000FCB                     MEMCON          equ	4043	;# 
   579   000FCC                     TMR2            equ	4044	;# 
   580   000FCD                     T1CON           equ	4045	;# 
   581   000FCE                     TMR1            equ	4046	;# 
   582   000FCE                     TMR1L           equ	4046	;# 
   583   000FCF                     TMR1H           equ	4047	;# 
   584   000FD0                     RCON            equ	4048	;# 
   585   000FD1                     WDTCON          equ	4049	;# 
   586   000FD2                     HLVDCON         equ	4050	;# 
   587   000FD2                     LVDCON          equ	4050	;# 
   588   000FD3                     OSCCON          equ	4051	;# 
   589   000FD5                     T0CON           equ	4053	;# 
   590   000FD6                     TMR0            equ	4054	;# 
   591   000FD6                     TMR0L           equ	4054	;# 
   592   000FD7                     TMR0H           equ	4055	;# 
   593   000FD8                     STATUS          equ	4056	;# 
   594   000FD9                     FSR2            equ	4057	;# 
   595   000FD9                     FSR2L           equ	4057	;# 
   596   000FDA                     FSR2H           equ	4058	;# 
   597   000FDB                     PLUSW2          equ	4059	;# 
   598   000FDC                     PREINC2         equ	4060	;# 
   599   000FDD                     POSTDEC2        equ	4061	;# 
   600   000FDE                     POSTINC2        equ	4062	;# 
   601   000FDF                     INDF2           equ	4063	;# 
   602   000FE0                     BSR             equ	4064	;# 
   603   000FE1                     FSR1            equ	4065	;# 
   604   000FE1                     FSR1L           equ	4065	;# 
   605   000FE2                     FSR1H           equ	4066	;# 
   606   000FE3                     PLUSW1          equ	4067	;# 
   607   000FE4                     PREINC1         equ	4068	;# 
   608   000FE5                     POSTDEC1        equ	4069	;# 
   609   000FE6                     POSTINC1        equ	4070	;# 
   610   000FE7                     INDF1           equ	4071	;# 
   611   000FE8                     WREG            equ	4072	;# 
   612   000FE9                     FSR0            equ	4073	;# 
   613   000FE9                     FSR0L           equ	4073	;# 
   614   000FEA                     FSR0H           equ	4074	;# 
   615   000FEB                     PLUSW0          equ	4075	;# 
   616   000FEC                     PREINC0         equ	4076	;# 
   617   000FED                     POSTDEC0        equ	4077	;# 
   618   000FEE                     POSTINC0        equ	4078	;# 
   619   000FEF                     INDF0           equ	4079	;# 
   620   000FF0                     INTCON3         equ	4080	;# 
   621   000FF1                     INTCON2         equ	4081	;# 
   622   000FF2                     INTCON          equ	4082	;# 
   623   000FF3                     PROD            equ	4083	;# 
   624   000FF3                     PRODL           equ	4083	;# 
   625   000FF4                     PRODH           equ	4084	;# 
   626   000FF5                     TABLAT          equ	4085	;# 
   627   000FF6                     TBLPTR          equ	4086	;# 
   628   000FF6                     TBLPTRL         equ	4086	;# 
   629   000FF7                     TBLPTRH         equ	4087	;# 
   630   000FF8                     TBLPTRU         equ	4088	;# 
   631   000FF9                     PCLAT           equ	4089	;# 
   632   000FF9                     PC              equ	4089	;# 
   633   000FF9                     PCL             equ	4089	;# 
   634   000FFA                     PCLATH          equ	4090	;# 
   635   000FFB                     PCLATU          equ	4091	;# 
   636   000FFC                     STKPTR          equ	4092	;# 
   637   000FFD                     TOS             equ	4093	;# 
   638   000FFD                     TOSL            equ	4093	;# 
   639   000FFE                     TOSH            equ	4094	;# 
   640   000FFF                     TOSU            equ	4095	;# 
   641   000F62                     SPPDATA         equ	3938	;# 
   642   000F63                     SPPCFG          equ	3939	;# 
   643   000F64                     SPPEPS          equ	3940	;# 
   644   000F65                     SPPCON          equ	3941	;# 
   645   000F66                     UFRM            equ	3942	;# 
   646   000F66                     UFRML           equ	3942	;# 
   647   000F67                     UFRMH           equ	3943	;# 
   648   000F68                     UIR             equ	3944	;# 
   649   000F69                     UIE             equ	3945	;# 
   650   000F6A                     UEIR            equ	3946	;# 
   651   000F6B                     UEIE            equ	3947	;# 
   652   000F6C                     USTAT           equ	3948	;# 
   653   000F6D                     UCON            equ	3949	;# 
   654   000F6E                     UADDR           equ	3950	;# 
   655   000F6F                     UCFG            equ	3951	;# 
   656   000F70                     UEP0            equ	3952	;# 
   657   000F71                     UEP1            equ	3953	;# 
   658   000F72                     UEP2            equ	3954	;# 
   659   000F73                     UEP3            equ	3955	;# 
   660   000F74                     UEP4            equ	3956	;# 
   661   000F75                     UEP5            equ	3957	;# 
   662   000F76                     UEP6            equ	3958	;# 
   663   000F77                     UEP7            equ	3959	;# 
   664   000F78                     UEP8            equ	3960	;# 
   665   000F79                     UEP9            equ	3961	;# 
   666   000F7A                     UEP10           equ	3962	;# 
   667   000F7B                     UEP11           equ	3963	;# 
   668   000F7C                     UEP12           equ	3964	;# 
   669   000F7D                     UEP13           equ	3965	;# 
   670   000F7E                     UEP14           equ	3966	;# 
   671   000F7F                     UEP15           equ	3967	;# 
   672   000F80                     PORTA           equ	3968	;# 
   673   000F81                     PORTB           equ	3969	;# 
   674   000F82                     PORTC           equ	3970	;# 
   675   000F83                     PORTD           equ	3971	;# 
   676   000F84                     PORTE           equ	3972	;# 
   677   000F89                     LATA            equ	3977	;# 
   678   000F8A                     LATB            equ	3978	;# 
   679   000F8B                     LATC            equ	3979	;# 
   680   000F8C                     LATD            equ	3980	;# 
   681   000F8D                     LATE            equ	3981	;# 
   682   000F92                     TRISA           equ	3986	;# 
   683   000F92                     DDRA            equ	3986	;# 
   684   000F93                     TRISB           equ	3987	;# 
   685   000F93                     DDRB            equ	3987	;# 
   686   000F94                     TRISC           equ	3988	;# 
   687   000F94                     DDRC            equ	3988	;# 
   688   000F95                     TRISD           equ	3989	;# 
   689   000F95                     DDRD            equ	3989	;# 
   690   000F96                     TRISE           equ	3990	;# 
   691   000F96                     DDRE            equ	3990	;# 
   692   000F9B                     OSCTUNE         equ	3995	;# 
   693   000F9D                     PIE1            equ	3997	;# 
   694   000F9E                     PIR1            equ	3998	;# 
   695   000F9F                     IPR1            equ	3999	;# 
   696   000FA0                     PIE2            equ	4000	;# 
   697   000FA1                     PIR2            equ	4001	;# 
   698   000FA2                     IPR2            equ	4002	;# 
   699   000FA6                     EECON1          equ	4006	;# 
   700   000FA7                     EECON2          equ	4007	;# 
   701   000FA8                     EEDATA          equ	4008	;# 
   702   000FA9                     EEADR           equ	4009	;# 
   703   000FAB                     RCSTA           equ	4011	;# 
   704   000FAB                     RCSTA1          equ	4011	;# 
   705   000FAC                     TXSTA           equ	4012	;# 
   706   000FAC                     TXSTA1          equ	4012	;# 
   707   000FAD                     TXREG           equ	4013	;# 
   708   000FAD                     TXREG1          equ	4013	;# 
   709   000FAE                     RCREG           equ	4014	;# 
   710   000FAE                     RCREG1          equ	4014	;# 
   711   000FAF                     SPBRG           equ	4015	;# 
   712   000FAF                     SPBRG1          equ	4015	;# 
   713   000FB0                     SPBRGH          equ	4016	;# 
   714   000FB1                     T3CON           equ	4017	;# 
   715   000FB2                     TMR3            equ	4018	;# 
   716   000FB2                     TMR3L           equ	4018	;# 
   717   000FB3                     TMR3H           equ	4019	;# 
   718   000FB4                     CMCON           equ	4020	;# 
   719   000FB5                     CVRCON          equ	4021	;# 
   720   000FB6                     ECCP1AS         equ	4022	;# 
   721   000FB6                     CCP1AS          equ	4022	;# 
   722   000FB7                     ECCP1DEL        equ	4023	;# 
   723   000FB7                     CCP1DEL         equ	4023	;# 
   724   000FB8                     BAUDCON         equ	4024	;# 
   725   000FB8                     BAUDCTL         equ	4024	;# 
   726   000FBA                     CCP2CON         equ	4026	;# 
   727   000FBB                     CCPR2           equ	4027	;# 
   728   000FBB                     CCPR2L          equ	4027	;# 
   729   000FBC                     CCPR2H          equ	4028	;# 
   730   000FBD                     CCP1CON         equ	4029	;# 
   731   000FBD                     ECCP1CON        equ	4029	;# 
   732   000FBE                     CCPR1           equ	4030	;# 
   733   000FBE                     CCPR1L          equ	4030	;# 
   734   000FBF                     CCPR1H          equ	4031	;# 
   735   000FC0                     ADCON2          equ	4032	;# 
   736   000FC1                     ADCON1          equ	4033	;# 
   737   000FC2                     ADCON0          equ	4034	;# 
   738   000FC3                     ADRES           equ	4035	;# 
   739   000FC3                     ADRESL          equ	4035	;# 
   740   000FC4                     ADRESH          equ	4036	;# 
   741   000FC5                     SSPCON2         equ	4037	;# 
   742   000FC6                     SSPCON1         equ	4038	;# 
   743   000FC7                     SSPSTAT         equ	4039	;# 
   744   000FC8                     SSPADD          equ	4040	;# 
   745   000FC9                     SSPBUF          equ	4041	;# 
   746   000FCA                     T2CON           equ	4042	;# 
   747   000FCB                     PR2             equ	4043	;# 
   748   000FCB                     MEMCON          equ	4043	;# 
   749   000FCC                     TMR2            equ	4044	;# 
   750   000FCD                     T1CON           equ	4045	;# 
   751   000FCE                     TMR1            equ	4046	;# 
   752   000FCE                     TMR1L           equ	4046	;# 
   753   000FCF                     TMR1H           equ	4047	;# 
   754   000FD0                     RCON            equ	4048	;# 
   755   000FD1                     WDTCON          equ	4049	;# 
   756   000FD2                     HLVDCON         equ	4050	;# 
   757   000FD2                     LVDCON          equ	4050	;# 
   758   000FD3                     OSCCON          equ	4051	;# 
   759   000FD5                     T0CON           equ	4053	;# 
   760   000FD6                     TMR0            equ	4054	;# 
   761   000FD6                     TMR0L           equ	4054	;# 
   762   000FD7                     TMR0H           equ	4055	;# 
   763   000FD8                     STATUS          equ	4056	;# 
   764   000FD9                     FSR2            equ	4057	;# 
   765   000FD9                     FSR2L           equ	4057	;# 
   766   000FDA                     FSR2H           equ	4058	;# 
   767   000FDB                     PLUSW2          equ	4059	;# 
   768   000FDC                     PREINC2         equ	4060	;# 
   769   000FDD                     POSTDEC2        equ	4061	;# 
   770   000FDE                     POSTINC2        equ	4062	;# 
   771   000FDF                     INDF2           equ	4063	;# 
   772   000FE0                     BSR             equ	4064	;# 
   773   000FE1                     FSR1            equ	4065	;# 
   774   000FE1                     FSR1L           equ	4065	;# 
   775   000FE2                     FSR1H           equ	4066	;# 
   776   000FE3                     PLUSW1          equ	4067	;# 
   777   000FE4                     PREINC1         equ	4068	;# 
   778   000FE5                     POSTDEC1        equ	4069	;# 
   779   000FE6                     POSTINC1        equ	4070	;# 
   780   000FE7                     INDF1           equ	4071	;# 
   781   000FE8                     WREG            equ	4072	;# 
   782   000FE9                     FSR0            equ	4073	;# 
   783   000FE9                     FSR0L           equ	4073	;# 
   784   000FEA                     FSR0H           equ	4074	;# 
   785   000FEB                     PLUSW0          equ	4075	;# 
   786   000FEC                     PREINC0         equ	4076	;# 
   787   000FED                     POSTDEC0        equ	4077	;# 
   788   000FEE                     POSTINC0        equ	4078	;# 
   789   000FEF                     INDF0           equ	4079	;# 
   790   000FF0                     INTCON3         equ	4080	;# 
   791   000FF1                     INTCON2         equ	4081	;# 
   792   000FF2                     INTCON          equ	4082	;# 
   793   000FF3                     PROD            equ	4083	;# 
   794   000FF3                     PRODL           equ	4083	;# 
   795   000FF4                     PRODH           equ	4084	;# 
   796   000FF5                     TABLAT          equ	4085	;# 
   797   000FF6                     TBLPTR          equ	4086	;# 
   798   000FF6                     TBLPTRL         equ	4086	;# 
   799   000FF7                     TBLPTRH         equ	4087	;# 
   800   000FF8                     TBLPTRU         equ	4088	;# 
   801   000FF9                     PCLAT           equ	4089	;# 
   802   000FF9                     PC              equ	4089	;# 
   803   000FF9                     PCL             equ	4089	;# 
   804   000FFA                     PCLATH          equ	4090	;# 
   805   000FFB                     PCLATU          equ	4091	;# 
   806   000FFC                     STKPTR          equ	4092	;# 
   807   000FFD                     TOS             equ	4093	;# 
   808   000FFD                     TOSL            equ	4093	;# 
   809   000FFE                     TOSH            equ	4094	;# 
   810   000FFF                     TOSU            equ	4095	;# 
   811   000F62                     SPPDATA         equ	3938	;# 
   812   000F63                     SPPCFG          equ	3939	;# 
   813   000F64                     SPPEPS          equ	3940	;# 
   814   000F65                     SPPCON          equ	3941	;# 
   815   000F66                     UFRM            equ	3942	;# 
   816   000F66                     UFRML           equ	3942	;# 
   817   000F67                     UFRMH           equ	3943	;# 
   818   000F68                     UIR             equ	3944	;# 
   819   000F69                     UIE             equ	3945	;# 
   820   000F6A                     UEIR            equ	3946	;# 
   821   000F6B                     UEIE            equ	3947	;# 
   822   000F6C                     USTAT           equ	3948	;# 
   823   000F6D                     UCON            equ	3949	;# 
   824   000F6E                     UADDR           equ	3950	;# 
   825   000F6F                     UCFG            equ	3951	;# 
   826   000F70                     UEP0            equ	3952	;# 
   827   000F71                     UEP1            equ	3953	;# 
   828   000F72                     UEP2            equ	3954	;# 
   829   000F73                     UEP3            equ	3955	;# 
   830   000F74                     UEP4            equ	3956	;# 
   831   000F75                     UEP5            equ	3957	;# 
   832   000F76                     UEP6            equ	3958	;# 
   833   000F77                     UEP7            equ	3959	;# 
   834   000F78                     UEP8            equ	3960	;# 
   835   000F79                     UEP9            equ	3961	;# 
   836   000F7A                     UEP10           equ	3962	;# 
   837   000F7B                     UEP11           equ	3963	;# 
   838   000F7C                     UEP12           equ	3964	;# 
   839   000F7D                     UEP13           equ	3965	;# 
   840   000F7E                     UEP14           equ	3966	;# 
   841   000F7F                     UEP15           equ	3967	;# 
   842   000F80                     PORTA           equ	3968	;# 
   843   000F81                     PORTB           equ	3969	;# 
   844   000F82                     PORTC           equ	3970	;# 
   845   000F83                     PORTD           equ	3971	;# 
   846   000F84                     PORTE           equ	3972	;# 
   847   000F89                     LATA            equ	3977	;# 
   848   000F8A                     LATB            equ	3978	;# 
   849   000F8B                     LATC            equ	3979	;# 
   850   000F8C                     LATD            equ	3980	;# 
   851   000F8D                     LATE            equ	3981	;# 
   852   000F92                     TRISA           equ	3986	;# 
   853   000F92                     DDRA            equ	3986	;# 
   854   000F93                     TRISB           equ	3987	;# 
   855   000F93                     DDRB            equ	3987	;# 
   856   000F94                     TRISC           equ	3988	;# 
   857   000F94                     DDRC            equ	3988	;# 
   858   000F95                     TRISD           equ	3989	;# 
   859   000F95                     DDRD            equ	3989	;# 
   860   000F96                     TRISE           equ	3990	;# 
   861   000F96                     DDRE            equ	3990	;# 
   862   000F9B                     OSCTUNE         equ	3995	;# 
   863   000F9D                     PIE1            equ	3997	;# 
   864   000F9E                     PIR1            equ	3998	;# 
   865   000F9F                     IPR1            equ	3999	;# 
   866   000FA0                     PIE2            equ	4000	;# 
   867   000FA1                     PIR2            equ	4001	;# 
   868   000FA2                     IPR2            equ	4002	;# 
   869   000FA6                     EECON1          equ	4006	;# 
   870   000FA7                     EECON2          equ	4007	;# 
   871   000FA8                     EEDATA          equ	4008	;# 
   872   000FA9                     EEADR           equ	4009	;# 
   873   000FAB                     RCSTA           equ	4011	;# 
   874   000FAB                     RCSTA1          equ	4011	;# 
   875   000FAC                     TXSTA           equ	4012	;# 
   876   000FAC                     TXSTA1          equ	4012	;# 
   877   000FAD                     TXREG           equ	4013	;# 
   878   000FAD                     TXREG1          equ	4013	;# 
   879   000FAE                     RCREG           equ	4014	;# 
   880   000FAE                     RCREG1          equ	4014	;# 
   881   000FAF                     SPBRG           equ	4015	;# 
   882   000FAF                     SPBRG1          equ	4015	;# 
   883   000FB0                     SPBRGH          equ	4016	;# 
   884   000FB1                     T3CON           equ	4017	;# 
   885   000FB2                     TMR3            equ	4018	;# 
   886   000FB2                     TMR3L           equ	4018	;# 
   887   000FB3                     TMR3H           equ	4019	;# 
   888   000FB4                     CMCON           equ	4020	;# 
   889   000FB5                     CVRCON          equ	4021	;# 
   890   000FB6                     ECCP1AS         equ	4022	;# 
   891   000FB6                     CCP1AS          equ	4022	;# 
   892   000FB7                     ECCP1DEL        equ	4023	;# 
   893   000FB7                     CCP1DEL         equ	4023	;# 
   894   000FB8                     BAUDCON         equ	4024	;# 
   895   000FB8                     BAUDCTL         equ	4024	;# 
   896   000FBA                     CCP2CON         equ	4026	;# 
   897   000FBB                     CCPR2           equ	4027	;# 
   898   000FBB                     CCPR2L          equ	4027	;# 
   899   000FBC                     CCPR2H          equ	4028	;# 
   900   000FBD                     CCP1CON         equ	4029	;# 
   901   000FBD                     ECCP1CON        equ	4029	;# 
   902   000FBE                     CCPR1           equ	4030	;# 
   903   000FBE                     CCPR1L          equ	4030	;# 
   904   000FBF                     CCPR1H          equ	4031	;# 
   905   000FC0                     ADCON2          equ	4032	;# 
   906   000FC1                     ADCON1          equ	4033	;# 
   907   000FC2                     ADCON0          equ	4034	;# 
   908   000FC3                     ADRES           equ	4035	;# 
   909   000FC3                     ADRESL          equ	4035	;# 
   910   000FC4                     ADRESH          equ	4036	;# 
   911   000FC5                     SSPCON2         equ	4037	;# 
   912   000FC6                     SSPCON1         equ	4038	;# 
   913   000FC7                     SSPSTAT         equ	4039	;# 
   914   000FC8                     SSPADD          equ	4040	;# 
   915   000FC9                     SSPBUF          equ	4041	;# 
   916   000FCA                     T2CON           equ	4042	;# 
   917   000FCB                     PR2             equ	4043	;# 
   918   000FCB                     MEMCON          equ	4043	;# 
   919   000FCC                     TMR2            equ	4044	;# 
   920   000FCD                     T1CON           equ	4045	;# 
   921   000FCE                     TMR1            equ	4046	;# 
   922   000FCE                     TMR1L           equ	4046	;# 
   923   000FCF                     TMR1H           equ	4047	;# 
   924   000FD0                     RCON            equ	4048	;# 
   925   000FD1                     WDTCON          equ	4049	;# 
   926   000FD2                     HLVDCON         equ	4050	;# 
   927   000FD2                     LVDCON          equ	4050	;# 
   928   000FD3                     OSCCON          equ	4051	;# 
   929   000FD5                     T0CON           equ	4053	;# 
   930   000FD6                     TMR0            equ	4054	;# 
   931   000FD6                     TMR0L           equ	4054	;# 
   932   000FD7                     TMR0H           equ	4055	;# 
   933   000FD8                     STATUS          equ	4056	;# 
   934   000FD9                     FSR2            equ	4057	;# 
   935   000FD9                     FSR2L           equ	4057	;# 
   936   000FDA                     FSR2H           equ	4058	;# 
   937   000FDB                     PLUSW2          equ	4059	;# 
   938   000FDC                     PREINC2         equ	4060	;# 
   939   000FDD                     POSTDEC2        equ	4061	;# 
   940   000FDE                     POSTINC2        equ	4062	;# 
   941   000FDF                     INDF2           equ	4063	;# 
   942   000FE0                     BSR             equ	4064	;# 
   943   000FE1                     FSR1            equ	4065	;# 
   944   000FE1                     FSR1L           equ	4065	;# 
   945   000FE2                     FSR1H           equ	4066	;# 
   946   000FE3                     PLUSW1          equ	4067	;# 
   947   000FE4                     PREINC1         equ	4068	;# 
   948   000FE5                     POSTDEC1        equ	4069	;# 
   949   000FE6                     POSTINC1        equ	4070	;# 
   950   000FE7                     INDF1           equ	4071	;# 
   951   000FE8                     WREG            equ	4072	;# 
   952   000FE9                     FSR0            equ	4073	;# 
   953   000FE9                     FSR0L           equ	4073	;# 
   954   000FEA                     FSR0H           equ	4074	;# 
   955   000FEB                     PLUSW0          equ	4075	;# 
   956   000FEC                     PREINC0         equ	4076	;# 
   957   000FED                     POSTDEC0        equ	4077	;# 
   958   000FEE                     POSTINC0        equ	4078	;# 
   959   000FEF                     INDF0           equ	4079	;# 
   960   000FF0                     INTCON3         equ	4080	;# 
   961   000FF1                     INTCON2         equ	4081	;# 
   962   000FF2                     INTCON          equ	4082	;# 
   963   000FF3                     PROD            equ	4083	;# 
   964   000FF3                     PRODL           equ	4083	;# 
   965   000FF4                     PRODH           equ	4084	;# 
   966   000FF5                     TABLAT          equ	4085	;# 
   967   000FF6                     TBLPTR          equ	4086	;# 
   968   000FF6                     TBLPTRL         equ	4086	;# 
   969   000FF7                     TBLPTRH         equ	4087	;# 
   970   000FF8                     TBLPTRU         equ	4088	;# 
   971   000FF9                     PCLAT           equ	4089	;# 
   972   000FF9                     PC              equ	4089	;# 
   973   000FF9                     PCL             equ	4089	;# 
   974   000FFA                     PCLATH          equ	4090	;# 
   975   000FFB                     PCLATU          equ	4091	;# 
   976   000FFC                     STKPTR          equ	4092	;# 
   977   000FFD                     TOS             equ	4093	;# 
   978   000FFD                     TOSL            equ	4093	;# 
   979   000FFE                     TOSH            equ	4094	;# 
   980   000FFF                     TOSU            equ	4095	;# 
   981   000F62                     SPPDATA         equ	3938	;# 
   982   000F63                     SPPCFG          equ	3939	;# 
   983   000F64                     SPPEPS          equ	3940	;# 
   984   000F65                     SPPCON          equ	3941	;# 
   985   000F66                     UFRM            equ	3942	;# 
   986   000F66                     UFRML           equ	3942	;# 
   987   000F67                     UFRMH           equ	3943	;# 
   988   000F68                     UIR             equ	3944	;# 
   989   000F69                     UIE             equ	3945	;# 
   990   000F6A                     UEIR            equ	3946	;# 
   991   000F6B                     UEIE            equ	3947	;# 
   992   000F6C                     USTAT           equ	3948	;# 
   993   000F6D                     UCON            equ	3949	;# 
   994   000F6E                     UADDR           equ	3950	;# 
   995   000F6F                     UCFG            equ	3951	;# 
   996   000F70                     UEP0            equ	3952	;# 
   997   000F71                     UEP1            equ	3953	;# 
   998   000F72                     UEP2            equ	3954	;# 
   999   000F73                     UEP3            equ	3955	;# 
  1000   000F74                     UEP4            equ	3956	;# 
  1001   000F75                     UEP5            equ	3957	;# 
  1002   000F76                     UEP6            equ	3958	;# 
  1003   000F77                     UEP7            equ	3959	;# 
  1004   000F78                     UEP8            equ	3960	;# 
  1005   000F79                     UEP9            equ	3961	;# 
  1006   000F7A                     UEP10           equ	3962	;# 
  1007   000F7B                     UEP11           equ	3963	;# 
  1008   000F7C                     UEP12           equ	3964	;# 
  1009   000F7D                     UEP13           equ	3965	;# 
  1010   000F7E                     UEP14           equ	3966	;# 
  1011   000F7F                     UEP15           equ	3967	;# 
  1012   000F80                     PORTA           equ	3968	;# 
  1013   000F81                     PORTB           equ	3969	;# 
  1014   000F82                     PORTC           equ	3970	;# 
  1015   000F83                     PORTD           equ	3971	;# 
  1016   000F84                     PORTE           equ	3972	;# 
  1017   000F89                     LATA            equ	3977	;# 
  1018   000F8A                     LATB            equ	3978	;# 
  1019   000F8B                     LATC            equ	3979	;# 
  1020   000F8C                     LATD            equ	3980	;# 
  1021   000F8D                     LATE            equ	3981	;# 
  1022   000F92                     TRISA           equ	3986	;# 
  1023   000F92                     DDRA            equ	3986	;# 
  1024   000F93                     TRISB           equ	3987	;# 
  1025   000F93                     DDRB            equ	3987	;# 
  1026   000F94                     TRISC           equ	3988	;# 
  1027   000F94                     DDRC            equ	3988	;# 
  1028   000F95                     TRISD           equ	3989	;# 
  1029   000F95                     DDRD            equ	3989	;# 
  1030   000F96                     TRISE           equ	3990	;# 
  1031   000F96                     DDRE            equ	3990	;# 
  1032   000F9B                     OSCTUNE         equ	3995	;# 
  1033   000F9D                     PIE1            equ	3997	;# 
  1034   000F9E                     PIR1            equ	3998	;# 
  1035   000F9F                     IPR1            equ	3999	;# 
  1036   000FA0                     PIE2            equ	4000	;# 
  1037   000FA1                     PIR2            equ	4001	;# 
  1038   000FA2                     IPR2            equ	4002	;# 
  1039   000FA6                     EECON1          equ	4006	;# 
  1040   000FA7                     EECON2          equ	4007	;# 
  1041   000FA8                     EEDATA          equ	4008	;# 
  1042   000FA9                     EEADR           equ	4009	;# 
  1043   000FAB                     RCSTA           equ	4011	;# 
  1044   000FAB                     RCSTA1          equ	4011	;# 
  1045   000FAC                     TXSTA           equ	4012	;# 
  1046   000FAC                     TXSTA1          equ	4012	;# 
  1047   000FAD                     TXREG           equ	4013	;# 
  1048   000FAD                     TXREG1          equ	4013	;# 
  1049   000FAE                     RCREG           equ	4014	;# 
  1050   000FAE                     RCREG1          equ	4014	;# 
  1051   000FAF                     SPBRG           equ	4015	;# 
  1052   000FAF                     SPBRG1          equ	4015	;# 
  1053   000FB0                     SPBRGH          equ	4016	;# 
  1054   000FB1                     T3CON           equ	4017	;# 
  1055   000FB2                     TMR3            equ	4018	;# 
  1056   000FB2                     TMR3L           equ	4018	;# 
  1057   000FB3                     TMR3H           equ	4019	;# 
  1058   000FB4                     CMCON           equ	4020	;# 
  1059   000FB5                     CVRCON          equ	4021	;# 
  1060   000FB6                     ECCP1AS         equ	4022	;# 
  1061   000FB6                     CCP1AS          equ	4022	;# 
  1062   000FB7                     ECCP1DEL        equ	4023	;# 
  1063   000FB7                     CCP1DEL         equ	4023	;# 
  1064   000FB8                     BAUDCON         equ	4024	;# 
  1065   000FB8                     BAUDCTL         equ	4024	;# 
  1066   000FBA                     CCP2CON         equ	4026	;# 
  1067   000FBB                     CCPR2           equ	4027	;# 
  1068   000FBB                     CCPR2L          equ	4027	;# 
  1069   000FBC                     CCPR2H          equ	4028	;# 
  1070   000FBD                     CCP1CON         equ	4029	;# 
  1071   000FBD                     ECCP1CON        equ	4029	;# 
  1072   000FBE                     CCPR1           equ	4030	;# 
  1073   000FBE                     CCPR1L          equ	4030	;# 
  1074   000FBF                     CCPR1H          equ	4031	;# 
  1075   000FC0                     ADCON2          equ	4032	;# 
  1076   000FC1                     ADCON1          equ	4033	;# 
  1077   000FC2                     ADCON0          equ	4034	;# 
  1078   000FC3                     ADRES           equ	4035	;# 
  1079   000FC3                     ADRESL          equ	4035	;# 
  1080   000FC4                     ADRESH          equ	4036	;# 
  1081   000FC5                     SSPCON2         equ	4037	;# 
  1082   000FC6                     SSPCON1         equ	4038	;# 
  1083   000FC7                     SSPSTAT         equ	4039	;# 
  1084   000FC8                     SSPADD          equ	4040	;# 
  1085   000FC9                     SSPBUF          equ	4041	;# 
  1086   000FCA                     T2CON           equ	4042	;# 
  1087   000FCB                     PR2             equ	4043	;# 
  1088   000FCB                     MEMCON          equ	4043	;# 
  1089   000FCC                     TMR2            equ	4044	;# 
  1090   000FCD                     T1CON           equ	4045	;# 
  1091   000FCE                     TMR1            equ	4046	;# 
  1092   000FCE                     TMR1L           equ	4046	;# 
  1093   000FCF                     TMR1H           equ	4047	;# 
  1094   000FD0                     RCON            equ	4048	;# 
  1095   000FD1                     WDTCON          equ	4049	;# 
  1096   000FD2                     HLVDCON         equ	4050	;# 
  1097   000FD2                     LVDCON          equ	4050	;# 
  1098   000FD3                     OSCCON          equ	4051	;# 
  1099   000FD5                     T0CON           equ	4053	;# 
  1100   000FD6                     TMR0            equ	4054	;# 
  1101   000FD6                     TMR0L           equ	4054	;# 
  1102   000FD7                     TMR0H           equ	4055	;# 
  1103   000FD8                     STATUS          equ	4056	;# 
  1104   000FD9                     FSR2            equ	4057	;# 
  1105   000FD9                     FSR2L           equ	4057	;# 
  1106   000FDA                     FSR2H           equ	4058	;# 
  1107   000FDB                     PLUSW2          equ	4059	;# 
  1108   000FDC                     PREINC2         equ	4060	;# 
  1109   000FDD                     POSTDEC2        equ	4061	;# 
  1110   000FDE                     POSTINC2        equ	4062	;# 
  1111   000FDF                     INDF2           equ	4063	;# 
  1112   000FE0                     BSR             equ	4064	;# 
  1113   000FE1                     FSR1            equ	4065	;# 
  1114   000FE1                     FSR1L           equ	4065	;# 
  1115   000FE2                     FSR1H           equ	4066	;# 
  1116   000FE3                     PLUSW1          equ	4067	;# 
  1117   000FE4                     PREINC1         equ	4068	;# 
  1118   000FE5                     POSTDEC1        equ	4069	;# 
  1119   000FE6                     POSTINC1        equ	4070	;# 
  1120   000FE7                     INDF1           equ	4071	;# 
  1121   000FE8                     WREG            equ	4072	;# 
  1122   000FE9                     FSR0            equ	4073	;# 
  1123   000FE9                     FSR0L           equ	4073	;# 
  1124   000FEA                     FSR0H           equ	4074	;# 
  1125   000FEB                     PLUSW0          equ	4075	;# 
  1126   000FEC                     PREINC0         equ	4076	;# 
  1127   000FED                     POSTDEC0        equ	4077	;# 
  1128   000FEE                     POSTINC0        equ	4078	;# 
  1129   000FEF                     INDF0           equ	4079	;# 
  1130   000FF0                     INTCON3         equ	4080	;# 
  1131   000FF1                     INTCON2         equ	4081	;# 
  1132   000FF2                     INTCON          equ	4082	;# 
  1133   000FF3                     PROD            equ	4083	;# 
  1134   000FF3                     PRODL           equ	4083	;# 
  1135   000FF4                     PRODH           equ	4084	;# 
  1136   000FF5                     TABLAT          equ	4085	;# 
  1137   000FF6                     TBLPTR          equ	4086	;# 
  1138   000FF6                     TBLPTRL         equ	4086	;# 
  1139   000FF7                     TBLPTRH         equ	4087	;# 
  1140   000FF8                     TBLPTRU         equ	4088	;# 
  1141   000FF9                     PCLAT           equ	4089	;# 
  1142   000FF9                     PC              equ	4089	;# 
  1143   000FF9                     PCL             equ	4089	;# 
  1144   000FFA                     PCLATH          equ	4090	;# 
  1145   000FFB                     PCLATU          equ	4091	;# 
  1146   000FFC                     STKPTR          equ	4092	;# 
  1147   000FFD                     TOS             equ	4093	;# 
  1148   000FFD                     TOSL            equ	4093	;# 
  1149   000FFE                     TOSH            equ	4094	;# 
  1150   000FFF                     TOSU            equ	4095	;# 
  1151   000F62                     SPPDATA         equ	3938	;# 
  1152   000F63                     SPPCFG          equ	3939	;# 
  1153   000F64                     SPPEPS          equ	3940	;# 
  1154   000F65                     SPPCON          equ	3941	;# 
  1155   000F66                     UFRM            equ	3942	;# 
  1156   000F66                     UFRML           equ	3942	;# 
  1157   000F67                     UFRMH           equ	3943	;# 
  1158   000F68                     UIR             equ	3944	;# 
  1159   000F69                     UIE             equ	3945	;# 
  1160   000F6A                     UEIR            equ	3946	;# 
  1161   000F6B                     UEIE            equ	3947	;# 
  1162   000F6C                     USTAT           equ	3948	;# 
  1163   000F6D                     UCON            equ	3949	;# 
  1164   000F6E                     UADDR           equ	3950	;# 
  1165   000F6F                     UCFG            equ	3951	;# 
  1166   000F70                     UEP0            equ	3952	;# 
  1167   000F71                     UEP1            equ	3953	;# 
  1168   000F72                     UEP2            equ	3954	;# 
  1169   000F73                     UEP3            equ	3955	;# 
  1170   000F74                     UEP4            equ	3956	;# 
  1171   000F75                     UEP5            equ	3957	;# 
  1172   000F76                     UEP6            equ	3958	;# 
  1173   000F77                     UEP7            equ	3959	;# 
  1174   000F78                     UEP8            equ	3960	;# 
  1175   000F79                     UEP9            equ	3961	;# 
  1176   000F7A                     UEP10           equ	3962	;# 
  1177   000F7B                     UEP11           equ	3963	;# 
  1178   000F7C                     UEP12           equ	3964	;# 
  1179   000F7D                     UEP13           equ	3965	;# 
  1180   000F7E                     UEP14           equ	3966	;# 
  1181   000F7F                     UEP15           equ	3967	;# 
  1182   000F80                     PORTA           equ	3968	;# 
  1183   000F81                     PORTB           equ	3969	;# 
  1184   000F82                     PORTC           equ	3970	;# 
  1185   000F83                     PORTD           equ	3971	;# 
  1186   000F84                     PORTE           equ	3972	;# 
  1187   000F89                     LATA            equ	3977	;# 
  1188   000F8A                     LATB            equ	3978	;# 
  1189   000F8B                     LATC            equ	3979	;# 
  1190   000F8C                     LATD            equ	3980	;# 
  1191   000F8D                     LATE            equ	3981	;# 
  1192   000F92                     TRISA           equ	3986	;# 
  1193   000F92                     DDRA            equ	3986	;# 
  1194   000F93                     TRISB           equ	3987	;# 
  1195   000F93                     DDRB            equ	3987	;# 
  1196   000F94                     TRISC           equ	3988	;# 
  1197   000F94                     DDRC            equ	3988	;# 
  1198   000F95                     TRISD           equ	3989	;# 
  1199   000F95                     DDRD            equ	3989	;# 
  1200   000F96                     TRISE           equ	3990	;# 
  1201   000F96                     DDRE            equ	3990	;# 
  1202   000F9B                     OSCTUNE         equ	3995	;# 
  1203   000F9D                     PIE1            equ	3997	;# 
  1204   000F9E                     PIR1            equ	3998	;# 
  1205   000F9F                     IPR1            equ	3999	;# 
  1206   000FA0                     PIE2            equ	4000	;# 
  1207   000FA1                     PIR2            equ	4001	;# 
  1208   000FA2                     IPR2            equ	4002	;# 
  1209   000FA6                     EECON1          equ	4006	;# 
  1210   000FA7                     EECON2          equ	4007	;# 
  1211   000FA8                     EEDATA          equ	4008	;# 
  1212   000FA9                     EEADR           equ	4009	;# 
  1213   000FAB                     RCSTA           equ	4011	;# 
  1214   000FAB                     RCSTA1          equ	4011	;# 
  1215   000FAC                     TXSTA           equ	4012	;# 
  1216   000FAC                     TXSTA1          equ	4012	;# 
  1217   000FAD                     TXREG           equ	4013	;# 
  1218   000FAD                     TXREG1          equ	4013	;# 
  1219   000FAE                     RCREG           equ	4014	;# 
  1220   000FAE                     RCREG1          equ	4014	;# 
  1221   000FAF                     SPBRG           equ	4015	;# 
  1222   000FAF                     SPBRG1          equ	4015	;# 
  1223   000FB0                     SPBRGH          equ	4016	;# 
  1224   000FB1                     T3CON           equ	4017	;# 
  1225   000FB2                     TMR3            equ	4018	;# 
  1226   000FB2                     TMR3L           equ	4018	;# 
  1227   000FB3                     TMR3H           equ	4019	;# 
  1228   000FB4                     CMCON           equ	4020	;# 
  1229   000FB5                     CVRCON          equ	4021	;# 
  1230   000FB6                     ECCP1AS         equ	4022	;# 
  1231   000FB6                     CCP1AS          equ	4022	;# 
  1232   000FB7                     ECCP1DEL        equ	4023	;# 
  1233   000FB7                     CCP1DEL         equ	4023	;# 
  1234   000FB8                     BAUDCON         equ	4024	;# 
  1235   000FB8                     BAUDCTL         equ	4024	;# 
  1236   000FBA                     CCP2CON         equ	4026	;# 
  1237   000FBB                     CCPR2           equ	4027	;# 
  1238   000FBB                     CCPR2L          equ	4027	;# 
  1239   000FBC                     CCPR2H          equ	4028	;# 
  1240   000FBD                     CCP1CON         equ	4029	;# 
  1241   000FBD                     ECCP1CON        equ	4029	;# 
  1242   000FBE                     CCPR1           equ	4030	;# 
  1243   000FBE                     CCPR1L          equ	4030	;# 
  1244   000FBF                     CCPR1H          equ	4031	;# 
  1245   000FC0                     ADCON2          equ	4032	;# 
  1246   000FC1                     ADCON1          equ	4033	;# 
  1247   000FC2                     ADCON0          equ	4034	;# 
  1248   000FC3                     ADRES           equ	4035	;# 
  1249   000FC3                     ADRESL          equ	4035	;# 
  1250   000FC4                     ADRESH          equ	4036	;# 
  1251   000FC5                     SSPCON2         equ	4037	;# 
  1252   000FC6                     SSPCON1         equ	4038	;# 
  1253   000FC7                     SSPSTAT         equ	4039	;# 
  1254   000FC8                     SSPADD          equ	4040	;# 
  1255   000FC9                     SSPBUF          equ	4041	;# 
  1256   000FCA                     T2CON           equ	4042	;# 
  1257   000FCB                     PR2             equ	4043	;# 
  1258   000FCB                     MEMCON          equ	4043	;# 
  1259   000FCC                     TMR2            equ	4044	;# 
  1260   000FCD                     T1CON           equ	4045	;# 
  1261   000FCE                     TMR1            equ	4046	;# 
  1262   000FCE                     TMR1L           equ	4046	;# 
  1263   000FCF                     TMR1H           equ	4047	;# 
  1264   000FD0                     RCON            equ	4048	;# 
  1265   000FD1                     WDTCON          equ	4049	;# 
  1266   000FD2                     HLVDCON         equ	4050	;# 
  1267   000FD2                     LVDCON          equ	4050	;# 
  1268   000FD3                     OSCCON          equ	4051	;# 
  1269   000FD5                     T0CON           equ	4053	;# 
  1270   000FD6                     TMR0            equ	4054	;# 
  1271   000FD6                     TMR0L           equ	4054	;# 
  1272   000FD7                     TMR0H           equ	4055	;# 
  1273   000FD8                     STATUS          equ	4056	;# 
  1274   000FD9                     FSR2            equ	4057	;# 
  1275   000FD9                     FSR2L           equ	4057	;# 
  1276   000FDA                     FSR2H           equ	4058	;# 
  1277   000FDB                     PLUSW2          equ	4059	;# 
  1278   000FDC                     PREINC2         equ	4060	;# 
  1279   000FDD                     POSTDEC2        equ	4061	;# 
  1280   000FDE                     POSTINC2        equ	4062	;# 
  1281   000FDF                     INDF2           equ	4063	;# 
  1282   000FE0                     BSR             equ	4064	;# 
  1283   000FE1                     FSR1            equ	4065	;# 
  1284   000FE1                     FSR1L           equ	4065	;# 
  1285   000FE2                     FSR1H           equ	4066	;# 
  1286   000FE3                     PLUSW1          equ	4067	;# 
  1287   000FE4                     PREINC1         equ	4068	;# 
  1288   000FE5                     POSTDEC1        equ	4069	;# 
  1289   000FE6                     POSTINC1        equ	4070	;# 
  1290   000FE7                     INDF1           equ	4071	;# 
  1291   000FE8                     WREG            equ	4072	;# 
  1292   000FE9                     FSR0            equ	4073	;# 
  1293   000FE9                     FSR0L           equ	4073	;# 
  1294   000FEA                     FSR0H           equ	4074	;# 
  1295   000FEB                     PLUSW0          equ	4075	;# 
  1296   000FEC                     PREINC0         equ	4076	;# 
  1297   000FED                     POSTDEC0        equ	4077	;# 
  1298   000FEE                     POSTINC0        equ	4078	;# 
  1299   000FEF                     INDF0           equ	4079	;# 
  1300   000FF0                     INTCON3         equ	4080	;# 
  1301   000FF1                     INTCON2         equ	4081	;# 
  1302   000FF2                     INTCON          equ	4082	;# 
  1303   000FF3                     PROD            equ	4083	;# 
  1304   000FF3                     PRODL           equ	4083	;# 
  1305   000FF4                     PRODH           equ	4084	;# 
  1306   000FF5                     TABLAT          equ	4085	;# 
  1307   000FF6                     TBLPTR          equ	4086	;# 
  1308   000FF6                     TBLPTRL         equ	4086	;# 
  1309   000FF7                     TBLPTRH         equ	4087	;# 
  1310   000FF8                     TBLPTRU         equ	4088	;# 
  1311   000FF9                     PCLAT           equ	4089	;# 
  1312   000FF9                     PC              equ	4089	;# 
  1313   000FF9                     PCL             equ	4089	;# 
  1314   000FFA                     PCLATH          equ	4090	;# 
  1315   000FFB                     PCLATU          equ	4091	;# 
  1316   000FFC                     STKPTR          equ	4092	;# 
  1317   000FFD                     TOS             equ	4093	;# 
  1318   000FFD                     TOSL            equ	4093	;# 
  1319   000FFE                     TOSH            equ	4094	;# 
  1320   000FFF                     TOSU            equ	4095	;# 
  1321   000F62                     SPPDATA         equ	3938	;# 
  1322   000F63                     SPPCFG          equ	3939	;# 
  1323   000F64                     SPPEPS          equ	3940	;# 
  1324   000F65                     SPPCON          equ	3941	;# 
  1325   000F66                     UFRM            equ	3942	;# 
  1326   000F66                     UFRML           equ	3942	;# 
  1327   000F67                     UFRMH           equ	3943	;# 
  1328   000F68                     UIR             equ	3944	;# 
  1329   000F69                     UIE             equ	3945	;# 
  1330   000F6A                     UEIR            equ	3946	;# 
  1331   000F6B                     UEIE            equ	3947	;# 
  1332   000F6C                     USTAT           equ	3948	;# 
  1333   000F6D                     UCON            equ	3949	;# 
  1334   000F6E                     UADDR           equ	3950	;# 
  1335   000F6F                     UCFG            equ	3951	;# 
  1336   000F70                     UEP0            equ	3952	;# 
  1337   000F71                     UEP1            equ	3953	;# 
  1338   000F72                     UEP2            equ	3954	;# 
  1339   000F73                     UEP3            equ	3955	;# 
  1340   000F74                     UEP4            equ	3956	;# 
  1341   000F75                     UEP5            equ	3957	;# 
  1342   000F76                     UEP6            equ	3958	;# 
  1343   000F77                     UEP7            equ	3959	;# 
  1344   000F78                     UEP8            equ	3960	;# 
  1345   000F79                     UEP9            equ	3961	;# 
  1346   000F7A                     UEP10           equ	3962	;# 
  1347   000F7B                     UEP11           equ	3963	;# 
  1348   000F7C                     UEP12           equ	3964	;# 
  1349   000F7D                     UEP13           equ	3965	;# 
  1350   000F7E                     UEP14           equ	3966	;# 
  1351   000F7F                     UEP15           equ	3967	;# 
  1352   000F80                     PORTA           equ	3968	;# 
  1353   000F81                     PORTB           equ	3969	;# 
  1354   000F82                     PORTC           equ	3970	;# 
  1355   000F83                     PORTD           equ	3971	;# 
  1356   000F84                     PORTE           equ	3972	;# 
  1357   000F89                     LATA            equ	3977	;# 
  1358   000F8A                     LATB            equ	3978	;# 
  1359   000F8B                     LATC            equ	3979	;# 
  1360   000F8C                     LATD            equ	3980	;# 
  1361   000F8D                     LATE            equ	3981	;# 
  1362   000F92                     TRISA           equ	3986	;# 
  1363   000F92                     DDRA            equ	3986	;# 
  1364   000F93                     TRISB           equ	3987	;# 
  1365   000F93                     DDRB            equ	3987	;# 
  1366   000F94                     TRISC           equ	3988	;# 
  1367   000F94                     DDRC            equ	3988	;# 
  1368   000F95                     TRISD           equ	3989	;# 
  1369   000F95                     DDRD            equ	3989	;# 
  1370   000F96                     TRISE           equ	3990	;# 
  1371   000F96                     DDRE            equ	3990	;# 
  1372   000F9B                     OSCTUNE         equ	3995	;# 
  1373   000F9D                     PIE1            equ	3997	;# 
  1374   000F9E                     PIR1            equ	3998	;# 
  1375   000F9F                     IPR1            equ	3999	;# 
  1376   000FA0                     PIE2            equ	4000	;# 
  1377   000FA1                     PIR2            equ	4001	;# 
  1378   000FA2                     IPR2            equ	4002	;# 
  1379   000FA6                     EECON1          equ	4006	;# 
  1380   000FA7                     EECON2          equ	4007	;# 
  1381   000FA8                     EEDATA          equ	4008	;# 
  1382   000FA9                     EEADR           equ	4009	;# 
  1383   000FAB                     RCSTA           equ	4011	;# 
  1384   000FAB                     RCSTA1          equ	4011	;# 
  1385   000FAC                     TXSTA           equ	4012	;# 
  1386   000FAC                     TXSTA1          equ	4012	;# 
  1387   000FAD                     TXREG           equ	4013	;# 
  1388   000FAD                     TXREG1          equ	4013	;# 
  1389   000FAE                     RCREG           equ	4014	;# 
  1390   000FAE                     RCREG1          equ	4014	;# 
  1391   000FAF                     SPBRG           equ	4015	;# 
  1392   000FAF                     SPBRG1          equ	4015	;# 
  1393   000FB0                     SPBRGH          equ	4016	;# 
  1394   000FB1                     T3CON           equ	4017	;# 
  1395   000FB2                     TMR3            equ	4018	;# 
  1396   000FB2                     TMR3L           equ	4018	;# 
  1397   000FB3                     TMR3H           equ	4019	;# 
  1398   000FB4                     CMCON           equ	4020	;# 
  1399   000FB5                     CVRCON          equ	4021	;# 
  1400   000FB6                     ECCP1AS         equ	4022	;# 
  1401   000FB6                     CCP1AS          equ	4022	;# 
  1402   000FB7                     ECCP1DEL        equ	4023	;# 
  1403   000FB7                     CCP1DEL         equ	4023	;# 
  1404   000FB8                     BAUDCON         equ	4024	;# 
  1405   000FB8                     BAUDCTL         equ	4024	;# 
  1406   000FBA                     CCP2CON         equ	4026	;# 
  1407   000FBB                     CCPR2           equ	4027	;# 
  1408   000FBB                     CCPR2L          equ	4027	;# 
  1409   000FBC                     CCPR2H          equ	4028	;# 
  1410   000FBD                     CCP1CON         equ	4029	;# 
  1411   000FBD                     ECCP1CON        equ	4029	;# 
  1412   000FBE                     CCPR1           equ	4030	;# 
  1413   000FBE                     CCPR1L          equ	4030	;# 
  1414   000FBF                     CCPR1H          equ	4031	;# 
  1415   000FC0                     ADCON2          equ	4032	;# 
  1416   000FC1                     ADCON1          equ	4033	;# 
  1417   000FC2                     ADCON0          equ	4034	;# 
  1418   000FC3                     ADRES           equ	4035	;# 
  1419   000FC3                     ADRESL          equ	4035	;# 
  1420   000FC4                     ADRESH          equ	4036	;# 
  1421   000FC5                     SSPCON2         equ	4037	;# 
  1422   000FC6                     SSPCON1         equ	4038	;# 
  1423   000FC7                     SSPSTAT         equ	4039	;# 
  1424   000FC8                     SSPADD          equ	4040	;# 
  1425   000FC9                     SSPBUF          equ	4041	;# 
  1426   000FCA                     T2CON           equ	4042	;# 
  1427   000FCB                     PR2             equ	4043	;# 
  1428   000FCB                     MEMCON          equ	4043	;# 
  1429   000FCC                     TMR2            equ	4044	;# 
  1430   000FCD                     T1CON           equ	4045	;# 
  1431   000FCE                     TMR1            equ	4046	;# 
  1432   000FCE                     TMR1L           equ	4046	;# 
  1433   000FCF                     TMR1H           equ	4047	;# 
  1434   000FD0                     RCON            equ	4048	;# 
  1435   000FD1                     WDTCON          equ	4049	;# 
  1436   000FD2                     HLVDCON         equ	4050	;# 
  1437   000FD2                     LVDCON          equ	4050	;# 
  1438   000FD3                     OSCCON          equ	4051	;# 
  1439   000FD5                     T0CON           equ	4053	;# 
  1440   000FD6                     TMR0            equ	4054	;# 
  1441   000FD6                     TMR0L           equ	4054	;# 
  1442   000FD7                     TMR0H           equ	4055	;# 
  1443   000FD8                     STATUS          equ	4056	;# 
  1444   000FD9                     FSR2            equ	4057	;# 
  1445   000FD9                     FSR2L           equ	4057	;# 
  1446   000FDA                     FSR2H           equ	4058	;# 
  1447   000FDB                     PLUSW2          equ	4059	;# 
  1448   000FDC                     PREINC2         equ	4060	;# 
  1449   000FDD                     POSTDEC2        equ	4061	;# 
  1450   000FDE                     POSTINC2        equ	4062	;# 
  1451   000FDF                     INDF2           equ	4063	;# 
  1452   000FE0                     BSR             equ	4064	;# 
  1453   000FE1                     FSR1            equ	4065	;# 
  1454   000FE1                     FSR1L           equ	4065	;# 
  1455   000FE2                     FSR1H           equ	4066	;# 
  1456   000FE3                     PLUSW1          equ	4067	;# 
  1457   000FE4                     PREINC1         equ	4068	;# 
  1458   000FE5                     POSTDEC1        equ	4069	;# 
  1459   000FE6                     POSTINC1        equ	4070	;# 
  1460   000FE7                     INDF1           equ	4071	;# 
  1461   000FE8                     WREG            equ	4072	;# 
  1462   000FE9                     FSR0            equ	4073	;# 
  1463   000FE9                     FSR0L           equ	4073	;# 
  1464   000FEA                     FSR0H           equ	4074	;# 
  1465   000FEB                     PLUSW0          equ	4075	;# 
  1466   000FEC                     PREINC0         equ	4076	;# 
  1467   000FED                     POSTDEC0        equ	4077	;# 
  1468   000FEE                     POSTINC0        equ	4078	;# 
  1469   000FEF                     INDF0           equ	4079	;# 
  1470   000FF0                     INTCON3         equ	4080	;# 
  1471   000FF1                     INTCON2         equ	4081	;# 
  1472   000FF2                     INTCON          equ	4082	;# 
  1473   000FF3                     PROD            equ	4083	;# 
  1474   000FF3                     PRODL           equ	4083	;# 
  1475   000FF4                     PRODH           equ	4084	;# 
  1476   000FF5                     TABLAT          equ	4085	;# 
  1477   000FF6                     TBLPTR          equ	4086	;# 
  1478   000FF6                     TBLPTRL         equ	4086	;# 
  1479   000FF7                     TBLPTRH         equ	4087	;# 
  1480   000FF8                     TBLPTRU         equ	4088	;# 
  1481   000FF9                     PCLAT           equ	4089	;# 
  1482   000FF9                     PC              equ	4089	;# 
  1483   000FF9                     PCL             equ	4089	;# 
  1484   000FFA                     PCLATH          equ	4090	;# 
  1485   000FFB                     PCLATU          equ	4091	;# 
  1486   000FFC                     STKPTR          equ	4092	;# 
  1487   000FFD                     TOS             equ	4093	;# 
  1488   000FFD                     TOSL            equ	4093	;# 
  1489   000FFE                     TOSH            equ	4094	;# 
  1490   000FFF                     TOSU            equ	4095	;# 
  1491                           
  1492 ;;_i	offset	0
  1493 ;;_selected	offset	1
  1494 ;;_highest_priority	offset	2
  1495 ;;_i	offset	0
  1496 ;;_selected	offset	1
  1497 ;;_highest_priority	offset	2
  1498   000FFD                     _TOS            set	4093
  1499   000FD6                     _TMR0           set	4054
  1500   000FD5                     _T0CONbits      set	4053
  1501   000F8C                     _LATD           set	3980
  1502   000F95                     _TRISDbits      set	3989
  1503   000F8C                     _LATDbits       set	3980
  1504   000FF1                     _INTCON2bits    set	4081
  1505   000F93                     _TRISBbits      set	3987
  1506   000FBD                     _CCP1CONbits    set	4029
  1507   000FBE                     _CCPR1L         set	4030
  1508   000FBD                     _CCP1CON        set	4029
  1509   000FCB                     _PR2            set	4043
  1510   000FCA                     _T2CON          set	4042
  1511   000F94                     _TRISCbits      set	3988
  1512   000FC3                     _ADRESL         set	4035
  1513   000FC4                     _ADRESH         set	4036
  1514   000FC2                     _ADCON0bits     set	4034
  1515   000F92                     _TRISAbits      set	3986
  1516   000FC0                     _ADCON2         set	4032
  1517   000FC1                     _ADCON1         set	4033
  1518   000FC2                     _ADCON0         set	4034
  1519   000FFC                     _STKPTR         set	4092
  1520   000FE8                     _WREG           set	4072
  1521   000FD8                     _STATUS         set	4056
  1522   000FE0                     _BSR            set	4064
  1523   000FF2                     _INTCONbits     set	4082
  1524                           
  1525                           ; #config settings
  1526                           
  1527                           	psect	cinit
  1528   002048                     __pcinit:
  1529                           	callstack 0
  1530   002048                     start_initialization:
  1531                           	callstack 0
  1532   002048                     __initialization:
  1533                           	callstack 0
  1534                           
  1535                           ; Clear objects allocated to BIGRAM (539 bytes)
  1536   002048  EE02  F06C         	lfsr	0,__pbssBIGRAM
  1537   00204C  EE22 F01B          	lfsr	2,539
  1538   002050                     clear_0:
  1539   002050  6AEE               	clrf	postinc0,c
  1540   002052  50DD               	movf	postdec2,w,c
  1541   002054  50D9               	movf	fsr2l,w,c
  1542   002056  E1FC               	bnz	clear_0
  1543   002058  50DA               	movf	fsr2h,w,c
  1544   00205A  E1FA               	bnz	clear_0
  1545                           
  1546                           ; Clear objects allocated to BANK1 (108 bytes)
  1547   00205C  EE01  F000         	lfsr	0,__pbssBANK1
  1548   002060  0E6C               	movlw	108
  1549   002062                     clear_1:
  1550   002062  6AEE               	clrf	postinc0,c
  1551   002064  06E8               	decf	wreg,f,c
  1552   002066  E1FD               	bnz	clear_1
  1553                           
  1554                           ; Clear objects allocated to COMRAM (3 bytes)
  1555   002068  6A40               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1556   00206A  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1557   00206C  6A3E               	clrf	__pbssCOMRAM& (0+255),c
  1558   00206E                     end_of_initialization:
  1559                           	callstack 0
  1560   00206E                     __end_of__initialization:
  1561                           	callstack 0
  1562   00206E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1563   002070  6EF8               	movwf	tblptru,c
  1564   002072  0100               	movlb	0
  1565   002074  EFC7  F00F         	goto	_main	;jump to C main() function
  1566                           
  1567                           	psect	bssCOMRAM
  1568   00003E                     __pbssCOMRAM:
  1569                           	callstack 0
  1570   00003E                     	ds	2
  1571   000040                     _est_flag:
  1572                           	callstack 0
  1573   000040                     	ds	1
  1574                           
  1575                           	psect	bssBANK1
  1576   000100                     __pbssBANK1:
  1577                           	callstack 0
  1578   000100                     _accel_data:
  1579                           	callstack 0
  1580   000100                     	ds	1
  1581   000101                     __uDynamicHeap:
  1582                           	callstack 0
  1583   000101                     	ds	80
  1584   000151                     _accel_pipe:
  1585                           	callstack 0
  1586   000151                     	ds	20
  1587   000165                     _buffer_mutex:
  1588                           	callstack 0
  1589   000165                     	ds	7
  1590                           
  1591                           	psect	bssBIGRAM
  1592   00026C                     __pbssBIGRAM:
  1593                           	callstack 0
  1594   00026C                     _r_queue:
  1595                           	callstack 0
  1596   00026C                     	ds	539
  1597                           
  1598                           	psect	cstackBANK2
  1599   000200                     __pcstackBANK2:
  1600                           	callstack 0
  1601   000200                     create_task@id:
  1602                           	callstack 0
  1603                           
  1604                           ; 1 bytes @ 0x0
  1605   000200                     	ds	1
  1606   000201                     create_task@new_task:
  1607                           	callstack 0
  1608                           
  1609                           ; 107 bytes @ 0x1
  1610   000201                     	ds	107
  1611                           
  1612                           	psect	cstackBANK1
  1613   00016C                     __pcstackBANK1:
  1614                           	callstack 0
  1615   00016C                     	ds	9
  1616   000175                     ??_tarefa_acelerador:
  1617                           
  1618                           ; 1 bytes @ 0x9
  1619   000175                     	ds	2
  1620   000177                     tarefa_acelerador@raw:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0xB
  1624   000177                     	ds	2
  1625   000179                     tarefa_acelerador@data:
  1626                           	callstack 0
  1627                           
  1628                           ; 1 bytes @ 0xD
  1629   000179                     	ds	1
  1630   00017A                     ?___awmod:
  1631                           	callstack 0
  1632   00017A                     sem_wait@sem:
  1633                           	callstack 0
  1634   00017A                     sem_post@sem:
  1635                           	callstack 0
  1636   00017A                     ___awmod@dividend:
  1637                           	callstack 0
  1638                           
  1639                           ; 2 bytes @ 0xE
  1640   00017A                     	ds	2
  1641   00017C                     ___awmod@divisor:
  1642                           	callstack 0
  1643   00017C                     ??_sem_wait:
  1644   00017C                     ??_sem_post:
  1645                           
  1646                           ; 1 bytes @ 0x10
  1647   00017C                     	ds	2
  1648   00017E                     ___awmod@counter:
  1649                           	callstack 0
  1650   00017E                     
  1651                           ; 1 bytes @ 0x12
  1652   00017E                     	ds	1
  1653   00017F                     ___awmod@sign:
  1654                           	callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x13
  1657   00017F                     	ds	4
  1658   000183                     read_pipe@p:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x17
  1662   000183                     	ds	2
  1663   000185                     read_pipe@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x19
  1667   000185                     	ds	2
  1668   000187                     ??_read_pipe:
  1669                           
  1670                           ; 1 bytes @ 0x1B
  1671   000187                     	ds	3
  1672   00018A                     tarefa_controle_central@duty:
  1673                           	callstack 0
  1674   00018A                     
  1675                           ; 1 bytes @ 0x1E
  1676   00018A                     	ds	1
  1677   00018B                     tarefa_controle_central@data:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x1F
  1681   00018B                     	ds	1
  1682   00018C                     mutex_lock@m:
  1683                           	callstack 0
  1684   00018C                     mutex_unlock@m:
  1685                           	callstack 0
  1686   00018C                     ??_pwm_set:
  1687                           
  1688                           ; 1 bytes @ 0x20
  1689   00018C                     	ds	2
  1690   00018E                     pwm_set@duty_cycle:
  1691                           	callstack 0
  1692   00018E                     ??_mutex_lock:
  1693   00018E                     ??_mutex_unlock:
  1694                           
  1695                           ; 1 bytes @ 0x22
  1696   00018E                     	ds	1
  1697   00018F                     pwm_set@duty:
  1698                           	callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x23
  1701   00018F                     	ds	2
  1702   000191                     mutex_unlock@tid:
  1703                           	callstack 0
  1704                           
  1705                           ; 1 bytes @ 0x25
  1706   000191                     	ds	4
  1707   000195                     tarefa_injecao_eletronica@duty:
  1708                           	callstack 0
  1709   000195                     
  1710                           ; 1 bytes @ 0x29
  1711   000195                     	ds	1
  1712   000196                     delay@time:
  1713                           	callstack 0
  1714   000196                     ??_change_state:
  1715                           
  1716                           ; 1 bytes @ 0x2A
  1717   000196                     	ds	2
  1718   000198                     ??_delay:
  1719                           
  1720                           ; 1 bytes @ 0x2C
  1721   000198                     	ds	5
  1722   00019D                     change_state@new_state:
  1723                           	callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x31
  1726   00019D                     	ds	2
  1727   00019F                     
  1728                           ; 1 bytes @ 0x33
  1729                           
  1730                           	psect	cstackBANK0
  1731   000060                     __pcstackBANK0:
  1732                           	callstack 0
  1733   000060                     i2create_task@id:
  1734                           	callstack 0
  1735                           
  1736                           ; 1 bytes @ 0x0
  1737   000060                     	ds	1
  1738   000061                     i2create_task@new_task:
  1739                           	callstack 0
  1740                           
  1741                           ; 107 bytes @ 0x1
  1742   000061                     	ds	107
  1743                           
  1744                           	psect	cstackCOMRAM
  1745   000021                     __pcstackCOMRAM:
  1746                           	callstack 0
  1747   000021                     create_task@priority:
  1748                           	callstack 0
  1749   000021                     i2create_task@priority:
  1750                           	callstack 0
  1751   000021                     sem_init@sem:
  1752                           	callstack 0
  1753   000021                     mutex_init@m:
  1754                           	callstack 0
  1755   000021                     SRAMInitHeap@pHeap:
  1756                           	callstack 0
  1757   000021                     __SRAMmerge@pSegA:
  1758                           	callstack 0
  1759   000021                     
  1760                           ; 1 bytes @ 0x0
  1761   000021                     	ds	1
  1762   000022                     create_task@task:
  1763                           	callstack 0
  1764   000022                     i2create_task@task:
  1765                           	callstack 0
  1766                           
  1767                           ; 2 bytes @ 0x1
  1768   000022                     	ds	1
  1769   000023                     decrease_time@i:
  1770                           	callstack 0
  1771   000023                     sem_init@value:
  1772                           	callstack 0
  1773   000023                     SRAMInitHeap@count:
  1774                           	callstack 0
  1775   000023                     ??__SRAMmerge:
  1776   000023                     
  1777                           ; 1 bytes @ 0x2
  1778   000023                     	ds	1
  1779   000024                     __SRAMmerge@pSegB:
  1780                           	callstack 0
  1781   000024                     ??_create_task:
  1782   000024                     ??i2_create_task:
  1783                           
  1784                           ; 1 bytes @ 0x3
  1785   000024                     	ds	1
  1786   000025                     ??_ISR:
  1787                           
  1788                           ; 1 bytes @ 0x4
  1789   000025                     	ds	1
  1790   000026                     __SRAMmerge@uSum:
  1791                           	callstack 0
  1792                           
  1793                           ; 1 bytes @ 0x5
  1794   000026                     	ds	1
  1795   000027                     __SRAMmerge@uSegA:
  1796                           	callstack 0
  1797                           
  1798                           ; 1 bytes @ 0x6
  1799   000027                     	ds	1
  1800   000028                     __SRAMmerge@uSegB:
  1801                           	callstack 0
  1802                           
  1803                           ; 1 bytes @ 0x7
  1804   000028                     	ds	1
  1805   000029                     ?_SRAMalloc:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0x8
  1809   000029                     	ds	2
  1810   00002B                     ??_SRAMalloc:
  1811                           
  1812                           ; 1 bytes @ 0xA
  1813   00002B                     	ds	2
  1814   00002D                     SRAMalloc@temp:
  1815                           	callstack 0
  1816                           
  1817                           ; 2 bytes @ 0xC
  1818   00002D                     	ds	2
  1819   00002F                     SRAMalloc@segLen:
  1820                           	callstack 0
  1821                           
  1822                           ; 1 bytes @ 0xE
  1823   00002F                     	ds	1
  1824   000030                     SRAMalloc@segHeader:
  1825                           	callstack 0
  1826                           
  1827                           ; 1 bytes @ 0xF
  1828   000030                     	ds	1
  1829   000031                     SRAMalloc@nBytes:
  1830                           	callstack 0
  1831                           
  1832                           ; 1 bytes @ 0x10
  1833   000031                     	ds	1
  1834   000032                     SRAMalloc@pHeap:
  1835                           	callstack 0
  1836                           
  1837                           ; 2 bytes @ 0x11
  1838   000032                     	ds	2
  1839   000034                     create_pipe@p:
  1840                           	callstack 0
  1841                           
  1842                           ; 2 bytes @ 0x13
  1843   000034                     	ds	2
  1844   000036                     ISR@tid:
  1845                           	callstack 0
  1846   000036                     
  1847                           ; 1 bytes @ 0x15
  1848   000036                     	ds	1
  1849   000037                     ISR@idx:
  1850                           	callstack 0
  1851                           
  1852                           ; 1 bytes @ 0x16
  1853   000037                     	ds	1
  1854   000038                     ?_adc_read:
  1855                           	callstack 0
  1856   000038                     write_pipe@p:
  1857                           	callstack 0
  1858                           
  1859                           ; 2 bytes @ 0x17
  1860   000038                     	ds	2
  1861   00003A                     write_pipe@data:
  1862                           	callstack 0
  1863   00003A                     ??_adc_read:
  1864                           
  1865                           ; 1 bytes @ 0x19
  1866   00003A                     	ds	1
  1867   00003B                     ??_write_pipe:
  1868                           
  1869                           ; 1 bytes @ 0x1A
  1870   00003B                     	ds	3
  1871                           
  1872 ;;
  1873 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1874 ;;
  1875 ;; *************** function _main *****************
  1876 ;; Defined at:
  1877 ;;		line 4 in file "main.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  2   16[None  ] int 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels required when called: 13
  1897 ;; This function calls:
  1898 ;;		_create_task
  1899 ;;		_os_init
  1900 ;;		_os_start
  1901 ;; This function is called by:
  1902 ;;		Startup code after reset
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text0
  1907   001F8E                     __ptext0:
  1908                           	callstack 0
  1909   001F8E                     _main:
  1910                           	callstack 18
  1911   001F8E                     
  1912                           ;main.c: 6:     os_init();
  1913   001F8E  EC96  F010         	call	_os_init	;wreg free
  1914                           
  1915                           ;main.c: 8:     create_task(1, 4, tarefa_acelerador);
  1916   001F92  0E04               	movlw	4
  1917   001F94  6E21               	movwf	create_task@priority^0,c
  1918   001F96  0E44               	movlw	low _tarefa_acelerador
  1919   001F98  6E22               	movwf	create_task@task^0,c
  1920   001F9A  0E1F               	movlw	high _tarefa_acelerador
  1921   001F9C  6E23               	movwf	(create_task@task+1)^0,c
  1922   001F9E  0E01               	movlw	1
  1923   001FA0  EC4C  F00F         	call	_create_task
  1924                           
  1925                           ;main.c: 9:     create_task(2, 3, tarefa_controle_central);
  1926   001FA4  0E03               	movlw	3
  1927   001FA6  6E21               	movwf	create_task@priority^0,c
  1928   001FA8  0E34               	movlw	low _tarefa_controle_central
  1929   001FAA  6E22               	movwf	create_task@task^0,c
  1930   001FAC  0E1E               	movlw	high _tarefa_controle_central
  1931   001FAE  6E23               	movwf	(create_task@task+1)^0,c
  1932   001FB0  0E02               	movlw	2
  1933   001FB2  EC4C  F00F         	call	_create_task
  1934                           
  1935                           ;main.c: 10:     create_task(3, 3, tarefa_injecao_eletronica);
  1936   001FB6  0E03               	movlw	3
  1937   001FB8  6E21               	movwf	create_task@priority^0,c
  1938   001FBA  0ED4               	movlw	low _tarefa_injecao_eletronica
  1939   001FBC  6E22               	movwf	create_task@task^0,c
  1940   001FBE  0E1F               	movlw	high _tarefa_injecao_eletronica
  1941   001FC0  6E23               	movwf	(create_task@task+1)^0,c
  1942   001FC2  0E03               	movlw	3
  1943   001FC4  EC4C  F00F         	call	_create_task
  1944   001FC8                     
  1945                           ;main.c: 13:     os_start();
  1946   001FC8  ECCA  F010         	call	_os_start	;wreg free
  1947   001FCC                     l17:
  1948   001FCC  EFE6  F00F         	goto	l17
  1949   001FD0  EF06  F000         	goto	start
  1950   001FD4                     __end_of_main:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _os_start *****************
  1954 ;; Defined at:
  1955 ;;		line 66 in file "kernel.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 12
  1976 ;; This function calls:
  1977 ;;		_start_timer0
  1978 ;;		_user_config
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text1
  1985   002194                     __ptext1:
  1986                           	callstack 0
  1987   002194                     _os_start:
  1988                           	callstack 18
  1989   002194                     
  1990                           ;kernel.c: 71:     user_config();
  1991   002194  EC08  F010         	call	_user_config	;wreg free
  1992   002198                     
  1993                           ;kernel.c: 74:     (INTCONbits.GIE = 1);
  1994   002198  8EF2               	bsf	242,7,c	;volatile
  1995   00219A                     
  1996                           ;kernel.c: 77:     start_timer0();
  1997   00219A  ECDD  F010         	call	_start_timer0	;wreg free
  1998   00219E  0012               	return		;funcret
  1999   0021A0                     __end_of_os_start:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _user_config *****************
  2003 ;; Defined at:
  2004 ;;		line 78 in file "user_app.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        0 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 11
  2025 ;; This function calls:
  2026 ;;		_adc_init
  2027 ;;		_config_timer0
  2028 ;;		_create_pipe
  2029 ;;		_int_ext_init
  2030 ;;		_mutex_init
  2031 ;;		_pwm_init
  2032 ;;		_start_timer0
  2033 ;; This function is called by:
  2034 ;;		_os_start
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text2
  2039   002010                     __ptext2:
  2040                           	callstack 0
  2041   002010                     _user_config:
  2042                           	callstack 18
  2043   002010                     
  2044                           ;user_app.c: 81:     TRISDbits.RD0 = 0;
  2045   002010  9095               	bcf	149,0,c	;volatile
  2046                           
  2047                           ;user_app.c: 82:     TRISDbits.RD1 = 0;
  2048   002012  9295               	bcf	149,1,c	;volatile
  2049                           
  2050                           ;user_app.c: 83:     TRISDbits.RD2 = 0;
  2051   002014  9495               	bcf	149,2,c	;volatile
  2052                           
  2053                           ;user_app.c: 84:     TRISDbits.RD3 = 0;
  2054   002016  9695               	bcf	149,3,c	;volatile
  2055                           
  2056                           ;user_app.c: 85:     LATD = 0;
  2057   002018  6A8C               	clrf	140,c	;volatile
  2058   00201A                     
  2059                           ;user_app.c: 88:     create_pipe(&accel_pipe);
  2060   00201A  0E51               	movlw	low _accel_pipe
  2061   00201C  6E34               	movwf	create_pipe@p^0,c
  2062   00201E  0E01               	movlw	high _accel_pipe
  2063   002020  6E35               	movwf	(create_pipe@p+1)^0,c
  2064   002022  ECE8  F00E         	call	_create_pipe	;wreg free
  2065   002026                     
  2066                           ;user_app.c: 89:     mutex_init(&buffer_mutex);
  2067   002026  0E65               	movlw	low _buffer_mutex
  2068   002028  6E21               	movwf	mutex_init@m^0,c
  2069   00202A  0E01               	movlw	high _buffer_mutex
  2070   00202C  6E22               	movwf	(mutex_init@m+1)^0,c
  2071   00202E  EC81  F010         	call	_mutex_init	;wreg free
  2072   002032                     
  2073                           ;user_app.c: 92:     adc_init();
  2074   002032  ECC2  F010         	call	_adc_init	;wreg free
  2075   002036                     
  2076                           ;user_app.c: 93:     pwm_init();
  2077   002036  ECB8  F010         	call	_pwm_init	;wreg free
  2078   00203A                     
  2079                           ;user_app.c: 94:     int_ext_init();
  2080   00203A  ECD0  F010         	call	_int_ext_init	;wreg free
  2081   00203E                     
  2082                           ;user_app.c: 97:     config_timer0();
  2083   00203E  ECAA  F010         	call	_config_timer0	;wreg free
  2084   002042                     
  2085                           ;user_app.c: 98:     start_timer0();
  2086   002042  ECDD  F010         	call	_start_timer0	;# 
  2087   002046  0012               	return		;funcret
  2088   002048                     __end_of_user_config:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _start_timer0 *****************
  2092 ;; Defined at:
  2093 ;;		line 58 in file "timer.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		None
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 8
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_user_config
  2118 ;;		_os_start
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text3
  2123   0021BA                     __ptext3:
  2124                           	callstack 0
  2125   0021BA                     _start_timer0:
  2126                           	callstack 20
  2127   0021BA                     
  2128                           ;timer.c: 60:     T0CONbits.TMR0ON = 1;
  2129   0021BA  8ED5               	bsf	213,7,c	;volatile
  2130   0021BC  0012               	return		;funcret
  2131   0021BE                     __end_of_start_timer0:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _pwm_init *****************
  2135 ;; Defined at:
  2136 ;;		line 26 in file "io.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 8
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_user_config
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text4
  2165   002170                     __ptext4:
  2166                           	callstack 0
  2167   002170                     _pwm_init:
  2168                           	callstack 20
  2169   002170                     
  2170                           ;io.c: 28:     TRISCbits.RC2 = 0;
  2171   002170  9494               	bcf	148,2,c	;volatile
  2172   002172                     
  2173                           ;io.c: 30:     T2CON = 0b00000111;
  2174   002172  0E07               	movlw	7
  2175   002174  6ECA               	movwf	202,c	;volatile
  2176   002176                     
  2177                           ;io.c: 31:     PR2 = 255;
  2178   002176  68CB               	setf	203,c	;volatile
  2179                           
  2180                           ;io.c: 33:     CCP1CON = 0b00001100;
  2181   002178  0E0C               	movlw	12
  2182   00217A  6EBD               	movwf	189,c	;volatile
  2183   00217C                     
  2184                           ;io.c: 34:     CCPR1L = 0;
  2185   00217C  6ABE               	clrf	190,c	;volatile
  2186                           
  2187                           ;io.c: 35:     CCP1CONbits.DC1B = 0;
  2188   00217E  0ECF               	movlw	-49
  2189   002180  16BD               	andwf	189,f,c	;volatile
  2190   002182  0012               	return		;funcret
  2191   002184                     __end_of_pwm_init:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function _mutex_init *****************
  2195 ;; Defined at:
  2196 ;;		line 48 in file "sync.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  m               2    0[COMRAM] PTR struct mutex
  2199 ;;		 -> buffer_mutex(7), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2211 ;;      Params:         2       0       0       0       0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2214 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 8
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_user_config
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text5
  2226   002102                     __ptext5:
  2227                           	callstack 0
  2228   002102                     _mutex_init:
  2229                           	callstack 20
  2230   002102                     
  2231                           ;sync.c: 48: void mutex_init(mutex_t *m);sync.c: 49: {;sync.c: 50:     m->flag = 1;
  2232   002102  C021  FFD9         	movff	mutex_init@m,fsr2l
  2233   002106  C022  FFDA         	movff	mutex_init@m+1,fsr2h
  2234   00210A  0E01               	movlw	1
  2235   00210C  6EDF               	movwf	indf2,c
  2236   00210E                     
  2237                           ;sync.c: 51:     m->s_size = 0;
  2238   00210E  EE20 F005          	lfsr	2,5
  2239   002112  5021               	movf	mutex_init@m^0,w,c
  2240   002114  26D9               	addwf	fsr2l,f,c
  2241   002116  5022               	movf	(mutex_init@m+1)^0,w,c
  2242   002118  22DA               	addwfc	fsr2h,f,c
  2243   00211A  6ADF               	clrf	indf2,c
  2244   00211C                     
  2245                           ;sync.c: 52:     m->s_pos_out = 0;
  2246   00211C  EE20 F006          	lfsr	2,6
  2247   002120  5021               	movf	mutex_init@m^0,w,c
  2248   002122  26D9               	addwf	fsr2l,f,c
  2249   002124  5022               	movf	(mutex_init@m+1)^0,w,c
  2250   002126  22DA               	addwfc	fsr2h,f,c
  2251   002128  6ADF               	clrf	indf2,c
  2252   00212A  0012               	return		;funcret
  2253   00212C                     __end_of_mutex_init:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _int_ext_init *****************
  2257 ;; Defined at:
  2258 ;;		line 50 in file "io.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		None
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 8
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_user_config
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text6
  2287   0021A0                     __ptext6:
  2288                           	callstack 0
  2289   0021A0                     _int_ext_init:
  2290                           	callstack 20
  2291   0021A0                     
  2292                           ;io.c: 52:     TRISBbits.RB0 = 1;
  2293   0021A0  8093               	bsf	147,0,c	;volatile
  2294                           
  2295                           ;io.c: 53:     INTCON2bits.INTEDG0 = 1;
  2296   0021A2  8CF1               	bsf	241,6,c	;volatile
  2297                           
  2298                           ;io.c: 54:     INTCONbits.INT0IF = 0;
  2299   0021A4  92F2               	bcf	242,1,c	;volatile
  2300                           
  2301                           ;io.c: 55:     INTCONbits.INT0IE = 1;
  2302   0021A6  88F2               	bsf	242,4,c	;volatile
  2303                           
  2304                           ;io.c: 56:     INTCONbits.GIE = 1;
  2305   0021A8  8EF2               	bsf	242,7,c	;volatile
  2306   0021AA  0012               	return		;funcret
  2307   0021AC                     __end_of_int_ext_init:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _create_pipe *****************
  2311 ;; Defined at:
  2312 ;;		line 4 in file "pipe.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  p               2   19[COMRAM] PTR struct pipe
  2315 ;;		 -> accel_pipe(20), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         2       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2330 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2331 ;;Total ram usage:        2 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 10
  2334 ;; This function calls:
  2335 ;;		_SRAMalloc
  2336 ;;		_sem_init
  2337 ;; This function is called by:
  2338 ;;		_user_config
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text7
  2343   001DD0                     __ptext7:
  2344                           	callstack 0
  2345   001DD0                     _create_pipe:
  2346                           	callstack 18
  2347   001DD0                     
  2348                           ;pipe.c: 4: void create_pipe(pipe_t *p);pipe.c: 5: {;pipe.c: 6:     p->pipe_msg = (uint8
      +                          _t *)SRAMalloc(3);
  2349   001DD0  0E03               	movlw	3
  2350   001DD2  EC4E  F00B         	call	_SRAMalloc
  2351   001DD6  C034  FFD9         	movff	create_pipe@p,fsr2l
  2352   001DDA  C035  FFDA         	movff	create_pipe@p+1,fsr2h
  2353   001DDE  C029  FFDE         	movff	?_SRAMalloc,postinc2
  2354   001DE2  C02A  FFDD         	movff	?_SRAMalloc+1,postdec2
  2355   001DE6                     
  2356                           ;pipe.c: 7:     p->pipe_pos_read = 0;
  2357   001DE6  EE20 F002          	lfsr	2,2
  2358   001DEA  5034               	movf	create_pipe@p^0,w,c
  2359   001DEC  26D9               	addwf	fsr2l,f,c
  2360   001DEE  5035               	movf	(create_pipe@p+1)^0,w,c
  2361   001DF0  22DA               	addwfc	fsr2h,f,c
  2362   001DF2  6ADF               	clrf	indf2,c
  2363   001DF4                     
  2364                           ;pipe.c: 8:     p->pipe_pos_write = 0;
  2365   001DF4  EE20 F003          	lfsr	2,3
  2366   001DF8  5034               	movf	create_pipe@p^0,w,c
  2367   001DFA  26D9               	addwf	fsr2l,f,c
  2368   001DFC  5035               	movf	(create_pipe@p+1)^0,w,c
  2369   001DFE  22DA               	addwfc	fsr2h,f,c
  2370   001E00  6ADF               	clrf	indf2,c
  2371   001E02                     
  2372                           ;pipe.c: 9:     sem_init(&p->pipe_sem_read, 0);
  2373   001E02  0E04               	movlw	4
  2374   001E04  2434               	addwf	create_pipe@p^0,w,c
  2375   001E06  6E21               	movwf	sem_init@sem^0,c
  2376   001E08  0E00               	movlw	0
  2377   001E0A  2035               	addwfc	(create_pipe@p+1)^0,w,c
  2378   001E0C  6E22               	movwf	(sem_init@sem+1)^0,c
  2379   001E0E  0E00               	movlw	0
  2380   001E10  6E24               	movwf	(sem_init@value+1)^0,c
  2381   001E12  0E00               	movlw	0
  2382   001E14  6E23               	movwf	sem_init@value^0,c
  2383   001E16  EC54  F010         	call	_sem_init	;wreg free
  2384   001E1A                     
  2385                           ;pipe.c: 10:     sem_init(&p->pipe_sem_write, 3);
  2386   001E1A  0E0C               	movlw	12
  2387   001E1C  2434               	addwf	create_pipe@p^0,w,c
  2388   001E1E  6E21               	movwf	sem_init@sem^0,c
  2389   001E20  0E00               	movlw	0
  2390   001E22  2035               	addwfc	(create_pipe@p+1)^0,w,c
  2391   001E24  6E22               	movwf	(sem_init@sem+1)^0,c
  2392   001E26  0E00               	movlw	0
  2393   001E28  6E24               	movwf	(sem_init@value+1)^0,c
  2394   001E2A  0E03               	movlw	3
  2395   001E2C  6E23               	movwf	sem_init@value^0,c
  2396   001E2E  EC54  F010         	call	_sem_init	;wreg free
  2397   001E32  0012               	return		;funcret
  2398   001E34                     __end_of_create_pipe:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _sem_init *****************
  2402 ;; Defined at:
  2403 ;;		line 11 in file "sync.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  sem             2    0[COMRAM] PTR struct sem
  2406 ;;		 -> accel_pipe(20), 
  2407 ;;  value           2    2[COMRAM] short 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2419 ;;      Params:         4       0       0       0       0       0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2422 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2423 ;;Total ram usage:        4 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 8
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_create_pipe
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text8
  2434   0020A8                     __ptext8:
  2435                           	callstack 0
  2436   0020A8                     _sem_init:
  2437                           	callstack 19
  2438   0020A8                     
  2439                           ;sync.c: 11: void sem_init(sem_t *sem, int16_t value);sync.c: 12: {;sync.c: 13:     sem-
      +                          >s_value = value;
  2440   0020A8  C021  FFD9         	movff	sem_init@sem,fsr2l
  2441   0020AC  C022  FFDA         	movff	sem_init@sem+1,fsr2h
  2442   0020B0  C023  FFDE         	movff	sem_init@value,postinc2
  2443   0020B4  C024  FFDD         	movff	sem_init@value+1,postdec2
  2444   0020B8                     
  2445                           ;sync.c: 14:     sem->s_size = 0;
  2446   0020B8  EE20 F006          	lfsr	2,6
  2447   0020BC  5021               	movf	sem_init@sem^0,w,c
  2448   0020BE  26D9               	addwf	fsr2l,f,c
  2449   0020C0  5022               	movf	(sem_init@sem+1)^0,w,c
  2450   0020C2  22DA               	addwfc	fsr2h,f,c
  2451   0020C4  6ADF               	clrf	indf2,c
  2452   0020C6                     
  2453                           ;sync.c: 15:     sem->s_pos_out = 0;
  2454   0020C6  EE20 F007          	lfsr	2,7
  2455   0020CA  5021               	movf	sem_init@sem^0,w,c
  2456   0020CC  26D9               	addwf	fsr2l,f,c
  2457   0020CE  5022               	movf	(sem_init@sem+1)^0,w,c
  2458   0020D0  22DA               	addwfc	fsr2h,f,c
  2459   0020D2  6ADF               	clrf	indf2,c
  2460   0020D4  0012               	return		;funcret
  2461   0020D6                     __end_of_sem_init:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _SRAMalloc *****************
  2465 ;; Defined at:
  2466 ;;		line 138 in file "mem.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  nBytes          1    wreg     unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  nBytes          1   16[COMRAM] unsigned char 
  2471 ;;  pHeap           2   17[COMRAM] PTR struct _SALLOC
  2472 ;;		 -> _uDynamicHeap(80), 
  2473 ;;  temp            2   12[COMRAM] PTR struct _SALLOC
  2474 ;;		 -> _uDynamicHeap(80), 
  2475 ;;  segHeader       1   15[COMRAM] struct _SALLOC
  2476 ;;  segLen          1   14[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2    8[COMRAM] PTR unsigned char 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2486 ;;      Params:         2       0       0       0       0       0       0       0       0
  2487 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2488 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2489 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2490 ;;Total ram usage:       11 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 9
  2493 ;; This function calls:
  2494 ;;		__SRAMmerge
  2495 ;; This function is called by:
  2496 ;;		_create_pipe
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text9
  2501   00169C                     __ptext9:
  2502                           	callstack 0
  2503   00169C                     _SRAMalloc:
  2504                           	callstack 18
  2505                           
  2506                           ;incstack = 0
  2507                           ;SRAMalloc@nBytes stored from wreg
  2508   00169C  6E31               	movwf	SRAMalloc@nBytes^0,c
  2509   00169E                     
  2510                           ;mem.c: 138: unsigned char * SRAMalloc( unsigned char nBytes);mem.c: 139: {;mem.c: 140: 
      +                           SALLOC * pHeap;;mem.c: 141:  SALLOC * temp;;mem.c: 142:       SALLOC segHeader;;mem.c: 
      +                          143:       unsigned char segLen;;mem.c: 146:  if (nBytes > (0x7F - 1))
  2511   00169E  0E7E               	movlw	126
  2512   0016A0  6431               	cpfsgt	SRAMalloc@nBytes^0,c
  2513   0016A2  EF55  F00B         	goto	u741
  2514   0016A6  EF57  F00B         	goto	u740
  2515   0016AA                     u741:
  2516   0016AA  EF5D  F00B         	goto	l1828
  2517   0016AE                     u740:
  2518   0016AE                     l1824:
  2519                           
  2520                           ;mem.c: 147:   return (0);
  2521   0016AE  0E00               	movlw	0
  2522   0016B0  6E29               	movwf	?_SRAMalloc^0,c
  2523   0016B2  0E00               	movlw	0
  2524   0016B4  6E2A               	movwf	(?_SRAMalloc+1)^0,c
  2525   0016B6  EFDC  F00B         	goto	l136
  2526   0016BA                     l1828:
  2527                           
  2528                           ;mem.c: 150:  pHeap = (SALLOC *)_uDynamicHeap;
  2529   0016BA  0E01               	movlw	low __uDynamicHeap
  2530   0016BC  6E32               	movwf	SRAMalloc@pHeap^0,c
  2531   0016BE  0E01               	movlw	high __uDynamicHeap
  2532   0016C0  6E33               	movwf	(SRAMalloc@pHeap+1)^0,c
  2533   0016C2                     l1830:
  2534                           
  2535                           ;mem.c: 153:  {;mem.c: 155:   segHeader = *pHeap;
  2536   0016C2  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2537   0016C6  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2538   0016CA  50DF               	movf	indf2,w,c
  2539   0016CC  6E30               	movwf	SRAMalloc@segHeader^0,c
  2540   0016CE                     
  2541                           ;mem.c: 158:   segLen = segHeader.bits.count - 1;
  2542   0016CE  5030               	movf	SRAMalloc@segHeader^0,w,c
  2543   0016D0  0B7F               	andlw	127
  2544   0016D2  6E2B               	movwf	??_SRAMalloc^0,c
  2545   0016D4  042B               	decf	??_SRAMalloc^0,w,c
  2546   0016D6  6E2F               	movwf	SRAMalloc@segLen^0,c
  2547   0016D8                     
  2548                           ;mem.c: 161:   if (segHeader.byte == 0)
  2549   0016D8  5030               	movf	SRAMalloc@segHeader^0,w,c
  2550   0016DA  A4D8               	btfss	status,2,c
  2551   0016DC  EF72  F00B         	goto	u751
  2552   0016E0  EF74  F00B         	goto	u750
  2553   0016E4                     u751:
  2554   0016E4  EF76  F00B         	goto	l138
  2555   0016E8                     u750:
  2556   0016E8  EF57  F00B         	goto	l1824
  2557   0016EC                     l138:
  2558                           
  2559                           ;mem.c: 165:   if (!(segHeader.bits.alloc))
  2560   0016EC  BE30               	btfsc	SRAMalloc@segHeader^0,7,c
  2561   0016EE  EF7B  F00B         	goto	u761
  2562   0016F2  EF7D  F00B         	goto	u760
  2563   0016F6                     u761:
  2564   0016F6  EF94  F00B         	goto	l1844
  2565   0016FA                     u760:
  2566   0016FA                     
  2567                           ;mem.c: 166:   {;mem.c: 168:    if (nBytes > segLen)
  2568   0016FA  5031               	movf	SRAMalloc@nBytes^0,w,c
  2569   0016FC  5C2F               	subwf	SRAMalloc@segLen^0,w,c
  2570   0016FE  B0D8               	btfsc	status,0,c
  2571   001700  EF84  F00B         	goto	u771
  2572   001704  EF86  F00B         	goto	u770
  2573   001708                     u771:
  2574   001708  EF9F  F00B         	goto	l1846
  2575   00170C                     u770:
  2576   00170C                     
  2577                           ;mem.c: 169:    {;mem.c: 171:     if (!(_SRAMmerge(pHeap)))
  2578   00170C  C032  F021         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  2579   001710  C033  F022         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  2580   001714  ECDD  F00B         	call	__SRAMmerge	;wreg free
  2581   001718  0900               	iorlw	0
  2582   00171A  A4D8               	btfss	status,2,c
  2583   00171C  EF92  F00B         	goto	u781
  2584   001720  EF94  F00B         	goto	u780
  2585   001724                     u781:
  2586   001724  EFDA  F00B         	goto	l145
  2587   001728                     u780:
  2588   001728                     l1844:
  2589                           
  2590                           ;mem.c: 172:      pHeap += segHeader.bits.count;
  2591   001728  5030               	movf	SRAMalloc@segHeader^0,w,c
  2592   00172A  0B7F               	andlw	127
  2593   00172C  6E2B               	movwf	??_SRAMalloc^0,c
  2594   00172E  502B               	movf	??_SRAMalloc^0,w,c
  2595   001730  0D01               	mullw	1
  2596   001732  50F3               	movf	243,w,c
  2597   001734  2632               	addwf	SRAMalloc@pHeap^0,f,c
  2598   001736  50F4               	movf	244,w,c
  2599   001738  2233               	addwfc	(SRAMalloc@pHeap+1)^0,f,c
  2600   00173A  EF61  F00B         	goto	l1830
  2601   00173E                     l1846:
  2602                           
  2603                           ;mem.c: 178:     if (nBytes == segLen)
  2604   00173E  502F               	movf	SRAMalloc@segLen^0,w,c
  2605   001740  1831               	xorwf	SRAMalloc@nBytes^0,w,c
  2606   001742  A4D8               	btfss	status,2,c
  2607   001744  EFA6  F00B         	goto	u791
  2608   001748  EFA8  F00B         	goto	u790
  2609   00174C                     u791:
  2610   00174C  EFB5  F00B         	goto	l1856
  2611   001750                     u790:
  2612   001750                     
  2613                           ;mem.c: 179:     {;mem.c: 181:      (*pHeap).bits.alloc = 1;
  2614   001750  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2615   001754  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2616   001758  8EDF               	bsf	indf2,7,c
  2617   00175A                     
  2618                           ;mem.c: 184:      return ((unsigned char *)(pHeap + 1));
  2619   00175A  0E01               	movlw	1
  2620   00175C  2432               	addwf	SRAMalloc@pHeap^0,w,c
  2621   00175E  6E29               	movwf	?_SRAMalloc^0,c
  2622   001760  0E00               	movlw	0
  2623   001762  2033               	addwfc	(SRAMalloc@pHeap+1)^0,w,c
  2624   001764  6E2A               	movwf	(?_SRAMalloc+1)^0,c
  2625   001766  EFDC  F00B         	goto	l136
  2626   00176A                     l1856:
  2627                           
  2628                           ;mem.c: 189:     {;mem.c: 191:      (*pHeap).byte = nBytes + 0x81;
  2629   00176A  5031               	movf	SRAMalloc@nBytes^0,w,c
  2630   00176C  0F81               	addlw	129
  2631   00176E  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2632   001772  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2633   001776  6EDF               	movwf	indf2,c
  2634   001778                     
  2635                           ;mem.c: 194:      temp = pHeap + 1;
  2636   001778  0E01               	movlw	1
  2637   00177A  2432               	addwf	SRAMalloc@pHeap^0,w,c
  2638   00177C  6E2D               	movwf	SRAMalloc@temp^0,c
  2639   00177E  0E00               	movlw	0
  2640   001780  2033               	addwfc	(SRAMalloc@pHeap+1)^0,w,c
  2641   001782  6E2E               	movwf	(SRAMalloc@temp+1)^0,c
  2642   001784                     
  2643                           ;mem.c: 197:      pHeap += (nBytes + 1);
  2644   001784  5031               	movf	SRAMalloc@nBytes^0,w,c
  2645   001786  6E2B               	movwf	??_SRAMalloc^0,c
  2646   001788  6A2C               	clrf	(??_SRAMalloc+1)^0,c
  2647   00178A  0E01               	movlw	1
  2648   00178C  262B               	addwf	??_SRAMalloc^0,f,c
  2649   00178E  0E00               	movlw	0
  2650   001790  222C               	addwfc	(??_SRAMalloc+1)^0,f,c
  2651   001792  502B               	movf	??_SRAMalloc^0,w,c
  2652   001794  2632               	addwf	SRAMalloc@pHeap^0,f,c
  2653   001796  502C               	movf	(??_SRAMalloc+1)^0,w,c
  2654   001798  2233               	addwfc	(SRAMalloc@pHeap+1)^0,f,c
  2655                           
  2656                           ;mem.c: 200:      (*pHeap).byte = segLen - nBytes;
  2657   00179A  5031               	movf	SRAMalloc@nBytes^0,w,c
  2658   00179C  5C2F               	subwf	SRAMalloc@segLen^0,w,c
  2659   00179E  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2660   0017A2  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2661   0017A6  6EDF               	movwf	indf2,c
  2662   0017A8                     
  2663                           ;mem.c: 203:      return ((unsigned char *)temp);
  2664   0017A8  C02D  F029         	movff	SRAMalloc@temp,?_SRAMalloc
  2665   0017AC  C02E  F02A         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  2666   0017B0  EFDC  F00B         	goto	l136
  2667   0017B4                     l145:
  2668   0017B4  EF61  F00B         	goto	l1830
  2669   0017B8                     l136:
  2670   0017B8  0012               	return		;funcret
  2671   0017BA                     __end_of_SRAMalloc:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function __SRAMmerge *****************
  2675 ;; Defined at:
  2676 ;;		line 302 in file "mem.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  pSegA           2    0[COMRAM] PTR struct _SALLOC
  2679 ;;		 -> _uDynamicHeap(80), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  pSegB           2    3[COMRAM] PTR struct _SALLOC
  2682 ;;		 -> _uDynamicHeap(80), 
  2683 ;;  uSegB           1    7[COMRAM] struct _SALLOC
  2684 ;;  uSegA           1    6[COMRAM] struct _SALLOC
  2685 ;;  uSum            1    5[COMRAM] struct _SALLOC
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2695 ;;      Params:         2       0       0       0       0       0       0       0       0
  2696 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2697 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2698 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2699 ;;Total ram usage:        8 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 8
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_SRAMalloc
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text10
  2710   0017BA                     __ptext10:
  2711                           	callstack 0
  2712   0017BA                     __SRAMmerge:
  2713                           	callstack 18
  2714   0017BA                     
  2715                           ;mem.c: 302:      unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 303: {;mem.c: 304:  SA
      +                          LLOC * pSegB;;mem.c: 305:       SALLOC uSegA, uSegB, uSum;;mem.c: 308:  pSegB = pSegA + 
      +                          (*pSegA).byte;
  2716   0017BA  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2717   0017BE  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2718   0017C2  50DF               	movf	indf2,w,c
  2719   0017C4  6E23               	movwf	??__SRAMmerge^0,c
  2720   0017C6  5023               	movf	??__SRAMmerge^0,w,c
  2721   0017C8  2421               	addwf	__SRAMmerge@pSegA^0,w,c
  2722   0017CA  6E24               	movwf	__SRAMmerge@pSegB^0,c
  2723   0017CC  0E00               	movlw	0
  2724   0017CE  2022               	addwfc	(__SRAMmerge@pSegA+1)^0,w,c
  2725   0017D0  6E25               	movwf	(__SRAMmerge@pSegB+1)^0,c
  2726   0017D2                     
  2727                           ;mem.c: 311:  uSegA = *pSegA;
  2728   0017D2  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2729   0017D6  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2730   0017DA  50DF               	movf	indf2,w,c
  2731   0017DC  6E27               	movwf	__SRAMmerge@uSegA^0,c
  2732   0017DE                     
  2733                           ;mem.c: 312:  uSegB = *pSegB;
  2734   0017DE  C024  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  2735   0017E2  C025  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  2736   0017E6  50DF               	movf	indf2,w,c
  2737   0017E8  6E28               	movwf	__SRAMmerge@uSegB^0,c
  2738   0017EA                     
  2739                           ;mem.c: 315:  if (uSegB.byte == 0)
  2740   0017EA  5028               	movf	__SRAMmerge@uSegB^0,w,c
  2741   0017EC  A4D8               	btfss	status,2,c
  2742   0017EE  EFFB  F00B         	goto	u691
  2743   0017F2  EFFD  F00B         	goto	u690
  2744   0017F6                     u691:
  2745   0017F6  EF00  F00C         	goto	l161
  2746   0017FA                     u690:
  2747   0017FA                     l1780:
  2748                           
  2749                           ;mem.c: 316:   return (0);
  2750   0017FA  0E00               	movlw	0
  2751   0017FC  EF48  F00C         	goto	l162
  2752   001800                     l161:
  2753                           
  2754                           ;mem.c: 319:  if (uSegA.bits.alloc || uSegB.bits.alloc)
  2755   001800  BE27               	btfsc	__SRAMmerge@uSegA^0,7,c
  2756   001802  EF05  F00C         	goto	u701
  2757   001806  EF07  F00C         	goto	u700
  2758   00180A                     u701:
  2759   00180A  EFFD  F00B         	goto	l1780
  2760   00180E                     u700:
  2761   00180E  AE28               	btfss	__SRAMmerge@uSegB^0,7,c
  2762   001810  EF0C  F00C         	goto	u711
  2763   001814  EF0E  F00C         	goto	u710
  2764   001818                     u711:
  2765   001818  EF10  F00C         	goto	l1790
  2766   00181C                     u710:
  2767   00181C  EFFD  F00B         	goto	l1780
  2768   001820                     l1790:
  2769                           
  2770                           ;mem.c: 323:  if (uSegA.bits.count == 0x7F)
  2771   001820  5027               	movf	__SRAMmerge@uSegA^0,w,c
  2772   001822  0B7F               	andlw	127
  2773   001824  0A7F               	xorlw	127
  2774   001826  A4D8               	btfss	status,2,c
  2775   001828  EF18  F00C         	goto	u721
  2776   00182C  EF1A  F00C         	goto	u720
  2777   001830                     u721:
  2778   001830  EF1C  F00C         	goto	l1796
  2779   001834                     u720:
  2780   001834  EFFD  F00B         	goto	l1780
  2781   001838                     l1796:
  2782                           
  2783                           ;mem.c: 327:  uSum.byte = uSegA.byte + uSegB.byte;
  2784   001838  5027               	movf	__SRAMmerge@uSegA^0,w,c
  2785   00183A  2428               	addwf	__SRAMmerge@uSegB^0,w,c
  2786   00183C  6E26               	movwf	__SRAMmerge@uSum^0,c
  2787                           
  2788                           ;mem.c: 332:  if ((uSum.byte) > 0x7F)
  2789   00183E  0E7F               	movlw	127
  2790   001840  6426               	cpfsgt	__SRAMmerge@uSum^0,c
  2791   001842  EF25  F00C         	goto	u731
  2792   001846  EF27  F00C         	goto	u730
  2793   00184A                     u731:
  2794   00184A  EF41  F00C         	goto	l1812
  2795   00184E                     u730:
  2796   00184E                     
  2797                           ;mem.c: 333:  {;mem.c: 334:   (*pSegA).byte = 0x7F;
  2798   00184E  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2799   001852  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2800   001856  0E7F               	movlw	127
  2801   001858  6EDF               	movwf	indf2,c
  2802   00185A                     
  2803                           ;mem.c: 335:   pSegA += 0x7F;
  2804   00185A  0E7F               	movlw	127
  2805   00185C  2621               	addwf	__SRAMmerge@pSegA^0,f,c
  2806   00185E  0E00               	movlw	0
  2807   001860  2222               	addwfc	(__SRAMmerge@pSegA+1)^0,f,c
  2808   001862                     
  2809                           ;mem.c: 336:   pSegB += uSegB.byte;
  2810   001862  5028               	movf	__SRAMmerge@uSegB^0,w,c
  2811   001864  0D01               	mullw	1
  2812   001866  50F3               	movf	243,w,c
  2813   001868  2624               	addwf	__SRAMmerge@pSegB^0,f,c
  2814   00186A  50F4               	movf	244,w,c
  2815   00186C  2225               	addwfc	(__SRAMmerge@pSegB+1)^0,f,c
  2816   00186E                     
  2817                           ;mem.c: 337:   (*pSegA).byte = (unsigned char)(pSegB - pSegA);
  2818   00186E  5021               	movf	__SRAMmerge@pSegA^0,w,c
  2819   001870  5C24               	subwf	__SRAMmerge@pSegB^0,w,c
  2820   001872  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2821   001876  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2822   00187A  6EDF               	movwf	indf2,c
  2823   00187C                     
  2824                           ;mem.c: 339:   return (0x7F);
  2825   00187C  0E7F               	movlw	127
  2826   00187E  EF48  F00C         	goto	l162
  2827   001882                     l1812:
  2828                           
  2829                           ;mem.c: 344:  {;mem.c: 345:   return ((*pSegA).byte = uSum.byte);
  2830   001882  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2831   001886  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2832   00188A  C026  FFDF         	movff	__SRAMmerge@uSum,indf2
  2833   00188E  50DF               	movf	223,w,c
  2834   001890                     l162:
  2835   001890  0012               	return		;funcret
  2836   001892                     __end_of__SRAMmerge:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _adc_init *****************
  2840 ;; Defined at:
  2841 ;;		line 9 in file "io.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2858 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 8
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_user_config
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text11
  2870   002184                     __ptext11:
  2871                           	callstack 0
  2872   002184                     _adc_init:
  2873                           	callstack 20
  2874   002184                     
  2875                           ;io.c: 11:     ADCON0 = 0x01;
  2876   002184  0E01               	movlw	1
  2877   002186  6EC2               	movwf	194,c	;volatile
  2878                           
  2879                           ;io.c: 12:     ADCON1 = 0x0E;
  2880   002188  0E0E               	movlw	14
  2881   00218A  6EC1               	movwf	193,c	;volatile
  2882                           
  2883                           ;io.c: 13:     ADCON2 = 0b10101010;
  2884   00218C  0EAA               	movlw	170
  2885   00218E  6EC0               	movwf	192,c	;volatile
  2886   002190                     
  2887                           ;io.c: 14:     TRISAbits.RA0 = 1;
  2888   002190  8092               	bsf	146,0,c	;volatile
  2889   002192  0012               	return		;funcret
  2890   002194                     __end_of_adc_init:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _os_init *****************
  2894 ;; Defined at:
  2895 ;;		line 50 in file "kernel.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 9
  2916 ;; This function calls:
  2917 ;;		_SRAMInitHeap
  2918 ;;		_config_timer0
  2919 ;;		_create_task
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text12
  2926   00212C                     __ptext12:
  2927                           	callstack 0
  2928   00212C                     _os_init:
  2929                           	callstack 21
  2930   00212C                     
  2931                           ;kernel.c: 52:     r_queue.ready_queue_size = 0;
  2932   00212C  0E00               	movlw	0
  2933   00212E  CFE8 F484          	movff	wreg,_r_queue+536
  2934                           
  2935                           ;kernel.c: 53:     r_queue.task_running = 0;
  2936   002132  0E00               	movlw	0
  2937   002134  CFE8 F483          	movff	wreg,_r_queue+535
  2938   002138                     
  2939                           ;kernel.c: 56:     create_task(0, 0, idle);
  2940   002138  0E00               	movlw	0
  2941   00213A  6E21               	movwf	create_task@priority^0,c
  2942   00213C  0EAC               	movlw	low _idle
  2943   00213E  6E22               	movwf	create_task@task^0,c
  2944   002140  0E21               	movlw	high _idle
  2945   002142  6E23               	movwf	(create_task@task+1)^0,c
  2946   002144  0E00               	movlw	0
  2947   002146  EC4C  F00F         	call	_create_task	;# 
  2948   00214A                     
  2949                           ;kernel.c: 59:     config_timer0();
  2950   00214A  ECAA  F010         	call	_config_timer0	;wreg free
  2951   00214E                     
  2952                           ;kernel.c: 62:     SRAMInitHeap();
  2953   00214E  ECB5  F00E         	call	_SRAMInitHeap	;wreg free
  2954   002152  0012               	return		;funcret
  2955   002154                     __end_of_os_init:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _create_task *****************
  2959 ;; Defined at:
  2960 ;;		line 11 in file "kernel.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  id              1    wreg     unsigned char 
  2963 ;;  priority        1    0[COMRAM] unsigned char 
  2964 ;;  task            2    1[COMRAM] PTR FTN()void 
  2965 ;;		 -> idle(1), tarefa_estabilidade(1), tarefa_injecao_eletronica(1), tarefa_controle_central(1), 
  2966 ;;		 -> tarefa_acelerador(1), 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  id              1    0[BANK2 ] unsigned char 
  2969 ;;  new_task      107    1[BANK2 ] struct tcb
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2979 ;;      Params:         3       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0     108       0       0       0       0       0
  2981 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         4       0       0     108       0       0       0       0       0
  2983 ;;Total ram usage:      112 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 8
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;;		_os_init
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text13
  2995   001E98                     __ptext13:
  2996                           	callstack 0
  2997   001E98                     _create_task:
  2998                           	callstack 21
  2999                           
  3000                           ;incstack = 0
  3001                           ;create_task@id stored from wreg
  3002   001E98  0102               	movlb	2	; () banked
  3003   001E9A  6F00               	movwf	create_task@id& (0+255),b
  3004   001E9C                     
  3005                           ;kernel.c: 11: void create_task(uint8_t id, uint8_t priority, f_ptr task);kernel.c: 12: 
      +                          {;kernel.c: 13:     tcb_t new_task;;kernel.c: 15:     new_task.task_id = id;
  3006   001E9C  C200  F201         	movff	create_task@id,create_task@new_task
  3007   001EA0                     
  3008                           ;kernel.c: 16:     new_task.task_priority = priority;
  3009   001EA0  C021  F202         	movff	create_task@priority,create_task@new_task+1
  3010   001EA4                     
  3011                           ;kernel.c: 17:     new_task.task_f = task;
  3012   001EA4  C022  F204         	movff	create_task@task,create_task@new_task+3
  3013   001EA8  C023  F205         	movff	create_task@task+1,create_task@new_task+4
  3014   001EAC                     
  3015                           ;kernel.c: 19:     new_task.task_sp = 0;
  3016   001EAC  0102               	movlb	2	; () banked
  3017   001EAE  6B6B               	clrf	(create_task@new_task+106)& (0+255),b
  3018   001EB0                     
  3019                           ; BSR set to: 2
  3020                           ;kernel.c: 20:     new_task.time_sleeping = 0;
  3021   001EB0  0E00               	movlw	0
  3022   001EB2  6F07               	movwf	(create_task@new_task+6)& (0+255),b
  3023   001EB4  0E00               	movlw	0
  3024   001EB6  6F06               	movwf	(create_task@new_task+5)& (0+255),b
  3025   001EB8                     
  3026                           ; BSR set to: 2
  3027                           ;kernel.c: 21:     new_task.task_state = READY;
  3028   001EB8  6B03               	clrf	(create_task@new_task+2)& (0+255),b
  3029   001EBA                     
  3030                           ; BSR set to: 2
  3031                           ;kernel.c: 23:     new_task.BSR_REG = 0x000;
  3032   001EBA  6B0A               	clrf	(create_task@new_task+9)& (0+255),b
  3033   001EBC                     
  3034                           ; BSR set to: 2
  3035                           ;kernel.c: 24:     new_task.W_REG = 0x000;
  3036   001EBC  6B08               	clrf	(create_task@new_task+7)& (0+255),b
  3037   001EBE                     
  3038                           ; BSR set to: 2
  3039                           ;kernel.c: 25:     new_task.STATUS_REG = 0x000;
  3040   001EBE  6B09               	clrf	(create_task@new_task+8)& (0+255),b
  3041   001EC0                     
  3042                           ; BSR set to: 2
  3043                           ;kernel.c: 27:     r_queue.ready_queue[r_queue.ready_queue_size] = new_task;
  3044   001EC0  EE22  F001         	lfsr	2,create_task@new_task
  3045   001EC4  C484  F024         	movff	_r_queue+536,??_create_task
  3046   001EC8  5024               	movf	??_create_task^0,w,c
  3047   001ECA  0D6B               	mullw	107
  3048   001ECC  0E6C               	movlw	low _r_queue
  3049   001ECE  24F3               	addwf	243,w,c
  3050   001ED0  6EE9               	movwf	fsr0l,c
  3051   001ED2  0E02               	movlw	high _r_queue
  3052   001ED4  20F4               	addwfc	prodh,w,c
  3053   001ED6  6EEA               	movwf	fsr0h,c
  3054   001ED8  0E6A               	movlw	106
  3055   001EDA                     u1371:
  3056   001EDA  CFDB FFEB          	movff	plusw2,plusw0
  3057   001EDE  06E8               	decf	wreg,f,c
  3058   001EE0  E2FC               	bc	u1371
  3059   001EE2                     
  3060                           ; BSR set to: 2
  3061                           ;kernel.c: 28:     r_queue.ready_queue_size += 1;
  3062   001EE2  C484  FFE8         	movff	_r_queue+536,wreg
  3063   001EE6  0F01               	addlw	1
  3064   001EE8  CFE8 F484          	movff	wreg,_r_queue+536
  3065   001EEC                     
  3066                           ; BSR set to: 2
  3067   001EEC  0012               	return		;funcret
  3068   001EEE                     __end_of_create_task:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _config_timer0 *****************
  3072 ;; Defined at:
  3073 ;;		line 44 in file "timer.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3090 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3091 ;;Total ram usage:        0 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 8
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_user_config
  3098 ;;		_os_init
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text14
  3103   002154                     __ptext14:
  3104                           	callstack 0
  3105   002154                     _config_timer0:
  3106                           	callstack 20
  3107   002154                     
  3108                           ;timer.c: 46:     INTCONbits.PEIE = 1;
  3109   002154  8CF2               	bsf	242,6,c	;volatile
  3110                           
  3111                           ;timer.c: 47:     INTCONbits.TMR0IE = 1;
  3112   002156  8AF2               	bsf	242,5,c	;volatile
  3113                           
  3114                           ;timer.c: 48:     INTCONbits.TMR0IF = 0;
  3115   002158  94F2               	bcf	242,2,c	;volatile
  3116                           
  3117                           ;timer.c: 50:     T0CONbits.T0CS = 0;
  3118   00215A  9AD5               	bcf	213,5,c	;volatile
  3119                           
  3120                           ;timer.c: 51:     T0CONbits.PSA = 0;
  3121   00215C  96D5               	bcf	213,3,c	;volatile
  3122   00215E                     
  3123                           ;timer.c: 52:     T0CONbits.T0PS = 0b101;
  3124   00215E  50D5               	movf	213,w,c	;volatile
  3125   002160  0BF8               	andlw	-8
  3126   002162  0905               	iorlw	5
  3127   002164  6ED5               	movwf	213,c	;volatile
  3128                           
  3129                           ;timer.c: 54:     TMR0 = 0;
  3130   002166  0E00               	movlw	0
  3131   002168  6ED7               	movwf	215,c	;volatile
  3132   00216A  0E00               	movlw	0
  3133   00216C  6ED6               	movwf	214,c	;volatile
  3134   00216E  0012               	return		;funcret
  3135   002170                     __end_of_config_timer0:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _SRAMInitHeap *****************
  3139 ;; Defined at:
  3140 ;;		line 259 in file "mem.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  count           2    2[COMRAM] unsigned int 
  3145 ;;  pHeap           2    0[COMRAM] PTR unsigned char 
  3146 ;;		 -> _uDynamicHeap(80), 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0
  3157 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3159 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3160 ;;Total ram usage:        4 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 8
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_os_init
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text15
  3171   001D6A                     __ptext15:
  3172                           	callstack 0
  3173   001D6A                     _SRAMInitHeap:
  3174                           	callstack 21
  3175   001D6A                     
  3176                           ;mem.c: 261:  unsigned char * pHeap;;mem.c: 262:       unsigned int count;;mem.c: 264:  
      +                          pHeap = _uDynamicHeap;
  3177   001D6A  0E01               	movlw	low __uDynamicHeap
  3178   001D6C  6E21               	movwf	SRAMInitHeap@pHeap^0,c
  3179   001D6E  0E01               	movlw	high __uDynamicHeap
  3180   001D70  6E22               	movwf	(SRAMInitHeap@pHeap+1)^0,c
  3181   001D72                     
  3182                           ;mem.c: 265:  count = 0x50 - 1;
  3183   001D72  0E00               	movlw	0
  3184   001D74  6E24               	movwf	(SRAMInitHeap@count+1)^0,c
  3185   001D76  0E4F               	movlw	79
  3186   001D78  6E23               	movwf	SRAMInitHeap@count^0,c
  3187   001D7A                     l1996:
  3188                           
  3189                           ;mem.c: 268:  {;mem.c: 269:   if (count > 0x7F)
  3190   001D7A  5024               	movf	(SRAMInitHeap@count+1)^0,w,c
  3191   001D7C  E109               	bnz	u910
  3192   001D7E  0E80               	movlw	128
  3193   001D80  5C23               	subwf	SRAMInitHeap@count^0,w,c
  3194   001D82  A0D8               	btfss	status,0,c
  3195   001D84  EFC6  F00E         	goto	u911
  3196   001D88  EFC8  F00E         	goto	u910
  3197   001D8C                     u911:
  3198   001D8C  EFDA  F00E         	goto	l2004
  3199   001D90                     u910:
  3200   001D90                     
  3201                           ;mem.c: 270:   {;mem.c: 271:    *pHeap = 0x7F;
  3202   001D90  C021  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  3203   001D94  C022  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  3204   001D98  0E7F               	movlw	127
  3205   001D9A  6EDF               	movwf	indf2,c
  3206   001D9C                     
  3207                           ;mem.c: 272:    pHeap += 0x7F;
  3208   001D9C  0E7F               	movlw	127
  3209   001D9E  2621               	addwf	SRAMInitHeap@pHeap^0,f,c
  3210   001DA0  0E00               	movlw	0
  3211   001DA2  2222               	addwfc	(SRAMInitHeap@pHeap+1)^0,f,c
  3212   001DA4                     
  3213                           ;mem.c: 273:    count = count - 0x7F;
  3214   001DA4  0E81               	movlw	129
  3215   001DA6  2423               	addwf	SRAMInitHeap@count^0,w,c
  3216   001DA8  6E23               	movwf	SRAMInitHeap@count^0,c
  3217   001DAA  0EFF               	movlw	255
  3218   001DAC  2024               	addwfc	(SRAMInitHeap@count+1)^0,w,c
  3219   001DAE  6E24               	movwf	(SRAMInitHeap@count+1)^0,c
  3220                           
  3221                           ;mem.c: 274:   }
  3222   001DB0  EFBD  F00E         	goto	l1996
  3223   001DB4                     l2004:
  3224                           
  3225                           ;mem.c: 276:   {;mem.c: 277:    *pHeap = (unsigned char)count;
  3226   001DB4  C021  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  3227   001DB8  C022  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  3228   001DBC  C023  FFDF         	movff	SRAMInitHeap@count,indf2
  3229   001DC0                     
  3230                           ;mem.c: 278:    *(pHeap + count) = 0;
  3231   001DC0  5023               	movf	SRAMInitHeap@count^0,w,c
  3232   001DC2  2421               	addwf	SRAMInitHeap@pHeap^0,w,c
  3233   001DC4  6ED9               	movwf	fsr2l,c
  3234   001DC6  5024               	movf	(SRAMInitHeap@count+1)^0,w,c
  3235   001DC8  2022               	addwfc	(SRAMInitHeap@pHeap+1)^0,w,c
  3236   001DCA  6EDA               	movwf	fsr2h,c
  3237   001DCC  6ADF               	clrf	indf2,c
  3238   001DCE  0012               	return		;funcret
  3239   001DD0                     __end_of_SRAMInitHeap:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _tarefa_acelerador *****************
  3243 ;; Defined at:
  3244 ;;		line 17 in file "user_app.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  raw             2   11[BANK1 ] unsigned short 
  3249 ;;  data            1   13[BANK1 ] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0
  3260 ;;      Locals:         0       0       3       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3262 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3263 ;;Total ram usage:        5 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 7
  3266 ;; This function calls:
  3267 ;;		_adc_read
  3268 ;;		_delay
  3269 ;;		_write_pipe
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text16
  3276   001F44                     __ptext16:
  3277                           	callstack 0
  3278   001F44                     _tarefa_acelerador:
  3279                           	callstack 18
  3280   001F44                     l270:
  3281   001F44                     
  3282                           ;user_app.c: 20:     {;user_app.c: 21:         uint16_t raw = adc_read();
  3283   001F44  EC6B  F010         	call	_adc_read	;wreg free
  3284   001F48  C038  F177         	movff	?_adc_read,tarefa_acelerador@raw
  3285   001F4C  C039  F178         	movff	?_adc_read+1,tarefa_acelerador@raw+1
  3286   001F50                     
  3287                           ;user_app.c: 22:         uint8_t data = (uint8_t)(raw >> 2);
  3288   001F50  C177  F175         	movff	tarefa_acelerador@raw,??_tarefa_acelerador
  3289   001F54  C178  F176         	movff	tarefa_acelerador@raw+1,??_tarefa_acelerador+1
  3290   001F58  0101               	movlb	1	; () banked
  3291   001F5A  90D8               	bcf	status,0,c
  3292   001F5C  3376               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3293   001F5E  3375               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3294   001F60  90D8               	bcf	status,0,c
  3295   001F62  3376               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3296   001F64  3375               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3297   001F66  5175               	movf	??_tarefa_acelerador& (0+255),w,b
  3298   001F68  6F79               	movwf	tarefa_acelerador@data& (0+255),b
  3299   001F6A                     
  3300                           ; BSR set to: 1
  3301                           ;user_app.c: 23:         write_pipe(&accel_pipe, data);
  3302   001F6A  0E51               	movlw	low _accel_pipe
  3303   001F6C  6E38               	movwf	write_pipe@p^0,c
  3304   001F6E  0E01               	movlw	high _accel_pipe
  3305   001F70  6E39               	movwf	(write_pipe@p+1)^0,c
  3306   001F72  C179  F03A         	movff	tarefa_acelerador@data,write_pipe@data
  3307   001F76  ECED  F00D         	call	_write_pipe	;wreg free
  3308   001F7A                     
  3309                           ;user_app.c: 24:         delay(10);
  3310   001F7A  0E00               	movlw	0
  3311   001F7C  0101               	movlb	1	; () banked
  3312   001F7E  6F97               	movwf	(delay@time+1)& (0+255),b
  3313   001F80  0E0A               	movlw	10
  3314   001F82  6F96               	movwf	delay@time& (0+255),b
  3315   001F84  ECB9  F008         	call	_delay	;wreg free
  3316   001F88  EFA2  F00F         	goto	l270
  3317   001F8C  0012               	return		;funcret
  3318   001F8E                     __end_of_tarefa_acelerador:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _write_pipe *****************
  3322 ;; Defined at:
  3323 ;;		line 13 in file "pipe.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  p               2   23[COMRAM] PTR struct pipe
  3326 ;;		 -> accel_pipe(20), 
  3327 ;;  data            1   25[COMRAM] unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3339 ;;      Params:         3       0       0       0       0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3341 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3342 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3343 ;;Total ram usage:        6 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 6
  3346 ;; This function calls:
  3347 ;;		___awmod
  3348 ;;		_sem_post
  3349 ;;		_sem_wait
  3350 ;; This function is called by:
  3351 ;;		_tarefa_acelerador
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text17
  3356   001BDA                     __ptext17:
  3357                           	callstack 0
  3358   001BDA                     _write_pipe:
  3359                           	callstack 18
  3360   001BDA                     
  3361                           ;pipe.c: 13: void write_pipe(pipe_t *p, uint8_t data);pipe.c: 14: {;pipe.c: 15:     (INT
      +                          CONbits.GIE = 0);
  3362   001BDA  9EF2               	bcf	242,7,c	;volatile
  3363   001BDC                     
  3364                           ;pipe.c: 16:     sem_wait(&p->pipe_sem_write);
  3365   001BDC  0E0C               	movlw	12
  3366   001BDE  2438               	addwf	write_pipe@p^0,w,c
  3367   001BE0  0101               	movlb	1	; () banked
  3368   001BE2  6F7A               	movwf	sem_wait@sem& (0+255),b
  3369   001BE4  0E00               	movlw	0
  3370   001BE6  2039               	addwfc	(write_pipe@p+1)^0,w,c
  3371   001BE8  6F7B               	movwf	(sem_wait@sem+1)& (0+255),b
  3372   001BEA  EC3B  F007         	call	_sem_wait	;wreg free
  3373   001BEE                     
  3374                           ;pipe.c: 17:     p->pipe_msg[p->pipe_pos_write] = data;
  3375   001BEE  EE20 F003          	lfsr	2,3
  3376   001BF2  5038               	movf	write_pipe@p^0,w,c
  3377   001BF4  26D9               	addwf	fsr2l,f,c
  3378   001BF6  5039               	movf	(write_pipe@p+1)^0,w,c
  3379   001BF8  22DA               	addwfc	fsr2h,f,c
  3380   001BFA  50DF               	movf	indf2,w,c
  3381   001BFC  6E3B               	movwf	??_write_pipe^0,c
  3382   001BFE  C038  FFD9         	movff	write_pipe@p,fsr2l
  3383   001C02  C039  FFDA         	movff	write_pipe@p+1,fsr2h
  3384   001C06  CFDE F03C          	movff	postinc2,??_write_pipe+1
  3385   001C0A  CFDD F03D          	movff	postdec2,??_write_pipe+2
  3386   001C0E  503B               	movf	??_write_pipe^0,w,c
  3387   001C10  243C               	addwf	(??_write_pipe+1)^0,w,c
  3388   001C12  6ED9               	movwf	fsr2l,c
  3389   001C14  0E00               	movlw	0
  3390   001C16  203D               	addwfc	(??_write_pipe+2)^0,w,c
  3391   001C18  6EDA               	movwf	fsr2h,c
  3392   001C1A  C03A  FFDF         	movff	write_pipe@data,indf2
  3393   001C1E                     
  3394                           ;pipe.c: 18:     p->pipe_pos_write = (p->pipe_pos_write + 1) % 3;
  3395   001C1E  EE20 F003          	lfsr	2,3
  3396   001C22  5038               	movf	write_pipe@p^0,w,c
  3397   001C24  26D9               	addwf	fsr2l,f,c
  3398   001C26  5039               	movf	(write_pipe@p+1)^0,w,c
  3399   001C28  22DA               	addwfc	fsr2h,f,c
  3400   001C2A  EE00 F003          	lfsr	0,3
  3401   001C2E  5038               	movf	write_pipe@p^0,w,c
  3402   001C30  26E9               	addwf	fsr0l,f,c
  3403   001C32  5039               	movf	(write_pipe@p+1)^0,w,c
  3404   001C34  22EA               	addwfc	fsr0h,f,c
  3405   001C36  50EF               	movf	indf0,w,c
  3406   001C38  6E3B               	movwf	??_write_pipe^0,c
  3407   001C3A  0E01               	movlw	1
  3408   001C3C  243B               	addwf	??_write_pipe^0,w,c
  3409   001C3E  0101               	movlb	1	; () banked
  3410   001C40  6F7A               	movwf	___awmod@dividend& (0+255),b
  3411   001C42  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  3412   001C44  0E00               	movlw	0
  3413   001C46  237B               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3414   001C48  0E00               	movlw	0
  3415   001C4A  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  3416   001C4C  0E03               	movlw	3
  3417   001C4E  6F7C               	movwf	___awmod@divisor& (0+255),b
  3418   001C50  ECA8  F00C         	call	___awmod	;wreg free
  3419   001C54  0101               	movlb	1	; () banked
  3420   001C56  517A               	movf	?___awmod& (0+255),w,b
  3421   001C58  6EDF               	movwf	indf2,c
  3422   001C5A                     
  3423                           ; BSR set to: 1
  3424                           ;pipe.c: 19:     sem_post(&p->pipe_sem_read);
  3425   001C5A  0E04               	movlw	4
  3426   001C5C  2438               	addwf	write_pipe@p^0,w,c
  3427   001C5E  6F7A               	movwf	sem_post@sem& (0+255),b
  3428   001C60  0E00               	movlw	0
  3429   001C62  2039               	addwfc	(write_pipe@p+1)^0,w,c
  3430   001C64  6F7B               	movwf	(sem_post@sem+1)& (0+255),b
  3431   001C66  EC51  F00D         	call	_sem_post	;wreg free
  3432   001C6A                     
  3433                           ;pipe.c: 20:     (INTCONbits.GIE = 1);
  3434   001C6A  8EF2               	bsf	242,7,c	;volatile
  3435   001C6C  0012               	return		;funcret
  3436   001C6E                     __end_of_write_pipe:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _sem_wait *****************
  3440 ;; Defined at:
  3441 ;;		line 18 in file "sync.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  sem             2   14[BANK1 ] PTR struct sem
  3444 ;;		 -> accel_pipe(20), 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         0       0       2       0       0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          0       0       7       0       0       0       0       0       0
  3459 ;;      Totals:         0       0       9       0       0       0       0       0       0
  3460 ;;Total ram usage:        9 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 5
  3463 ;; This function calls:
  3464 ;;		_scheduler
  3465 ;; This function is called by:
  3466 ;;		_write_pipe
  3467 ;;		_read_pipe
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text18
  3472   000E76                     __ptext18:
  3473                           	callstack 0
  3474   000E76                     _sem_wait:
  3475                           	callstack 18
  3476   000E76                     
  3477                           ;sync.c: 18: void sem_wait(sem_t *sem);sync.c: 19: {;sync.c: 20:     (INTCONbits.GIE = 0
      +                          );
  3478   000E76  9EF2               	bcf	242,7,c	;volatile
  3479   000E78                     
  3480                           ;sync.c: 21:     sem->s_value--;
  3481   000E78  C17A  FFD9         	movff	sem_wait@sem,fsr2l
  3482   000E7C  C17B  FFDA         	movff	sem_wait@sem+1,fsr2h
  3483   000E80  06DE               	decf	postinc2,f,c
  3484   000E82  0E00               	movlw	0
  3485   000E84  5ADD               	subwfb	postdec2,f,c
  3486                           
  3487                           ;sync.c: 22:     if (sem->s_value < 0)
  3488   000E86  C17A  FFD9         	movff	sem_wait@sem,fsr2l
  3489   000E8A  C17B  FFDA         	movff	sem_wait@sem+1,fsr2h
  3490   000E8E  0E01               	movlw	1
  3491   000E90  BEDB               	btfsc	plusw2,7,c
  3492   000E92  EF4F  F007         	goto	i1u228_20
  3493   000E96  EF4D  F007         	goto	i1u228_21
  3494   000E9A                     i1u228_21:
  3495   000E9A  EFB7  F008         	goto	i1l3252
  3496   000E9E                     i1u228_20:
  3497   000E9E                     
  3498                           ;sync.c: 23:     {;sync.c: 25:         sem->s_queue[sem->s_size] = r_queue.task_running;
  3499   000E9E  EE24  F083         	lfsr	2,_r_queue+535
  3500   000EA2  0101               	movlb	1	; () banked
  3501   000EA4  EE00 F006          	lfsr	0,6
  3502   000EA8  517A               	movf	sem_wait@sem& (0+255),w,b
  3503   000EAA  26E9               	addwf	fsr0l,f,c
  3504   000EAC  517B               	movf	(sem_wait@sem+1)& (0+255),w,b
  3505   000EAE  22EA               	addwfc	fsr0h,f,c
  3506   000EB0  50EF               	movf	indf0,w,c
  3507   000EB2  6F7C               	movwf	??_sem_wait& (0+255),b
  3508   000EB4  517C               	movf	??_sem_wait& (0+255),w,b
  3509   000EB6  257A               	addwf	sem_wait@sem& (0+255),w,b
  3510   000EB8  6F7D               	movwf	(??_sem_wait+1)& (0+255),b
  3511   000EBA  0E00               	movlw	0
  3512   000EBC  217B               	addwfc	(sem_wait@sem+1)& (0+255),w,b
  3513   000EBE  6F7E               	movwf	(??_sem_wait+2)& (0+255),b
  3514   000EC0  0E02               	movlw	2
  3515   000EC2  257D               	addwf	(??_sem_wait+1)& (0+255),w,b
  3516   000EC4  6EE9               	movwf	fsr0l,c
  3517   000EC6  0E00               	movlw	0
  3518   000EC8  217E               	addwfc	(??_sem_wait+2)& (0+255),w,b
  3519   000ECA  6EEA               	movwf	fsr0h,c
  3520   000ECC  CFDF FFEF          	movff	indf2,indf0
  3521                           
  3522                           ;sync.c: 26:         sem->s_size = (sem->s_size + 1) % 4;
  3523   000ED0  EE20 F006          	lfsr	2,6
  3524   000ED4  517A               	movf	sem_wait@sem& (0+255),w,b
  3525   000ED6  26D9               	addwf	fsr2l,f,c
  3526   000ED8  517B               	movf	(sem_wait@sem+1)& (0+255),w,b
  3527   000EDA  22DA               	addwfc	fsr2h,f,c
  3528   000EDC  EE00 F006          	lfsr	0,6
  3529   000EE0  517A               	movf	sem_wait@sem& (0+255),w,b
  3530   000EE2  26E9               	addwf	fsr0l,f,c
  3531   000EE4  517B               	movf	(sem_wait@sem+1)& (0+255),w,b
  3532   000EE6  22EA               	addwfc	fsr0h,f,c
  3533   000EE8  50EF               	movf	indf0,w,c
  3534   000EEA  6F7C               	movwf	??_sem_wait& (0+255),b
  3535   000EEC  297C               	incf	??_sem_wait& (0+255),w,b
  3536   000EEE  0B03               	andlw	3
  3537   000EF0  6EDF               	movwf	indf2,c
  3538   000EF2                     
  3539                           ; BSR set to: 1
  3540   000EF2  C483  F17C         	movff	_r_queue+535,??_sem_wait
  3541   000EF6  517C               	movf	??_sem_wait& (0+255),w,b
  3542   000EF8  0D6B               	mullw	107
  3543   000EFA  0E6C               	movlw	low _r_queue
  3544   000EFC  24F3               	addwf	243,w,c
  3545   000EFE  6F7D               	movwf	(??_sem_wait+1)& (0+255),b
  3546   000F00  0E02               	movlw	high _r_queue
  3547   000F02  20F4               	addwfc	prodh,w,c
  3548   000F04  6F7E               	movwf	(??_sem_wait+2)& (0+255),b
  3549   000F06  C17D  F485         	movff	??_sem_wait+1,_r_queue+537
  3550   000F0A  C17E  F486         	movff	??_sem_wait+2,_r_queue+538
  3551   000F0E                     
  3552                           ; BSR set to: 1
  3553   000F0E  EE24  F085         	lfsr	2,_r_queue+537
  3554   000F12  EE00 F002          	lfsr	0,2
  3555   000F16  50DE               	movf	postinc2,w,c
  3556   000F18  26E9               	addwf	fsr0l,f,c
  3557   000F1A  50DD               	movf	postdec2,w,c
  3558   000F1C  22EA               	addwfc	fsr0h,f,c
  3559   000F1E  04EE               	decf	postinc0,w,c
  3560   000F20  A4D8               	btfss	status,2,c
  3561   000F22  EF95  F007         	goto	i1u229_21
  3562   000F26  EF97  F007         	goto	i1u229_20
  3563   000F2A                     i1u229_21:
  3564   000F2A  EF05  F008         	goto	i1l3234
  3565   000F2E                     i1u229_20:
  3566   000F2E                     
  3567                           ; BSR set to: 1
  3568   000F2E  EE24  F085         	lfsr	2,_r_queue+537
  3569   000F32  EE00 F009          	lfsr	0,9
  3570   000F36  50DE               	movf	postinc2,w,c
  3571   000F38  26E9               	addwf	fsr0l,f,c
  3572   000F3A  50DD               	movf	postdec2,w,c
  3573   000F3C  22EA               	addwfc	fsr0h,f,c
  3574   000F3E  CFE0 FFEF          	movff	bsr,indf0	;volatile
  3575   000F42  EE24  F085         	lfsr	2,_r_queue+537
  3576   000F46  EE00 F008          	lfsr	0,8
  3577   000F4A  50DE               	movf	postinc2,w,c
  3578   000F4C  26E9               	addwf	fsr0l,f,c
  3579   000F4E  50DD               	movf	postdec2,w,c
  3580   000F50  22EA               	addwfc	fsr0h,f,c
  3581   000F52  CFD8 FFEF          	movff	status,indf0	;volatile
  3582   000F56  EE24  F085         	lfsr	2,_r_queue+537
  3583   000F5A  EE00 F007          	lfsr	0,7
  3584   000F5E  50DE               	movf	postinc2,w,c
  3585   000F60  26E9               	addwf	fsr0l,f,c
  3586   000F62  50DD               	movf	postdec2,w,c
  3587   000F64  22EA               	addwfc	fsr0h,f,c
  3588   000F66  CFE8 FFEF          	movff	wreg,indf0	;volatile
  3589   000F6A  EE24  F085         	lfsr	2,_r_queue+537
  3590   000F6E  EE00 F06A          	lfsr	0,106
  3591   000F72  50DE               	movf	postinc2,w,c
  3592   000F74  26E9               	addwf	fsr0l,f,c
  3593   000F76  50DD               	movf	postdec2,w,c
  3594   000F78  22EA               	addwfc	fsr0h,f,c
  3595   000F7A  6AEF               	clrf	indf0,c
  3596   000F7C  EE24  F085         	lfsr	2,_r_queue+537
  3597   000F80  EE00 F002          	lfsr	0,2
  3598   000F84  50DE               	movf	postinc2,w,c
  3599   000F86  26E9               	addwf	fsr0l,f,c
  3600   000F88  50DD               	movf	postdec2,w,c
  3601   000F8A  22EA               	addwfc	fsr0h,f,c
  3602   000F8C  0E03               	movlw	3
  3603   000F8E  6EEF               	movwf	indf0,c
  3604   000F90  EFFD  F007         	goto	i1l3232
  3605   000F94                     i1l3228:
  3606   000F94  EE24  F085         	lfsr	2,_r_queue+537
  3607   000F98  EE00 F06A          	lfsr	0,106
  3608   000F9C  50DE               	movf	postinc2,w,c
  3609   000F9E  26E9               	addwf	fsr0l,f,c
  3610   000FA0  50DD               	movf	postdec2,w,c
  3611   000FA2  22EA               	addwfc	fsr0h,f,c
  3612   000FA4  50EF               	movf	indf0,w,c
  3613   000FA6  0101               	movlb	1	; () banked
  3614   000FA8  6F7C               	movwf	??_sem_wait& (0+255),b
  3615   000FAA  517C               	movf	??_sem_wait& (0+255),w,b
  3616   000FAC  0D03               	mullw	3
  3617   000FAE  CFF3 F17D          	movff	prodl,??_sem_wait+1
  3618   000FB2  CFF4 F17E          	movff	prodh,??_sem_wait+2
  3619   000FB6  EE24  F085         	lfsr	2,_r_queue+537
  3620   000FBA  CFDE F17F          	movff	postinc2,??_sem_wait+3
  3621   000FBE  CFDD F180          	movff	postdec2,??_sem_wait+4
  3622   000FC2  517D               	movf	(??_sem_wait+1)& (0+255),w,b
  3623   000FC4  257F               	addwf	(??_sem_wait+3)& (0+255),w,b
  3624   000FC6  6F81               	movwf	(??_sem_wait+5)& (0+255),b
  3625   000FC8  517E               	movf	(??_sem_wait+2)& (0+255),w,b
  3626   000FCA  2180               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3627   000FCC  6F82               	movwf	(??_sem_wait+6)& (0+255),b
  3628   000FCE  0E0A               	movlw	10
  3629   000FD0  2581               	addwf	(??_sem_wait+5)& (0+255),w,b
  3630   000FD2  6ED9               	movwf	fsr2l,c
  3631   000FD4  0E00               	movlw	0
  3632   000FD6  2182               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3633   000FD8  6EDA               	movwf	fsr2h,c
  3634   000FDA  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3635   000FDE  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3636   000FE2  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3637   000FE6                     
  3638                           ; BSR set to: 1
  3639   000FE6  EE24  F085         	lfsr	2,_r_queue+537
  3640   000FEA  EE00 F06A          	lfsr	0,106
  3641   000FEE  50DE               	movf	postinc2,w,c
  3642   000FF0  26E9               	addwf	fsr0l,f,c
  3643   000FF2  50DD               	movf	postdec2,w,c
  3644   000FF4  22EA               	addwfc	fsr0h,f,c
  3645   000FF6  2AEF               	incf	indf0,f,c
  3646   000FF8  0006               	pop		;# 
  3647   000FFA                     i1l3232:
  3648   000FFA  50FC               	movf	252,w,c	;volatile
  3649   000FFC  A4D8               	btfss	status,2,c
  3650   000FFE  EF03  F008         	goto	i1u230_21
  3651   001002  EF05  F008         	goto	i1u230_20
  3652   001006                     i1u230_21:
  3653   001006  EFCA  F007         	goto	i1l3228
  3654   00100A                     i1u230_20:
  3655   00100A                     i1l3234:
  3656                           
  3657                           ;sync.c: 28:         scheduler();
  3658   00100A  ECDA  F010         	call	_scheduler	;wreg free
  3659   00100E  C483  F17C         	movff	_r_queue+535,??_sem_wait
  3660   001012  0101               	movlb	1	; () banked
  3661   001014  517C               	movf	??_sem_wait& (0+255),w,b
  3662   001016  0D6B               	mullw	107
  3663   001018  0E6C               	movlw	low _r_queue
  3664   00101A  24F3               	addwf	243,w,c
  3665   00101C  6F7D               	movwf	(??_sem_wait+1)& (0+255),b
  3666   00101E  0E02               	movlw	high _r_queue
  3667   001020  20F4               	addwfc	prodh,w,c
  3668   001022  6F7E               	movwf	(??_sem_wait+2)& (0+255),b
  3669   001024  C17D  F485         	movff	??_sem_wait+1,_r_queue+537
  3670   001028  C17E  F486         	movff	??_sem_wait+2,_r_queue+538
  3671   00102C                     
  3672                           ; BSR set to: 1
  3673   00102C  EE24  F085         	lfsr	2,_r_queue+537
  3674   001030  EE00 F002          	lfsr	0,2
  3675   001034  50DE               	movf	postinc2,w,c
  3676   001036  26E9               	addwf	fsr0l,f,c
  3677   001038  50DD               	movf	postdec2,w,c
  3678   00103A  22EA               	addwfc	fsr0h,f,c
  3679   00103C  50EF               	movf	indf0,w,c
  3680   00103E  A4D8               	btfss	status,2,c
  3681   001040  EF24  F008         	goto	i1u231_21
  3682   001044  EF26  F008         	goto	i1u231_20
  3683   001048                     i1u231_21:
  3684   001048  EFB7  F008         	goto	i1l3252
  3685   00104C                     i1u231_20:
  3686   00104C                     
  3687                           ; BSR set to: 1
  3688   00104C  6AFC               	clrf	252,c	;volatile
  3689   00104E                     
  3690                           ; BSR set to: 1
  3691   00104E  EE24  F085         	lfsr	2,_r_queue+537
  3692   001052  EE00 F06A          	lfsr	0,106
  3693   001056  50DE               	movf	postinc2,w,c
  3694   001058  26E9               	addwf	fsr0l,f,c
  3695   00105A  50DD               	movf	postdec2,w,c
  3696   00105C  22EA               	addwfc	fsr0h,f,c
  3697   00105E  50EF               	movf	indf0,w,c
  3698   001060  B4D8               	btfsc	status,2,c
  3699   001062  EF35  F008         	goto	i1u232_21
  3700   001066  EF37  F008         	goto	i1u232_20
  3701   00106A                     i1u232_21:
  3702   00106A  EF9B  F008         	goto	i1l72
  3703   00106E                     i1u232_20:
  3704   00106E                     
  3705                           ; BSR set to: 1
  3706   00106E  EE24  F085         	lfsr	2,_r_queue+537
  3707   001072  EE00 F009          	lfsr	0,9
  3708   001076  50DE               	movf	postinc2,w,c
  3709   001078  26E9               	addwf	fsr0l,f,c
  3710   00107A  50DD               	movf	postdec2,w,c
  3711   00107C  22EA               	addwfc	fsr0h,f,c
  3712   00107E  50EF               	movf	indf0,w,c
  3713   001080  6EE0               	movwf	224,c	;volatile
  3714   001082  EE24  F085         	lfsr	2,_r_queue+537
  3715   001086  EE00 F008          	lfsr	0,8
  3716   00108A  50DE               	movf	postinc2,w,c
  3717   00108C  26E9               	addwf	fsr0l,f,c
  3718   00108E  50DD               	movf	postdec2,w,c
  3719   001090  22EA               	addwfc	fsr0h,f,c
  3720   001092  50EF               	movf	indf0,w,c
  3721   001094  6ED8               	movwf	216,c	;volatile
  3722   001096  EE24  F085         	lfsr	2,_r_queue+537
  3723   00109A  EE00 F007          	lfsr	0,7
  3724   00109E  50DE               	movf	postinc2,w,c
  3725   0010A0  26E9               	addwf	fsr0l,f,c
  3726   0010A2  50DD               	movf	postdec2,w,c
  3727   0010A4  22EA               	addwfc	fsr0h,f,c
  3728   0010A6  50EF               	movf	indf0,w,c
  3729   0010A8  6F7C               	movwf	??_sem_wait& (0+255),b
  3730   0010AA  517C               	movf	??_sem_wait& (0+255),w,b
  3731   0010AC                     i1l73:
  3732                           
  3733                           ; BSR set to: 1
  3734   0010AC  0005               	push		;# 
  3735   0010AE  EE24  F085         	lfsr	2,_r_queue+537
  3736   0010B2  EE00 F06A          	lfsr	0,106
  3737   0010B6  50DE               	movf	postinc2,w,c
  3738   0010B8  26E9               	addwf	fsr0l,f,c
  3739   0010BA  50DD               	movf	postdec2,w,c
  3740   0010BC  22EA               	addwfc	fsr0h,f,c
  3741   0010BE  06EF               	decf	indf0,f,c
  3742   0010C0  EE24  F085         	lfsr	2,_r_queue+537
  3743   0010C4  EE00 F06A          	lfsr	0,106
  3744   0010C8  50DE               	movf	postinc2,w,c
  3745   0010CA  26E9               	addwf	fsr0l,f,c
  3746   0010CC  50DD               	movf	postdec2,w,c
  3747   0010CE  22EA               	addwfc	fsr0h,f,c
  3748   0010D0  50EF               	movf	indf0,w,c
  3749   0010D2  0101               	movlb	1	; () banked
  3750   0010D4  6F7C               	movwf	??_sem_wait& (0+255),b
  3751   0010D6  517C               	movf	??_sem_wait& (0+255),w,b
  3752   0010D8  0D03               	mullw	3
  3753   0010DA  CFF3 F17D          	movff	prodl,??_sem_wait+1
  3754   0010DE  CFF4 F17E          	movff	prodh,??_sem_wait+2
  3755   0010E2  EE24  F085         	lfsr	2,_r_queue+537
  3756   0010E6  CFDE F17F          	movff	postinc2,??_sem_wait+3
  3757   0010EA  CFDD F180          	movff	postdec2,??_sem_wait+4
  3758   0010EE  517D               	movf	(??_sem_wait+1)& (0+255),w,b
  3759   0010F0  257F               	addwf	(??_sem_wait+3)& (0+255),w,b
  3760   0010F2  6F81               	movwf	(??_sem_wait+5)& (0+255),b
  3761   0010F4  517E               	movf	(??_sem_wait+2)& (0+255),w,b
  3762   0010F6  2180               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3763   0010F8  6F82               	movwf	(??_sem_wait+6)& (0+255),b
  3764   0010FA  0E0A               	movlw	10
  3765   0010FC  2581               	addwf	(??_sem_wait+5)& (0+255),w,b
  3766   0010FE  6ED9               	movwf	fsr2l,c
  3767   001100  0E00               	movlw	0
  3768   001102  2182               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3769   001104  6EDA               	movwf	fsr2h,c
  3770   001106  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3771   00110A  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3772   00110E  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3773   001112                     
  3774                           ; BSR set to: 1
  3775   001112  EE24  F085         	lfsr	2,_r_queue+537
  3776   001116  EE00 F06A          	lfsr	0,106
  3777   00111A  50DE               	movf	postinc2,w,c
  3778   00111C  26E9               	addwf	fsr0l,f,c
  3779   00111E  50DD               	movf	postdec2,w,c
  3780   001120  22EA               	addwfc	fsr0h,f,c
  3781   001122  50EF               	movf	indf0,w,c
  3782   001124  A4D8               	btfss	status,2,c
  3783   001126  EF97  F008         	goto	i1u233_21
  3784   00112A  EF99  F008         	goto	i1u233_20
  3785   00112E                     i1u233_21:
  3786   00112E  EF56  F008         	goto	i1l73
  3787   001132                     i1u233_20:
  3788   001132  EFAD  F008         	goto	i1l75
  3789   001136                     i1l72:
  3790                           
  3791                           ; BSR set to: 1
  3792   001136  0005               	push		;# 
  3793   001138  EE24  F085         	lfsr	2,_r_queue+537
  3794   00113C  EE00 F003          	lfsr	0,3
  3795   001140  50DE               	movf	postinc2,w,c
  3796   001142  26E9               	addwf	fsr0l,f,c
  3797   001144  50DD               	movf	postdec2,w,c
  3798   001146  22EA               	addwfc	fsr0h,f,c
  3799   001148  CFEE F17C          	movff	postinc0,??_sem_wait
  3800   00114C  CFED F17D          	movff	postdec0,??_sem_wait+1
  3801   001150  C17C  FFFD         	movff	??_sem_wait,tosl	;volatile
  3802   001154  C17D  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  3803   001158  6AFF               	clrf	255,c	;volatile
  3804   00115A                     i1l75:
  3805   00115A  EE24  F085         	lfsr	2,_r_queue+537
  3806   00115E  EE00 F002          	lfsr	0,2
  3807   001162  50DE               	movf	postinc2,w,c
  3808   001164  26E9               	addwf	fsr0l,f,c
  3809   001166  50DD               	movf	postdec2,w,c
  3810   001168  22EA               	addwfc	fsr0h,f,c
  3811   00116A  0E01               	movlw	1
  3812   00116C  6EEF               	movwf	indf0,c
  3813   00116E                     i1l3252:
  3814                           
  3815                           ;sync.c: 31:     (INTCONbits.GIE = 1);
  3816   00116E  8EF2               	bsf	242,7,c	;volatile
  3817   001170  0012               	return		;funcret
  3818   001172                     __end_of_sem_wait:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _sem_post *****************
  3822 ;; Defined at:
  3823 ;;		line 34 in file "sync.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  sem             2   14[BANK1 ] PTR struct sem
  3826 ;;		 -> accel_pipe(20), 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3838 ;;      Params:         0       0       2       0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3840 ;;      Temps:          0       0       4       0       0       0       0       0       0
  3841 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3842 ;;Total ram usage:        6 bytes
  3843 ;; Hardware stack levels used: 1
  3844 ;; Hardware stack levels required when called: 3
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_write_pipe
  3849 ;;		_read_pipe
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text19
  3854   001AA2                     __ptext19:
  3855                           	callstack 0
  3856   001AA2                     _sem_post:
  3857                           	callstack 20
  3858   001AA2                     
  3859                           ;sync.c: 34: void sem_post(sem_t *sem);sync.c: 35: {;sync.c: 36:     (INTCONbits.GIE = 0
      +                          );
  3860   001AA2  9EF2               	bcf	242,7,c	;volatile
  3861   001AA4                     
  3862                           ;sync.c: 37:     sem->s_value++;
  3863   001AA4  C17A  FFD9         	movff	sem_post@sem,fsr2l
  3864   001AA8  C17B  FFDA         	movff	sem_post@sem+1,fsr2h
  3865   001AAC  2ADE               	incf	postinc2,f,c
  3866   001AAE  0E00               	movlw	0
  3867   001AB0  22DD               	addwfc	postdec2,f,c
  3868                           
  3869                           ;sync.c: 38:     if (sem->s_value <= 0)
  3870   001AB2  C17A  FFD9         	movff	sem_post@sem,fsr2l
  3871   001AB6  C17B  FFDA         	movff	sem_post@sem+1,fsr2h
  3872   001ABA  0E01               	movlw	1
  3873   001ABC  BEDB               	btfsc	plusw2,7,c
  3874   001ABE  EF6C  F00D         	goto	i1u234_20
  3875   001AC2  0E01               	movlw	1
  3876   001AC4  50DB               	movf	plusw2,w,c
  3877   001AC6  E106               	bnz	i1u234_21
  3878   001AC8  04DE               	decf	postinc2,w,c
  3879   001ACA  B0D8               	btfsc	status,0,c
  3880   001ACC  EF6A  F00D         	goto	i1u234_21
  3881   001AD0  EF6C  F00D         	goto	i1u234_20
  3882   001AD4                     i1u234_21:
  3883   001AD4  EF9D  F00D         	goto	i1l3262
  3884   001AD8                     i1u234_20:
  3885   001AD8                     
  3886                           ;sync.c: 39:     {;sync.c: 41:         r_queue.ready_queue[sem->s_queue[sem->s_pos_out]]
      +                          .task_state = READY;
  3887   001AD8  0101               	movlb	1	; () banked
  3888   001ADA  EE20 F007          	lfsr	2,7
  3889   001ADE  517A               	movf	sem_post@sem& (0+255),w,b
  3890   001AE0  26D9               	addwf	fsr2l,f,c
  3891   001AE2  517B               	movf	(sem_post@sem+1)& (0+255),w,b
  3892   001AE4  22DA               	addwfc	fsr2h,f,c
  3893   001AE6  50DF               	movf	indf2,w,c
  3894   001AE8  6F7C               	movwf	??_sem_post& (0+255),b
  3895   001AEA  517C               	movf	??_sem_post& (0+255),w,b
  3896   001AEC  257A               	addwf	sem_post@sem& (0+255),w,b
  3897   001AEE  6F7D               	movwf	(??_sem_post+1)& (0+255),b
  3898   001AF0  0E00               	movlw	0
  3899   001AF2  217B               	addwfc	(sem_post@sem+1)& (0+255),w,b
  3900   001AF4  6F7E               	movwf	(??_sem_post+2)& (0+255),b
  3901   001AF6  0E02               	movlw	2
  3902   001AF8  257D               	addwf	(??_sem_post+1)& (0+255),w,b
  3903   001AFA  6ED9               	movwf	fsr2l,c
  3904   001AFC  0E00               	movlw	0
  3905   001AFE  217E               	addwfc	(??_sem_post+2)& (0+255),w,b
  3906   001B00  6EDA               	movwf	fsr2h,c
  3907   001B02  50DF               	movf	indf2,w,c
  3908   001B04  6F7F               	movwf	(??_sem_post+3)& (0+255),b
  3909   001B06  517F               	movf	(??_sem_post+3)& (0+255),w,b
  3910   001B08  0D6B               	mullw	107
  3911   001B0A  0E6E               	movlw	low (_r_queue+2)
  3912   001B0C  24F3               	addwf	243,w,c
  3913   001B0E  6ED9               	movwf	fsr2l,c
  3914   001B10  0E02               	movlw	high (_r_queue+2)
  3915   001B12  20F4               	addwfc	prodh,w,c
  3916   001B14  6EDA               	movwf	fsr2h,c
  3917   001B16  6ADF               	clrf	indf2,c
  3918   001B18                     
  3919                           ; BSR set to: 1
  3920                           ;sync.c: 42:         sem->s_pos_out = (sem->s_pos_out + 1) % 4;
  3921   001B18  EE20 F007          	lfsr	2,7
  3922   001B1C  517A               	movf	sem_post@sem& (0+255),w,b
  3923   001B1E  26D9               	addwf	fsr2l,f,c
  3924   001B20  517B               	movf	(sem_post@sem+1)& (0+255),w,b
  3925   001B22  22DA               	addwfc	fsr2h,f,c
  3926   001B24  EE00 F007          	lfsr	0,7
  3927   001B28  517A               	movf	sem_post@sem& (0+255),w,b
  3928   001B2A  26E9               	addwf	fsr0l,f,c
  3929   001B2C  517B               	movf	(sem_post@sem+1)& (0+255),w,b
  3930   001B2E  22EA               	addwfc	fsr0h,f,c
  3931   001B30  50EF               	movf	indf0,w,c
  3932   001B32  6F7C               	movwf	??_sem_post& (0+255),b
  3933   001B34  297C               	incf	??_sem_post& (0+255),w,b
  3934   001B36  0B03               	andlw	3
  3935   001B38  6EDF               	movwf	indf2,c
  3936   001B3A                     i1l3262:
  3937                           
  3938                           ;sync.c: 44:     (INTCONbits.GIE = 1);
  3939   001B3A  8EF2               	bsf	242,7,c	;volatile
  3940   001B3C  0012               	return		;funcret
  3941   001B3E                     __end_of_sem_post:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function ___awmod *****************
  3945 ;; Defined at:
  3946 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  dividend        2   14[BANK1 ] int 
  3949 ;;  divisor         2   16[BANK1 ] int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  sign            1   19[BANK1 ] unsigned char 
  3952 ;;  counter         1   18[BANK1 ] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2   14[BANK1 ] int 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3962 ;;      Params:         0       0       4       0       0       0       0       0       0
  3963 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3965 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3966 ;;Total ram usage:        6 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 3
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_write_pipe
  3973 ;;		_read_pipe
  3974 ;;		_tarefa_controle_central
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text20
  3979   001950                     __ptext20:
  3980                           	callstack 0
  3981   001950                     ___awmod:
  3982                           	callstack 20
  3983   001950  0101               	movlb	1	; () banked
  3984   001952  6B7F               	clrf	___awmod@sign& (0+255),b
  3985   001954                     
  3986                           ; BSR set to: 1
  3987   001954  BF7B               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3988   001956  EFB1  F00C         	goto	i1u235_20
  3989   00195A  EFAF  F00C         	goto	i1u235_21
  3990   00195E                     i1u235_21:
  3991   00195E  EFB7  F00C         	goto	i1l3272
  3992   001962                     i1u235_20:
  3993   001962                     
  3994                           ; BSR set to: 1
  3995   001962  6D7A               	negf	___awmod@dividend& (0+255),b
  3996   001964  1F7B               	comf	(___awmod@dividend+1)& (0+255),f,b
  3997   001966  B0D8               	btfsc	status,0,c
  3998   001968  2B7B               	incf	(___awmod@dividend+1)& (0+255),f,b
  3999   00196A                     
  4000                           ; BSR set to: 1
  4001   00196A  0E01               	movlw	1
  4002   00196C  6F7F               	movwf	___awmod@sign& (0+255),b
  4003   00196E                     i1l3272:
  4004                           
  4005                           ; BSR set to: 1
  4006   00196E  BF7D               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4007   001970  EFBE  F00C         	goto	i1u236_20
  4008   001974  EFBC  F00C         	goto	i1u236_21
  4009   001978                     i1u236_21:
  4010   001978  EFC2  F00C         	goto	i1l3276
  4011   00197C                     i1u236_20:
  4012   00197C                     
  4013                           ; BSR set to: 1
  4014   00197C  6D7C               	negf	___awmod@divisor& (0+255),b
  4015   00197E  1F7D               	comf	(___awmod@divisor+1)& (0+255),f,b
  4016   001980  B0D8               	btfsc	status,0,c
  4017   001982  2B7D               	incf	(___awmod@divisor+1)& (0+255),f,b
  4018   001984                     i1l3276:
  4019                           
  4020                           ; BSR set to: 1
  4021   001984  517C               	movf	___awmod@divisor& (0+255),w,b
  4022   001986  117D               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4023   001988  B4D8               	btfsc	status,2,c
  4024   00198A  EFC9  F00C         	goto	i1u237_21
  4025   00198E  EFCB  F00C         	goto	i1u237_20
  4026   001992                     i1u237_21:
  4027   001992  EFEF  F00C         	goto	i1l3292
  4028   001996                     i1u237_20:
  4029   001996                     
  4030                           ; BSR set to: 1
  4031   001996  0E01               	movlw	1
  4032   001998  6F7E               	movwf	___awmod@counter& (0+255),b
  4033   00199A  EFD3  F00C         	goto	i1l3282
  4034   00199E                     i1l3280:
  4035                           
  4036                           ; BSR set to: 1
  4037   00199E  90D8               	bcf	status,0,c
  4038   0019A0  377C               	rlcf	___awmod@divisor& (0+255),f,b
  4039   0019A2  377D               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4040   0019A4  2B7E               	incf	___awmod@counter& (0+255),f,b
  4041   0019A6                     i1l3282:
  4042                           
  4043                           ; BSR set to: 1
  4044   0019A6  AF7D               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4045   0019A8  EFD8  F00C         	goto	i1u238_21
  4046   0019AC  EFDA  F00C         	goto	i1u238_20
  4047   0019B0                     i1u238_21:
  4048   0019B0  EFCF  F00C         	goto	i1l3280
  4049   0019B4                     i1u238_20:
  4050   0019B4                     i1l3284:
  4051                           
  4052                           ; BSR set to: 1
  4053   0019B4  517C               	movf	___awmod@divisor& (0+255),w,b
  4054   0019B6  5D7A               	subwf	___awmod@dividend& (0+255),w,b
  4055   0019B8  517D               	movf	(___awmod@divisor+1)& (0+255),w,b
  4056   0019BA  597B               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4057   0019BC  A0D8               	btfss	status,0,c
  4058   0019BE  EFE3  F00C         	goto	i1u239_21
  4059   0019C2  EFE5  F00C         	goto	i1u239_20
  4060   0019C6                     i1u239_21:
  4061   0019C6  EFE9  F00C         	goto	i1l3288
  4062   0019CA                     i1u239_20:
  4063   0019CA                     
  4064                           ; BSR set to: 1
  4065   0019CA  517C               	movf	___awmod@divisor& (0+255),w,b
  4066   0019CC  5F7A               	subwf	___awmod@dividend& (0+255),f,b
  4067   0019CE  517D               	movf	(___awmod@divisor+1)& (0+255),w,b
  4068   0019D0  5B7B               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4069   0019D2                     i1l3288:
  4070                           
  4071                           ; BSR set to: 1
  4072   0019D2  90D8               	bcf	status,0,c
  4073   0019D4  337D               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4074   0019D6  337C               	rrcf	___awmod@divisor& (0+255),f,b
  4075   0019D8                     
  4076                           ; BSR set to: 1
  4077   0019D8  2F7E               	decfsz	___awmod@counter& (0+255),f,b
  4078   0019DA  EFDA  F00C         	goto	i1l3284
  4079   0019DE                     i1l3292:
  4080                           
  4081                           ; BSR set to: 1
  4082   0019DE  517F               	movf	___awmod@sign& (0+255),w,b
  4083   0019E0  B4D8               	btfsc	status,2,c
  4084   0019E2  EFF5  F00C         	goto	i1u240_21
  4085   0019E6  EFF7  F00C         	goto	i1u240_20
  4086   0019EA                     i1u240_21:
  4087   0019EA  EFFB  F00C         	goto	i1l3296
  4088   0019EE                     i1u240_20:
  4089   0019EE                     
  4090                           ; BSR set to: 1
  4091   0019EE  6D7A               	negf	___awmod@dividend& (0+255),b
  4092   0019F0  1F7B               	comf	(___awmod@dividend+1)& (0+255),f,b
  4093   0019F2  B0D8               	btfsc	status,0,c
  4094   0019F4  2B7B               	incf	(___awmod@dividend+1)& (0+255),f,b
  4095   0019F6                     i1l3296:
  4096                           
  4097                           ; BSR set to: 1
  4098   0019F6  C17A  F17A         	movff	___awmod@dividend,?___awmod
  4099   0019FA  C17B  F17B         	movff	___awmod@dividend+1,?___awmod+1
  4100   0019FE                     
  4101                           ; BSR set to: 1
  4102   0019FE  0012               	return		;funcret
  4103   001A00                     __end_of___awmod:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _adc_read *****************
  4107 ;; Defined at:
  4108 ;;		line 17 in file "io.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  2   23[COMRAM] unsigned short 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4122 ;;      Params:         2       0       0       0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4124 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4125 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4126 ;;Total ram usage:        4 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 6
  4129 ;; This function calls:
  4130 ;;		_delay
  4131 ;; This function is called by:
  4132 ;;		_tarefa_acelerador
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text21
  4137   0020D6                     __ptext21:
  4138                           	callstack 0
  4139   0020D6                     _adc_read:
  4140                           	callstack 18
  4141   0020D6                     
  4142                           ;io.c: 19:     delay(5);
  4143   0020D6  0E00               	movlw	0
  4144   0020D8  0101               	movlb	1	; () banked
  4145   0020DA  6F97               	movwf	(delay@time+1)& (0+255),b
  4146   0020DC  0E05               	movlw	5
  4147   0020DE  6F96               	movwf	delay@time& (0+255),b
  4148   0020E0  ECB9  F008         	call	_delay	;wreg free
  4149   0020E4                     
  4150                           ;io.c: 20:     ADCON0bits.GO = 1;
  4151   0020E4  82C2               	bsf	194,1,c	;volatile
  4152   0020E6                     i1l210:
  4153   0020E6  B2C2               	btfsc	194,1,c	;volatile
  4154   0020E8  EF78  F010         	goto	i1u241_21
  4155   0020EC  EF7A  F010         	goto	i1u241_20
  4156   0020F0                     i1u241_21:
  4157   0020F0  EF73  F010         	goto	i1l210
  4158   0020F4                     i1u241_20:
  4159   0020F4                     
  4160                           ;io.c: 22:     return ((uint16_t)ADRESH << 8) | ADRESL;
  4161   0020F4  50C4               	movf	196,w,c	;volatile
  4162   0020F6  6E3A               	movwf	??_adc_read^0,c
  4163   0020F8  50C3               	movf	195,w,c	;volatile
  4164   0020FA  6E38               	movwf	?_adc_read^0,c
  4165   0020FC  C03A  F039         	movff	??_adc_read,?_adc_read+1
  4166   002100  0012               	return		;funcret
  4167   002102                     __end_of_adc_read:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _delay *****************
  4171 ;; Defined at:
  4172 ;;		line 31 in file "kernel.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  time            2   42[BANK1 ] unsigned short 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4186 ;;      Params:         0       0       2       0       0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4188 ;;      Temps:          0       0       7       0       0       0       0       0       0
  4189 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4190 ;;Total ram usage:        9 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 5
  4193 ;; This function calls:
  4194 ;;		_scheduler
  4195 ;; This function is called by:
  4196 ;;		_adc_read
  4197 ;;		_tarefa_acelerador
  4198 ;;		_tarefa_controle_central
  4199 ;;		_tarefa_injecao_eletronica
  4200 ;;		_tarefa_estabilidade
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text22
  4205   001172                     __ptext22:
  4206                           	callstack 0
  4207   001172                     _delay:
  4208                           	callstack 19
  4209   001172                     
  4210                           ;kernel.c: 31: void delay(uint16_t time);kernel.c: 32: {;kernel.c: 33:     (INTCONbits.G
      +                          IE = 0);
  4211   001172  9EF2               	bcf	242,7,c	;volatile
  4212   001174  C483  F198         	movff	_r_queue+535,??_delay
  4213   001178  0101               	movlb	1	; () banked
  4214   00117A  5198               	movf	??_delay& (0+255),w,b
  4215   00117C  0D6B               	mullw	107
  4216   00117E  0E6C               	movlw	low _r_queue
  4217   001180  24F3               	addwf	243,w,c
  4218   001182  6F99               	movwf	(??_delay+1)& (0+255),b
  4219   001184  0E02               	movlw	high _r_queue
  4220   001186  20F4               	addwfc	prodh,w,c
  4221   001188  6F9A               	movwf	(??_delay+2)& (0+255),b
  4222   00118A  C199  F485         	movff	??_delay+1,_r_queue+537
  4223   00118E  C19A  F486         	movff	??_delay+2,_r_queue+538
  4224   001192                     
  4225                           ; BSR set to: 1
  4226   001192  EE24  F085         	lfsr	2,_r_queue+537
  4227   001196  EE00 F002          	lfsr	0,2
  4228   00119A  50DE               	movf	postinc2,w,c
  4229   00119C  26E9               	addwf	fsr0l,f,c
  4230   00119E  50DD               	movf	postdec2,w,c
  4231   0011A0  22EA               	addwfc	fsr0h,f,c
  4232   0011A2  04EE               	decf	postinc0,w,c
  4233   0011A4  A4D8               	btfss	status,2,c
  4234   0011A6  EFD7  F008         	goto	i1u242_21
  4235   0011AA  EFD9  F008         	goto	i1u242_20
  4236   0011AE                     i1u242_21:
  4237   0011AE  EF47  F009         	goto	i1l3354
  4238   0011B2                     i1u242_20:
  4239   0011B2                     
  4240                           ; BSR set to: 1
  4241   0011B2  EE24  F085         	lfsr	2,_r_queue+537
  4242   0011B6  EE00 F009          	lfsr	0,9
  4243   0011BA  50DE               	movf	postinc2,w,c
  4244   0011BC  26E9               	addwf	fsr0l,f,c
  4245   0011BE  50DD               	movf	postdec2,w,c
  4246   0011C0  22EA               	addwfc	fsr0h,f,c
  4247   0011C2  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4248   0011C6  EE24  F085         	lfsr	2,_r_queue+537
  4249   0011CA  EE00 F008          	lfsr	0,8
  4250   0011CE  50DE               	movf	postinc2,w,c
  4251   0011D0  26E9               	addwf	fsr0l,f,c
  4252   0011D2  50DD               	movf	postdec2,w,c
  4253   0011D4  22EA               	addwfc	fsr0h,f,c
  4254   0011D6  CFD8 FFEF          	movff	status,indf0	;volatile
  4255   0011DA  EE24  F085         	lfsr	2,_r_queue+537
  4256   0011DE  EE00 F007          	lfsr	0,7
  4257   0011E2  50DE               	movf	postinc2,w,c
  4258   0011E4  26E9               	addwf	fsr0l,f,c
  4259   0011E6  50DD               	movf	postdec2,w,c
  4260   0011E8  22EA               	addwfc	fsr0h,f,c
  4261   0011EA  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4262   0011EE  EE24  F085         	lfsr	2,_r_queue+537
  4263   0011F2  EE00 F06A          	lfsr	0,106
  4264   0011F6  50DE               	movf	postinc2,w,c
  4265   0011F8  26E9               	addwf	fsr0l,f,c
  4266   0011FA  50DD               	movf	postdec2,w,c
  4267   0011FC  22EA               	addwfc	fsr0h,f,c
  4268   0011FE  6AEF               	clrf	indf0,c
  4269   001200  EE24  F085         	lfsr	2,_r_queue+537
  4270   001204  EE00 F002          	lfsr	0,2
  4271   001208  50DE               	movf	postinc2,w,c
  4272   00120A  26E9               	addwf	fsr0l,f,c
  4273   00120C  50DD               	movf	postdec2,w,c
  4274   00120E  22EA               	addwfc	fsr0h,f,c
  4275   001210  0E02               	movlw	2
  4276   001212  6EEF               	movwf	indf0,c
  4277   001214  EF3F  F009         	goto	i1l3352
  4278   001218                     i1l3348:
  4279   001218  EE24  F085         	lfsr	2,_r_queue+537
  4280   00121C  EE00 F06A          	lfsr	0,106
  4281   001220  50DE               	movf	postinc2,w,c
  4282   001222  26E9               	addwf	fsr0l,f,c
  4283   001224  50DD               	movf	postdec2,w,c
  4284   001226  22EA               	addwfc	fsr0h,f,c
  4285   001228  50EF               	movf	indf0,w,c
  4286   00122A  0101               	movlb	1	; () banked
  4287   00122C  6F98               	movwf	??_delay& (0+255),b
  4288   00122E  5198               	movf	??_delay& (0+255),w,b
  4289   001230  0D03               	mullw	3
  4290   001232  CFF3 F199          	movff	prodl,??_delay+1
  4291   001236  CFF4 F19A          	movff	prodh,??_delay+2
  4292   00123A  EE24  F085         	lfsr	2,_r_queue+537
  4293   00123E  CFDE F19B          	movff	postinc2,??_delay+3
  4294   001242  CFDD F19C          	movff	postdec2,??_delay+4
  4295   001246  5199               	movf	(??_delay+1)& (0+255),w,b
  4296   001248  259B               	addwf	(??_delay+3)& (0+255),w,b
  4297   00124A  6F9D               	movwf	(??_delay+5)& (0+255),b
  4298   00124C  519A               	movf	(??_delay+2)& (0+255),w,b
  4299   00124E  219C               	addwfc	(??_delay+4)& (0+255),w,b
  4300   001250  6F9E               	movwf	(??_delay+6)& (0+255),b
  4301   001252  0E0A               	movlw	10
  4302   001254  259D               	addwf	(??_delay+5)& (0+255),w,b
  4303   001256  6ED9               	movwf	fsr2l,c
  4304   001258  0E00               	movlw	0
  4305   00125A  219E               	addwfc	(??_delay+6)& (0+255),w,b
  4306   00125C  6EDA               	movwf	fsr2h,c
  4307   00125E  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4308   001262  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4309   001266  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4310   00126A                     
  4311                           ; BSR set to: 1
  4312   00126A  EE24  F085         	lfsr	2,_r_queue+537
  4313   00126E  EE00 F06A          	lfsr	0,106
  4314   001272  50DE               	movf	postinc2,w,c
  4315   001274  26E9               	addwf	fsr0l,f,c
  4316   001276  50DD               	movf	postdec2,w,c
  4317   001278  22EA               	addwfc	fsr0h,f,c
  4318   00127A  2AEF               	incf	indf0,f,c
  4319   00127C  0006               	pop		;# 
  4320   00127E                     i1l3352:
  4321   00127E  50FC               	movf	252,w,c	;volatile
  4322   001280  A4D8               	btfss	status,2,c
  4323   001282  EF45  F009         	goto	i1u243_21
  4324   001286  EF47  F009         	goto	i1u243_20
  4325   00128A                     i1u243_21:
  4326   00128A  EF0C  F009         	goto	i1l3348
  4327   00128E                     i1u243_20:
  4328   00128E                     i1l3354:
  4329                           
  4330                           ;kernel.c: 35:     r_queue.ready_queue[r_queue.task_running].time_sleeping = time;
  4331   00128E  C483  F198         	movff	_r_queue+535,??_delay
  4332   001292  0101               	movlb	1	; () banked
  4333   001294  5198               	movf	??_delay& (0+255),w,b
  4334   001296  0D6B               	mullw	107
  4335   001298  0E71               	movlw	low (_r_queue+5)
  4336   00129A  24F3               	addwf	243,w,c
  4337   00129C  6ED9               	movwf	fsr2l,c
  4338   00129E  0E02               	movlw	high (_r_queue+5)
  4339   0012A0  20F4               	addwfc	prodh,w,c
  4340   0012A2  6EDA               	movwf	fsr2h,c
  4341   0012A4  C196  FFDE         	movff	delay@time,postinc2
  4342   0012A8  C197  FFDD         	movff	delay@time+1,postdec2
  4343   0012AC                     
  4344                           ; BSR set to: 1
  4345                           ;kernel.c: 36:     scheduler();
  4346   0012AC  ECDA  F010         	call	_scheduler	;wreg free
  4347   0012B0  C483  F198         	movff	_r_queue+535,??_delay
  4348   0012B4  0101               	movlb	1	; () banked
  4349   0012B6  5198               	movf	??_delay& (0+255),w,b
  4350   0012B8  0D6B               	mullw	107
  4351   0012BA  0E6C               	movlw	low _r_queue
  4352   0012BC  24F3               	addwf	243,w,c
  4353   0012BE  6F99               	movwf	(??_delay+1)& (0+255),b
  4354   0012C0  0E02               	movlw	high _r_queue
  4355   0012C2  20F4               	addwfc	prodh,w,c
  4356   0012C4  6F9A               	movwf	(??_delay+2)& (0+255),b
  4357   0012C6  C199  F485         	movff	??_delay+1,_r_queue+537
  4358   0012CA  C19A  F486         	movff	??_delay+2,_r_queue+538
  4359   0012CE                     
  4360                           ; BSR set to: 1
  4361   0012CE  EE24  F085         	lfsr	2,_r_queue+537
  4362   0012D2  EE00 F002          	lfsr	0,2
  4363   0012D6  50DE               	movf	postinc2,w,c
  4364   0012D8  26E9               	addwf	fsr0l,f,c
  4365   0012DA  50DD               	movf	postdec2,w,c
  4366   0012DC  22EA               	addwfc	fsr0h,f,c
  4367   0012DE  50EF               	movf	indf0,w,c
  4368   0012E0  A4D8               	btfss	status,2,c
  4369   0012E2  EF75  F009         	goto	i1u244_21
  4370   0012E6  EF77  F009         	goto	i1u244_20
  4371   0012EA                     i1u244_21:
  4372   0012EA  EF08  F00A         	goto	i1l3374
  4373   0012EE                     i1u244_20:
  4374   0012EE                     
  4375                           ; BSR set to: 1
  4376   0012EE  6AFC               	clrf	252,c	;volatile
  4377   0012F0                     
  4378                           ; BSR set to: 1
  4379   0012F0  EE24  F085         	lfsr	2,_r_queue+537
  4380   0012F4  EE00 F06A          	lfsr	0,106
  4381   0012F8  50DE               	movf	postinc2,w,c
  4382   0012FA  26E9               	addwf	fsr0l,f,c
  4383   0012FC  50DD               	movf	postdec2,w,c
  4384   0012FE  22EA               	addwfc	fsr0h,f,c
  4385   001300  50EF               	movf	indf0,w,c
  4386   001302  B4D8               	btfsc	status,2,c
  4387   001304  EF86  F009         	goto	i1u245_21
  4388   001308  EF88  F009         	goto	i1u245_20
  4389   00130C                     i1u245_21:
  4390   00130C  EFEC  F009         	goto	i1l339
  4391   001310                     i1u245_20:
  4392   001310                     
  4393                           ; BSR set to: 1
  4394   001310  EE24  F085         	lfsr	2,_r_queue+537
  4395   001314  EE00 F009          	lfsr	0,9
  4396   001318  50DE               	movf	postinc2,w,c
  4397   00131A  26E9               	addwf	fsr0l,f,c
  4398   00131C  50DD               	movf	postdec2,w,c
  4399   00131E  22EA               	addwfc	fsr0h,f,c
  4400   001320  50EF               	movf	indf0,w,c
  4401   001322  6EE0               	movwf	224,c	;volatile
  4402   001324  EE24  F085         	lfsr	2,_r_queue+537
  4403   001328  EE00 F008          	lfsr	0,8
  4404   00132C  50DE               	movf	postinc2,w,c
  4405   00132E  26E9               	addwf	fsr0l,f,c
  4406   001330  50DD               	movf	postdec2,w,c
  4407   001332  22EA               	addwfc	fsr0h,f,c
  4408   001334  50EF               	movf	indf0,w,c
  4409   001336  6ED8               	movwf	216,c	;volatile
  4410   001338  EE24  F085         	lfsr	2,_r_queue+537
  4411   00133C  EE00 F007          	lfsr	0,7
  4412   001340  50DE               	movf	postinc2,w,c
  4413   001342  26E9               	addwf	fsr0l,f,c
  4414   001344  50DD               	movf	postdec2,w,c
  4415   001346  22EA               	addwfc	fsr0h,f,c
  4416   001348  50EF               	movf	indf0,w,c
  4417   00134A  6F98               	movwf	??_delay& (0+255),b
  4418   00134C  5198               	movf	??_delay& (0+255),w,b
  4419   00134E                     i1l340:
  4420                           
  4421                           ; BSR set to: 1
  4422   00134E  0005               	push		;# 
  4423   001350  EE24  F085         	lfsr	2,_r_queue+537
  4424   001354  EE00 F06A          	lfsr	0,106
  4425   001358  50DE               	movf	postinc2,w,c
  4426   00135A  26E9               	addwf	fsr0l,f,c
  4427   00135C  50DD               	movf	postdec2,w,c
  4428   00135E  22EA               	addwfc	fsr0h,f,c
  4429   001360  06EF               	decf	indf0,f,c
  4430   001362  EE24  F085         	lfsr	2,_r_queue+537
  4431   001366  EE00 F06A          	lfsr	0,106
  4432   00136A  50DE               	movf	postinc2,w,c
  4433   00136C  26E9               	addwf	fsr0l,f,c
  4434   00136E  50DD               	movf	postdec2,w,c
  4435   001370  22EA               	addwfc	fsr0h,f,c
  4436   001372  50EF               	movf	indf0,w,c
  4437   001374  0101               	movlb	1	; () banked
  4438   001376  6F98               	movwf	??_delay& (0+255),b
  4439   001378  5198               	movf	??_delay& (0+255),w,b
  4440   00137A  0D03               	mullw	3
  4441   00137C  CFF3 F199          	movff	prodl,??_delay+1
  4442   001380  CFF4 F19A          	movff	prodh,??_delay+2
  4443   001384  EE24  F085         	lfsr	2,_r_queue+537
  4444   001388  CFDE F19B          	movff	postinc2,??_delay+3
  4445   00138C  CFDD F19C          	movff	postdec2,??_delay+4
  4446   001390  5199               	movf	(??_delay+1)& (0+255),w,b
  4447   001392  259B               	addwf	(??_delay+3)& (0+255),w,b
  4448   001394  6F9D               	movwf	(??_delay+5)& (0+255),b
  4449   001396  519A               	movf	(??_delay+2)& (0+255),w,b
  4450   001398  219C               	addwfc	(??_delay+4)& (0+255),w,b
  4451   00139A  6F9E               	movwf	(??_delay+6)& (0+255),b
  4452   00139C  0E0A               	movlw	10
  4453   00139E  259D               	addwf	(??_delay+5)& (0+255),w,b
  4454   0013A0  6ED9               	movwf	fsr2l,c
  4455   0013A2  0E00               	movlw	0
  4456   0013A4  219E               	addwfc	(??_delay+6)& (0+255),w,b
  4457   0013A6  6EDA               	movwf	fsr2h,c
  4458   0013A8  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4459   0013AC  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4460   0013B0  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4461   0013B4                     
  4462                           ; BSR set to: 1
  4463   0013B4  EE24  F085         	lfsr	2,_r_queue+537
  4464   0013B8  EE00 F06A          	lfsr	0,106
  4465   0013BC  50DE               	movf	postinc2,w,c
  4466   0013BE  26E9               	addwf	fsr0l,f,c
  4467   0013C0  50DD               	movf	postdec2,w,c
  4468   0013C2  22EA               	addwfc	fsr0h,f,c
  4469   0013C4  50EF               	movf	indf0,w,c
  4470   0013C6  A4D8               	btfss	status,2,c
  4471   0013C8  EFE8  F009         	goto	i1u246_21
  4472   0013CC  EFEA  F009         	goto	i1u246_20
  4473   0013D0                     i1u246_21:
  4474   0013D0  EFA7  F009         	goto	i1l340
  4475   0013D4                     i1u246_20:
  4476   0013D4  EFFE  F009         	goto	i1l342
  4477   0013D8                     i1l339:
  4478                           
  4479                           ; BSR set to: 1
  4480   0013D8  0005               	push		;# 
  4481   0013DA  EE24  F085         	lfsr	2,_r_queue+537
  4482   0013DE  EE00 F003          	lfsr	0,3
  4483   0013E2  50DE               	movf	postinc2,w,c
  4484   0013E4  26E9               	addwf	fsr0l,f,c
  4485   0013E6  50DD               	movf	postdec2,w,c
  4486   0013E8  22EA               	addwfc	fsr0h,f,c
  4487   0013EA  CFEE F198          	movff	postinc0,??_delay
  4488   0013EE  CFED F199          	movff	postdec0,??_delay+1
  4489   0013F2  C198  FFFD         	movff	??_delay,tosl	;volatile
  4490   0013F6  C199  FFFE         	movff	??_delay+1,tosh	;volatile
  4491   0013FA  6AFF               	clrf	255,c	;volatile
  4492   0013FC                     i1l342:
  4493   0013FC  EE24  F085         	lfsr	2,_r_queue+537
  4494   001400  EE00 F002          	lfsr	0,2
  4495   001404  50DE               	movf	postinc2,w,c
  4496   001406  26E9               	addwf	fsr0l,f,c
  4497   001408  50DD               	movf	postdec2,w,c
  4498   00140A  22EA               	addwfc	fsr0h,f,c
  4499   00140C  0E01               	movlw	1
  4500   00140E  6EEF               	movwf	indf0,c
  4501   001410                     i1l3374:
  4502                           
  4503                           ;kernel.c: 38:     (INTCONbits.GIE = 1);
  4504   001410  8EF2               	bsf	242,7,c	;volatile
  4505   001412  0012               	return		;funcret
  4506   001414                     __end_of_delay:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function _scheduler *****************
  4510 ;; Defined at:
  4511 ;;		line 7 in file "scheduler.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1  [STACK] void 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/1
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 4
  4532 ;; This function calls:
  4533 ;;		_priority_scheduler
  4534 ;; This function is called by:
  4535 ;;		_sem_wait
  4536 ;;		_mutex_lock
  4537 ;;		_delay
  4538 ;;		_change_state
  4539 ;;		_ISR
  4540 ;;		_yield
  4541 ;; This function uses a reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text23
  4545   0021B4                     __ptext23:
  4546                           	callstack 0
  4547   0021B4                     _scheduler:
  4548                           	callstack 15
  4549   0021B4                     
  4550                           ;scheduler.c: 12:     priority_scheduler();
  4551   0021B4  EC49  F00C         	call	_priority_scheduler	;wreg free
  4552   0021B8                     
  4553                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4554   0021B8  0012               	return		;funcret
  4555   0021BA                     __end_of_scheduler:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _priority_scheduler *****************
  4559 ;; Defined at:
  4560 ;;		line 33 in file "scheduler.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  i               1  [STACK] unsigned char 
  4565 ;;  selected        1  [STACK] unsigned char 
  4566 ;;  highest_prio    1  [STACK] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1  [STACK] void 
  4569 ;; Registers used:
  4570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/1
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0
  4577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4579 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 3
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_scheduler
  4587 ;; This function uses a reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text24
  4591   001892                     __ptext24:
  4592                           	callstack 0
  4593   001892                     _priority_scheduler:
  4594                           	callstack 0
  4595                           
  4596                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4597   001892  52E6               	movf	postinc1,f,c
  4598   001894  52E6               	movf	postinc1,f,c
  4599   001896  52E6               	movf	postinc1,f,c
  4600   001898                     
  4601                           ;scheduler.c: 35:     uint8_t highest_priority = 0;
  4602                           ;stkvar	_highest_priority @ sp[(-3)+2]
  4603   001898  0EFF               	movlw	-1
  4604   00189A  6AE3               	clrf	plusw1,c
  4605                           
  4606                           ;scheduler.c: 36:     uint8_t selected = 0;
  4607                           ;stkvar	_selected @ sp[(-3)+1]
  4608   00189C  0EFE               	movlw	-2
  4609   00189E  6AE3               	clrf	plusw1,c
  4610   0018A0                     
  4611                           ;scheduler.c: 38:     for (uint8_t i = 1; i < r_queue.ready_queue_size; i++)
  4612                           ;stkvar	_i @ sp[(-3)+0]
  4613   0018A0  0EFD               	movlw	-3
  4614   0018A2  6AE3               	clrf	plusw1,c
  4615   0018A4  2AE3               	incf	plusw1,f,c
  4616   0018A6  EF91  F00C         	goto	l1940
  4617   0018AA                     l1930:
  4618                           
  4619                           ;scheduler.c: 39:     {;scheduler.c: 40:         if (r_queue.ready_queue[i].task_state =
      +                          = READY &&
  4620                           ;stkvar	_i @ sp[(-3)+0]
  4621   0018AA  0EFD               	movlw	-3
  4622   0018AC  50E3               	movf	plusw1,w,c
  4623   0018AE  0D6B               	mullw	107
  4624   0018B0  0E6E               	movlw	low (_r_queue+2)
  4625   0018B2  24F3               	addwf	243,w,c
  4626   0018B4  6ED9               	movwf	fsr2l,c
  4627   0018B6  0E02               	movlw	high (_r_queue+2)
  4628   0018B8  20F4               	addwfc	prodh,w,c
  4629   0018BA  6EDA               	movwf	fsr2h,c
  4630   0018BC  50DF               	movf	indf2,w,c
  4631   0018BE  A4D8               	btfss	status,2,c
  4632   0018C0  EF64  F00C         	goto	u81_21
  4633   0018C4  EF66  F00C         	goto	u81_20
  4634   0018C8                     u81_21:
  4635   0018C8  EF8F  F00C         	goto	l1938
  4636   0018CC                     u81_20:
  4637   0018CC                     
  4638                           ;stkvar	_i @ sp[(-3)+0]
  4639   0018CC  0EFD               	movlw	-3
  4640   0018CE  50E3               	movf	plusw1,w,c
  4641   0018D0  0D6B               	mullw	107
  4642   0018D2  0E6D               	movlw	low (_r_queue+1)
  4643   0018D4  24F3               	addwf	243,w,c
  4644   0018D6  6ED9               	movwf	fsr2l,c
  4645   0018D8  0E02               	movlw	high (_r_queue+1)
  4646   0018DA  20F4               	addwfc	prodh,w,c
  4647   0018DC  6EDA               	movwf	fsr2h,c
  4648                           
  4649                           ;stkvar	_highest_priority @ sp[(-3)+2]
  4650   0018DE  0EFF               	movlw	-1
  4651   0018E0  CFE3 F001          	movff	plusw1,btemp
  4652   0018E4  50DE               	movf	postinc2,w,c
  4653   0018E6  5C01               	subwf	btemp^0,w,c
  4654   0018E8  B0D8               	btfsc	status,0,c
  4655   0018EA  EF79  F00C         	goto	u82_21
  4656   0018EE  EF7B  F00C         	goto	u82_20
  4657   0018F2                     u82_21:
  4658   0018F2  EF8F  F00C         	goto	l1938
  4659   0018F6                     u82_20:
  4660   0018F6                     
  4661                           ;scheduler.c: 42:         {;scheduler.c: 43:             highest_priority = r_queue.read
      +                          y_queue[i].task_priority;
  4662                           ;stkvar	_i @ sp[(-3)+0]
  4663   0018F6  0EFD               	movlw	-3
  4664   0018F8  50E3               	movf	plusw1,w,c
  4665   0018FA  0D6B               	mullw	107
  4666   0018FC  0E6D               	movlw	low (_r_queue+1)
  4667   0018FE  24F3               	addwf	243,w,c
  4668   001900  6ED9               	movwf	fsr2l,c
  4669   001902  0E02               	movlw	high (_r_queue+1)
  4670   001904  20F4               	addwfc	prodh,w,c
  4671   001906  6EDA               	movwf	fsr2h,c
  4672   001908  50DF               	movf	indf2,w,c
  4673   00190A  6E0C               	movwf	(btemp+11)^0,c
  4674                           
  4675                           ;stkvar	_highest_priority @ sp[(-3)+2]
  4676   00190C  0EFF               	movlw	-1
  4677   00190E  C00C  FFE3         	movff	btemp+11,plusw1
  4678   001912                     
  4679                           ;scheduler.c: 44:             selected = i;
  4680                           ;stkvar	_i @ sp[(-3)+0]
  4681                           ;stkvar	_selected @ sp[(-3)+1]
  4682   001912  0EFD               	movlw	-3
  4683   001914  CFE3 F001          	movff	plusw1,btemp
  4684   001918  0EFE               	movlw	-2
  4685   00191A  C001  FFE3         	movff	btemp,plusw1
  4686   00191E                     l1938:
  4687                           
  4688                           ;scheduler.c: 46:     }
  4689                           ;stkvar	_i @ sp[(-3)+0]
  4690   00191E  0EFD               	movlw	-3
  4691   001920  2AE3               	incf	plusw1,f,c
  4692   001922                     l1940:
  4693   001922  EE24  F084         	lfsr	2,_r_queue+536
  4694                           
  4695                           ;stkvar	_i @ sp[(-3)+0]
  4696   001926  0EFD               	movlw	-3
  4697   001928  CFE3 F001          	movff	plusw1,btemp
  4698   00192C  50DE               	movf	postinc2,w,c
  4699   00192E  5C01               	subwf	btemp^0,w,c
  4700   001930  A0D8               	btfss	status,0,c
  4701   001932  EF9D  F00C         	goto	u83_21
  4702   001936  EF9F  F00C         	goto	u83_20
  4703   00193A                     u83_21:
  4704   00193A  EF55  F00C         	goto	l1930
  4705   00193E                     u83_20:
  4706   00193E                     
  4707                           ;scheduler.c: 47:     r_queue.task_running = selected;
  4708                           ;stkvar	_selected @ sp[(-3)+1]
  4709   00193E  0EFE               	movlw	-2
  4710   001940  CFE3 F00C          	movff	plusw1,btemp+11
  4711   001944  C00C  F483         	movff	btemp+11,_r_queue+535
  4712   001948                     
  4713                           ; _priority_scheduler: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  4714   001948  52E5               	movf	postdec1,f,c
  4715   00194A  52E5               	movf	postdec1,f,c
  4716   00194C  52E5               	movf	postdec1,f,c
  4717   00194E  0012               	return		;funcret
  4718   001950                     __end_of_priority_scheduler:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _tarefa_controle_central *****************
  4722 ;; Defined at:
  4723 ;;		line 29 in file "user_app.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  data            1   31[BANK1 ] unsigned char 
  4728 ;;  duty            1   30[BANK1 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0
  4739 ;;      Locals:         0       0       2       0       0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4741 ;;      Totals:         0       0       2       0       0       0       0       0       0
  4742 ;;Total ram usage:        2 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 7
  4745 ;; This function calls:
  4746 ;;		___awmod
  4747 ;;		_delay
  4748 ;;		_mutex_lock
  4749 ;;		_mutex_unlock
  4750 ;;		_read_pipe
  4751 ;; This function is called by:
  4752 ;;		_main
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text25
  4757   001E34                     __ptext25:
  4758                           	callstack 0
  4759   001E34                     _tarefa_controle_central:
  4760                           	callstack 18
  4761   001E34                     l276:
  4762                           
  4763                           ;user_app.c: 32:     {;user_app.c: 33:         uint8_t data = 0;
  4764   001E34  0101               	movlb	1	; () banked
  4765   001E36  6B8B               	clrf	tarefa_controle_central@data& (0+255),b
  4766   001E38                     
  4767                           ; BSR set to: 1
  4768                           ;user_app.c: 34:         read_pipe(&accel_pipe, &data);
  4769   001E38  0E51               	movlw	low _accel_pipe
  4770   001E3A  6F83               	movwf	read_pipe@p& (0+255),b
  4771   001E3C  0E01               	movlw	high _accel_pipe
  4772   001E3E  6F84               	movwf	(read_pipe@p+1)& (0+255),b
  4773   001E40  0E8B               	movlw	low tarefa_controle_central@data
  4774   001E42  6F85               	movwf	read_pipe@data& (0+255),b
  4775   001E44  0E01               	movlw	high tarefa_controle_central@data
  4776   001E46  6F86               	movwf	(read_pipe@data+1)& (0+255),b
  4777   001E48  EC9F  F00D         	call	_read_pipe	;wreg free
  4778   001E4C                     
  4779                           ;user_app.c: 35:         uint8_t duty = data % 100;
  4780   001E4C  C18B  F17A         	movff	tarefa_controle_central@data,___awmod@dividend
  4781   001E50  0101               	movlb	1	; () banked
  4782   001E52  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  4783   001E54  0E00               	movlw	0
  4784   001E56  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  4785   001E58  0E64               	movlw	100
  4786   001E5A  6F7C               	movwf	___awmod@divisor& (0+255),b
  4787   001E5C  ECA8  F00C         	call	___awmod	;wreg free
  4788   001E60  0101               	movlb	1	; () banked
  4789   001E62  517A               	movf	?___awmod& (0+255),w,b
  4790   001E64  6F8A               	movwf	tarefa_controle_central@duty& (0+255),b
  4791   001E66                     
  4792                           ; BSR set to: 1
  4793                           ;user_app.c: 37:         mutex_lock(&buffer_mutex);
  4794   001E66  0E65               	movlw	low _buffer_mutex
  4795   001E68  6F8C               	movwf	mutex_lock@m& (0+255),b
  4796   001E6A  0E01               	movlw	high _buffer_mutex
  4797   001E6C  6F8D               	movwf	(mutex_lock@m+1)& (0+255),b
  4798   001E6E  ECBC  F005         	call	_mutex_lock	;wreg free
  4799   001E72                     
  4800                           ;user_app.c: 38:         accel_data = duty;
  4801   001E72  C18A  F100         	movff	tarefa_controle_central@duty,_accel_data	;volatile
  4802   001E76                     
  4803                           ;user_app.c: 39:         mutex_unlock(&buffer_mutex);
  4804   001E76  0E65               	movlw	low _buffer_mutex
  4805   001E78  0101               	movlb	1	; () banked
  4806   001E7A  6F8C               	movwf	mutex_unlock@m& (0+255),b
  4807   001E7C  0E01               	movlw	high _buffer_mutex
  4808   001E7E  6F8D               	movwf	(mutex_unlock@m+1)& (0+255),b
  4809   001E80  EC00  F00D         	call	_mutex_unlock	;wreg free
  4810   001E84                     
  4811                           ;user_app.c: 41:         delay(5);
  4812   001E84  0E00               	movlw	0
  4813   001E86  0101               	movlb	1	; () banked
  4814   001E88  6F97               	movwf	(delay@time+1)& (0+255),b
  4815   001E8A  0E05               	movlw	5
  4816   001E8C  6F96               	movwf	delay@time& (0+255),b
  4817   001E8E  ECB9  F008         	call	_delay	;wreg free
  4818   001E92  EF1A  F00F         	goto	l276
  4819   001E96  0012               	return		;funcret
  4820   001E98                     __end_of_tarefa_controle_central:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function _read_pipe *****************
  4824 ;; Defined at:
  4825 ;;		line 23 in file "pipe.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  p               2   23[BANK1 ] PTR struct pipe
  4828 ;;		 -> accel_pipe(20), 
  4829 ;;  data            2   25[BANK1 ] PTR unsigned char 
  4830 ;;		 -> tarefa_controle_central@data(1), 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4842 ;;      Params:         0       0       4       0       0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4844 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4845 ;;      Totals:         0       0       7       0       0       0       0       0       0
  4846 ;;Total ram usage:        7 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 6
  4849 ;; This function calls:
  4850 ;;		___awmod
  4851 ;;		_sem_post
  4852 ;;		_sem_wait
  4853 ;; This function is called by:
  4854 ;;		_tarefa_controle_central
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text26
  4859   001B3E                     __ptext26:
  4860                           	callstack 0
  4861   001B3E                     _read_pipe:
  4862                           	callstack 18
  4863   001B3E                     
  4864                           ;pipe.c: 23: void read_pipe(pipe_t *p, uint8_t *data);pipe.c: 24: {;pipe.c: 25:     (INT
      +                          CONbits.GIE = 0);
  4865   001B3E  9EF2               	bcf	242,7,c	;volatile
  4866   001B40                     
  4867                           ;pipe.c: 26:     sem_wait(&p->pipe_sem_read);
  4868   001B40  0E04               	movlw	4
  4869   001B42  0101               	movlb	1	; () banked
  4870   001B44  2583               	addwf	read_pipe@p& (0+255),w,b
  4871   001B46  6F7A               	movwf	sem_wait@sem& (0+255),b
  4872   001B48  0E00               	movlw	0
  4873   001B4A  2184               	addwfc	(read_pipe@p+1)& (0+255),w,b
  4874   001B4C  6F7B               	movwf	(sem_wait@sem+1)& (0+255),b
  4875   001B4E  EC3B  F007         	call	_sem_wait	;wreg free
  4876   001B52                     
  4877                           ;pipe.c: 27:     *data = p->pipe_msg[p->pipe_pos_read];
  4878   001B52  0101               	movlb	1	; () banked
  4879   001B54  EE20 F002          	lfsr	2,2
  4880   001B58  5183               	movf	read_pipe@p& (0+255),w,b
  4881   001B5A  26D9               	addwf	fsr2l,f,c
  4882   001B5C  5184               	movf	(read_pipe@p+1)& (0+255),w,b
  4883   001B5E  22DA               	addwfc	fsr2h,f,c
  4884   001B60  50DF               	movf	indf2,w,c
  4885   001B62  6F87               	movwf	??_read_pipe& (0+255),b
  4886   001B64  C183  FFD9         	movff	read_pipe@p,fsr2l
  4887   001B68  C184  FFDA         	movff	read_pipe@p+1,fsr2h
  4888   001B6C  CFDE F188          	movff	postinc2,??_read_pipe+1
  4889   001B70  CFDD F189          	movff	postdec2,??_read_pipe+2
  4890   001B74  5187               	movf	??_read_pipe& (0+255),w,b
  4891   001B76  2588               	addwf	(??_read_pipe+1)& (0+255),w,b
  4892   001B78  6ED9               	movwf	fsr2l,c
  4893   001B7A  0E00               	movlw	0
  4894   001B7C  2189               	addwfc	(??_read_pipe+2)& (0+255),w,b
  4895   001B7E  6EDA               	movwf	fsr2h,c
  4896   001B80  C185  FFE9         	movff	read_pipe@data,fsr0l
  4897   001B84  C186  FFEA         	movff	read_pipe@data+1,fsr0h
  4898   001B88  CFDF FFEF          	movff	indf2,indf0
  4899   001B8C                     
  4900                           ; BSR set to: 1
  4901                           ;pipe.c: 28:     p->pipe_pos_read = (p->pipe_pos_read + 1) % 3;
  4902   001B8C  EE20 F002          	lfsr	2,2
  4903   001B90  5183               	movf	read_pipe@p& (0+255),w,b
  4904   001B92  26D9               	addwf	fsr2l,f,c
  4905   001B94  5184               	movf	(read_pipe@p+1)& (0+255),w,b
  4906   001B96  22DA               	addwfc	fsr2h,f,c
  4907   001B98  EE00 F002          	lfsr	0,2
  4908   001B9C  5183               	movf	read_pipe@p& (0+255),w,b
  4909   001B9E  26E9               	addwf	fsr0l,f,c
  4910   001BA0  5184               	movf	(read_pipe@p+1)& (0+255),w,b
  4911   001BA2  22EA               	addwfc	fsr0h,f,c
  4912   001BA4  50EF               	movf	indf0,w,c
  4913   001BA6  6F87               	movwf	??_read_pipe& (0+255),b
  4914   001BA8  0E01               	movlw	1
  4915   001BAA  2587               	addwf	??_read_pipe& (0+255),w,b
  4916   001BAC  6F7A               	movwf	___awmod@dividend& (0+255),b
  4917   001BAE  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  4918   001BB0  0E00               	movlw	0
  4919   001BB2  237B               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4920   001BB4  0E00               	movlw	0
  4921   001BB6  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  4922   001BB8  0E03               	movlw	3
  4923   001BBA  6F7C               	movwf	___awmod@divisor& (0+255),b
  4924   001BBC  ECA8  F00C         	call	___awmod	;wreg free
  4925   001BC0  0101               	movlb	1	; () banked
  4926   001BC2  517A               	movf	?___awmod& (0+255),w,b
  4927   001BC4  6EDF               	movwf	indf2,c
  4928   001BC6                     
  4929                           ; BSR set to: 1
  4930                           ;pipe.c: 29:     sem_post(&p->pipe_sem_write);
  4931   001BC6  0E0C               	movlw	12
  4932   001BC8  2583               	addwf	read_pipe@p& (0+255),w,b
  4933   001BCA  6F7A               	movwf	sem_post@sem& (0+255),b
  4934   001BCC  0E00               	movlw	0
  4935   001BCE  2184               	addwfc	(read_pipe@p+1)& (0+255),w,b
  4936   001BD0  6F7B               	movwf	(sem_post@sem+1)& (0+255),b
  4937   001BD2  EC51  F00D         	call	_sem_post	;wreg free
  4938   001BD6                     
  4939                           ;pipe.c: 30:     (INTCONbits.GIE = 1);
  4940   001BD6  8EF2               	bsf	242,7,c	;volatile
  4941   001BD8  0012               	return		;funcret
  4942   001BDA                     __end_of_read_pipe:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _mutex_unlock *****************
  4946 ;; Defined at:
  4947 ;;		line 75 in file "sync.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  m               2   32[BANK1 ] PTR struct mutex
  4950 ;;		 -> buffer_mutex(7), 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  tid             1   37[BANK1 ] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4962 ;;      Params:         0       0       2       0       0       0       0       0       0
  4963 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4964 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4965 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4966 ;;Total ram usage:        6 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 3
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_tarefa_controle_central
  4973 ;;		_tarefa_injecao_eletronica
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text27
  4978   001A00                     __ptext27:
  4979                           	callstack 0
  4980   001A00                     _mutex_unlock:
  4981                           	callstack 21
  4982   001A00                     
  4983                           ;sync.c: 75: void mutex_unlock(mutex_t *m);sync.c: 76: {;sync.c: 77:     (INTCONbits.GIE
      +                           = 0);
  4984   001A00  9EF2               	bcf	242,7,c	;volatile
  4985   001A02                     
  4986                           ;sync.c: 78:     if (m->s_pos_out != m->s_size)
  4987   001A02  0101               	movlb	1	; () banked
  4988   001A04  EE20 F005          	lfsr	2,5
  4989   001A08  518C               	movf	mutex_unlock@m& (0+255),w,b
  4990   001A0A  26D9               	addwf	fsr2l,f,c
  4991   001A0C  518D               	movf	(mutex_unlock@m+1)& (0+255),w,b
  4992   001A0E  22DA               	addwfc	fsr2h,f,c
  4993   001A10  EE00 F006          	lfsr	0,6
  4994   001A14  518C               	movf	mutex_unlock@m& (0+255),w,b
  4995   001A16  26E9               	addwf	fsr0l,f,c
  4996   001A18  518D               	movf	(mutex_unlock@m+1)& (0+255),w,b
  4997   001A1A  22EA               	addwfc	fsr0h,f,c
  4998   001A1C  50DE               	movf	postinc2,w,c
  4999   001A1E  18EE               	xorwf	postinc0,w,c
  5000   001A20  B4D8               	btfsc	status,2,c
  5001   001A22  EF15  F00D         	goto	i1u104_21
  5002   001A26  EF17  F00D         	goto	i1u104_20
  5003   001A2A                     i1u104_21:
  5004   001A2A  EF49  F00D         	goto	i1l2130
  5005   001A2E                     i1u104_20:
  5006   001A2E                     
  5007                           ; BSR set to: 1
  5008                           ;sync.c: 79:     {;sync.c: 81:         uint8_t tid = m->s_queue[m->s_pos_out];
  5009   001A2E  EE20 F006          	lfsr	2,6
  5010   001A32  518C               	movf	mutex_unlock@m& (0+255),w,b
  5011   001A34  26D9               	addwf	fsr2l,f,c
  5012   001A36  518D               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5013   001A38  22DA               	addwfc	fsr2h,f,c
  5014   001A3A  50DF               	movf	indf2,w,c
  5015   001A3C  6F8E               	movwf	??_mutex_unlock& (0+255),b
  5016   001A3E  518E               	movf	??_mutex_unlock& (0+255),w,b
  5017   001A40  258C               	addwf	mutex_unlock@m& (0+255),w,b
  5018   001A42  6F8F               	movwf	(??_mutex_unlock+1)& (0+255),b
  5019   001A44  0E00               	movlw	0
  5020   001A46  218D               	addwfc	(mutex_unlock@m+1)& (0+255),w,b
  5021   001A48  6F90               	movwf	(??_mutex_unlock+2)& (0+255),b
  5022   001A4A  0E01               	movlw	1
  5023   001A4C  258F               	addwf	(??_mutex_unlock+1)& (0+255),w,b
  5024   001A4E  6ED9               	movwf	fsr2l,c
  5025   001A50  0E00               	movlw	0
  5026   001A52  2190               	addwfc	(??_mutex_unlock+2)& (0+255),w,b
  5027   001A54  6EDA               	movwf	fsr2h,c
  5028   001A56  50DF               	movf	indf2,w,c
  5029   001A58  6F91               	movwf	mutex_unlock@tid& (0+255),b
  5030   001A5A                     
  5031                           ; BSR set to: 1
  5032                           ;sync.c: 82:         r_queue.ready_queue[tid].task_state = READY;
  5033   001A5A  5191               	movf	mutex_unlock@tid& (0+255),w,b
  5034   001A5C  0D6B               	mullw	107
  5035   001A5E  0E6E               	movlw	low (_r_queue+2)
  5036   001A60  24F3               	addwf	243,w,c
  5037   001A62  6ED9               	movwf	fsr2l,c
  5038   001A64  0E02               	movlw	high (_r_queue+2)
  5039   001A66  20F4               	addwfc	prodh,w,c
  5040   001A68  6EDA               	movwf	fsr2h,c
  5041   001A6A  6ADF               	clrf	indf2,c
  5042   001A6C                     
  5043                           ; BSR set to: 1
  5044                           ;sync.c: 83:         m->s_pos_out = (m->s_pos_out + 1) % 4;
  5045   001A6C  EE20 F006          	lfsr	2,6
  5046   001A70  518C               	movf	mutex_unlock@m& (0+255),w,b
  5047   001A72  26D9               	addwf	fsr2l,f,c
  5048   001A74  518D               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5049   001A76  22DA               	addwfc	fsr2h,f,c
  5050   001A78  EE00 F006          	lfsr	0,6
  5051   001A7C  518C               	movf	mutex_unlock@m& (0+255),w,b
  5052   001A7E  26E9               	addwf	fsr0l,f,c
  5053   001A80  518D               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5054   001A82  22EA               	addwfc	fsr0h,f,c
  5055   001A84  50EF               	movf	indf0,w,c
  5056   001A86  6F8E               	movwf	??_mutex_unlock& (0+255),b
  5057   001A88  298E               	incf	??_mutex_unlock& (0+255),w,b
  5058   001A8A  0B03               	andlw	3
  5059   001A8C  6EDF               	movwf	indf2,c
  5060                           
  5061                           ;sync.c: 84:     }
  5062   001A8E  EF4F  F00D         	goto	i1l2132
  5063   001A92                     i1l2130:
  5064                           
  5065                           ; BSR set to: 1
  5066                           ;sync.c: 86:     {;sync.c: 88:         m->flag = 1;
  5067   001A92  C18C  FFD9         	movff	mutex_unlock@m,fsr2l
  5068   001A96  C18D  FFDA         	movff	mutex_unlock@m+1,fsr2h
  5069   001A9A  0E01               	movlw	1
  5070   001A9C  6EDF               	movwf	indf2,c
  5071   001A9E                     i1l2132:
  5072                           
  5073                           ; BSR set to: 1
  5074                           ;sync.c: 90:     (INTCONbits.GIE = 1);
  5075   001A9E  8EF2               	bsf	242,7,c	;volatile
  5076   001AA0                     
  5077                           ; BSR set to: 1
  5078   001AA0  0012               	return		;funcret
  5079   001AA2                     __end_of_mutex_unlock:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function _mutex_lock *****************
  5083 ;; Defined at:
  5084 ;;		line 55 in file "sync.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  m               2   32[BANK1 ] PTR struct mutex
  5087 ;;		 -> buffer_mutex(7), 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      void 
  5092 ;; Registers used:
  5093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5099 ;;      Params:         0       0       2       0       0       0       0       0       0
  5100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5101 ;;      Temps:          0       0       7       0       0       0       0       0       0
  5102 ;;      Totals:         0       0       9       0       0       0       0       0       0
  5103 ;;Total ram usage:        9 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 5
  5106 ;; This function calls:
  5107 ;;		_scheduler
  5108 ;; This function is called by:
  5109 ;;		_tarefa_controle_central
  5110 ;;		_tarefa_injecao_eletronica
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text28
  5115   000B78                     __ptext28:
  5116                           	callstack 0
  5117   000B78                     _mutex_lock:
  5118                           	callstack 19
  5119   000B78                     
  5120                           ;sync.c: 55: void mutex_lock(mutex_t *m);sync.c: 56: {;sync.c: 57:     (INTCONbits.GIE =
      +                           0);
  5121   000B78  9EF2               	bcf	242,7,c	;volatile
  5122   000B7A                     
  5123                           ;sync.c: 58:     if (m->flag)
  5124   000B7A  C18C  FFD9         	movff	mutex_lock@m,fsr2l
  5125   000B7E  C18D  FFDA         	movff	mutex_lock@m+1,fsr2h
  5126   000B82  50DF               	movf	indf2,w,c
  5127   000B84  B4D8               	btfsc	status,2,c
  5128   000B86  EFC7  F005         	goto	i1u98_21
  5129   000B8A  EFC9  F005         	goto	i1u98_20
  5130   000B8E                     i1u98_21:
  5131   000B8E  EFD1  F005         	goto	i1l2086
  5132   000B92                     i1u98_20:
  5133   000B92                     
  5134                           ;sync.c: 59:     {;sync.c: 60:         m->flag = 0;
  5135   000B92  C18C  FFD9         	movff	mutex_lock@m,fsr2l
  5136   000B96  C18D  FFDA         	movff	mutex_lock@m+1,fsr2h
  5137   000B9A  6ADF               	clrf	indf2,c
  5138   000B9C                     
  5139                           ;sync.c: 61:         (INTCONbits.GIE = 1);
  5140   000B9C  8EF2               	bsf	242,7,c	;volatile
  5141                           
  5142                           ;sync.c: 62:     }
  5143   000B9E  EF3A  F007         	goto	i1l102
  5144   000BA2                     i1l2086:
  5145                           
  5146                           ;sync.c: 64:     {;sync.c: 66:         m->s_queue[m->s_size] = r_queue.task_running;
  5147   000BA2  EE24  F083         	lfsr	2,_r_queue+535
  5148   000BA6  0101               	movlb	1	; () banked
  5149   000BA8  EE00 F005          	lfsr	0,5
  5150   000BAC  518C               	movf	mutex_lock@m& (0+255),w,b
  5151   000BAE  26E9               	addwf	fsr0l,f,c
  5152   000BB0  518D               	movf	(mutex_lock@m+1)& (0+255),w,b
  5153   000BB2  22EA               	addwfc	fsr0h,f,c
  5154   000BB4  50EF               	movf	indf0,w,c
  5155   000BB6  6F8E               	movwf	??_mutex_lock& (0+255),b
  5156   000BB8  518E               	movf	??_mutex_lock& (0+255),w,b
  5157   000BBA  258C               	addwf	mutex_lock@m& (0+255),w,b
  5158   000BBC  6F8F               	movwf	(??_mutex_lock+1)& (0+255),b
  5159   000BBE  0E00               	movlw	0
  5160   000BC0  218D               	addwfc	(mutex_lock@m+1)& (0+255),w,b
  5161   000BC2  6F90               	movwf	(??_mutex_lock+2)& (0+255),b
  5162   000BC4  0E01               	movlw	1
  5163   000BC6  258F               	addwf	(??_mutex_lock+1)& (0+255),w,b
  5164   000BC8  6EE9               	movwf	fsr0l,c
  5165   000BCA  0E00               	movlw	0
  5166   000BCC  2190               	addwfc	(??_mutex_lock+2)& (0+255),w,b
  5167   000BCE  6EEA               	movwf	fsr0h,c
  5168   000BD0  CFDF FFEF          	movff	indf2,indf0
  5169                           
  5170                           ;sync.c: 67:         m->s_size = (m->s_size + 1) % 4;
  5171   000BD4  EE20 F005          	lfsr	2,5
  5172   000BD8  518C               	movf	mutex_lock@m& (0+255),w,b
  5173   000BDA  26D9               	addwf	fsr2l,f,c
  5174   000BDC  518D               	movf	(mutex_lock@m+1)& (0+255),w,b
  5175   000BDE  22DA               	addwfc	fsr2h,f,c
  5176   000BE0  EE00 F005          	lfsr	0,5
  5177   000BE4  518C               	movf	mutex_lock@m& (0+255),w,b
  5178   000BE6  26E9               	addwf	fsr0l,f,c
  5179   000BE8  518D               	movf	(mutex_lock@m+1)& (0+255),w,b
  5180   000BEA  22EA               	addwfc	fsr0h,f,c
  5181   000BEC  50EF               	movf	indf0,w,c
  5182   000BEE  6F8E               	movwf	??_mutex_lock& (0+255),b
  5183   000BF0  298E               	incf	??_mutex_lock& (0+255),w,b
  5184   000BF2  0B03               	andlw	3
  5185   000BF4  6EDF               	movwf	indf2,c
  5186   000BF6                     
  5187                           ; BSR set to: 1
  5188   000BF6  C483  F18E         	movff	_r_queue+535,??_mutex_lock
  5189   000BFA  518E               	movf	??_mutex_lock& (0+255),w,b
  5190   000BFC  0D6B               	mullw	107
  5191   000BFE  0E6C               	movlw	low _r_queue
  5192   000C00  24F3               	addwf	243,w,c
  5193   000C02  6F8F               	movwf	(??_mutex_lock+1)& (0+255),b
  5194   000C04  0E02               	movlw	high _r_queue
  5195   000C06  20F4               	addwfc	prodh,w,c
  5196   000C08  6F90               	movwf	(??_mutex_lock+2)& (0+255),b
  5197   000C0A  C18F  F485         	movff	??_mutex_lock+1,_r_queue+537
  5198   000C0E  C190  F486         	movff	??_mutex_lock+2,_r_queue+538
  5199   000C12                     
  5200                           ; BSR set to: 1
  5201   000C12  EE24  F085         	lfsr	2,_r_queue+537
  5202   000C16  EE00 F002          	lfsr	0,2
  5203   000C1A  50DE               	movf	postinc2,w,c
  5204   000C1C  26E9               	addwf	fsr0l,f,c
  5205   000C1E  50DD               	movf	postdec2,w,c
  5206   000C20  22EA               	addwfc	fsr0h,f,c
  5207   000C22  04EE               	decf	postinc0,w,c
  5208   000C24  A4D8               	btfss	status,2,c
  5209   000C26  EF17  F006         	goto	i1u99_21
  5210   000C2A  EF19  F006         	goto	i1u99_20
  5211   000C2E                     i1u99_21:
  5212   000C2E  EF87  F006         	goto	i1l2100
  5213   000C32                     i1u99_20:
  5214   000C32                     
  5215                           ; BSR set to: 1
  5216   000C32  EE24  F085         	lfsr	2,_r_queue+537
  5217   000C36  EE00 F009          	lfsr	0,9
  5218   000C3A  50DE               	movf	postinc2,w,c
  5219   000C3C  26E9               	addwf	fsr0l,f,c
  5220   000C3E  50DD               	movf	postdec2,w,c
  5221   000C40  22EA               	addwfc	fsr0h,f,c
  5222   000C42  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5223   000C46  EE24  F085         	lfsr	2,_r_queue+537
  5224   000C4A  EE00 F008          	lfsr	0,8
  5225   000C4E  50DE               	movf	postinc2,w,c
  5226   000C50  26E9               	addwf	fsr0l,f,c
  5227   000C52  50DD               	movf	postdec2,w,c
  5228   000C54  22EA               	addwfc	fsr0h,f,c
  5229   000C56  CFD8 FFEF          	movff	status,indf0	;volatile
  5230   000C5A  EE24  F085         	lfsr	2,_r_queue+537
  5231   000C5E  EE00 F007          	lfsr	0,7
  5232   000C62  50DE               	movf	postinc2,w,c
  5233   000C64  26E9               	addwf	fsr0l,f,c
  5234   000C66  50DD               	movf	postdec2,w,c
  5235   000C68  22EA               	addwfc	fsr0h,f,c
  5236   000C6A  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5237   000C6E  EE24  F085         	lfsr	2,_r_queue+537
  5238   000C72  EE00 F06A          	lfsr	0,106
  5239   000C76  50DE               	movf	postinc2,w,c
  5240   000C78  26E9               	addwf	fsr0l,f,c
  5241   000C7A  50DD               	movf	postdec2,w,c
  5242   000C7C  22EA               	addwfc	fsr0h,f,c
  5243   000C7E  6AEF               	clrf	indf0,c
  5244   000C80  EE24  F085         	lfsr	2,_r_queue+537
  5245   000C84  EE00 F002          	lfsr	0,2
  5246   000C88  50DE               	movf	postinc2,w,c
  5247   000C8A  26E9               	addwf	fsr0l,f,c
  5248   000C8C  50DD               	movf	postdec2,w,c
  5249   000C8E  22EA               	addwfc	fsr0h,f,c
  5250   000C90  0E03               	movlw	3
  5251   000C92  6EEF               	movwf	indf0,c
  5252   000C94  EF7F  F006         	goto	i1l2098
  5253   000C98                     i1l2094:
  5254   000C98  EE24  F085         	lfsr	2,_r_queue+537
  5255   000C9C  EE00 F06A          	lfsr	0,106
  5256   000CA0  50DE               	movf	postinc2,w,c
  5257   000CA2  26E9               	addwf	fsr0l,f,c
  5258   000CA4  50DD               	movf	postdec2,w,c
  5259   000CA6  22EA               	addwfc	fsr0h,f,c
  5260   000CA8  50EF               	movf	indf0,w,c
  5261   000CAA  0101               	movlb	1	; () banked
  5262   000CAC  6F8E               	movwf	??_mutex_lock& (0+255),b
  5263   000CAE  518E               	movf	??_mutex_lock& (0+255),w,b
  5264   000CB0  0D03               	mullw	3
  5265   000CB2  CFF3 F18F          	movff	prodl,??_mutex_lock+1
  5266   000CB6  CFF4 F190          	movff	prodh,??_mutex_lock+2
  5267   000CBA  EE24  F085         	lfsr	2,_r_queue+537
  5268   000CBE  CFDE F191          	movff	postinc2,??_mutex_lock+3
  5269   000CC2  CFDD F192          	movff	postdec2,??_mutex_lock+4
  5270   000CC6  518F               	movf	(??_mutex_lock+1)& (0+255),w,b
  5271   000CC8  2591               	addwf	(??_mutex_lock+3)& (0+255),w,b
  5272   000CCA  6F93               	movwf	(??_mutex_lock+5)& (0+255),b
  5273   000CCC  5190               	movf	(??_mutex_lock+2)& (0+255),w,b
  5274   000CCE  2192               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  5275   000CD0  6F94               	movwf	(??_mutex_lock+6)& (0+255),b
  5276   000CD2  0E0A               	movlw	10
  5277   000CD4  2593               	addwf	(??_mutex_lock+5)& (0+255),w,b
  5278   000CD6  6ED9               	movwf	fsr2l,c
  5279   000CD8  0E00               	movlw	0
  5280   000CDA  2194               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  5281   000CDC  6EDA               	movwf	fsr2h,c
  5282   000CDE  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5283   000CE2  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5284   000CE6  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5285   000CEA                     
  5286                           ; BSR set to: 1
  5287   000CEA  EE24  F085         	lfsr	2,_r_queue+537
  5288   000CEE  EE00 F06A          	lfsr	0,106
  5289   000CF2  50DE               	movf	postinc2,w,c
  5290   000CF4  26E9               	addwf	fsr0l,f,c
  5291   000CF6  50DD               	movf	postdec2,w,c
  5292   000CF8  22EA               	addwfc	fsr0h,f,c
  5293   000CFA  2AEF               	incf	indf0,f,c
  5294   000CFC  0006               	pop		;# 
  5295   000CFE                     i1l2098:
  5296   000CFE  50FC               	movf	252,w,c	;volatile
  5297   000D00  A4D8               	btfss	status,2,c
  5298   000D02  EF85  F006         	goto	i1u100_21
  5299   000D06  EF87  F006         	goto	i1u100_20
  5300   000D0A                     i1u100_21:
  5301   000D0A  EF4C  F006         	goto	i1l2094
  5302   000D0E                     i1u100_20:
  5303   000D0E                     i1l2100:
  5304                           
  5305                           ;sync.c: 69:         scheduler();
  5306   000D0E  ECDA  F010         	call	_scheduler	;wreg free
  5307   000D12  C483  F18E         	movff	_r_queue+535,??_mutex_lock
  5308   000D16  0101               	movlb	1	; () banked
  5309   000D18  518E               	movf	??_mutex_lock& (0+255),w,b
  5310   000D1A  0D6B               	mullw	107
  5311   000D1C  0E6C               	movlw	low _r_queue
  5312   000D1E  24F3               	addwf	243,w,c
  5313   000D20  6F8F               	movwf	(??_mutex_lock+1)& (0+255),b
  5314   000D22  0E02               	movlw	high _r_queue
  5315   000D24  20F4               	addwfc	prodh,w,c
  5316   000D26  6F90               	movwf	(??_mutex_lock+2)& (0+255),b
  5317   000D28  C18F  F485         	movff	??_mutex_lock+1,_r_queue+537
  5318   000D2C  C190  F486         	movff	??_mutex_lock+2,_r_queue+538
  5319   000D30                     
  5320                           ; BSR set to: 1
  5321   000D30  EE24  F085         	lfsr	2,_r_queue+537
  5322   000D34  EE00 F002          	lfsr	0,2
  5323   000D38  50DE               	movf	postinc2,w,c
  5324   000D3A  26E9               	addwf	fsr0l,f,c
  5325   000D3C  50DD               	movf	postdec2,w,c
  5326   000D3E  22EA               	addwfc	fsr0h,f,c
  5327   000D40  50EF               	movf	indf0,w,c
  5328   000D42  A4D8               	btfss	status,2,c
  5329   000D44  EFA6  F006         	goto	i1u101_21
  5330   000D48  EFA8  F006         	goto	i1u101_20
  5331   000D4C                     i1u101_21:
  5332   000D4C  EF39  F007         	goto	i1l2118
  5333   000D50                     i1u101_20:
  5334   000D50                     
  5335                           ; BSR set to: 1
  5336   000D50  6AFC               	clrf	252,c	;volatile
  5337   000D52                     
  5338                           ; BSR set to: 1
  5339   000D52  EE24  F085         	lfsr	2,_r_queue+537
  5340   000D56  EE00 F06A          	lfsr	0,106
  5341   000D5A  50DE               	movf	postinc2,w,c
  5342   000D5C  26E9               	addwf	fsr0l,f,c
  5343   000D5E  50DD               	movf	postdec2,w,c
  5344   000D60  22EA               	addwfc	fsr0h,f,c
  5345   000D62  50EF               	movf	indf0,w,c
  5346   000D64  B4D8               	btfsc	status,2,c
  5347   000D66  EFB7  F006         	goto	i1u102_21
  5348   000D6A  EFB9  F006         	goto	i1u102_20
  5349   000D6E                     i1u102_21:
  5350   000D6E  EF1D  F007         	goto	i1l97
  5351   000D72                     i1u102_20:
  5352   000D72                     
  5353                           ; BSR set to: 1
  5354   000D72  EE24  F085         	lfsr	2,_r_queue+537
  5355   000D76  EE00 F009          	lfsr	0,9
  5356   000D7A  50DE               	movf	postinc2,w,c
  5357   000D7C  26E9               	addwf	fsr0l,f,c
  5358   000D7E  50DD               	movf	postdec2,w,c
  5359   000D80  22EA               	addwfc	fsr0h,f,c
  5360   000D82  50EF               	movf	indf0,w,c
  5361   000D84  6EE0               	movwf	224,c	;volatile
  5362   000D86  EE24  F085         	lfsr	2,_r_queue+537
  5363   000D8A  EE00 F008          	lfsr	0,8
  5364   000D8E  50DE               	movf	postinc2,w,c
  5365   000D90  26E9               	addwf	fsr0l,f,c
  5366   000D92  50DD               	movf	postdec2,w,c
  5367   000D94  22EA               	addwfc	fsr0h,f,c
  5368   000D96  50EF               	movf	indf0,w,c
  5369   000D98  6ED8               	movwf	216,c	;volatile
  5370   000D9A  EE24  F085         	lfsr	2,_r_queue+537
  5371   000D9E  EE00 F007          	lfsr	0,7
  5372   000DA2  50DE               	movf	postinc2,w,c
  5373   000DA4  26E9               	addwf	fsr0l,f,c
  5374   000DA6  50DD               	movf	postdec2,w,c
  5375   000DA8  22EA               	addwfc	fsr0h,f,c
  5376   000DAA  50EF               	movf	indf0,w,c
  5377   000DAC  6F8E               	movwf	??_mutex_lock& (0+255),b
  5378   000DAE  518E               	movf	??_mutex_lock& (0+255),w,b
  5379   000DB0                     i1l98:
  5380                           
  5381                           ; BSR set to: 1
  5382   000DB0  0005               	push		;# 
  5383   000DB2  EE24  F085         	lfsr	2,_r_queue+537
  5384   000DB6  EE00 F06A          	lfsr	0,106
  5385   000DBA  50DE               	movf	postinc2,w,c
  5386   000DBC  26E9               	addwf	fsr0l,f,c
  5387   000DBE  50DD               	movf	postdec2,w,c
  5388   000DC0  22EA               	addwfc	fsr0h,f,c
  5389   000DC2  06EF               	decf	indf0,f,c
  5390   000DC4  EE24  F085         	lfsr	2,_r_queue+537
  5391   000DC8  EE00 F06A          	lfsr	0,106
  5392   000DCC  50DE               	movf	postinc2,w,c
  5393   000DCE  26E9               	addwf	fsr0l,f,c
  5394   000DD0  50DD               	movf	postdec2,w,c
  5395   000DD2  22EA               	addwfc	fsr0h,f,c
  5396   000DD4  50EF               	movf	indf0,w,c
  5397   000DD6  0101               	movlb	1	; () banked
  5398   000DD8  6F8E               	movwf	??_mutex_lock& (0+255),b
  5399   000DDA  518E               	movf	??_mutex_lock& (0+255),w,b
  5400   000DDC  0D03               	mullw	3
  5401   000DDE  CFF3 F18F          	movff	prodl,??_mutex_lock+1
  5402   000DE2  CFF4 F190          	movff	prodh,??_mutex_lock+2
  5403   000DE6  EE24  F085         	lfsr	2,_r_queue+537
  5404   000DEA  CFDE F191          	movff	postinc2,??_mutex_lock+3
  5405   000DEE  CFDD F192          	movff	postdec2,??_mutex_lock+4
  5406   000DF2  518F               	movf	(??_mutex_lock+1)& (0+255),w,b
  5407   000DF4  2591               	addwf	(??_mutex_lock+3)& (0+255),w,b
  5408   000DF6  6F93               	movwf	(??_mutex_lock+5)& (0+255),b
  5409   000DF8  5190               	movf	(??_mutex_lock+2)& (0+255),w,b
  5410   000DFA  2192               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  5411   000DFC  6F94               	movwf	(??_mutex_lock+6)& (0+255),b
  5412   000DFE  0E0A               	movlw	10
  5413   000E00  2593               	addwf	(??_mutex_lock+5)& (0+255),w,b
  5414   000E02  6ED9               	movwf	fsr2l,c
  5415   000E04  0E00               	movlw	0
  5416   000E06  2194               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  5417   000E08  6EDA               	movwf	fsr2h,c
  5418   000E0A  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5419   000E0E  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5420   000E12  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5421   000E16                     
  5422                           ; BSR set to: 1
  5423   000E16  EE24  F085         	lfsr	2,_r_queue+537
  5424   000E1A  EE00 F06A          	lfsr	0,106
  5425   000E1E  50DE               	movf	postinc2,w,c
  5426   000E20  26E9               	addwf	fsr0l,f,c
  5427   000E22  50DD               	movf	postdec2,w,c
  5428   000E24  22EA               	addwfc	fsr0h,f,c
  5429   000E26  50EF               	movf	indf0,w,c
  5430   000E28  A4D8               	btfss	status,2,c
  5431   000E2A  EF19  F007         	goto	i1u103_21
  5432   000E2E  EF1B  F007         	goto	i1u103_20
  5433   000E32                     i1u103_21:
  5434   000E32  EFD8  F006         	goto	i1l98
  5435   000E36                     i1u103_20:
  5436   000E36  EF2F  F007         	goto	i1l100
  5437   000E3A                     i1l97:
  5438                           
  5439                           ; BSR set to: 1
  5440   000E3A  0005               	push		;# 
  5441   000E3C  EE24  F085         	lfsr	2,_r_queue+537
  5442   000E40  EE00 F003          	lfsr	0,3
  5443   000E44  50DE               	movf	postinc2,w,c
  5444   000E46  26E9               	addwf	fsr0l,f,c
  5445   000E48  50DD               	movf	postdec2,w,c
  5446   000E4A  22EA               	addwfc	fsr0h,f,c
  5447   000E4C  CFEE F18E          	movff	postinc0,??_mutex_lock
  5448   000E50  CFED F18F          	movff	postdec0,??_mutex_lock+1
  5449   000E54  C18E  FFFD         	movff	??_mutex_lock,tosl	;volatile
  5450   000E58  C18F  FFFE         	movff	??_mutex_lock+1,tosh	;volatile
  5451   000E5C  6AFF               	clrf	255,c	;volatile
  5452   000E5E                     i1l100:
  5453   000E5E  EE24  F085         	lfsr	2,_r_queue+537
  5454   000E62  EE00 F002          	lfsr	0,2
  5455   000E66  50DE               	movf	postinc2,w,c
  5456   000E68  26E9               	addwf	fsr0l,f,c
  5457   000E6A  50DD               	movf	postdec2,w,c
  5458   000E6C  22EA               	addwfc	fsr0h,f,c
  5459   000E6E  0E01               	movlw	1
  5460   000E70  6EEF               	movwf	indf0,c
  5461   000E72                     i1l2118:
  5462                           
  5463                           ;sync.c: 71:         (INTCONbits.GIE = 1);
  5464   000E72  8EF2               	bsf	242,7,c	;volatile
  5465   000E74                     i1l102:
  5466   000E74  0012               	return		;funcret
  5467   000E76                     __end_of_mutex_lock:
  5468                           	callstack 0
  5469                           
  5470 ;; *************** function _tarefa_injecao_eletronica *****************
  5471 ;; Defined at:
  5472 ;;		line 46 in file "user_app.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  duty            1   41[BANK1 ] unsigned char 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5486 ;;      Params:         0       0       0       0       0       0       0       0       0
  5487 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5489 ;;      Totals:         0       0       1       0       0       0       0       0       0
  5490 ;;Total ram usage:        1 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 6
  5493 ;; This function calls:
  5494 ;;		_delay
  5495 ;;		_mutex_lock
  5496 ;;		_mutex_unlock
  5497 ;;		_pwm_set
  5498 ;; This function is called by:
  5499 ;;		_main
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text29
  5504   001FD4                     __ptext29:
  5505                           	callstack 0
  5506   001FD4                     _tarefa_injecao_eletronica:
  5507                           	callstack 19
  5508   001FD4                     l282:
  5509   001FD4                     
  5510                           ;user_app.c: 49:     {;user_app.c: 50:         uint8_t duty;;user_app.c: 51:         mut
      +                          ex_lock(&buffer_mutex);
  5511   001FD4  0E65               	movlw	low _buffer_mutex
  5512   001FD6  0101               	movlb	1	; () banked
  5513   001FD8  6F8C               	movwf	mutex_lock@m& (0+255),b
  5514   001FDA  0E01               	movlw	high _buffer_mutex
  5515   001FDC  6F8D               	movwf	(mutex_lock@m+1)& (0+255),b
  5516   001FDE  ECBC  F005         	call	_mutex_lock	;wreg free
  5517   001FE2                     
  5518                           ;user_app.c: 52:         duty = accel_data;
  5519   001FE2  C100  F195         	movff	_accel_data,tarefa_injecao_eletronica@duty	;volatile
  5520   001FE6                     
  5521                           ;user_app.c: 53:         mutex_unlock(&buffer_mutex);
  5522   001FE6  0E65               	movlw	low _buffer_mutex
  5523   001FE8  0101               	movlb	1	; () banked
  5524   001FEA  6F8C               	movwf	mutex_unlock@m& (0+255),b
  5525   001FEC  0E01               	movlw	high _buffer_mutex
  5526   001FEE  6F8D               	movwf	(mutex_unlock@m+1)& (0+255),b
  5527   001FF0  EC00  F00D         	call	_mutex_unlock	;wreg free
  5528   001FF4                     
  5529                           ;user_app.c: 55:         pwm_set(duty);
  5530   001FF4  0101               	movlb	1	; () banked
  5531   001FF6  5195               	movf	tarefa_injecao_eletronica@duty& (0+255),w,b
  5532   001FF8  EC7E  F00E         	call	_pwm_set
  5533   001FFC                     
  5534                           ;user_app.c: 56:         delay(5);
  5535   001FFC  0E00               	movlw	0
  5536   001FFE  0101               	movlb	1	; () banked
  5537   002000  6F97               	movwf	(delay@time+1)& (0+255),b
  5538   002002  0E05               	movlw	5
  5539   002004  6F96               	movwf	delay@time& (0+255),b
  5540   002006  ECB9  F008         	call	_delay	;wreg free
  5541   00200A  EFEA  F00F         	goto	l282
  5542   00200E  0012               	return		;funcret
  5543   002010                     __end_of_tarefa_injecao_eletronica:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function _pwm_set *****************
  5547 ;; Defined at:
  5548 ;;		line 38 in file "io.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  duty_cycle      1    wreg     unsigned char 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  duty_cycle      1   34[BANK1 ] unsigned char 
  5553 ;;  duty            2   35[BANK1 ] unsigned short 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0
  5564 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       2       0       0       0       0       0       0
  5566 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5567 ;;Total ram usage:        5 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 3
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_tarefa_injecao_eletronica
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text30
  5578   001CFC                     __ptext30:
  5579                           	callstack 0
  5580   001CFC                     _pwm_set:
  5581                           	callstack 21
  5582                           
  5583                           ;incstack = 0
  5584                           ;pwm_set@duty_cycle stored from wreg
  5585   001CFC  0101               	movlb	1	; () banked
  5586   001CFE  6F8E               	movwf	pwm_set@duty_cycle& (0+255),b
  5587   001D00                     
  5588                           ;io.c: 38: void pwm_set(uint8_t duty_cycle);io.c: 39: {;io.c: 40:     uint16_t duty = du
      +                          ty_cycle;
  5589   001D00  C18E  F18F         	movff	pwm_set@duty_cycle,pwm_set@duty
  5590   001D04  0101               	movlb	1	; () banked
  5591   001D06  6B90               	clrf	(pwm_set@duty+1)& (0+255),b
  5592   001D08                     
  5593                           ; BSR set to: 1
  5594                           ;io.c: 41:     duty = duty << 2;
  5595   001D08  C18F  F18C         	movff	pwm_set@duty,??_pwm_set
  5596   001D0C  C190  F18D         	movff	pwm_set@duty+1,??_pwm_set+1
  5597   001D10  90D8               	bcf	status,0,c
  5598   001D12  378C               	rlcf	??_pwm_set& (0+255),f,b
  5599   001D14  378D               	rlcf	(??_pwm_set+1)& (0+255),f,b
  5600   001D16  90D8               	bcf	status,0,c
  5601   001D18  378C               	rlcf	??_pwm_set& (0+255),f,b
  5602   001D1A  378D               	rlcf	(??_pwm_set+1)& (0+255),f,b
  5603   001D1C  C18C  F18F         	movff	??_pwm_set,pwm_set@duty
  5604   001D20  C18D  F190         	movff	??_pwm_set+1,pwm_set@duty+1
  5605                           
  5606                           ;io.c: 43:     if (duty > 1023) duty = 1023;
  5607   001D24  0E04               	movlw	4
  5608   001D26  5D90               	subwf	(pwm_set@duty+1)& (0+255),w,b
  5609   001D28  A0D8               	btfss	status,0,c
  5610   001D2A  EF99  F00E         	goto	i1u111_21
  5611   001D2E  EF9B  F00E         	goto	i1u111_20
  5612   001D32                     i1u111_21:
  5613   001D32  EF9E  F00E         	goto	i1l2208
  5614   001D36                     i1u111_20:
  5615   001D36                     
  5616                           ; BSR set to: 1
  5617   001D36  0E03               	movlw	3
  5618   001D38  6F90               	movwf	(pwm_set@duty+1)& (0+255),b
  5619   001D3A  698F               	setf	pwm_set@duty& (0+255),b
  5620   001D3C                     i1l2208:
  5621                           
  5622                           ; BSR set to: 1
  5623                           ;io.c: 45:     CCPR1L = duty >> 2;
  5624   001D3C  C18F  F18C         	movff	pwm_set@duty,??_pwm_set
  5625   001D40  C190  F18D         	movff	pwm_set@duty+1,??_pwm_set+1
  5626   001D44  90D8               	bcf	status,0,c
  5627   001D46  338D               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5628   001D48  338C               	rrcf	??_pwm_set& (0+255),f,b
  5629   001D4A  90D8               	bcf	status,0,c
  5630   001D4C  338D               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5631   001D4E  338C               	rrcf	??_pwm_set& (0+255),f,b
  5632   001D50  518C               	movf	??_pwm_set& (0+255),w,b
  5633   001D52  6EBE               	movwf	190,c	;volatile
  5634   001D54                     
  5635                           ; BSR set to: 1
  5636                           ;io.c: 46:     CCP1CONbits.DC1B = duty & 0x03;
  5637   001D54  C18F  F18C         	movff	pwm_set@duty,??_pwm_set
  5638   001D58  0E03               	movlw	3
  5639   001D5A  178C               	andwf	??_pwm_set& (0+255),f,b
  5640   001D5C  3B8C               	swapf	??_pwm_set& (0+255),f,b
  5641   001D5E  50BD               	movf	189,w,c	;volatile
  5642   001D60  198C               	xorwf	??_pwm_set& (0+255),w,b
  5643   001D62  0BCF               	andlw	-49
  5644   001D64  198C               	xorwf	??_pwm_set& (0+255),w,b
  5645   001D66  6EBD               	movwf	189,c	;volatile
  5646   001D68                     
  5647                           ; BSR set to: 1
  5648   001D68  0012               	return		;funcret
  5649   001D6A                     __end_of_pwm_set:
  5650                           	callstack 0
  5651                           
  5652 ;; *************** function _tarefa_estabilidade *****************
  5653 ;; Defined at:
  5654 ;;		line 61 in file "user_app.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;		None
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0
  5669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used: 1
  5674 ;; Hardware stack levels required when called: 6
  5675 ;; This function calls:
  5676 ;;		_change_state
  5677 ;;		_delay
  5678 ;; This function is called by:
  5679 ;;		_ISR
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text31
  5684   002078                     __ptext31:
  5685                           	callstack 0
  5686   002078                     _tarefa_estabilidade:
  5687                           	callstack 19
  5688   002078                     l288:
  5689   002078                     
  5690                           ;user_app.c: 64:     {;user_app.c: 65:         if (est_flag)
  5691   002078  5040               	movf	_est_flag^0,w,c	;volatile
  5692   00207A  B4D8               	btfsc	status,2,c
  5693   00207C  EF42  F010         	goto	u247_21
  5694   002080  EF44  F010         	goto	u247_20
  5695   002084                     u247_21:
  5696   002084  EF4E  F010         	goto	l289
  5697   002088                     u247_20:
  5698   002088                     
  5699                           ;user_app.c: 66:         {;user_app.c: 67:             est_flag = 0;
  5700   002088  6A40               	clrf	_est_flag^0,c	;volatile
  5701                           
  5702                           ;user_app.c: 68:             LATDbits.LD3 = 1;
  5703   00208A  868C               	bsf	140,3,c	;volatile
  5704   00208C                     
  5705                           ;user_app.c: 69:             delay(100);
  5706   00208C  0E00               	movlw	0
  5707   00208E  0101               	movlb	1	; () banked
  5708   002090  6F97               	movwf	(delay@time+1)& (0+255),b
  5709   002092  0E64               	movlw	100
  5710   002094  6F96               	movwf	delay@time& (0+255),b
  5711   002096  ECB9  F008         	call	_delay	;wreg free
  5712   00209A                     
  5713                           ;user_app.c: 70:             LATDbits.LD3 = 0;
  5714   00209A  968C               	bcf	140,3,c	;volatile
  5715   00209C                     l289:
  5716                           
  5717                           ;user_app.c: 74:         change_state(WAITING);
  5718   00209C  0E02               	movlw	2
  5719   00209E  EC0A  F00A         	call	_change_state
  5720   0020A2  EF3C  F010         	goto	l288
  5721   0020A6  0012               	return		;funcret
  5722   0020A8                     __end_of_tarefa_estabilidade:
  5723                           	callstack 0
  5724                           
  5725 ;; *************** function _change_state *****************
  5726 ;; Defined at:
  5727 ;;		line 80 in file "kernel.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  new_state       1    wreg     enum E3348
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  new_state       1   49[BANK1 ] enum E3348
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0
  5742 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5743 ;;      Temps:          0       0       7       0       0       0       0       0       0
  5744 ;;      Totals:         0       0       8       0       0       0       0       0       0
  5745 ;;Total ram usage:        8 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 5
  5748 ;; This function calls:
  5749 ;;		_scheduler
  5750 ;; This function is called by:
  5751 ;;		_tarefa_estabilidade
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text32
  5756   001414                     __ptext32:
  5757                           	callstack 0
  5758   001414                     _change_state:
  5759                           	callstack 19
  5760                           
  5761                           ;incstack = 0
  5762                           ;change_state@new_state stored from wreg
  5763   001414  0101               	movlb	1	; () banked
  5764   001416  6F9D               	movwf	change_state@new_state& (0+255),b
  5765   001418                     
  5766                           ;kernel.c: 80: void change_state(state_t new_state);kernel.c: 81: {;kernel.c: 82:     (I
      +                          NTCONbits.GIE = 0);
  5767   001418  9EF2               	bcf	242,7,c	;volatile
  5768   00141A  C483  F196         	movff	_r_queue+535,??_change_state
  5769   00141E  0101               	movlb	1	; () banked
  5770   001420  5196               	movf	??_change_state& (0+255),w,b
  5771   001422  0D6B               	mullw	107
  5772   001424  0E6C               	movlw	low _r_queue
  5773   001426  24F3               	addwf	243,w,c
  5774   001428  6F97               	movwf	(??_change_state+1)& (0+255),b
  5775   00142A  0E02               	movlw	high _r_queue
  5776   00142C  20F4               	addwfc	prodh,w,c
  5777   00142E  6F98               	movwf	(??_change_state+2)& (0+255),b
  5778   001430  C197  F485         	movff	??_change_state+1,_r_queue+537
  5779   001434  C198  F486         	movff	??_change_state+2,_r_queue+538
  5780   001438                     
  5781                           ; BSR set to: 1
  5782   001438  EE24  F085         	lfsr	2,_r_queue+537
  5783   00143C  EE00 F002          	lfsr	0,2
  5784   001440  50DE               	movf	postinc2,w,c
  5785   001442  26E9               	addwf	fsr0l,f,c
  5786   001444  50DD               	movf	postdec2,w,c
  5787   001446  22EA               	addwfc	fsr0h,f,c
  5788   001448  04EE               	decf	postinc0,w,c
  5789   00144A  A4D8               	btfss	status,2,c
  5790   00144C  EF2A  F00A         	goto	i1u112_21
  5791   001450  EF2C  F00A         	goto	i1u112_20
  5792   001454                     i1u112_21:
  5793   001454  EF9A  F00A         	goto	i1l2226
  5794   001458                     i1u112_20:
  5795   001458                     
  5796                           ; BSR set to: 1
  5797   001458  EE24  F085         	lfsr	2,_r_queue+537
  5798   00145C  EE00 F009          	lfsr	0,9
  5799   001460  50DE               	movf	postinc2,w,c
  5800   001462  26E9               	addwf	fsr0l,f,c
  5801   001464  50DD               	movf	postdec2,w,c
  5802   001466  22EA               	addwfc	fsr0h,f,c
  5803   001468  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5804   00146C  EE24  F085         	lfsr	2,_r_queue+537
  5805   001470  EE00 F008          	lfsr	0,8
  5806   001474  50DE               	movf	postinc2,w,c
  5807   001476  26E9               	addwf	fsr0l,f,c
  5808   001478  50DD               	movf	postdec2,w,c
  5809   00147A  22EA               	addwfc	fsr0h,f,c
  5810   00147C  CFD8 FFEF          	movff	status,indf0	;volatile
  5811   001480  EE24  F085         	lfsr	2,_r_queue+537
  5812   001484  EE00 F007          	lfsr	0,7
  5813   001488  50DE               	movf	postinc2,w,c
  5814   00148A  26E9               	addwf	fsr0l,f,c
  5815   00148C  50DD               	movf	postdec2,w,c
  5816   00148E  22EA               	addwfc	fsr0h,f,c
  5817   001490  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5818   001494  EE24  F085         	lfsr	2,_r_queue+537
  5819   001498  EE00 F06A          	lfsr	0,106
  5820   00149C  50DE               	movf	postinc2,w,c
  5821   00149E  26E9               	addwf	fsr0l,f,c
  5822   0014A0  50DD               	movf	postdec2,w,c
  5823   0014A2  22EA               	addwfc	fsr0h,f,c
  5824   0014A4  6AEF               	clrf	indf0,c
  5825   0014A6  EE24  F085         	lfsr	2,_r_queue+537
  5826   0014AA  EE00 F002          	lfsr	0,2
  5827   0014AE  50DE               	movf	postinc2,w,c
  5828   0014B0  26E9               	addwf	fsr0l,f,c
  5829   0014B2  50DD               	movf	postdec2,w,c
  5830   0014B4  22EA               	addwfc	fsr0h,f,c
  5831   0014B6  C19D  FFEF         	movff	change_state@new_state,indf0
  5832   0014BA  EF92  F00A         	goto	i1l2224
  5833   0014BE                     i1l2220:
  5834   0014BE  EE24  F085         	lfsr	2,_r_queue+537
  5835   0014C2  EE00 F06A          	lfsr	0,106
  5836   0014C6  50DE               	movf	postinc2,w,c
  5837   0014C8  26E9               	addwf	fsr0l,f,c
  5838   0014CA  50DD               	movf	postdec2,w,c
  5839   0014CC  22EA               	addwfc	fsr0h,f,c
  5840   0014CE  50EF               	movf	indf0,w,c
  5841   0014D0  0101               	movlb	1	; () banked
  5842   0014D2  6F96               	movwf	??_change_state& (0+255),b
  5843   0014D4  5196               	movf	??_change_state& (0+255),w,b
  5844   0014D6  0D03               	mullw	3
  5845   0014D8  CFF3 F197          	movff	prodl,??_change_state+1
  5846   0014DC  CFF4 F198          	movff	prodh,??_change_state+2
  5847   0014E0  EE24  F085         	lfsr	2,_r_queue+537
  5848   0014E4  CFDE F199          	movff	postinc2,??_change_state+3
  5849   0014E8  CFDD F19A          	movff	postdec2,??_change_state+4
  5850   0014EC  5197               	movf	(??_change_state+1)& (0+255),w,b
  5851   0014EE  2599               	addwf	(??_change_state+3)& (0+255),w,b
  5852   0014F0  6F9B               	movwf	(??_change_state+5)& (0+255),b
  5853   0014F2  5198               	movf	(??_change_state+2)& (0+255),w,b
  5854   0014F4  219A               	addwfc	(??_change_state+4)& (0+255),w,b
  5855   0014F6  6F9C               	movwf	(??_change_state+6)& (0+255),b
  5856   0014F8  0E0A               	movlw	10
  5857   0014FA  259B               	addwf	(??_change_state+5)& (0+255),w,b
  5858   0014FC  6ED9               	movwf	fsr2l,c
  5859   0014FE  0E00               	movlw	0
  5860   001500  219C               	addwfc	(??_change_state+6)& (0+255),w,b
  5861   001502  6EDA               	movwf	fsr2h,c
  5862   001504  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5863   001508  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5864   00150C  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5865   001510                     
  5866                           ; BSR set to: 1
  5867   001510  EE24  F085         	lfsr	2,_r_queue+537
  5868   001514  EE00 F06A          	lfsr	0,106
  5869   001518  50DE               	movf	postinc2,w,c
  5870   00151A  26E9               	addwf	fsr0l,f,c
  5871   00151C  50DD               	movf	postdec2,w,c
  5872   00151E  22EA               	addwfc	fsr0h,f,c
  5873   001520  2AEF               	incf	indf0,f,c
  5874   001522  0006               	pop		;# 
  5875   001524                     i1l2224:
  5876   001524  50FC               	movf	252,w,c	;volatile
  5877   001526  A4D8               	btfss	status,2,c
  5878   001528  EF98  F00A         	goto	i1u113_21
  5879   00152C  EF9A  F00A         	goto	i1u113_20
  5880   001530                     i1u113_21:
  5881   001530  EF5F  F00A         	goto	i1l2220
  5882   001534                     i1u113_20:
  5883   001534                     i1l2226:
  5884                           
  5885                           ;kernel.c: 85:     scheduler();
  5886   001534  ECDA  F010         	call	_scheduler	;wreg free
  5887   001538  C483  F196         	movff	_r_queue+535,??_change_state
  5888   00153C  0101               	movlb	1	; () banked
  5889   00153E  5196               	movf	??_change_state& (0+255),w,b
  5890   001540  0D6B               	mullw	107
  5891   001542  0E6C               	movlw	low _r_queue
  5892   001544  24F3               	addwf	243,w,c
  5893   001546  6F97               	movwf	(??_change_state+1)& (0+255),b
  5894   001548  0E02               	movlw	high _r_queue
  5895   00154A  20F4               	addwfc	prodh,w,c
  5896   00154C  6F98               	movwf	(??_change_state+2)& (0+255),b
  5897   00154E  C197  F485         	movff	??_change_state+1,_r_queue+537
  5898   001552  C198  F486         	movff	??_change_state+2,_r_queue+538
  5899   001556                     
  5900                           ; BSR set to: 1
  5901   001556  EE24  F085         	lfsr	2,_r_queue+537
  5902   00155A  EE00 F002          	lfsr	0,2
  5903   00155E  50DE               	movf	postinc2,w,c
  5904   001560  26E9               	addwf	fsr0l,f,c
  5905   001562  50DD               	movf	postdec2,w,c
  5906   001564  22EA               	addwfc	fsr0h,f,c
  5907   001566  50EF               	movf	indf0,w,c
  5908   001568  A4D8               	btfss	status,2,c
  5909   00156A  EFB9  F00A         	goto	i1u114_21
  5910   00156E  EFBB  F00A         	goto	i1u114_20
  5911   001572                     i1u114_21:
  5912   001572  EF4C  F00B         	goto	i1l2244
  5913   001576                     i1u114_20:
  5914   001576                     
  5915                           ; BSR set to: 1
  5916   001576  6AFC               	clrf	252,c	;volatile
  5917   001578                     
  5918                           ; BSR set to: 1
  5919   001578  EE24  F085         	lfsr	2,_r_queue+537
  5920   00157C  EE00 F06A          	lfsr	0,106
  5921   001580  50DE               	movf	postinc2,w,c
  5922   001582  26E9               	addwf	fsr0l,f,c
  5923   001584  50DD               	movf	postdec2,w,c
  5924   001586  22EA               	addwfc	fsr0h,f,c
  5925   001588  50EF               	movf	indf0,w,c
  5926   00158A  B4D8               	btfsc	status,2,c
  5927   00158C  EFCA  F00A         	goto	i1u115_21
  5928   001590  EFCC  F00A         	goto	i1u115_20
  5929   001594                     i1u115_21:
  5930   001594  EF30  F00B         	goto	i1l377
  5931   001598                     i1u115_20:
  5932   001598                     
  5933                           ; BSR set to: 1
  5934   001598  EE24  F085         	lfsr	2,_r_queue+537
  5935   00159C  EE00 F009          	lfsr	0,9
  5936   0015A0  50DE               	movf	postinc2,w,c
  5937   0015A2  26E9               	addwf	fsr0l,f,c
  5938   0015A4  50DD               	movf	postdec2,w,c
  5939   0015A6  22EA               	addwfc	fsr0h,f,c
  5940   0015A8  50EF               	movf	indf0,w,c
  5941   0015AA  6EE0               	movwf	224,c	;volatile
  5942   0015AC  EE24  F085         	lfsr	2,_r_queue+537
  5943   0015B0  EE00 F008          	lfsr	0,8
  5944   0015B4  50DE               	movf	postinc2,w,c
  5945   0015B6  26E9               	addwf	fsr0l,f,c
  5946   0015B8  50DD               	movf	postdec2,w,c
  5947   0015BA  22EA               	addwfc	fsr0h,f,c
  5948   0015BC  50EF               	movf	indf0,w,c
  5949   0015BE  6ED8               	movwf	216,c	;volatile
  5950   0015C0  EE24  F085         	lfsr	2,_r_queue+537
  5951   0015C4  EE00 F007          	lfsr	0,7
  5952   0015C8  50DE               	movf	postinc2,w,c
  5953   0015CA  26E9               	addwf	fsr0l,f,c
  5954   0015CC  50DD               	movf	postdec2,w,c
  5955   0015CE  22EA               	addwfc	fsr0h,f,c
  5956   0015D0  50EF               	movf	indf0,w,c
  5957   0015D2  6F96               	movwf	??_change_state& (0+255),b
  5958   0015D4  5196               	movf	??_change_state& (0+255),w,b
  5959   0015D6                     i1l378:
  5960                           
  5961                           ; BSR set to: 1
  5962   0015D6  0005               	push		;# 
  5963   0015D8  EE24  F085         	lfsr	2,_r_queue+537
  5964   0015DC  EE00 F06A          	lfsr	0,106
  5965   0015E0  50DE               	movf	postinc2,w,c
  5966   0015E2  26E9               	addwf	fsr0l,f,c
  5967   0015E4  50DD               	movf	postdec2,w,c
  5968   0015E6  22EA               	addwfc	fsr0h,f,c
  5969   0015E8  06EF               	decf	indf0,f,c
  5970   0015EA  EE24  F085         	lfsr	2,_r_queue+537
  5971   0015EE  EE00 F06A          	lfsr	0,106
  5972   0015F2  50DE               	movf	postinc2,w,c
  5973   0015F4  26E9               	addwf	fsr0l,f,c
  5974   0015F6  50DD               	movf	postdec2,w,c
  5975   0015F8  22EA               	addwfc	fsr0h,f,c
  5976   0015FA  50EF               	movf	indf0,w,c
  5977   0015FC  0101               	movlb	1	; () banked
  5978   0015FE  6F96               	movwf	??_change_state& (0+255),b
  5979   001600  5196               	movf	??_change_state& (0+255),w,b
  5980   001602  0D03               	mullw	3
  5981   001604  CFF3 F197          	movff	prodl,??_change_state+1
  5982   001608  CFF4 F198          	movff	prodh,??_change_state+2
  5983   00160C  EE24  F085         	lfsr	2,_r_queue+537
  5984   001610  CFDE F199          	movff	postinc2,??_change_state+3
  5985   001614  CFDD F19A          	movff	postdec2,??_change_state+4
  5986   001618  5197               	movf	(??_change_state+1)& (0+255),w,b
  5987   00161A  2599               	addwf	(??_change_state+3)& (0+255),w,b
  5988   00161C  6F9B               	movwf	(??_change_state+5)& (0+255),b
  5989   00161E  5198               	movf	(??_change_state+2)& (0+255),w,b
  5990   001620  219A               	addwfc	(??_change_state+4)& (0+255),w,b
  5991   001622  6F9C               	movwf	(??_change_state+6)& (0+255),b
  5992   001624  0E0A               	movlw	10
  5993   001626  259B               	addwf	(??_change_state+5)& (0+255),w,b
  5994   001628  6ED9               	movwf	fsr2l,c
  5995   00162A  0E00               	movlw	0
  5996   00162C  219C               	addwfc	(??_change_state+6)& (0+255),w,b
  5997   00162E  6EDA               	movwf	fsr2h,c
  5998   001630  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5999   001634  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6000   001638  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6001   00163C                     
  6002                           ; BSR set to: 1
  6003   00163C  EE24  F085         	lfsr	2,_r_queue+537
  6004   001640  EE00 F06A          	lfsr	0,106
  6005   001644  50DE               	movf	postinc2,w,c
  6006   001646  26E9               	addwf	fsr0l,f,c
  6007   001648  50DD               	movf	postdec2,w,c
  6008   00164A  22EA               	addwfc	fsr0h,f,c
  6009   00164C  50EF               	movf	indf0,w,c
  6010   00164E  A4D8               	btfss	status,2,c
  6011   001650  EF2C  F00B         	goto	i1u116_21
  6012   001654  EF2E  F00B         	goto	i1u116_20
  6013   001658                     i1u116_21:
  6014   001658  EFEB  F00A         	goto	i1l378
  6015   00165C                     i1u116_20:
  6016   00165C  EF42  F00B         	goto	i1l380
  6017   001660                     i1l377:
  6018                           
  6019                           ; BSR set to: 1
  6020   001660  0005               	push		;# 
  6021   001662  EE24  F085         	lfsr	2,_r_queue+537
  6022   001666  EE00 F003          	lfsr	0,3
  6023   00166A  50DE               	movf	postinc2,w,c
  6024   00166C  26E9               	addwf	fsr0l,f,c
  6025   00166E  50DD               	movf	postdec2,w,c
  6026   001670  22EA               	addwfc	fsr0h,f,c
  6027   001672  CFEE F196          	movff	postinc0,??_change_state
  6028   001676  CFED F197          	movff	postdec0,??_change_state+1
  6029   00167A  C196  FFFD         	movff	??_change_state,tosl	;volatile
  6030   00167E  C197  FFFE         	movff	??_change_state+1,tosh	;volatile
  6031   001682  6AFF               	clrf	255,c	;volatile
  6032   001684                     i1l380:
  6033   001684  EE24  F085         	lfsr	2,_r_queue+537
  6034   001688  EE00 F002          	lfsr	0,2
  6035   00168C  50DE               	movf	postinc2,w,c
  6036   00168E  26E9               	addwf	fsr0l,f,c
  6037   001690  50DD               	movf	postdec2,w,c
  6038   001692  22EA               	addwfc	fsr0h,f,c
  6039   001694  0E01               	movlw	1
  6040   001696  6EEF               	movwf	indf0,c
  6041   001698                     i1l2244:
  6042                           
  6043                           ;kernel.c: 88:     (INTCONbits.GIE = 1);
  6044   001698  8EF2               	bsf	242,7,c	;volatile
  6045   00169A  0012               	return		;funcret
  6046   00169C                     __end_of_change_state:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function _idle *****************
  6050 ;; Defined at:
  6051 ;;		line 92 in file "kernel.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		None
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used: 1
  6071 ;; Hardware stack levels required when called: 3
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_os_init
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text33
  6080   0021AC                     __ptext33:
  6081                           	callstack 0
  6082   0021AC                     _idle:
  6083                           	callstack 22
  6084   0021AC                     l385:
  6085                           
  6086                           ;kernel.c: 99:     {;kernel.c: 103:         __nop();
  6087   0021AC  0000               	nop	
  6088   0021AE  EFD6  F010         	goto	l385
  6089   0021B2  0012               	return		;funcret
  6090   0021B4                     __end_of_idle:
  6091                           	callstack 0
  6092                           
  6093 ;; *************** function _ISR *****************
  6094 ;; Defined at:
  6095 ;;		line 8 in file "timer.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  tid             1   21[COMRAM] unsigned char 
  6100 ;;  idx             1   22[COMRAM] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0
  6111 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6112 ;;      Temps:         17       0       0       0       0       0       0       0       0
  6113 ;;      Totals:        19       0       0       0       0       0       0       0       0
  6114 ;;Total ram usage:       19 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 2
  6117 ;; This function calls:
  6118 ;;		_decrease_time
  6119 ;;		_scheduler
  6120 ;;		i2_create_task
  6121 ;; This function is called by:
  6122 ;;		Interrupt level 2
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	intcode
  6127   000008                     __pintcode:
  6128                           	callstack 0
  6129   000008                     _ISR:
  6130                           	callstack 18
  6131                           
  6132                           ;incstack = 0
  6133   000008  ED01  F004         	call	int_func,f	;refresh shadow registers
  6134                           
  6135                           	psect	intcode_body
  6136   000802                     __pintcode_body:
  6137                           	callstack 18
  6138   000802                     int_func:
  6139                           	callstack 18
  6140   000802  0006               	pop		; remove dummy address from shadow register refresh
  6141   000804  CFE9 F02C          	movff	fsr0l,??_ISR+7
  6142   000808  CFEA F02D          	movff	fsr0h,??_ISR+8
  6143   00080C  CFE1 F02E          	movff	fsr1l,??_ISR+9
  6144   000810  CFE2 F02F          	movff	fsr1h,??_ISR+10
  6145   000814  CFD9 F030          	movff	fsr2l,??_ISR+11
  6146   000818  CFDA F031          	movff	fsr2h,??_ISR+12
  6147   00081C  CFF3 F032          	movff	prodl,??_ISR+13
  6148   000820  CFF4 F033          	movff	prodh,??_ISR+14
  6149   000824  C001  F034         	movff	btemp,??_ISR+15
  6150   000828  C00C  F035         	movff	btemp+11,??_ISR+16
  6151   00082C  EE16  F044         	lfsr	1,___inthi_sp
  6152   000830                     
  6153                           ;timer.c: 10:     (INTCONbits.GIE = 0);
  6154   000830  9EF2               	bcf	242,7,c	;volatile
  6155                           
  6156                           ;timer.c: 13:     if (INTCONbits.INT0IF)
  6157   000832  A2F2               	btfss	242,1,c	;volatile
  6158   000834  EF1E  F004         	goto	i2u248_41
  6159   000838  EF20  F004         	goto	i2u248_40
  6160   00083C                     i2u248_41:
  6161   00083C  EF5E  F004         	goto	i2l427
  6162   000840                     i2u248_40:
  6163   000840                     
  6164                           ;timer.c: 14:     {;timer.c: 15:         INTCONbits.INT0IF = 0;
  6165   000840  92F2               	bcf	242,1,c	;volatile
  6166   000842                     
  6167                           ;timer.c: 17:         create_task(4, 1, tarefa_estabilidade);
  6168   000842  0E01               	movlw	1
  6169   000844  6E21               	movwf	i2create_task@priority^0,c
  6170   000846  0E78               	movlw	low _tarefa_estabilidade
  6171   000848  6E22               	movwf	i2create_task@task^0,c
  6172   00084A  0E20               	movlw	high _tarefa_estabilidade
  6173   00084C  6E23               	movwf	(i2create_task@task+1)^0,c
  6174   00084E  0E04               	movlw	4
  6175   000850  EC77  F00F         	call	i2_create_task
  6176   000854                     
  6177                           ;timer.c: 19:         for (uint8_t idx = 0; idx < r_queue.ready_queue_size; idx++) {
  6178   000854  6A37               	clrf	ISR@idx^0,c
  6179   000856  EF53  F004         	goto	i2l3436
  6180   00085A                     i2l3426:
  6181                           
  6182                           ;timer.c: 20:             uint8_t tid = r_queue.ready_queue[idx].task_id;
  6183   00085A  5037               	movf	ISR@idx^0,w,c
  6184   00085C  0D6B               	mullw	107
  6185   00085E  0E6C               	movlw	low _r_queue
  6186   000860  24F3               	addwf	243,w,c
  6187   000862  6ED9               	movwf	fsr2l,c
  6188   000864  0E02               	movlw	high _r_queue
  6189   000866  20F4               	addwfc	prodh,w,c
  6190   000868  6EDA               	movwf	fsr2h,c
  6191   00086A  50DF               	movf	indf2,w,c
  6192   00086C  6E36               	movwf	ISR@tid^0,c
  6193   00086E                     
  6194                           ;timer.c: 21:             if (tid != 0 && tid != 4) {
  6195   00086E  5036               	movf	ISR@tid^0,w,c
  6196   000870  B4D8               	btfsc	status,2,c
  6197   000872  EF3D  F004         	goto	i2u249_41
  6198   000876  EF3F  F004         	goto	i2u249_40
  6199   00087A                     i2u249_41:
  6200   00087A  EF52  F004         	goto	i2l3434
  6201   00087E                     i2u249_40:
  6202   00087E  0E04               	movlw	4
  6203   000880  1836               	xorwf	ISR@tid^0,w,c
  6204   000882  B4D8               	btfsc	status,2,c
  6205   000884  EF46  F004         	goto	i2u250_41
  6206   000888  EF48  F004         	goto	i2u250_40
  6207   00088C                     i2u250_41:
  6208   00088C  EF52  F004         	goto	i2l3434
  6209   000890                     i2u250_40:
  6210   000890                     
  6211                           ;timer.c: 22:                 r_queue.ready_queue[idx].task_state = WAITING;
  6212   000890  5037               	movf	ISR@idx^0,w,c
  6213   000892  0D6B               	mullw	107
  6214   000894  0E6E               	movlw	low (_r_queue+2)
  6215   000896  24F3               	addwf	243,w,c
  6216   000898  6ED9               	movwf	fsr2l,c
  6217   00089A  0E02               	movlw	high (_r_queue+2)
  6218   00089C  20F4               	addwfc	prodh,w,c
  6219   00089E  6EDA               	movwf	fsr2h,c
  6220   0008A0  0E02               	movlw	2
  6221   0008A2  6EDF               	movwf	indf2,c
  6222   0008A4                     i2l3434:
  6223                           
  6224                           ;timer.c: 24:         }
  6225   0008A4  2A37               	incf	ISR@idx^0,f,c
  6226   0008A6                     i2l3436:
  6227   0008A6  EE24  F084         	lfsr	2,_r_queue+536
  6228   0008AA  50DE               	movf	postinc2,w,c
  6229   0008AC  5C37               	subwf	ISR@idx^0,w,c
  6230   0008AE  A0D8               	btfss	status,0,c
  6231   0008B0  EF5C  F004         	goto	i2u251_41
  6232   0008B4  EF5E  F004         	goto	i2u251_40
  6233   0008B8                     i2u251_41:
  6234   0008B8  EF2D  F004         	goto	i2l3426
  6235   0008BC                     i2u251_40:
  6236   0008BC                     i2l427:
  6237                           
  6238                           ;timer.c: 28:     if (INTCONbits.TMR0IF)
  6239   0008BC  A4F2               	btfss	242,2,c	;volatile
  6240   0008BE  EF63  F004         	goto	i2u252_41
  6241   0008C2  EF65  F004         	goto	i2u252_40
  6242   0008C6                     i2u252_41:
  6243   0008C6  EFA6  F005         	goto	i2l3474
  6244   0008CA                     i2u252_40:
  6245   0008CA                     
  6246                           ;timer.c: 29:     {;timer.c: 30:         INTCONbits.TMR0IF = 0;
  6247   0008CA  94F2               	bcf	242,2,c	;volatile
  6248   0008CC                     
  6249                           ;timer.c: 31:         TMR0 = 0;
  6250   0008CC  0E00               	movlw	0
  6251   0008CE  6ED7               	movwf	215,c	;volatile
  6252   0008D0  0E00               	movlw	0
  6253   0008D2  6ED6               	movwf	214,c	;volatile
  6254   0008D4                     
  6255                           ;timer.c: 33:         decrease_time();
  6256   0008D4  EC37  F00E         	call	_decrease_time	;wreg free
  6257   0008D8  C483  F025         	movff	_r_queue+535,??_ISR
  6258   0008DC  5025               	movf	??_ISR^0,w,c
  6259   0008DE  0D6B               	mullw	107
  6260   0008E0  0E6C               	movlw	low _r_queue
  6261   0008E2  24F3               	addwf	243,w,c
  6262   0008E4  6E26               	movwf	(??_ISR+1)^0,c
  6263   0008E6  0E02               	movlw	high _r_queue
  6264   0008E8  20F4               	addwfc	prodh,w,c
  6265   0008EA  6E27               	movwf	(??_ISR+2)^0,c
  6266   0008EC  C026  F485         	movff	??_ISR+1,_r_queue+537
  6267   0008F0  C027  F486         	movff	??_ISR+2,_r_queue+538
  6268   0008F4  EE24  F085         	lfsr	2,_r_queue+537
  6269   0008F8  EE00 F002          	lfsr	0,2
  6270   0008FC  50DE               	movf	postinc2,w,c
  6271   0008FE  26E9               	addwf	fsr0l,f,c
  6272   000900  50DD               	movf	postdec2,w,c
  6273   000902  22EA               	addwfc	fsr0h,f,c
  6274   000904  04EE               	decf	postinc0,w,c
  6275   000906  A4D8               	btfss	status,2,c
  6276   000908  EF88  F004         	goto	i2u253_41
  6277   00090C  EF8A  F004         	goto	i2u253_40
  6278   000910                     i2u253_41:
  6279   000910  EFF6  F004         	goto	i2l3456
  6280   000914                     i2u253_40:
  6281   000914  EE24  F085         	lfsr	2,_r_queue+537
  6282   000918  EE00 F009          	lfsr	0,9
  6283   00091C  50DE               	movf	postinc2,w,c
  6284   00091E  26E9               	addwf	fsr0l,f,c
  6285   000920  50DD               	movf	postdec2,w,c
  6286   000922  22EA               	addwfc	fsr0h,f,c
  6287   000924  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6288   000928  EE24  F085         	lfsr	2,_r_queue+537
  6289   00092C  EE00 F008          	lfsr	0,8
  6290   000930  50DE               	movf	postinc2,w,c
  6291   000932  26E9               	addwf	fsr0l,f,c
  6292   000934  50DD               	movf	postdec2,w,c
  6293   000936  22EA               	addwfc	fsr0h,f,c
  6294   000938  CFD8 FFEF          	movff	status,indf0	;volatile
  6295   00093C  EE24  F085         	lfsr	2,_r_queue+537
  6296   000940  EE00 F007          	lfsr	0,7
  6297   000944  50DE               	movf	postinc2,w,c
  6298   000946  26E9               	addwf	fsr0l,f,c
  6299   000948  50DD               	movf	postdec2,w,c
  6300   00094A  22EA               	addwfc	fsr0h,f,c
  6301   00094C  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6302   000950  EE24  F085         	lfsr	2,_r_queue+537
  6303   000954  EE00 F06A          	lfsr	0,106
  6304   000958  50DE               	movf	postinc2,w,c
  6305   00095A  26E9               	addwf	fsr0l,f,c
  6306   00095C  50DD               	movf	postdec2,w,c
  6307   00095E  22EA               	addwfc	fsr0h,f,c
  6308   000960  6AEF               	clrf	indf0,c
  6309   000962  EE24  F085         	lfsr	2,_r_queue+537
  6310   000966  EE00 F002          	lfsr	0,2
  6311   00096A  50DE               	movf	postinc2,w,c
  6312   00096C  26E9               	addwf	fsr0l,f,c
  6313   00096E  50DD               	movf	postdec2,w,c
  6314   000970  22EA               	addwfc	fsr0h,f,c
  6315   000972  6AEF               	clrf	indf0,c
  6316   000974  EFEE  F004         	goto	i2l3454
  6317   000978                     i2l3450:
  6318   000978  EE24  F085         	lfsr	2,_r_queue+537
  6319   00097C  EE00 F06A          	lfsr	0,106
  6320   000980  50DE               	movf	postinc2,w,c
  6321   000982  26E9               	addwf	fsr0l,f,c
  6322   000984  50DD               	movf	postdec2,w,c
  6323   000986  22EA               	addwfc	fsr0h,f,c
  6324   000988  50EF               	movf	indf0,w,c
  6325   00098A  6E25               	movwf	??_ISR^0,c
  6326   00098C  5025               	movf	??_ISR^0,w,c
  6327   00098E  0D03               	mullw	3
  6328   000990  CFF3 F026          	movff	prodl,??_ISR+1
  6329   000994  CFF4 F027          	movff	prodh,??_ISR+2
  6330   000998  EE24  F085         	lfsr	2,_r_queue+537
  6331   00099C  CFDE F028          	movff	postinc2,??_ISR+3
  6332   0009A0  CFDD F029          	movff	postdec2,??_ISR+4
  6333   0009A4  5026               	movf	(??_ISR+1)^0,w,c
  6334   0009A6  2428               	addwf	(??_ISR+3)^0,w,c
  6335   0009A8  6E2A               	movwf	(??_ISR+5)^0,c
  6336   0009AA  5027               	movf	(??_ISR+2)^0,w,c
  6337   0009AC  2029               	addwfc	(??_ISR+4)^0,w,c
  6338   0009AE  6E2B               	movwf	(??_ISR+6)^0,c
  6339   0009B0  0E0A               	movlw	10
  6340   0009B2  242A               	addwf	(??_ISR+5)^0,w,c
  6341   0009B4  6ED9               	movwf	fsr2l,c
  6342   0009B6  0E00               	movlw	0
  6343   0009B8  202B               	addwfc	(??_ISR+6)^0,w,c
  6344   0009BA  6EDA               	movwf	fsr2h,c
  6345   0009BC  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6346   0009C0  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6347   0009C4  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6348   0009C8  EE24  F085         	lfsr	2,_r_queue+537
  6349   0009CC  EE00 F06A          	lfsr	0,106
  6350   0009D0  50DE               	movf	postinc2,w,c
  6351   0009D2  26E9               	addwf	fsr0l,f,c
  6352   0009D4  50DD               	movf	postdec2,w,c
  6353   0009D6  22EA               	addwfc	fsr0h,f,c
  6354   0009D8  2AEF               	incf	indf0,f,c
  6355   0009DA  0006               	pop		;# 
  6356   0009DC                     i2l3454:
  6357   0009DC  50FC               	movf	252,w,c	;volatile
  6358   0009DE  A4D8               	btfss	status,2,c
  6359   0009E0  EFF4  F004         	goto	i2u254_41
  6360   0009E4  EFF6  F004         	goto	i2u254_40
  6361   0009E8                     i2u254_41:
  6362   0009E8  EFBC  F004         	goto	i2l3450
  6363   0009EC                     i2u254_40:
  6364   0009EC                     i2l3456:
  6365                           
  6366                           ;timer.c: 36:         scheduler();
  6367   0009EC  ECDA  F010         	call	_scheduler	;wreg free
  6368   0009F0  C483  F025         	movff	_r_queue+535,??_ISR
  6369   0009F4  5025               	movf	??_ISR^0,w,c
  6370   0009F6  0D6B               	mullw	107
  6371   0009F8  0E6C               	movlw	low _r_queue
  6372   0009FA  24F3               	addwf	243,w,c
  6373   0009FC  6E26               	movwf	(??_ISR+1)^0,c
  6374   0009FE  0E02               	movlw	high _r_queue
  6375   000A00  20F4               	addwfc	prodh,w,c
  6376   000A02  6E27               	movwf	(??_ISR+2)^0,c
  6377   000A04  C026  F485         	movff	??_ISR+1,_r_queue+537
  6378   000A08  C027  F486         	movff	??_ISR+2,_r_queue+538
  6379   000A0C  EE24  F085         	lfsr	2,_r_queue+537
  6380   000A10  EE00 F002          	lfsr	0,2
  6381   000A14  50DE               	movf	postinc2,w,c
  6382   000A16  26E9               	addwf	fsr0l,f,c
  6383   000A18  50DD               	movf	postdec2,w,c
  6384   000A1A  22EA               	addwfc	fsr0h,f,c
  6385   000A1C  50EF               	movf	indf0,w,c
  6386   000A1E  A4D8               	btfss	status,2,c
  6387   000A20  EF14  F005         	goto	i2u255_41
  6388   000A24  EF16  F005         	goto	i2u255_40
  6389   000A28                     i2u255_41:
  6390   000A28  EFA6  F005         	goto	i2l3474
  6391   000A2C                     i2u255_40:
  6392   000A2C  6AFC               	clrf	252,c	;volatile
  6393   000A2E  EE24  F085         	lfsr	2,_r_queue+537
  6394   000A32  EE00 F06A          	lfsr	0,106
  6395   000A36  50DE               	movf	postinc2,w,c
  6396   000A38  26E9               	addwf	fsr0l,f,c
  6397   000A3A  50DD               	movf	postdec2,w,c
  6398   000A3C  22EA               	addwfc	fsr0h,f,c
  6399   000A3E  50EF               	movf	indf0,w,c
  6400   000A40  B4D8               	btfsc	status,2,c
  6401   000A42  EF25  F005         	goto	i2u256_41
  6402   000A46  EF27  F005         	goto	i2u256_40
  6403   000A4A                     i2u256_41:
  6404   000A4A  EF8A  F005         	goto	i2l441
  6405   000A4E                     i2u256_40:
  6406   000A4E  EE24  F085         	lfsr	2,_r_queue+537
  6407   000A52  EE00 F009          	lfsr	0,9
  6408   000A56  50DE               	movf	postinc2,w,c
  6409   000A58  26E9               	addwf	fsr0l,f,c
  6410   000A5A  50DD               	movf	postdec2,w,c
  6411   000A5C  22EA               	addwfc	fsr0h,f,c
  6412   000A5E  50EF               	movf	indf0,w,c
  6413   000A60  6EE0               	movwf	224,c	;volatile
  6414   000A62  EE24  F085         	lfsr	2,_r_queue+537
  6415   000A66  EE00 F008          	lfsr	0,8
  6416   000A6A  50DE               	movf	postinc2,w,c
  6417   000A6C  26E9               	addwf	fsr0l,f,c
  6418   000A6E  50DD               	movf	postdec2,w,c
  6419   000A70  22EA               	addwfc	fsr0h,f,c
  6420   000A72  50EF               	movf	indf0,w,c
  6421   000A74  6ED8               	movwf	216,c	;volatile
  6422   000A76  EE24  F085         	lfsr	2,_r_queue+537
  6423   000A7A  EE00 F007          	lfsr	0,7
  6424   000A7E  50DE               	movf	postinc2,w,c
  6425   000A80  26E9               	addwf	fsr0l,f,c
  6426   000A82  50DD               	movf	postdec2,w,c
  6427   000A84  22EA               	addwfc	fsr0h,f,c
  6428   000A86  50EF               	movf	indf0,w,c
  6429   000A88  6E25               	movwf	??_ISR^0,c
  6430   000A8A  5025               	movf	??_ISR^0,w,c
  6431   000A8C                     i2l442:
  6432   000A8C  0005               	push		;# 
  6433   000A8E  EE24  F085         	lfsr	2,_r_queue+537
  6434   000A92  EE00 F06A          	lfsr	0,106
  6435   000A96  50DE               	movf	postinc2,w,c
  6436   000A98  26E9               	addwf	fsr0l,f,c
  6437   000A9A  50DD               	movf	postdec2,w,c
  6438   000A9C  22EA               	addwfc	fsr0h,f,c
  6439   000A9E  06EF               	decf	indf0,f,c
  6440   000AA0  EE24  F085         	lfsr	2,_r_queue+537
  6441   000AA4  EE00 F06A          	lfsr	0,106
  6442   000AA8  50DE               	movf	postinc2,w,c
  6443   000AAA  26E9               	addwf	fsr0l,f,c
  6444   000AAC  50DD               	movf	postdec2,w,c
  6445   000AAE  22EA               	addwfc	fsr0h,f,c
  6446   000AB0  50EF               	movf	indf0,w,c
  6447   000AB2  6E25               	movwf	??_ISR^0,c
  6448   000AB4  5025               	movf	??_ISR^0,w,c
  6449   000AB6  0D03               	mullw	3
  6450   000AB8  CFF3 F026          	movff	prodl,??_ISR+1
  6451   000ABC  CFF4 F027          	movff	prodh,??_ISR+2
  6452   000AC0  EE24  F085         	lfsr	2,_r_queue+537
  6453   000AC4  CFDE F028          	movff	postinc2,??_ISR+3
  6454   000AC8  CFDD F029          	movff	postdec2,??_ISR+4
  6455   000ACC  5026               	movf	(??_ISR+1)^0,w,c
  6456   000ACE  2428               	addwf	(??_ISR+3)^0,w,c
  6457   000AD0  6E2A               	movwf	(??_ISR+5)^0,c
  6458   000AD2  5027               	movf	(??_ISR+2)^0,w,c
  6459   000AD4  2029               	addwfc	(??_ISR+4)^0,w,c
  6460   000AD6  6E2B               	movwf	(??_ISR+6)^0,c
  6461   000AD8  0E0A               	movlw	10
  6462   000ADA  242A               	addwf	(??_ISR+5)^0,w,c
  6463   000ADC  6ED9               	movwf	fsr2l,c
  6464   000ADE  0E00               	movlw	0
  6465   000AE0  202B               	addwfc	(??_ISR+6)^0,w,c
  6466   000AE2  6EDA               	movwf	fsr2h,c
  6467   000AE4  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6468   000AE8  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6469   000AEC  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6470   000AF0  EE24  F085         	lfsr	2,_r_queue+537
  6471   000AF4  EE00 F06A          	lfsr	0,106
  6472   000AF8  50DE               	movf	postinc2,w,c
  6473   000AFA  26E9               	addwf	fsr0l,f,c
  6474   000AFC  50DD               	movf	postdec2,w,c
  6475   000AFE  22EA               	addwfc	fsr0h,f,c
  6476   000B00  50EF               	movf	indf0,w,c
  6477   000B02  A4D8               	btfss	status,2,c
  6478   000B04  EF86  F005         	goto	i2u257_41
  6479   000B08  EF88  F005         	goto	i2u257_40
  6480   000B0C                     i2u257_41:
  6481   000B0C  EF46  F005         	goto	i2l442
  6482   000B10                     i2u257_40:
  6483   000B10  EF9C  F005         	goto	i2l444
  6484   000B14                     i2l441:
  6485   000B14  0005               	push		;# 
  6486   000B16  EE24  F085         	lfsr	2,_r_queue+537
  6487   000B1A  EE00 F003          	lfsr	0,3
  6488   000B1E  50DE               	movf	postinc2,w,c
  6489   000B20  26E9               	addwf	fsr0l,f,c
  6490   000B22  50DD               	movf	postdec2,w,c
  6491   000B24  22EA               	addwfc	fsr0h,f,c
  6492   000B26  CFEE F025          	movff	postinc0,??_ISR
  6493   000B2A  CFED F026          	movff	postdec0,??_ISR+1
  6494   000B2E  C025  FFFD         	movff	??_ISR,tosl	;volatile
  6495   000B32  C026  FFFE         	movff	??_ISR+1,tosh	;volatile
  6496   000B36  6AFF               	clrf	255,c	;volatile
  6497   000B38                     i2l444:
  6498   000B38  EE24  F085         	lfsr	2,_r_queue+537
  6499   000B3C  EE00 F002          	lfsr	0,2
  6500   000B40  50DE               	movf	postinc2,w,c
  6501   000B42  26E9               	addwf	fsr0l,f,c
  6502   000B44  50DD               	movf	postdec2,w,c
  6503   000B46  22EA               	addwfc	fsr0h,f,c
  6504   000B48  0E01               	movlw	1
  6505   000B4A  6EEF               	movwf	indf0,c
  6506   000B4C                     i2l3474:
  6507                           
  6508                           ;timer.c: 40:     (INTCONbits.GIE = 1);
  6509   000B4C  8EF2               	bsf	242,7,c	;volatile
  6510   000B4E  C035  F00C         	movff	??_ISR+16,btemp+11
  6511   000B52  C034  F001         	movff	??_ISR+15,btemp
  6512   000B56  C033  FFF4         	movff	??_ISR+14,prodh
  6513   000B5A  C032  FFF3         	movff	??_ISR+13,prodl
  6514   000B5E  C031  FFDA         	movff	??_ISR+12,fsr2h
  6515   000B62  C030  FFD9         	movff	??_ISR+11,fsr2l
  6516   000B66  C02F  FFE2         	movff	??_ISR+10,fsr1h
  6517   000B6A  C02E  FFE1         	movff	??_ISR+9,fsr1l
  6518   000B6E  C02D  FFEA         	movff	??_ISR+8,fsr0h
  6519   000B72  C02C  FFE9         	movff	??_ISR+7,fsr0l
  6520   000B76  0011               	retfie		f
  6521   000B78                     __end_of_ISR:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function i2_create_task *****************
  6525 ;; Defined at:
  6526 ;;		line 11 in file "kernel.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  id              1    wreg     unsigned char 
  6529 ;;  priority        1    0[COMRAM] unsigned char 
  6530 ;;  task            2    1[COMRAM] PTR FTN()void 
  6531 ;;		 -> idle(1), tarefa_estabilidade(1), tarefa_injecao_eletronica(1), tarefa_controle_central(1), 
  6532 ;;		 -> tarefa_acelerador(1), 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  id              1    0[BANK0 ] unsigned char 
  6535 ;;  new_task      107    1[BANK0 ] struct tcb
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6545 ;;      Params:         3       0       0       0       0       0       0       0       0
  6546 ;;      Locals:         0     108       0       0       0       0       0       0       0
  6547 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6548 ;;      Totals:         4     108       0       0       0       0       0       0       0
  6549 ;;Total ram usage:      112 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_ISR
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text35
  6559   001EEE                     __ptext35:
  6560                           	callstack 0
  6561   001EEE                     i2_create_task:
  6562                           	callstack 19
  6563                           
  6564                           ;incstack = 0
  6565                           ;i2create_task@id stored from wreg
  6566   001EEE  0100               	movlb	0	; () banked
  6567   001EF0  6F60               	movwf	i2create_task@id& (0+255),b
  6568   001EF2                     
  6569                           ;kernel.c: 11: void create_task(uint8_t id, uint8_t priority, f_ptr task);kernel.c: 12: 
      +                          {;kernel.c: 13:     tcb_t new_task;;kernel.c: 15:     new_task.task_id = id;
  6570   001EF2  C060  F061         	movff	i2create_task@id,i2create_task@new_task
  6571   001EF6                     
  6572                           ;kernel.c: 16:     new_task.task_priority = priority;
  6573   001EF6  C021  F062         	movff	i2create_task@priority,i2create_task@new_task+1
  6574   001EFA                     
  6575                           ;kernel.c: 17:     new_task.task_f = task;
  6576   001EFA  C022  F064         	movff	i2create_task@task,i2create_task@new_task+3
  6577   001EFE  C023  F065         	movff	i2create_task@task+1,i2create_task@new_task+4
  6578   001F02                     
  6579                           ;kernel.c: 19:     new_task.task_sp = 0;
  6580   001F02  0100               	movlb	0	; () banked
  6581   001F04  6BCB               	clrf	(i2create_task@new_task+106)& (0+255),b
  6582   001F06                     
  6583                           ; BSR set to: 0
  6584                           ;kernel.c: 20:     new_task.time_sleeping = 0;
  6585   001F06  0E00               	movlw	0
  6586   001F08  6F67               	movwf	(i2create_task@new_task+6)& (0+255),b
  6587   001F0A  0E00               	movlw	0
  6588   001F0C  6F66               	movwf	(i2create_task@new_task+5)& (0+255),b
  6589   001F0E                     
  6590                           ; BSR set to: 0
  6591                           ;kernel.c: 21:     new_task.task_state = READY;
  6592   001F0E  6B63               	clrf	(i2create_task@new_task+2)& (0+255),b
  6593   001F10                     
  6594                           ; BSR set to: 0
  6595                           ;kernel.c: 23:     new_task.BSR_REG = 0x000;
  6596   001F10  6B6A               	clrf	(i2create_task@new_task+9)& (0+255),b
  6597   001F12                     
  6598                           ; BSR set to: 0
  6599                           ;kernel.c: 24:     new_task.W_REG = 0x000;
  6600   001F12  6B68               	clrf	(i2create_task@new_task+7)& (0+255),b
  6601   001F14                     
  6602                           ; BSR set to: 0
  6603                           ;kernel.c: 25:     new_task.STATUS_REG = 0x000;
  6604   001F14  6B69               	clrf	(i2create_task@new_task+8)& (0+255),b
  6605   001F16                     
  6606                           ; BSR set to: 0
  6607                           ;kernel.c: 27:     r_queue.ready_queue[r_queue.ready_queue_size] = new_task;
  6608   001F16  EE20  F061         	lfsr	2,i2create_task@new_task
  6609   001F1A  C484  F024         	movff	_r_queue+536,??i2_create_task
  6610   001F1E  5024               	movf	??i2_create_task^0,w,c
  6611   001F20  0D6B               	mullw	107
  6612   001F22  0E6C               	movlw	low _r_queue
  6613   001F24  24F3               	addwf	243,w,c
  6614   001F26  6EE9               	movwf	fsr0l,c
  6615   001F28  0E02               	movlw	high _r_queue
  6616   001F2A  20F4               	addwfc	prodh,w,c
  6617   001F2C  6EEA               	movwf	fsr0h,c
  6618   001F2E  0E6A               	movlw	106
  6619   001F30                     i2u120_41:
  6620   001F30  CFDB FFEB          	movff	plusw2,plusw0
  6621   001F34  06E8               	decf	wreg,f,c
  6622   001F36  E2FC               	bc	i2u120_41
  6623   001F38                     
  6624                           ; BSR set to: 0
  6625                           ;kernel.c: 28:     r_queue.ready_queue_size += 1;
  6626   001F38  C484  FFE8         	movff	_r_queue+536,wreg
  6627   001F3C  0F01               	addlw	1
  6628   001F3E  CFE8 F484          	movff	wreg,_r_queue+536
  6629   001F42                     
  6630                           ; BSR set to: 0
  6631   001F42  0012               	return		;funcret
  6632   001F44                     __end_ofi2_create_task:
  6633                           	callstack 0
  6634                           
  6635 ;; *************** function _decrease_time *****************
  6636 ;; Defined at:
  6637 ;;		line 107 in file "kernel.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  i               1    2[COMRAM] unsigned char 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0
  6652 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6653 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6654 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6655 ;;Total ram usage:        3 bytes
  6656 ;; Hardware stack levels used: 1
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_ISR
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text36
  6665   001C6E                     __ptext36:
  6666                           	callstack 0
  6667   001C6E                     _decrease_time:
  6668                           	callstack 19
  6669   001C6E                     
  6670                           ;kernel.c: 109:     for (uint8_t i = 1; i < r_queue.ready_queue_size; i++)
  6671   001C6E  0E01               	movlw	1
  6672   001C70  6E23               	movwf	decrease_time@i^0,c
  6673   001C72  EF72  F00E         	goto	i2l2256
  6674   001C76                     i2l2248:
  6675                           
  6676                           ;kernel.c: 110:     {;kernel.c: 111:         if (r_queue.ready_queue[i].time_sleeping > 
      +                          0)
  6677   001C76  5023               	movf	decrease_time@i^0,w,c
  6678   001C78  0D6B               	mullw	107
  6679   001C7A  0E71               	movlw	low (_r_queue+5)
  6680   001C7C  24F3               	addwf	243,w,c
  6681   001C7E  6ED9               	movwf	fsr2l,c
  6682   001C80  0E02               	movlw	high (_r_queue+5)
  6683   001C82  20F4               	addwfc	prodh,w,c
  6684   001C84  6EDA               	movwf	fsr2h,c
  6685   001C86  50DE               	movf	postinc2,w,c
  6686   001C88  10DE               	iorwf	postinc2,w,c
  6687   001C8A  B4D8               	btfsc	status,2,c
  6688   001C8C  EF4A  F00E         	goto	i2u117_41
  6689   001C90  EF4C  F00E         	goto	i2u117_40
  6690   001C94                     i2u117_41:
  6691   001C94  EF71  F00E         	goto	i2l2254
  6692   001C98                     i2u117_40:
  6693   001C98                     
  6694                           ;kernel.c: 112:         {;kernel.c: 113:             r_queue.ready_queue[i].time_sleepin
      +                          g--;
  6695   001C98  5023               	movf	decrease_time@i^0,w,c
  6696   001C9A  0D6B               	mullw	107
  6697   001C9C  0E71               	movlw	low (_r_queue+5)
  6698   001C9E  24F3               	addwf	243,w,c
  6699   001CA0  6ED9               	movwf	fsr2l,c
  6700   001CA2  0E02               	movlw	high (_r_queue+5)
  6701   001CA4  20F4               	addwfc	prodh,w,c
  6702   001CA6  6EDA               	movwf	fsr2h,c
  6703   001CA8  06DE               	decf	postinc2,f,c
  6704   001CAA  0E00               	movlw	0
  6705   001CAC  5ADD               	subwfb	postdec2,f,c
  6706                           
  6707                           ;kernel.c: 114:             if (r_queue.ready_queue[i].time_sleeping == 0)
  6708   001CAE  5023               	movf	decrease_time@i^0,w,c
  6709   001CB0  0D6B               	mullw	107
  6710   001CB2  0E71               	movlw	low (_r_queue+5)
  6711   001CB4  24F3               	addwf	243,w,c
  6712   001CB6  6ED9               	movwf	fsr2l,c
  6713   001CB8  0E02               	movlw	high (_r_queue+5)
  6714   001CBA  20F4               	addwfc	prodh,w,c
  6715   001CBC  6EDA               	movwf	fsr2h,c
  6716   001CBE  50DE               	movf	postinc2,w,c
  6717   001CC0  10DE               	iorwf	postinc2,w,c
  6718   001CC2  A4D8               	btfss	status,2,c
  6719   001CC4  EF66  F00E         	goto	i2u118_41
  6720   001CC8  EF68  F00E         	goto	i2u118_40
  6721   001CCC                     i2u118_41:
  6722   001CCC  EF71  F00E         	goto	i2l2254
  6723   001CD0                     i2u118_40:
  6724   001CD0                     
  6725                           ;kernel.c: 115:             {;kernel.c: 116:                 r_queue.ready_queue[i].task
      +                          _state = READY;
  6726   001CD0  5023               	movf	decrease_time@i^0,w,c
  6727   001CD2  0D6B               	mullw	107
  6728   001CD4  0E6E               	movlw	low (_r_queue+2)
  6729   001CD6  24F3               	addwf	243,w,c
  6730   001CD8  6ED9               	movwf	fsr2l,c
  6731   001CDA  0E02               	movlw	high (_r_queue+2)
  6732   001CDC  20F4               	addwfc	prodh,w,c
  6733   001CDE  6EDA               	movwf	fsr2h,c
  6734   001CE0  6ADF               	clrf	indf2,c
  6735   001CE2                     i2l2254:
  6736                           
  6737                           ;kernel.c: 119:     }
  6738   001CE2  2A23               	incf	decrease_time@i^0,f,c
  6739   001CE4                     i2l2256:
  6740   001CE4  EE24  F084         	lfsr	2,_r_queue+536
  6741   001CE8  50DE               	movf	postinc2,w,c
  6742   001CEA  5C23               	subwf	decrease_time@i^0,w,c
  6743   001CEC  A0D8               	btfss	status,0,c
  6744   001CEE  EF7B  F00E         	goto	i2u119_41
  6745   001CF2  EF7D  F00E         	goto	i2u119_40
  6746   001CF6                     i2u119_41:
  6747   001CF6  EF3B  F00E         	goto	i2l2248
  6748   001CFA                     i2u119_40:
  6749   001CFA  0012               	return		;funcret
  6750   001CFC                     __end_of_decrease_time:
  6751                           	callstack 0
  6752                           
  6753                           	psect	smallconst
  6754   000800                     __psmallconst:
  6755                           	callstack 0
  6756   000800  00                 	db	0
  6757   000801  00                 	db	0	; dummy byte at the end
  6758   000800                     __smallconst    set	__psmallconst
  6759   000800                     __mediumconst   set	__psmallconst
  6760   000002                     __activetblptr  equ	2
  6761                           
  6762                           	psect	rparam
  6763   000001                     ___rparam_used  equ	1
  6764   000000                     ___param_bank   equ	0
  6765   000000                     __Lparam        equ	__Lrparam
  6766   000000                     __Hparam        equ	__Hrparam
  6767                           
  6768                           	psect	temp
  6769   000001                     btemp:
  6770                           	callstack 0
  6771   000001                     	ds	32
  6772   000001                     wtemp0          set	btemp
  6773   000003                     wtemp1          set	btemp+2
  6774   000005                     wtemp2          set	btemp+4
  6775   000007                     wtemp3          set	btemp+6
  6776   000009                     wtemp4          set	btemp+8
  6777   00000B                     wtemp5          set	btemp+10
  6778   000002                     wtemp8          set	btemp+1
  6779   000001                     ttemp0          set	btemp
  6780   000004                     ttemp1          set	btemp+3
  6781   000007                     ttemp2          set	btemp+6
  6782   00000A                     ttemp3          set	btemp+9
  6783   000002                     ttemp5          set	btemp+1
  6784   000005                     ttemp6          set	btemp+4
  6785   000009                     ttemp7          set	btemp+8
  6786   000001                     ltemp0          set	btemp
  6787   000005                     ltemp1          set	btemp+4
  6788   000009                     ltemp2          set	btemp+8
  6789   000001                     lltemp0         set	btemp
  6790   000009                     lltemp1         set	btemp+8
  6791   000011                     lltemp2         set	btemp+16
  6792   000019                     lltemp3         set	btemp+24
  6793                           tosu	equ	0xFFF
  6794                           tosh	equ	0xFFE
  6795                           tosl	equ	0xFFD
  6796                           stkptr	equ	0xFFC
  6797                           pclatu	equ	0xFFB
  6798                           pclath	equ	0xFFA
  6799                           pcl	equ	0xFF9
  6800                           tblptru	equ	0xFF8
  6801                           tblptrh	equ	0xFF7
  6802                           tblptrl	equ	0xFF6
  6803                           tablat	equ	0xFF5
  6804                           prodh	equ	0xFF4
  6805                           prodl	equ	0xFF3
  6806                           indf0	equ	0xFEF
  6807                           postinc0	equ	0xFEE
  6808                           postdec0	equ	0xFED
  6809                           preinc0	equ	0xFEC
  6810                           plusw0	equ	0xFEB
  6811                           fsr0h	equ	0xFEA
  6812                           fsr0l	equ	0xFE9
  6813                           wreg	equ	0xFE8
  6814                           indf1	equ	0xFE7
  6815                           postinc1	equ	0xFE6
  6816                           postdec1	equ	0xFE5
  6817                           preinc1	equ	0xFE4
  6818                           plusw1	equ	0xFE3
  6819                           fsr1h	equ	0xFE2
  6820                           fsr1l	equ	0xFE1
  6821                           bsr	equ	0xFE0
  6822                           indf2	equ	0xFDF
  6823                           postinc2	equ	0xFDE
  6824                           postdec2	equ	0xFDD
  6825                           preinc2	equ	0xFDC
  6826                           plusw2	equ	0xFDB
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         650
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     29      32
    BANK0           160    108     108
    BANK1           256     51     159
    BANK2           256    108     108
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    accel_pipe$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    create_pipe@p	PTR struct pipe size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    create_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    create_task@task	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    ext_int_callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2create_task@new_task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    mutex_init@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    mutex_lock@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    mutex_unlock@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    new_task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$ready_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), r_queue$ready_queue(BIGRAM[535]), 

    r_queue$task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    read_pipe@data	PTR unsigned char  size(2) Largest target is 1
		 -> tarefa_controle_central@data(BANK1[1]), 

    read_pipe@p	PTR struct pipe size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    read_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    S260pipe$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    S68tcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    S79ready_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), 

    sem_init@sem	PTR struct sem size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    sem_post@sem	PTR struct sem size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    sem_wait@sem	PTR struct sem size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    write_pipe@p	PTR struct pipe size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    write_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _user_config->_create_pipe
    _create_pipe->_SRAMalloc
    _SRAMalloc->__SRAMmerge
    _os_init->_SRAMInitHeap
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in COMRAM

    _tarefa_acelerador->_write_pipe

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_injecao_eletronica in COMRAM

    None.

Critical Paths under _tarefa_estabilidade in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->i2_create_task

Critical Paths under _main in BANK0

    None.

Critical Paths under _tarefa_acelerador in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK0

    None.

Critical Paths under _tarefa_estabilidade in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->i2_create_task

Critical Paths under _main in BANK1

    None.

Critical Paths under _tarefa_acelerador in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    _tarefa_controle_central->_read_pipe
    _read_pipe->_sem_wait

Critical Paths under _tarefa_injecao_eletronica in BANK1

    _tarefa_injecao_eletronica->_mutex_lock

Critical Paths under _tarefa_estabilidade in BANK1

    _tarefa_estabilidade->_delay

Critical Paths under _idle in BANK1

    None.

Critical Paths under _idle in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_create_task
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK2

    None.

Critical Paths under _tarefa_estabilidade in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tarefa_acelerador in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK3

    None.

Critical Paths under _tarefa_estabilidade in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tarefa_acelerador in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK4

    None.

Critical Paths under _tarefa_estabilidade in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tarefa_acelerador in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK5

    None.

Critical Paths under _tarefa_estabilidade in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tarefa_acelerador in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK6

    None.

Critical Paths under _tarefa_estabilidade in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tarefa_acelerador in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK7

    None.

Critical Paths under _tarefa_estabilidade in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2290
                        _create_task
                            _os_init
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1206
                       _start_timer0
                        _user_config
 ---------------------------------------------------------------------------------
 (2) _user_config                                          0     0      0    1206
                           _adc_init
                      _config_timer0
                        _create_pipe
                       _int_ext_init
                         _mutex_init
                           _pwm_init
                       _start_timer0
 ---------------------------------------------------------------------------------
 (3) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           2     0      2      67
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _int_ext_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          2     0      2    1139
                                             19 COMRAM     2     0      2
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             4     0      4      92
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                           11     9      2     936
                                              8 COMRAM    11     9      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           8     6      2     403
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_init                                              0     0      0     621
                       _SRAMInitHeap
                      _config_timer0
                        _create_task
 ---------------------------------------------------------------------------------
 (2) _create_task                                        112   109      3     463
                                              0 COMRAM     4     1      3
                                              0 BANK2    108   108      0
 ---------------------------------------------------------------------------------
 (3) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     158
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_acelerador                                    5     5      0    3510
                                              9 BANK1      5     5      0
                           _adc_read
                              _delay
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           6     3      3    2730
                                             23 COMRAM     6     3      3
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             9     7      2     610
                                             14 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             6     4      2     450
                                             14 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4    1150
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             4     2      2     305
                                             23 COMRAM     4     2      2
                              _delay
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     305
                                             42 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              2     2      0    4928
                                             30 BANK1      2     2      0
                            ___awmod
                              _delay
                         _mutex_lock
                       _mutex_unlock
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            7     3      4    2730
                                             23 BANK1      7     3      4
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             9     7      2     610
                                             14 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             6     4      2     450
                                             14 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4    1150
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         6     4      2     179
                                             32 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           9     7      2     294
                                             32 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     305
                                             42 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_injecao_eletronica                            1     1      0     983
                                             41 BANK1      1     1      0
                              _delay
                         _mutex_lock
                       _mutex_unlock
                            _pwm_set
 ---------------------------------------------------------------------------------
 (7) _pwm_set                                              5     5      0     120
                                             32 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         6     4      2     179
                                             32 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           9     7      2     294
                                             32 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     305
                                             42 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_estabilidade                                  0     0      0     494
                       _change_state
                              _delay
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     305
                                             42 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _change_state                                         8     8      0     189
                                             42 BANK1      8     8      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                19    19      0     957
                                              4 COMRAM    19    19      0
                      _decrease_time
                          _scheduler
                      i2_create_task
 ---------------------------------------------------------------------------------
 (12) i2_create_task                                     112   109      3     290
                                              0 COMRAM     4     1      3
                                              0 BANK0    108   108      0
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  3     3      0     160
 ---------------------------------------------------------------------------------
 (12) _decrease_time                                       3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _create_task
   _os_init
     _SRAMInitHeap
     _config_timer0
     _create_task
   _os_start
     _start_timer0
     _user_config
       _adc_init
       _config_timer0
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _int_ext_init
       _mutex_init
       _pwm_init
       _start_timer0

 _tarefa_acelerador (ROOT)
   _adc_read
     _delay
       _scheduler
         _priority_scheduler
   _delay
   _write_pipe
     ___awmod
     _sem_post
     _sem_wait
       _scheduler

 _tarefa_controle_central (ROOT)
   ___awmod
   _delay
     _scheduler
       _priority_scheduler
   _mutex_lock
     _scheduler
   _mutex_unlock
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait
       _scheduler

 _tarefa_injecao_eletronica (ROOT)
   _delay
     _scheduler
       _priority_scheduler
   _mutex_lock
     _scheduler
   _mutex_unlock
   _pwm_set

 _tarefa_estabilidade (ROOT)
   _change_state
     _scheduler
       _priority_scheduler
   _delay
     _scheduler

 _idle (ROOT)

 _idle (ROOT)

 _ISR (ROOT)
   _decrease_time
   _scheduler
     _priority_scheduler
   i2_create_task

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     539     26.3%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256    108     108     42.2%
BITBANK1           256      0       0      0.0%
BANK1              256     51     159     62.1%
BITBANK0           160      0       0      0.0%
BANK0              160    108     108     67.5%
BITBIGSFRh          66      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     29      32     50.8%
BITBIGSFRlh         48      0       0      0.0%
BITBIGSFRll         44      0       0      0.0%
STACK                0      0      18      0.0%
DATA                 0      0     966      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed May 28 18:36:09 2025

                               l41 1948                                 l17 1FCC  
                               l18 1FCC                                 l27 21B8  
                               l60 20D4                                 l84 212A  
                     create_pipe@p 0034                      SRAMalloc@temp 002D  
                              l122 1E32                                l207 2192  
                              l223 21AA                                l136 17B8  
                              l216 2182                                l161 1800  
                              l145 17B4                                l162 1890  
                              l138 16EC                                l156 1DCE  
                              l270 1F44                                l328 1EEC  
                              l282 1FD4                                l363 2152  
                              l276 1E34                                l452 21BC  
                              l366 219E                                l295 2046  
                              l288 2078                                l385 21AC  
                              l289 209C                                l449 216E  
                              _BSR 0FE0                                _PR2 0FCB  
                              u700 180E                                _ISR 0008  
                              u701 180A                                u710 181C  
                              u711 1818                                u720 1834  
                              u721 1830                                u730 184E  
                              u731 184A                                u740 16AE  
                              u741 16AA                                u910 1D90  
                              u750 16E8                                u911 1D8C  
                              u751 16E4                                u760 16FA  
                              u761 16F6                                u690 17FA  
                              u770 170C                                u691 17F6  
                              u771 1708                                u780 1728  
                              u781 1724                                u790 1750  
                              u791 174C                                _TOS 0FFD  
                    create_task@id 0200                       ___awmod@sign 017F  
                              prod 0FF3                                wreg 0FE8  
             __end_of_change_state 169C                     SRAMalloc@pHeap 0032  
                SRAMInitHeap@pHeap 0021                 _priority_scheduler 1892  
                             ?_ISR 0021                  SRAMInitHeap@count 0023  
                             l2000 1D9C                               l2002 1DA4  
                             l2010 2010                               l2004 1DB4  
                             l2020 203A                               l2012 201A  
                             l2006 1DC0                               l2022 203E  
                             l2014 2026                               l2024 2042  
                             l2016 2032                               l2018 2036  
                             l2070 2194                               l2072 2198  
                             l2074 219A                               l2076 21B4  
                             l2420 1EAC                               l3300 212C  
                             l2430 1EBE                               l2422 1EB0  
                             l2414 1E9C                               l3302 2138  
                             l3400 1FD4                               l2432 1EC0  
                             l2424 1EB8                               l2416 1EA0  
                             l3304 214A                               l1800 185A  
                             l3410 2078                               l3402 1FE2  
                             l2434 1EE2                               l2426 1EBA  
                             l2418 1EA4                               l3306 214E  
                             l1802 1862                               l3412 2088  
                             l3404 1FE6                               l1900 215E  
                             l2428 1EBC                               l1804 186E  
                             l1812 1882                               l1820 20C6  
                             l3414 208C                               l3406 1FF4  
                             l1806 187C                               l1830 16C2  
                             l1822 169E                               l1902 21BA  
                             l3416 209A                               l3408 1FFC  
                             l1840 16FA                               l1832 16CE  
                             l1824 16AE                               l1816 20A8  
                             l1930 18AA                               l1850 175A  
                             l1842 170C                               l1834 16D8  
                             l1818 20B8                               l1932 18CC  
                             l1940 1922                               l3380 1F44  
                             l1780 17FA                               l1772 17BA  
                             l1860 1784                               l1844 1728  
                             l1828 16BA                               l3390 1E4C  
                             l1942 193E                               l1934 18F6  
                             l1926 1898                               l3382 1F50  
                             l1790 1820                               l1774 17D2  
                             l1862 17A8                               l1846 173E  
                             l1870 210E                               l3392 1E66  
                             l1936 1912                               l1928 18A0  
                             l3384 1F6A                               l1784 180E  
                             l1776 17DE                               l1848 1750  
                             l1856 176A                               l1880 1E02  
                             l1872 211C                               l3376 1F8E  
                             l3394 1E72                               l1938 191E  
                             l3386 1F7A                               l1778 17EA  
                             l1858 1778                               l1882 1E1A  
                             l1874 1DD0                               l1890 2172  
                             l3378 1FC8                               l3396 1E76  
                             l3388 1E38                               l1884 2184  
                             l1796 1838                               l1876 1DE6  
                             l1868 2102                               l1892 2176  
                             l3398 1E84                               l1886 2190  
                             l1798 184E                               l1878 1DF4  
                             l1894 217C                               l1992 1D6A  
                             l1896 21A0                               l1888 2170  
                             l1994 1D72                               l1898 2154  
                             l1996 1D7A                               l1998 1D90  
                             _LATD 0F8C                               u1371 1EDA  
                             i1l72 1136                               i1l81 1B3C  
                             i1l73 10AC                               i1l75 115A  
                             i1l77 1170                               i1l97 0E3A  
                             i1l98 0DB0                               _TMR0 0FD6  
                             _WREG 0FE8                        _user_config 2010  
                             _idle 21AC                               _main 1F8E  
                             fsr0h 0FEA                               fsr1h 0FE2  
                             indf0 0FEF                               fsr2h 0FDA  
                             fsr0l 0FE9                               indf2 0FDF  
                             fsr1l 0FE1                               fsr2l 0FD9  
                             btemp 0001                       _start_timer0 21BA  
                             prodh 0FF4                               prodl 0FF3  
                             start 000C                    SRAMalloc@nBytes 0031  
  __end_of_tarefa_controle_central 1E98                       ___param_bank 0000  
                  SRAMalloc@segLen 002F  __end_of_tarefa_injecao_eletronica 2010  
                            ??_ISR 0025                  _tarefa_acelerador 1F44  
                            ?_idle 0021                              ?_main 0021  
            __end_of_decrease_time 1CFC                    __end_of___awmod 1A00  
                            _T2CON 0FCA                              i1l100 0E5E  
                            i1l102 0E74                              i1l210 20E6  
                            i1l107 1AA0                              i1l220 1D68  
                            i1l213 2100                              i1l125 1C6C  
                            i1l128 1BD8                              i1l340 134E  
                            i1l342 13FC                              i1l344 1412  
                            i1l339 13D8                              i1l380 1684  
                            i1l382 169A                              i1l377 1660  
                            i1l378 15D6                              i2l328 1F42  
                            i2l441 0B14                              i2l442 0A8C  
                            i2l427 08BC                              i2l444 0B38  
                            i2l446 0B4E                              i1l699 19FE  
                            i2l396 1CFA                 ?_tarefa_acelerador 0021  
                            u81_20 18CC                              u81_21 18C8  
                            u82_20 18F6                              u82_21 18F2  
                            u83_20 193E                              u83_21 193A  
                       __SRAMmerge 17BA                              _delay 1172  
              ??_tarefa_acelerador 0175                    create_task@task 0022  
                  __end_of_os_init 2154                              ltemp0 0001  
                            ltemp1 0005                              ltemp2 0009  
                            plusw0 0FEB                              plusw1 0FE3  
                            plusw2 0FDB                    __end_of_pwm_set 1D6A  
                            ttemp0 0001                              ttemp1 0004  
                            ttemp2 0007                              ttemp3 000A  
                            ttemp5 0002                              ttemp6 0005  
                            ttemp7 0009                              status 0FD8  
                  ??_config_timer0 0021                              wtemp0 0001  
                            wtemp1 0003                              wtemp2 0005  
                            wtemp3 0007                              wtemp4 0009  
                            wtemp5 000B                              wtemp8 0002  
                   write_pipe@data 003A                    __initialization 2048  
                     __end_of_idle 21B4                       __end_of_main 1FD4  
        __end_of_tarefa_acelerador 1F8E                             ??_idle 0021  
                           ??_main 0036                      __activetblptr 0002  
                           ISR@idx 0037                             ISR@tid 0036  
                           ?_delay 0196                             _ADCON0 0FC2  
                           _ADCON1 0FC1                             _ADCON2 0FC0  
                           _ADRESH 0FC4                             _ADRESL 0FC3  
                           _CCPR1L 0FBE                   __end_of_adc_init 2194  
                 __end_of_adc_read 2102                             i1l2100 0D0E  
                           i1l2110 0D72                             i1l2102 0D12  
                           i1l2112 0DC4                             i1l2104 0D30  
                           i1l2120 1A00                             i1l2210 1D54  
                           i1l2202 1D00                             i1l2114 0E16  
                           i1l2106 0D50                             i1l2130 1A92  
                           i1l2122 1A02                             i1l2220 14BE  
                           i1l2212 1418                             i1l2204 1D08  
                           i1l2116 0E3C                             i1l2108 0D52  
                           i1l2132 1A9E                             i1l2124 1A2E  
                           i1l2230 1556                             i1l2222 1510  
                           i1l2214 141A                             i1l2206 1D36  
                           i1l2118 0E72                             i1l2126 1A5A  
                           i1l2240 163C                             i1l2232 1576  
                           i1l2224 1524                             i1l2216 1438  
                           i1l2208 1D3C                             i1l2080 0B7A  
                           i1l2128 1A6C                             i1l2242 1662  
                           i1l2234 1578                             i1l2218 1458  
                           i1l2226 1534                             i1l2090 0C12  
                           i1l2082 0B92                             i1l2236 1598  
                           i1l2244 1698                             i1l2228 1538  
                           i1l2092 0C32                             i1l2084 0B9C  
                           i1l3220 0E9E                             i1l2238 15EA  
                           i1l2094 0C98                             i1l2086 0BA2  
                           i1l2078 0B78                             i1l3230 0FE6  
                           i1l3222 0EF2                             i1l3310 1BDC  
                           i1l2096 0CEA                             i1l2088 0BF6  
                           i1l3320 1B3E                             i1l3240 104C  
                           i1l3232 0FFA                             i1l3224 0F0E  
                           i1l3216 0E76                             i1l3312 1BEE  
                           i1l2098 0CFE                             i1l3330 1BD6  
                           i1l3322 1B40                             i1l3250 1138  
                           i1l3242 104E                             i1l3226 0F2E  
                           i1l3234 100A                             i1l3218 0E78  
                           i1l3314 1C1E                             i1l3324 1B52  
                           i1l3340 1172                             i1l3332 20D6  
                           i1l3260 1B18                             i1l3244 106E  
                           i1l3236 100E                             i1l3228 0F94  
                           i1l3252 116E                             i1l3316 1C5A  
                           i1l3308 1BDA                             i1l3326 1B8C  
                           i1l3350 126A                             i1l3342 1174  
                           i1l3334 20E4                             i1l3270 196A  
                           i1l3262 1B3A                             i1l3254 1AA2  
                           i1l3246 10C0                             i1l3238 102C  
                           i1l3318 1C6A                             i1l3328 1BC6  
                           i1l3360 12CE                             i1l3352 127E  
                           i1l3344 1192                             i1l3336 20F4  
                           i1l3280 199E                             i1l3272 196E  
                           i1l3264 1950                             i1l3256 1AA4  
                           i1l3248 1112                             i1l3370 13B4  
                           i1l3362 12EE                             i1l3346 11B2  
                           i1l3354 128E                             i1l3290 19D8  
                           i1l3282 19A6                             i1l3274 197C  
                           i1l3266 1954                             i1l3258 1AD8  
                           i1l3372 13DA                             i1l3364 12F0  
                           i1l3356 12AC                             i1l3348 1218  
                           i1l3284 19B4                             i1l3292 19DE  
                           i1l3276 1984                             i1l3268 1962  
                           i1l3366 1310                             i1l3374 1410  
                           i1l3358 12B0                             i1l3294 19EE  
                           i1l3286 19CA                             i1l3278 1996  
                           i1l3368 1362                             i1l3296 19F6  
                           i1l3288 19D2                             i2l2250 1C98  
                           i2l2252 1CD0                             i2l2260 1EF6  
                           i2l2254 1CE2                             i2l2246 1C6E  
                           i2l2270 1F10                             i2l2262 1EFA  
                           i2l2248 1C76                             i2l2256 1CE4  
                           i2l2272 1F12                             i2l2264 1F02  
                           i2l2274 1F14                             i2l2266 1F06  
                           i2l2258 1EF2                             i2l2276 1F16  
                           i2l2268 1F0E                             i2l3420 0840  
                           i2l2278 1F38                             i2l3430 087E  
                           i2l3422 0842                             i2l3440 08CC  
                           i2l3432 0890                             i2l3424 0854  
                           i2l3450 0978                             i2l3442 08D4  
                           i2l3434 08A4                             i2l3426 085A  
                           i2l3418 0830                             i2l3460 0A0C  
                           i2l3452 09C8                             i2l3444 08D8  
                           i2l3428 086E                             i2l3436 08A6  
                           i2l3470 0AF0                             i2l3462 0A2C  
                           i2l3454 09DC                             i2l3446 08F4  
                           i2l3438 08CA                             i2l3472 0B16  
                           i2l3464 0A2E                             i2l3448 0914  
                           i2l3456 09EC                             i2l3466 0A4E  
                           i2l3458 09F0                             i2l3474 0B4C  
                           i2l3468 0AA0                             u247_20 2088  
                           u247_21 2084                             _STATUS 0FD8  
                           _STKPTR 0FFC                          ??___awmod 017E  
                __end_of_SRAMalloc 17BA                      mutex_unlock@m 018C  
                           clear_0 2050                             clear_1 2062  
                  ___awmod@divisor 017C                             isa$std 0001  
                  ___awmod@counter 017E                      ?_int_ext_init 0021  
      __end_of_tarefa_estabilidade 20A8                   __end_of_sem_init 20D6  
                 __end_of_sem_wait 1172                   __end_of_sem_post 1B3E  
                 __end_of_os_start 21A0                             lltemp0 0001  
                           lltemp1 0009                             lltemp2 0011  
                           lltemp3 0019                       __mediumconst 0800  
                        ??_os_init 0025                             tblptru 0FF8  
                      ?__SRAMmerge 0021                   __end_of_pwm_init 2184  
                        ??_pwm_set 018C                         __accesstop 0060  
          __end_of__initialization 206E                      ___rparam_used 0001  
                     _change_state 1414                     __pcstackCOMRAM 0021  
                       ___inthi_sp 0644                         _accel_data 0100  
                    __end_of_delay 1414                         _accel_pipe 0151  
                   ??_int_ext_init 0021                    __SRAMmerge@uSum 0026  
                          ??_delay 0198                         __pbssBANK1 0100  
                     ?_user_config 0021                      __uDynamicHeap 0101  
                    i2_create_task 1EEE                            _CCP1CON 0FBD  
                        ?_adc_init 0021                          ?_adc_read 0038  
         ?_tarefa_controle_central 0021                            i1u98_20 0B92  
                          i1u98_21 0B8E                            i1u99_20 0C32  
                          i1u99_21 0C2E                        sem_init@sem 0021  
                   ?i2_create_task 0021                        sem_wait@sem 017A  
                          __Hparam 0000                        sem_post@sem 017A  
                        ?_sem_init 0021                          ?_sem_wait 017A  
                        ?_sem_post 017A                            __Lparam 0000  
                        ?_os_start 0021                            ___awmod 1950  
                        ?_pwm_init 0021                       __psmallconst 0800  
       ?_tarefa_injecao_eletronica 0021                            __pcinit 2048  
                          __ramtop 0800                      ?_SRAMInitHeap 0021  
                       ??_adc_init 0021                         ??_adc_read 003A  
                          __ptext0 1F8E                            __ptext1 2194  
                          __ptext2 2010                            __ptext3 21BA  
                          __ptext4 2170                            __ptext5 2102  
                          __ptext6 21A0                            __ptext7 1DD0  
                          __ptext8 20A8                            __ptext9 169C  
                        _T0CONbits 0FD5                   ___awmod@dividend 017A  
                __end_of_read_pipe 1BDA                            _r_queue 026C  
                          _os_init 212C                            _pwm_set 1CFC  
                __end_of_scheduler 21BA                     __pintcode_body 0802  
             end_of_initialization 206E                    i2create_task@id 0060  
                    __Lmediumconst 0000               __end_of_int_ext_init 21AC  
                          int_func 0802              __end_of_config_timer0 2170  
                       ??_sem_init 0025                         ??_sem_wait 017C  
                       ??_sem_post 017C                         ??_os_start 0036  
                     _buffer_mutex 0165                            postdec0 0FED  
                          postdec1 0FE5                            postdec2 0FDD  
                          postinc0 0FEE                            postinc1 0FE6  
                          postinc2 0FDE                         ??_pwm_init 0021  
                   ??_SRAMInitHeap 0021                          _SRAMalloc 169C  
                       _mutex_init 2102                         _mutex_lock 0B78  
                 _ext_int_callback 003E                          _TRISAbits 0F92  
                        _TRISBbits 0F93                          _TRISCbits 0F94  
                        _TRISDbits 0F95                       ??__SRAMmerge 0023  
                    sem_init@value 0023                    ??i2_create_task 0024  
                    ??_create_pipe 0036                      ??_create_task 0024  
                    ?_mutex_unlock 018C                        _CCP1CONbits 0FBD  
            i2create_task@new_task 0061                 __end_of__SRAMmerge 1892  
                      mutex_init@m 0021                        mutex_lock@m 018C  
                       _write_pipe 1BDA              i2create_task@priority 0021  
                    _decrease_time 1C6E                         ?_SRAMalloc 0029  
              start_initialization 2048                 SRAMalloc@segHeader 0030  
                      __end_of_ISR 0B78                   __SRAMmerge@pSegA 0021  
                 __SRAMmerge@pSegB 0024                   __SRAMmerge@uSegA 0027  
                 __SRAMmerge@uSegB 0028                     ??_mutex_unlock 018E  
                    ?_start_timer0 0021                        pwm_set@duty 018F  
              __end_of_create_pipe 1E34                __end_of_create_task 1EEE  
      tarefa_controle_central@data 018B                  pwm_set@duty_cycle 018E  
      tarefa_controle_central@duty 018A                     ?_decrease_time 0021  
                       read_pipe@p 0183                        __pbssBIGRAM 026C  
                      ?_mutex_init 0021                        ?_mutex_lock 018C  
                      __pbssCOMRAM 003E                      __pcstackBANK0 0060  
                    __pcstackBANK1 016C                      __pcstackBANK2 0200  
                   ??_start_timer0 0021               __end_of_SRAMInitHeap 1DD0  
                        __pintcode 0008                           ?___awmod 017A  
      ??_tarefa_injecao_eletronica 0195                        ?_write_pipe 0038  
                     _int_ext_init 21A0                        __smallconst 0800  
                      ??_SRAMalloc 002B                           ?_os_init 0021  
                         ?_pwm_set 0021                          _read_pipe 1B3E  
                        delay@time 0196                          _scheduler 21B4  
                      _create_pipe 1DD0                        _create_task 1E98  
                         _LATDbits 0F8C                           i1u100_20 0D0E  
                         i1u100_21 0D0A                           i1u101_20 0D50  
                         i1u101_21 0D4C                           i1u102_20 0D72  
                         i1u102_21 0D6E                           i1u111_20 1D36  
                         i1u103_20 0E36                           i1u111_21 1D32  
                         i1u103_21 0E32                           i1u112_20 1458  
                         i1u104_20 1A2E                           i1u112_21 1454  
                         i1u104_21 1A2A                           i1u113_20 1534  
                         i1u113_21 1530                           i1u114_20 1576  
                         i1u114_21 1572                           i1u115_20 1598  
                         i1u115_21 1594                           i1u116_20 165C  
                         i1u116_21 1658                           i1u230_20 100A  
                         i1u230_21 1006                           i1u231_20 104C  
                         i1u231_21 1048                           i1u240_20 19EE  
                         i1u232_20 106E                           i1u240_21 19EA  
                         i1u232_21 106A                           i1u241_20 20F4  
                         i1u233_20 1132                           i1u241_21 20F0  
                         i1u233_21 112E                           i1u242_20 11B2  
                         i1u234_20 1AD8                           i1u242_21 11AE  
                         i1u234_21 1AD4                           i1u243_20 128E  
                         i1u235_20 1962                           i1u243_21 128A  
                         i1u235_21 195E                           i1u244_20 12EE  
                         i1u236_20 197C                           i1u228_20 0E9E  
                         i1u244_21 12EA                           i1u236_21 1978  
                         i1u228_21 0E9A                           i1u245_20 1310  
                         i1u237_20 1996                           i1u229_20 0F2E  
                         i1u245_21 130C                           i1u237_21 1992  
                         i1u229_21 0F2A                           i1u246_20 13D4  
                         i1u238_20 19B4                           i1u246_21 13D0  
                         i1u238_21 19B0                           i1u239_20 19CA  
                         i1u239_21 19C6                           i2u120_41 1F30  
                         i2u117_40 1C98                           i2u117_41 1C94  
                         i2u118_40 1CD0                           i2u118_41 1CCC  
                         i2u119_40 1CFA                           i2u119_41 1CF6  
                         i2u250_40 0890                           i2u250_41 088C  
                         i2u251_40 08BC                           i2u251_41 08B8  
                         i2u252_40 08CA                           i2u252_41 08C6  
                         i2u253_40 0914                           i2u253_41 0910  
                         i2u254_40 09EC                           i2u254_41 09E8  
                         i2u255_40 0A2C                           i2u255_41 0A28  
                         i2u256_40 0A4E                           i2u248_40 0840  
                         i2u256_41 0A4A                           i2u248_41 083C  
                         i2u257_40 0B10                           i2u249_40 087E  
                         i2u257_41 0B0C                           i2u249_41 087A  
              create_task@new_task 0201         __end_of_priority_scheduler 1950  
                  ??_decrease_time 0021               __end_of_mutex_unlock 1AA2  
                       _ADCON0bits 0FC2                create_task@priority 0021  
            change_state@new_state 019D                        write_pipe@p 0038  
                   decrease_time@i 0023                        _INTCON2bits 0FF1  
                       ?_read_pipe 0183          _tarefa_injecao_eletronica 1FD4  
                i2create_task@task 0022              tarefa_acelerador@data 0179  
                         __Hrparam 0000                      ?_change_state 0021  
                         __Lrparam 0000                _tarefa_estabilidade 2078  
                         _adc_init 2184                           _adc_read 20D6  
             __end_of_start_timer0 21BE                           __ptext10 17BA  
                         __ptext11 2184                           __ptext20 1950  
                         __ptext12 212C                           __ptext21 20D6  
                         __ptext13 1E98                           __ptext30 1CFC  
                         __ptext22 1172                           __ptext14 2154  
                         __ptext31 2078                           __ptext23 21B4  
                         __ptext15 1D6A                           __ptext32 1414  
                         __ptext24 1892                           __ptext16 1F44  
                         __ptext33 21AC                           __ptext25 1E34  
                         __ptext17 1BDA                           __ptext26 1B3E  
                         __ptext18 0E76                           __ptext35 1EEE  
                         __ptext27 1A00                           __ptext19 1AA2  
                         __ptext36 1C6E                           __ptext28 0B78  
                         __ptext29 1FD4               ?_tarefa_estabilidade 0021  
          _tarefa_controle_central 1E34                      ??_user_config 0036  
                         _est_flag 0040              __end_ofi2_create_task 1F44  
                  mutex_unlock@tid 0191                     ??_change_state 0196  
                         _sem_init 20A8                           _sem_wait 0E76  
                         _sem_post 1AA2                           _os_start 2194  
                         isa$xinst 0000                           _pwm_init 2170  
                     _SRAMInitHeap 1D6A                       ??_mutex_init 0023  
                     ??_mutex_lock 018E               tarefa_acelerador@raw 0177  
                       _INTCONbits 0FF2              ??_tarefa_estabilidade 019F  
                      ??_read_pipe 0187                           intlevel1 0000  
                         intlevel2 0000                      _config_timer0 2154  
              __end_of_user_config 2048                 __end_of_mutex_init 212C  
               __end_of_mutex_lock 0E76      tarefa_injecao_eletronica@duty 0195  
                     ??_write_pipe 003B                      read_pipe@data 0185  
        ??_tarefa_controle_central 018A                       ?_create_pipe 0034  
                     ?_create_task 0021                       _mutex_unlock 1A00  
               __end_of_write_pipe 1C6E                     ?_config_timer0 0021  
