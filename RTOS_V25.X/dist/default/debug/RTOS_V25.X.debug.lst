

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 29 17:13:28 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    59   000000                     
    60                           ; Generated 05/12/2024 GMT
    61                           ; 
    62                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000FE0                     bsr             equ	4064
    95   000FE9                     fsr0            equ	4073
    96   000FEA                     fsr0h           equ	4074
    97   000FE9                     fsr0l           equ	4073
    98   000FE1                     fsr1            equ	4065
    99   000FE2                     fsr1h           equ	4066
   100   000FE1                     fsr1l           equ	4065
   101   000FD9                     fsr2            equ	4057
   102   000FDA                     fsr2h           equ	4058
   103   000FD9                     fsr2l           equ	4057
   104   000FEF                     indf0           equ	4079
   105   000FE7                     indf1           equ	4071
   106   000FDF                     indf2           equ	4063
   107   000FF2                     intcon          equ	4082
   108   000000                     nvmcon          equ	0
   109   000FF9                     pcl             equ	4089
   110   000FFA                     pclath          equ	4090
   111   000FFB                     pclatu          equ	4091
   112   000FEB                     plusw0          equ	4075
   113   000FE3                     plusw1          equ	4067
   114   000FDB                     plusw2          equ	4059
   115   000FED                     postdec0        equ	4077
   116   000FE5                     postdec1        equ	4069
   117   000FDD                     postdec2        equ	4061
   118   000FEE                     postinc0        equ	4078
   119   000FE6                     postinc1        equ	4070
   120   000FDE                     postinc2        equ	4062
   121   000FEC                     preinc0         equ	4076
   122   000FE4                     preinc1         equ	4068
   123   000FDC                     preinc2         equ	4060
   124   000FF3                     prod            equ	4083
   125   000FF4                     prodh           equ	4084
   126   000FF3                     prodl           equ	4083
   127   000FD8                     status          equ	4056
   128   000FF5                     tablat          equ	4085
   129   000FF6                     tblptr          equ	4086
   130   000FF7                     tblptrh         equ	4087
   131   000FF6                     tblptrl         equ	4086
   132   000FF8                     tblptru         equ	4088
   133   000FFD                     tosl            equ	4093
   134   000FE8                     wreg            equ	4072
   135   000F62                     SPPDATA         equ	3938	;# 
   136   000F63                     SPPCFG          equ	3939	;# 
   137   000F64                     SPPEPS          equ	3940	;# 
   138   000F65                     SPPCON          equ	3941	;# 
   139   000F66                     UFRM            equ	3942	;# 
   140   000F66                     UFRML           equ	3942	;# 
   141   000F67                     UFRMH           equ	3943	;# 
   142   000F68                     UIR             equ	3944	;# 
   143   000F69                     UIE             equ	3945	;# 
   144   000F6A                     UEIR            equ	3946	;# 
   145   000F6B                     UEIE            equ	3947	;# 
   146   000F6C                     USTAT           equ	3948	;# 
   147   000F6D                     UCON            equ	3949	;# 
   148   000F6E                     UADDR           equ	3950	;# 
   149   000F6F                     UCFG            equ	3951	;# 
   150   000F70                     UEP0            equ	3952	;# 
   151   000F71                     UEP1            equ	3953	;# 
   152   000F72                     UEP2            equ	3954	;# 
   153   000F73                     UEP3            equ	3955	;# 
   154   000F74                     UEP4            equ	3956	;# 
   155   000F75                     UEP5            equ	3957	;# 
   156   000F76                     UEP6            equ	3958	;# 
   157   000F77                     UEP7            equ	3959	;# 
   158   000F78                     UEP8            equ	3960	;# 
   159   000F79                     UEP9            equ	3961	;# 
   160   000F7A                     UEP10           equ	3962	;# 
   161   000F7B                     UEP11           equ	3963	;# 
   162   000F7C                     UEP12           equ	3964	;# 
   163   000F7D                     UEP13           equ	3965	;# 
   164   000F7E                     UEP14           equ	3966	;# 
   165   000F7F                     UEP15           equ	3967	;# 
   166   000F80                     PORTA           equ	3968	;# 
   167   000F81                     PORTB           equ	3969	;# 
   168   000F82                     PORTC           equ	3970	;# 
   169   000F83                     PORTD           equ	3971	;# 
   170   000F84                     PORTE           equ	3972	;# 
   171   000F89                     LATA            equ	3977	;# 
   172   000F8A                     LATB            equ	3978	;# 
   173   000F8B                     LATC            equ	3979	;# 
   174   000F8C                     LATD            equ	3980	;# 
   175   000F8D                     LATE            equ	3981	;# 
   176   000F92                     TRISA           equ	3986	;# 
   177   000F92                     DDRA            equ	3986	;# 
   178   000F93                     TRISB           equ	3987	;# 
   179   000F93                     DDRB            equ	3987	;# 
   180   000F94                     TRISC           equ	3988	;# 
   181   000F94                     DDRC            equ	3988	;# 
   182   000F95                     TRISD           equ	3989	;# 
   183   000F95                     DDRD            equ	3989	;# 
   184   000F96                     TRISE           equ	3990	;# 
   185   000F96                     DDRE            equ	3990	;# 
   186   000F9B                     OSCTUNE         equ	3995	;# 
   187   000F9D                     PIE1            equ	3997	;# 
   188   000F9E                     PIR1            equ	3998	;# 
   189   000F9F                     IPR1            equ	3999	;# 
   190   000FA0                     PIE2            equ	4000	;# 
   191   000FA1                     PIR2            equ	4001	;# 
   192   000FA2                     IPR2            equ	4002	;# 
   193   000FA6                     EECON1          equ	4006	;# 
   194   000FA7                     EECON2          equ	4007	;# 
   195   000FA8                     EEDATA          equ	4008	;# 
   196   000FA9                     EEADR           equ	4009	;# 
   197   000FAB                     RCSTA           equ	4011	;# 
   198   000FAB                     RCSTA1          equ	4011	;# 
   199   000FAC                     TXSTA           equ	4012	;# 
   200   000FAC                     TXSTA1          equ	4012	;# 
   201   000FAD                     TXREG           equ	4013	;# 
   202   000FAD                     TXREG1          equ	4013	;# 
   203   000FAE                     RCREG           equ	4014	;# 
   204   000FAE                     RCREG1          equ	4014	;# 
   205   000FAF                     SPBRG           equ	4015	;# 
   206   000FAF                     SPBRG1          equ	4015	;# 
   207   000FB0                     SPBRGH          equ	4016	;# 
   208   000FB1                     T3CON           equ	4017	;# 
   209   000FB2                     TMR3            equ	4018	;# 
   210   000FB2                     TMR3L           equ	4018	;# 
   211   000FB3                     TMR3H           equ	4019	;# 
   212   000FB4                     CMCON           equ	4020	;# 
   213   000FB5                     CVRCON          equ	4021	;# 
   214   000FB6                     ECCP1AS         equ	4022	;# 
   215   000FB6                     CCP1AS          equ	4022	;# 
   216   000FB7                     ECCP1DEL        equ	4023	;# 
   217   000FB7                     CCP1DEL         equ	4023	;# 
   218   000FB8                     BAUDCON         equ	4024	;# 
   219   000FB8                     BAUDCTL         equ	4024	;# 
   220   000FBA                     CCP2CON         equ	4026	;# 
   221   000FBB                     CCPR2           equ	4027	;# 
   222   000FBB                     CCPR2L          equ	4027	;# 
   223   000FBC                     CCPR2H          equ	4028	;# 
   224   000FBD                     CCP1CON         equ	4029	;# 
   225   000FBD                     ECCP1CON        equ	4029	;# 
   226   000FBE                     CCPR1           equ	4030	;# 
   227   000FBE                     CCPR1L          equ	4030	;# 
   228   000FBF                     CCPR1H          equ	4031	;# 
   229   000FC0                     ADCON2          equ	4032	;# 
   230   000FC1                     ADCON1          equ	4033	;# 
   231   000FC2                     ADCON0          equ	4034	;# 
   232   000FC3                     ADRES           equ	4035	;# 
   233   000FC3                     ADRESL          equ	4035	;# 
   234   000FC4                     ADRESH          equ	4036	;# 
   235   000FC5                     SSPCON2         equ	4037	;# 
   236   000FC6                     SSPCON1         equ	4038	;# 
   237   000FC7                     SSPSTAT         equ	4039	;# 
   238   000FC8                     SSPADD          equ	4040	;# 
   239   000FC9                     SSPBUF          equ	4041	;# 
   240   000FCA                     T2CON           equ	4042	;# 
   241   000FCB                     PR2             equ	4043	;# 
   242   000FCB                     MEMCON          equ	4043	;# 
   243   000FCC                     TMR2            equ	4044	;# 
   244   000FCD                     T1CON           equ	4045	;# 
   245   000FCE                     TMR1            equ	4046	;# 
   246   000FCE                     TMR1L           equ	4046	;# 
   247   000FCF                     TMR1H           equ	4047	;# 
   248   000FD0                     RCON            equ	4048	;# 
   249   000FD1                     WDTCON          equ	4049	;# 
   250   000FD2                     HLVDCON         equ	4050	;# 
   251   000FD2                     LVDCON          equ	4050	;# 
   252   000FD3                     OSCCON          equ	4051	;# 
   253   000FD5                     T0CON           equ	4053	;# 
   254   000FD6                     TMR0            equ	4054	;# 
   255   000FD6                     TMR0L           equ	4054	;# 
   256   000FD7                     TMR0H           equ	4055	;# 
   257   000FD8                     STATUS          equ	4056	;# 
   258   000FD9                     FSR2            equ	4057	;# 
   259   000FD9                     FSR2L           equ	4057	;# 
   260   000FDA                     FSR2H           equ	4058	;# 
   261   000FDB                     PLUSW2          equ	4059	;# 
   262   000FDC                     PREINC2         equ	4060	;# 
   263   000FDD                     POSTDEC2        equ	4061	;# 
   264   000FDE                     POSTINC2        equ	4062	;# 
   265   000FDF                     INDF2           equ	4063	;# 
   266   000FE0                     BSR             equ	4064	;# 
   267   000FE1                     FSR1            equ	4065	;# 
   268   000FE1                     FSR1L           equ	4065	;# 
   269   000FE2                     FSR1H           equ	4066	;# 
   270   000FE3                     PLUSW1          equ	4067	;# 
   271   000FE4                     PREINC1         equ	4068	;# 
   272   000FE5                     POSTDEC1        equ	4069	;# 
   273   000FE6                     POSTINC1        equ	4070	;# 
   274   000FE7                     INDF1           equ	4071	;# 
   275   000FE8                     WREG            equ	4072	;# 
   276   000FE9                     FSR0            equ	4073	;# 
   277   000FE9                     FSR0L           equ	4073	;# 
   278   000FEA                     FSR0H           equ	4074	;# 
   279   000FEB                     PLUSW0          equ	4075	;# 
   280   000FEC                     PREINC0         equ	4076	;# 
   281   000FED                     POSTDEC0        equ	4077	;# 
   282   000FEE                     POSTINC0        equ	4078	;# 
   283   000FEF                     INDF0           equ	4079	;# 
   284   000FF0                     INTCON3         equ	4080	;# 
   285   000FF1                     INTCON2         equ	4081	;# 
   286   000FF2                     INTCON          equ	4082	;# 
   287   000FF3                     PROD            equ	4083	;# 
   288   000FF3                     PRODL           equ	4083	;# 
   289   000FF4                     PRODH           equ	4084	;# 
   290   000FF5                     TABLAT          equ	4085	;# 
   291   000FF6                     TBLPTR          equ	4086	;# 
   292   000FF6                     TBLPTRL         equ	4086	;# 
   293   000FF7                     TBLPTRH         equ	4087	;# 
   294   000FF8                     TBLPTRU         equ	4088	;# 
   295   000FF9                     PCLAT           equ	4089	;# 
   296   000FF9                     PC              equ	4089	;# 
   297   000FF9                     PCL             equ	4089	;# 
   298   000FFA                     PCLATH          equ	4090	;# 
   299   000FFB                     PCLATU          equ	4091	;# 
   300   000FFC                     STKPTR          equ	4092	;# 
   301   000FFD                     TOS             equ	4093	;# 
   302   000FFD                     TOSL            equ	4093	;# 
   303   000FFE                     TOSH            equ	4094	;# 
   304   000FFF                     TOSU            equ	4095	;# 
   305   000F62                     SPPDATA         equ	3938	;# 
   306   000F63                     SPPCFG          equ	3939	;# 
   307   000F64                     SPPEPS          equ	3940	;# 
   308   000F65                     SPPCON          equ	3941	;# 
   309   000F66                     UFRM            equ	3942	;# 
   310   000F66                     UFRML           equ	3942	;# 
   311   000F67                     UFRMH           equ	3943	;# 
   312   000F68                     UIR             equ	3944	;# 
   313   000F69                     UIE             equ	3945	;# 
   314   000F6A                     UEIR            equ	3946	;# 
   315   000F6B                     UEIE            equ	3947	;# 
   316   000F6C                     USTAT           equ	3948	;# 
   317   000F6D                     UCON            equ	3949	;# 
   318   000F6E                     UADDR           equ	3950	;# 
   319   000F6F                     UCFG            equ	3951	;# 
   320   000F70                     UEP0            equ	3952	;# 
   321   000F71                     UEP1            equ	3953	;# 
   322   000F72                     UEP2            equ	3954	;# 
   323   000F73                     UEP3            equ	3955	;# 
   324   000F74                     UEP4            equ	3956	;# 
   325   000F75                     UEP5            equ	3957	;# 
   326   000F76                     UEP6            equ	3958	;# 
   327   000F77                     UEP7            equ	3959	;# 
   328   000F78                     UEP8            equ	3960	;# 
   329   000F79                     UEP9            equ	3961	;# 
   330   000F7A                     UEP10           equ	3962	;# 
   331   000F7B                     UEP11           equ	3963	;# 
   332   000F7C                     UEP12           equ	3964	;# 
   333   000F7D                     UEP13           equ	3965	;# 
   334   000F7E                     UEP14           equ	3966	;# 
   335   000F7F                     UEP15           equ	3967	;# 
   336   000F80                     PORTA           equ	3968	;# 
   337   000F81                     PORTB           equ	3969	;# 
   338   000F82                     PORTC           equ	3970	;# 
   339   000F83                     PORTD           equ	3971	;# 
   340   000F84                     PORTE           equ	3972	;# 
   341   000F89                     LATA            equ	3977	;# 
   342   000F8A                     LATB            equ	3978	;# 
   343   000F8B                     LATC            equ	3979	;# 
   344   000F8C                     LATD            equ	3980	;# 
   345   000F8D                     LATE            equ	3981	;# 
   346   000F92                     TRISA           equ	3986	;# 
   347   000F92                     DDRA            equ	3986	;# 
   348   000F93                     TRISB           equ	3987	;# 
   349   000F93                     DDRB            equ	3987	;# 
   350   000F94                     TRISC           equ	3988	;# 
   351   000F94                     DDRC            equ	3988	;# 
   352   000F95                     TRISD           equ	3989	;# 
   353   000F95                     DDRD            equ	3989	;# 
   354   000F96                     TRISE           equ	3990	;# 
   355   000F96                     DDRE            equ	3990	;# 
   356   000F9B                     OSCTUNE         equ	3995	;# 
   357   000F9D                     PIE1            equ	3997	;# 
   358   000F9E                     PIR1            equ	3998	;# 
   359   000F9F                     IPR1            equ	3999	;# 
   360   000FA0                     PIE2            equ	4000	;# 
   361   000FA1                     PIR2            equ	4001	;# 
   362   000FA2                     IPR2            equ	4002	;# 
   363   000FA6                     EECON1          equ	4006	;# 
   364   000FA7                     EECON2          equ	4007	;# 
   365   000FA8                     EEDATA          equ	4008	;# 
   366   000FA9                     EEADR           equ	4009	;# 
   367   000FAB                     RCSTA           equ	4011	;# 
   368   000FAB                     RCSTA1          equ	4011	;# 
   369   000FAC                     TXSTA           equ	4012	;# 
   370   000FAC                     TXSTA1          equ	4012	;# 
   371   000FAD                     TXREG           equ	4013	;# 
   372   000FAD                     TXREG1          equ	4013	;# 
   373   000FAE                     RCREG           equ	4014	;# 
   374   000FAE                     RCREG1          equ	4014	;# 
   375   000FAF                     SPBRG           equ	4015	;# 
   376   000FAF                     SPBRG1          equ	4015	;# 
   377   000FB0                     SPBRGH          equ	4016	;# 
   378   000FB1                     T3CON           equ	4017	;# 
   379   000FB2                     TMR3            equ	4018	;# 
   380   000FB2                     TMR3L           equ	4018	;# 
   381   000FB3                     TMR3H           equ	4019	;# 
   382   000FB4                     CMCON           equ	4020	;# 
   383   000FB5                     CVRCON          equ	4021	;# 
   384   000FB6                     ECCP1AS         equ	4022	;# 
   385   000FB6                     CCP1AS          equ	4022	;# 
   386   000FB7                     ECCP1DEL        equ	4023	;# 
   387   000FB7                     CCP1DEL         equ	4023	;# 
   388   000FB8                     BAUDCON         equ	4024	;# 
   389   000FB8                     BAUDCTL         equ	4024	;# 
   390   000FBA                     CCP2CON         equ	4026	;# 
   391   000FBB                     CCPR2           equ	4027	;# 
   392   000FBB                     CCPR2L          equ	4027	;# 
   393   000FBC                     CCPR2H          equ	4028	;# 
   394   000FBD                     CCP1CON         equ	4029	;# 
   395   000FBD                     ECCP1CON        equ	4029	;# 
   396   000FBE                     CCPR1           equ	4030	;# 
   397   000FBE                     CCPR1L          equ	4030	;# 
   398   000FBF                     CCPR1H          equ	4031	;# 
   399   000FC0                     ADCON2          equ	4032	;# 
   400   000FC1                     ADCON1          equ	4033	;# 
   401   000FC2                     ADCON0          equ	4034	;# 
   402   000FC3                     ADRES           equ	4035	;# 
   403   000FC3                     ADRESL          equ	4035	;# 
   404   000FC4                     ADRESH          equ	4036	;# 
   405   000FC5                     SSPCON2         equ	4037	;# 
   406   000FC6                     SSPCON1         equ	4038	;# 
   407   000FC7                     SSPSTAT         equ	4039	;# 
   408   000FC8                     SSPADD          equ	4040	;# 
   409   000FC9                     SSPBUF          equ	4041	;# 
   410   000FCA                     T2CON           equ	4042	;# 
   411   000FCB                     PR2             equ	4043	;# 
   412   000FCB                     MEMCON          equ	4043	;# 
   413   000FCC                     TMR2            equ	4044	;# 
   414   000FCD                     T1CON           equ	4045	;# 
   415   000FCE                     TMR1            equ	4046	;# 
   416   000FCE                     TMR1L           equ	4046	;# 
   417   000FCF                     TMR1H           equ	4047	;# 
   418   000FD0                     RCON            equ	4048	;# 
   419   000FD1                     WDTCON          equ	4049	;# 
   420   000FD2                     HLVDCON         equ	4050	;# 
   421   000FD2                     LVDCON          equ	4050	;# 
   422   000FD3                     OSCCON          equ	4051	;# 
   423   000FD5                     T0CON           equ	4053	;# 
   424   000FD6                     TMR0            equ	4054	;# 
   425   000FD6                     TMR0L           equ	4054	;# 
   426   000FD7                     TMR0H           equ	4055	;# 
   427   000FD8                     STATUS          equ	4056	;# 
   428   000FD9                     FSR2            equ	4057	;# 
   429   000FD9                     FSR2L           equ	4057	;# 
   430   000FDA                     FSR2H           equ	4058	;# 
   431   000FDB                     PLUSW2          equ	4059	;# 
   432   000FDC                     PREINC2         equ	4060	;# 
   433   000FDD                     POSTDEC2        equ	4061	;# 
   434   000FDE                     POSTINC2        equ	4062	;# 
   435   000FDF                     INDF2           equ	4063	;# 
   436   000FE0                     BSR             equ	4064	;# 
   437   000FE1                     FSR1            equ	4065	;# 
   438   000FE1                     FSR1L           equ	4065	;# 
   439   000FE2                     FSR1H           equ	4066	;# 
   440   000FE3                     PLUSW1          equ	4067	;# 
   441   000FE4                     PREINC1         equ	4068	;# 
   442   000FE5                     POSTDEC1        equ	4069	;# 
   443   000FE6                     POSTINC1        equ	4070	;# 
   444   000FE7                     INDF1           equ	4071	;# 
   445   000FE8                     WREG            equ	4072	;# 
   446   000FE9                     FSR0            equ	4073	;# 
   447   000FE9                     FSR0L           equ	4073	;# 
   448   000FEA                     FSR0H           equ	4074	;# 
   449   000FEB                     PLUSW0          equ	4075	;# 
   450   000FEC                     PREINC0         equ	4076	;# 
   451   000FED                     POSTDEC0        equ	4077	;# 
   452   000FEE                     POSTINC0        equ	4078	;# 
   453   000FEF                     INDF0           equ	4079	;# 
   454   000FF0                     INTCON3         equ	4080	;# 
   455   000FF1                     INTCON2         equ	4081	;# 
   456   000FF2                     INTCON          equ	4082	;# 
   457   000FF3                     PROD            equ	4083	;# 
   458   000FF3                     PRODL           equ	4083	;# 
   459   000FF4                     PRODH           equ	4084	;# 
   460   000FF5                     TABLAT          equ	4085	;# 
   461   000FF6                     TBLPTR          equ	4086	;# 
   462   000FF6                     TBLPTRL         equ	4086	;# 
   463   000FF7                     TBLPTRH         equ	4087	;# 
   464   000FF8                     TBLPTRU         equ	4088	;# 
   465   000FF9                     PCLAT           equ	4089	;# 
   466   000FF9                     PC              equ	4089	;# 
   467   000FF9                     PCL             equ	4089	;# 
   468   000FFA                     PCLATH          equ	4090	;# 
   469   000FFB                     PCLATU          equ	4091	;# 
   470   000FFC                     STKPTR          equ	4092	;# 
   471   000FFD                     TOS             equ	4093	;# 
   472   000FFD                     TOSL            equ	4093	;# 
   473   000FFE                     TOSH            equ	4094	;# 
   474   000FFF                     TOSU            equ	4095	;# 
   475   000F62                     SPPDATA         equ	3938	;# 
   476   000F63                     SPPCFG          equ	3939	;# 
   477   000F64                     SPPEPS          equ	3940	;# 
   478   000F65                     SPPCON          equ	3941	;# 
   479   000F66                     UFRM            equ	3942	;# 
   480   000F66                     UFRML           equ	3942	;# 
   481   000F67                     UFRMH           equ	3943	;# 
   482   000F68                     UIR             equ	3944	;# 
   483   000F69                     UIE             equ	3945	;# 
   484   000F6A                     UEIR            equ	3946	;# 
   485   000F6B                     UEIE            equ	3947	;# 
   486   000F6C                     USTAT           equ	3948	;# 
   487   000F6D                     UCON            equ	3949	;# 
   488   000F6E                     UADDR           equ	3950	;# 
   489   000F6F                     UCFG            equ	3951	;# 
   490   000F70                     UEP0            equ	3952	;# 
   491   000F71                     UEP1            equ	3953	;# 
   492   000F72                     UEP2            equ	3954	;# 
   493   000F73                     UEP3            equ	3955	;# 
   494   000F74                     UEP4            equ	3956	;# 
   495   000F75                     UEP5            equ	3957	;# 
   496   000F76                     UEP6            equ	3958	;# 
   497   000F77                     UEP7            equ	3959	;# 
   498   000F78                     UEP8            equ	3960	;# 
   499   000F79                     UEP9            equ	3961	;# 
   500   000F7A                     UEP10           equ	3962	;# 
   501   000F7B                     UEP11           equ	3963	;# 
   502   000F7C                     UEP12           equ	3964	;# 
   503   000F7D                     UEP13           equ	3965	;# 
   504   000F7E                     UEP14           equ	3966	;# 
   505   000F7F                     UEP15           equ	3967	;# 
   506   000F80                     PORTA           equ	3968	;# 
   507   000F81                     PORTB           equ	3969	;# 
   508   000F82                     PORTC           equ	3970	;# 
   509   000F83                     PORTD           equ	3971	;# 
   510   000F84                     PORTE           equ	3972	;# 
   511   000F89                     LATA            equ	3977	;# 
   512   000F8A                     LATB            equ	3978	;# 
   513   000F8B                     LATC            equ	3979	;# 
   514   000F8C                     LATD            equ	3980	;# 
   515   000F8D                     LATE            equ	3981	;# 
   516   000F92                     TRISA           equ	3986	;# 
   517   000F92                     DDRA            equ	3986	;# 
   518   000F93                     TRISB           equ	3987	;# 
   519   000F93                     DDRB            equ	3987	;# 
   520   000F94                     TRISC           equ	3988	;# 
   521   000F94                     DDRC            equ	3988	;# 
   522   000F95                     TRISD           equ	3989	;# 
   523   000F95                     DDRD            equ	3989	;# 
   524   000F96                     TRISE           equ	3990	;# 
   525   000F96                     DDRE            equ	3990	;# 
   526   000F9B                     OSCTUNE         equ	3995	;# 
   527   000F9D                     PIE1            equ	3997	;# 
   528   000F9E                     PIR1            equ	3998	;# 
   529   000F9F                     IPR1            equ	3999	;# 
   530   000FA0                     PIE2            equ	4000	;# 
   531   000FA1                     PIR2            equ	4001	;# 
   532   000FA2                     IPR2            equ	4002	;# 
   533   000FA6                     EECON1          equ	4006	;# 
   534   000FA7                     EECON2          equ	4007	;# 
   535   000FA8                     EEDATA          equ	4008	;# 
   536   000FA9                     EEADR           equ	4009	;# 
   537   000FAB                     RCSTA           equ	4011	;# 
   538   000FAB                     RCSTA1          equ	4011	;# 
   539   000FAC                     TXSTA           equ	4012	;# 
   540   000FAC                     TXSTA1          equ	4012	;# 
   541   000FAD                     TXREG           equ	4013	;# 
   542   000FAD                     TXREG1          equ	4013	;# 
   543   000FAE                     RCREG           equ	4014	;# 
   544   000FAE                     RCREG1          equ	4014	;# 
   545   000FAF                     SPBRG           equ	4015	;# 
   546   000FAF                     SPBRG1          equ	4015	;# 
   547   000FB0                     SPBRGH          equ	4016	;# 
   548   000FB1                     T3CON           equ	4017	;# 
   549   000FB2                     TMR3            equ	4018	;# 
   550   000FB2                     TMR3L           equ	4018	;# 
   551   000FB3                     TMR3H           equ	4019	;# 
   552   000FB4                     CMCON           equ	4020	;# 
   553   000FB5                     CVRCON          equ	4021	;# 
   554   000FB6                     ECCP1AS         equ	4022	;# 
   555   000FB6                     CCP1AS          equ	4022	;# 
   556   000FB7                     ECCP1DEL        equ	4023	;# 
   557   000FB7                     CCP1DEL         equ	4023	;# 
   558   000FB8                     BAUDCON         equ	4024	;# 
   559   000FB8                     BAUDCTL         equ	4024	;# 
   560   000FBA                     CCP2CON         equ	4026	;# 
   561   000FBB                     CCPR2           equ	4027	;# 
   562   000FBB                     CCPR2L          equ	4027	;# 
   563   000FBC                     CCPR2H          equ	4028	;# 
   564   000FBD                     CCP1CON         equ	4029	;# 
   565   000FBD                     ECCP1CON        equ	4029	;# 
   566   000FBE                     CCPR1           equ	4030	;# 
   567   000FBE                     CCPR1L          equ	4030	;# 
   568   000FBF                     CCPR1H          equ	4031	;# 
   569   000FC0                     ADCON2          equ	4032	;# 
   570   000FC1                     ADCON1          equ	4033	;# 
   571   000FC2                     ADCON0          equ	4034	;# 
   572   000FC3                     ADRES           equ	4035	;# 
   573   000FC3                     ADRESL          equ	4035	;# 
   574   000FC4                     ADRESH          equ	4036	;# 
   575   000FC5                     SSPCON2         equ	4037	;# 
   576   000FC6                     SSPCON1         equ	4038	;# 
   577   000FC7                     SSPSTAT         equ	4039	;# 
   578   000FC8                     SSPADD          equ	4040	;# 
   579   000FC9                     SSPBUF          equ	4041	;# 
   580   000FCA                     T2CON           equ	4042	;# 
   581   000FCB                     PR2             equ	4043	;# 
   582   000FCB                     MEMCON          equ	4043	;# 
   583   000FCC                     TMR2            equ	4044	;# 
   584   000FCD                     T1CON           equ	4045	;# 
   585   000FCE                     TMR1            equ	4046	;# 
   586   000FCE                     TMR1L           equ	4046	;# 
   587   000FCF                     TMR1H           equ	4047	;# 
   588   000FD0                     RCON            equ	4048	;# 
   589   000FD1                     WDTCON          equ	4049	;# 
   590   000FD2                     HLVDCON         equ	4050	;# 
   591   000FD2                     LVDCON          equ	4050	;# 
   592   000FD3                     OSCCON          equ	4051	;# 
   593   000FD5                     T0CON           equ	4053	;# 
   594   000FD6                     TMR0            equ	4054	;# 
   595   000FD6                     TMR0L           equ	4054	;# 
   596   000FD7                     TMR0H           equ	4055	;# 
   597   000FD8                     STATUS          equ	4056	;# 
   598   000FD9                     FSR2            equ	4057	;# 
   599   000FD9                     FSR2L           equ	4057	;# 
   600   000FDA                     FSR2H           equ	4058	;# 
   601   000FDB                     PLUSW2          equ	4059	;# 
   602   000FDC                     PREINC2         equ	4060	;# 
   603   000FDD                     POSTDEC2        equ	4061	;# 
   604   000FDE                     POSTINC2        equ	4062	;# 
   605   000FDF                     INDF2           equ	4063	;# 
   606   000FE0                     BSR             equ	4064	;# 
   607   000FE1                     FSR1            equ	4065	;# 
   608   000FE1                     FSR1L           equ	4065	;# 
   609   000FE2                     FSR1H           equ	4066	;# 
   610   000FE3                     PLUSW1          equ	4067	;# 
   611   000FE4                     PREINC1         equ	4068	;# 
   612   000FE5                     POSTDEC1        equ	4069	;# 
   613   000FE6                     POSTINC1        equ	4070	;# 
   614   000FE7                     INDF1           equ	4071	;# 
   615   000FE8                     WREG            equ	4072	;# 
   616   000FE9                     FSR0            equ	4073	;# 
   617   000FE9                     FSR0L           equ	4073	;# 
   618   000FEA                     FSR0H           equ	4074	;# 
   619   000FEB                     PLUSW0          equ	4075	;# 
   620   000FEC                     PREINC0         equ	4076	;# 
   621   000FED                     POSTDEC0        equ	4077	;# 
   622   000FEE                     POSTINC0        equ	4078	;# 
   623   000FEF                     INDF0           equ	4079	;# 
   624   000FF0                     INTCON3         equ	4080	;# 
   625   000FF1                     INTCON2         equ	4081	;# 
   626   000FF2                     INTCON          equ	4082	;# 
   627   000FF3                     PROD            equ	4083	;# 
   628   000FF3                     PRODL           equ	4083	;# 
   629   000FF4                     PRODH           equ	4084	;# 
   630   000FF5                     TABLAT          equ	4085	;# 
   631   000FF6                     TBLPTR          equ	4086	;# 
   632   000FF6                     TBLPTRL         equ	4086	;# 
   633   000FF7                     TBLPTRH         equ	4087	;# 
   634   000FF8                     TBLPTRU         equ	4088	;# 
   635   000FF9                     PCLAT           equ	4089	;# 
   636   000FF9                     PC              equ	4089	;# 
   637   000FF9                     PCL             equ	4089	;# 
   638   000FFA                     PCLATH          equ	4090	;# 
   639   000FFB                     PCLATU          equ	4091	;# 
   640   000FFC                     STKPTR          equ	4092	;# 
   641   000FFD                     TOS             equ	4093	;# 
   642   000FFD                     TOSL            equ	4093	;# 
   643   000FFE                     TOSH            equ	4094	;# 
   644   000FFF                     TOSU            equ	4095	;# 
   645   000F62                     SPPDATA         equ	3938	;# 
   646   000F63                     SPPCFG          equ	3939	;# 
   647   000F64                     SPPEPS          equ	3940	;# 
   648   000F65                     SPPCON          equ	3941	;# 
   649   000F66                     UFRM            equ	3942	;# 
   650   000F66                     UFRML           equ	3942	;# 
   651   000F67                     UFRMH           equ	3943	;# 
   652   000F68                     UIR             equ	3944	;# 
   653   000F69                     UIE             equ	3945	;# 
   654   000F6A                     UEIR            equ	3946	;# 
   655   000F6B                     UEIE            equ	3947	;# 
   656   000F6C                     USTAT           equ	3948	;# 
   657   000F6D                     UCON            equ	3949	;# 
   658   000F6E                     UADDR           equ	3950	;# 
   659   000F6F                     UCFG            equ	3951	;# 
   660   000F70                     UEP0            equ	3952	;# 
   661   000F71                     UEP1            equ	3953	;# 
   662   000F72                     UEP2            equ	3954	;# 
   663   000F73                     UEP3            equ	3955	;# 
   664   000F74                     UEP4            equ	3956	;# 
   665   000F75                     UEP5            equ	3957	;# 
   666   000F76                     UEP6            equ	3958	;# 
   667   000F77                     UEP7            equ	3959	;# 
   668   000F78                     UEP8            equ	3960	;# 
   669   000F79                     UEP9            equ	3961	;# 
   670   000F7A                     UEP10           equ	3962	;# 
   671   000F7B                     UEP11           equ	3963	;# 
   672   000F7C                     UEP12           equ	3964	;# 
   673   000F7D                     UEP13           equ	3965	;# 
   674   000F7E                     UEP14           equ	3966	;# 
   675   000F7F                     UEP15           equ	3967	;# 
   676   000F80                     PORTA           equ	3968	;# 
   677   000F81                     PORTB           equ	3969	;# 
   678   000F82                     PORTC           equ	3970	;# 
   679   000F83                     PORTD           equ	3971	;# 
   680   000F84                     PORTE           equ	3972	;# 
   681   000F89                     LATA            equ	3977	;# 
   682   000F8A                     LATB            equ	3978	;# 
   683   000F8B                     LATC            equ	3979	;# 
   684   000F8C                     LATD            equ	3980	;# 
   685   000F8D                     LATE            equ	3981	;# 
   686   000F92                     TRISA           equ	3986	;# 
   687   000F92                     DDRA            equ	3986	;# 
   688   000F93                     TRISB           equ	3987	;# 
   689   000F93                     DDRB            equ	3987	;# 
   690   000F94                     TRISC           equ	3988	;# 
   691   000F94                     DDRC            equ	3988	;# 
   692   000F95                     TRISD           equ	3989	;# 
   693   000F95                     DDRD            equ	3989	;# 
   694   000F96                     TRISE           equ	3990	;# 
   695   000F96                     DDRE            equ	3990	;# 
   696   000F9B                     OSCTUNE         equ	3995	;# 
   697   000F9D                     PIE1            equ	3997	;# 
   698   000F9E                     PIR1            equ	3998	;# 
   699   000F9F                     IPR1            equ	3999	;# 
   700   000FA0                     PIE2            equ	4000	;# 
   701   000FA1                     PIR2            equ	4001	;# 
   702   000FA2                     IPR2            equ	4002	;# 
   703   000FA6                     EECON1          equ	4006	;# 
   704   000FA7                     EECON2          equ	4007	;# 
   705   000FA8                     EEDATA          equ	4008	;# 
   706   000FA9                     EEADR           equ	4009	;# 
   707   000FAB                     RCSTA           equ	4011	;# 
   708   000FAB                     RCSTA1          equ	4011	;# 
   709   000FAC                     TXSTA           equ	4012	;# 
   710   000FAC                     TXSTA1          equ	4012	;# 
   711   000FAD                     TXREG           equ	4013	;# 
   712   000FAD                     TXREG1          equ	4013	;# 
   713   000FAE                     RCREG           equ	4014	;# 
   714   000FAE                     RCREG1          equ	4014	;# 
   715   000FAF                     SPBRG           equ	4015	;# 
   716   000FAF                     SPBRG1          equ	4015	;# 
   717   000FB0                     SPBRGH          equ	4016	;# 
   718   000FB1                     T3CON           equ	4017	;# 
   719   000FB2                     TMR3            equ	4018	;# 
   720   000FB2                     TMR3L           equ	4018	;# 
   721   000FB3                     TMR3H           equ	4019	;# 
   722   000FB4                     CMCON           equ	4020	;# 
   723   000FB5                     CVRCON          equ	4021	;# 
   724   000FB6                     ECCP1AS         equ	4022	;# 
   725   000FB6                     CCP1AS          equ	4022	;# 
   726   000FB7                     ECCP1DEL        equ	4023	;# 
   727   000FB7                     CCP1DEL         equ	4023	;# 
   728   000FB8                     BAUDCON         equ	4024	;# 
   729   000FB8                     BAUDCTL         equ	4024	;# 
   730   000FBA                     CCP2CON         equ	4026	;# 
   731   000FBB                     CCPR2           equ	4027	;# 
   732   000FBB                     CCPR2L          equ	4027	;# 
   733   000FBC                     CCPR2H          equ	4028	;# 
   734   000FBD                     CCP1CON         equ	4029	;# 
   735   000FBD                     ECCP1CON        equ	4029	;# 
   736   000FBE                     CCPR1           equ	4030	;# 
   737   000FBE                     CCPR1L          equ	4030	;# 
   738   000FBF                     CCPR1H          equ	4031	;# 
   739   000FC0                     ADCON2          equ	4032	;# 
   740   000FC1                     ADCON1          equ	4033	;# 
   741   000FC2                     ADCON0          equ	4034	;# 
   742   000FC3                     ADRES           equ	4035	;# 
   743   000FC3                     ADRESL          equ	4035	;# 
   744   000FC4                     ADRESH          equ	4036	;# 
   745   000FC5                     SSPCON2         equ	4037	;# 
   746   000FC6                     SSPCON1         equ	4038	;# 
   747   000FC7                     SSPSTAT         equ	4039	;# 
   748   000FC8                     SSPADD          equ	4040	;# 
   749   000FC9                     SSPBUF          equ	4041	;# 
   750   000FCA                     T2CON           equ	4042	;# 
   751   000FCB                     PR2             equ	4043	;# 
   752   000FCB                     MEMCON          equ	4043	;# 
   753   000FCC                     TMR2            equ	4044	;# 
   754   000FCD                     T1CON           equ	4045	;# 
   755   000FCE                     TMR1            equ	4046	;# 
   756   000FCE                     TMR1L           equ	4046	;# 
   757   000FCF                     TMR1H           equ	4047	;# 
   758   000FD0                     RCON            equ	4048	;# 
   759   000FD1                     WDTCON          equ	4049	;# 
   760   000FD2                     HLVDCON         equ	4050	;# 
   761   000FD2                     LVDCON          equ	4050	;# 
   762   000FD3                     OSCCON          equ	4051	;# 
   763   000FD5                     T0CON           equ	4053	;# 
   764   000FD6                     TMR0            equ	4054	;# 
   765   000FD6                     TMR0L           equ	4054	;# 
   766   000FD7                     TMR0H           equ	4055	;# 
   767   000FD8                     STATUS          equ	4056	;# 
   768   000FD9                     FSR2            equ	4057	;# 
   769   000FD9                     FSR2L           equ	4057	;# 
   770   000FDA                     FSR2H           equ	4058	;# 
   771   000FDB                     PLUSW2          equ	4059	;# 
   772   000FDC                     PREINC2         equ	4060	;# 
   773   000FDD                     POSTDEC2        equ	4061	;# 
   774   000FDE                     POSTINC2        equ	4062	;# 
   775   000FDF                     INDF2           equ	4063	;# 
   776   000FE0                     BSR             equ	4064	;# 
   777   000FE1                     FSR1            equ	4065	;# 
   778   000FE1                     FSR1L           equ	4065	;# 
   779   000FE2                     FSR1H           equ	4066	;# 
   780   000FE3                     PLUSW1          equ	4067	;# 
   781   000FE4                     PREINC1         equ	4068	;# 
   782   000FE5                     POSTDEC1        equ	4069	;# 
   783   000FE6                     POSTINC1        equ	4070	;# 
   784   000FE7                     INDF1           equ	4071	;# 
   785   000FE8                     WREG            equ	4072	;# 
   786   000FE9                     FSR0            equ	4073	;# 
   787   000FE9                     FSR0L           equ	4073	;# 
   788   000FEA                     FSR0H           equ	4074	;# 
   789   000FEB                     PLUSW0          equ	4075	;# 
   790   000FEC                     PREINC0         equ	4076	;# 
   791   000FED                     POSTDEC0        equ	4077	;# 
   792   000FEE                     POSTINC0        equ	4078	;# 
   793   000FEF                     INDF0           equ	4079	;# 
   794   000FF0                     INTCON3         equ	4080	;# 
   795   000FF1                     INTCON2         equ	4081	;# 
   796   000FF2                     INTCON          equ	4082	;# 
   797   000FF3                     PROD            equ	4083	;# 
   798   000FF3                     PRODL           equ	4083	;# 
   799   000FF4                     PRODH           equ	4084	;# 
   800   000FF5                     TABLAT          equ	4085	;# 
   801   000FF6                     TBLPTR          equ	4086	;# 
   802   000FF6                     TBLPTRL         equ	4086	;# 
   803   000FF7                     TBLPTRH         equ	4087	;# 
   804   000FF8                     TBLPTRU         equ	4088	;# 
   805   000FF9                     PCLAT           equ	4089	;# 
   806   000FF9                     PC              equ	4089	;# 
   807   000FF9                     PCL             equ	4089	;# 
   808   000FFA                     PCLATH          equ	4090	;# 
   809   000FFB                     PCLATU          equ	4091	;# 
   810   000FFC                     STKPTR          equ	4092	;# 
   811   000FFD                     TOS             equ	4093	;# 
   812   000FFD                     TOSL            equ	4093	;# 
   813   000FFE                     TOSH            equ	4094	;# 
   814   000FFF                     TOSU            equ	4095	;# 
   815   000F62                     SPPDATA         equ	3938	;# 
   816   000F63                     SPPCFG          equ	3939	;# 
   817   000F64                     SPPEPS          equ	3940	;# 
   818   000F65                     SPPCON          equ	3941	;# 
   819   000F66                     UFRM            equ	3942	;# 
   820   000F66                     UFRML           equ	3942	;# 
   821   000F67                     UFRMH           equ	3943	;# 
   822   000F68                     UIR             equ	3944	;# 
   823   000F69                     UIE             equ	3945	;# 
   824   000F6A                     UEIR            equ	3946	;# 
   825   000F6B                     UEIE            equ	3947	;# 
   826   000F6C                     USTAT           equ	3948	;# 
   827   000F6D                     UCON            equ	3949	;# 
   828   000F6E                     UADDR           equ	3950	;# 
   829   000F6F                     UCFG            equ	3951	;# 
   830   000F70                     UEP0            equ	3952	;# 
   831   000F71                     UEP1            equ	3953	;# 
   832   000F72                     UEP2            equ	3954	;# 
   833   000F73                     UEP3            equ	3955	;# 
   834   000F74                     UEP4            equ	3956	;# 
   835   000F75                     UEP5            equ	3957	;# 
   836   000F76                     UEP6            equ	3958	;# 
   837   000F77                     UEP7            equ	3959	;# 
   838   000F78                     UEP8            equ	3960	;# 
   839   000F79                     UEP9            equ	3961	;# 
   840   000F7A                     UEP10           equ	3962	;# 
   841   000F7B                     UEP11           equ	3963	;# 
   842   000F7C                     UEP12           equ	3964	;# 
   843   000F7D                     UEP13           equ	3965	;# 
   844   000F7E                     UEP14           equ	3966	;# 
   845   000F7F                     UEP15           equ	3967	;# 
   846   000F80                     PORTA           equ	3968	;# 
   847   000F81                     PORTB           equ	3969	;# 
   848   000F82                     PORTC           equ	3970	;# 
   849   000F83                     PORTD           equ	3971	;# 
   850   000F84                     PORTE           equ	3972	;# 
   851   000F89                     LATA            equ	3977	;# 
   852   000F8A                     LATB            equ	3978	;# 
   853   000F8B                     LATC            equ	3979	;# 
   854   000F8C                     LATD            equ	3980	;# 
   855   000F8D                     LATE            equ	3981	;# 
   856   000F92                     TRISA           equ	3986	;# 
   857   000F92                     DDRA            equ	3986	;# 
   858   000F93                     TRISB           equ	3987	;# 
   859   000F93                     DDRB            equ	3987	;# 
   860   000F94                     TRISC           equ	3988	;# 
   861   000F94                     DDRC            equ	3988	;# 
   862   000F95                     TRISD           equ	3989	;# 
   863   000F95                     DDRD            equ	3989	;# 
   864   000F96                     TRISE           equ	3990	;# 
   865   000F96                     DDRE            equ	3990	;# 
   866   000F9B                     OSCTUNE         equ	3995	;# 
   867   000F9D                     PIE1            equ	3997	;# 
   868   000F9E                     PIR1            equ	3998	;# 
   869   000F9F                     IPR1            equ	3999	;# 
   870   000FA0                     PIE2            equ	4000	;# 
   871   000FA1                     PIR2            equ	4001	;# 
   872   000FA2                     IPR2            equ	4002	;# 
   873   000FA6                     EECON1          equ	4006	;# 
   874   000FA7                     EECON2          equ	4007	;# 
   875   000FA8                     EEDATA          equ	4008	;# 
   876   000FA9                     EEADR           equ	4009	;# 
   877   000FAB                     RCSTA           equ	4011	;# 
   878   000FAB                     RCSTA1          equ	4011	;# 
   879   000FAC                     TXSTA           equ	4012	;# 
   880   000FAC                     TXSTA1          equ	4012	;# 
   881   000FAD                     TXREG           equ	4013	;# 
   882   000FAD                     TXREG1          equ	4013	;# 
   883   000FAE                     RCREG           equ	4014	;# 
   884   000FAE                     RCREG1          equ	4014	;# 
   885   000FAF                     SPBRG           equ	4015	;# 
   886   000FAF                     SPBRG1          equ	4015	;# 
   887   000FB0                     SPBRGH          equ	4016	;# 
   888   000FB1                     T3CON           equ	4017	;# 
   889   000FB2                     TMR3            equ	4018	;# 
   890   000FB2                     TMR3L           equ	4018	;# 
   891   000FB3                     TMR3H           equ	4019	;# 
   892   000FB4                     CMCON           equ	4020	;# 
   893   000FB5                     CVRCON          equ	4021	;# 
   894   000FB6                     ECCP1AS         equ	4022	;# 
   895   000FB6                     CCP1AS          equ	4022	;# 
   896   000FB7                     ECCP1DEL        equ	4023	;# 
   897   000FB7                     CCP1DEL         equ	4023	;# 
   898   000FB8                     BAUDCON         equ	4024	;# 
   899   000FB8                     BAUDCTL         equ	4024	;# 
   900   000FBA                     CCP2CON         equ	4026	;# 
   901   000FBB                     CCPR2           equ	4027	;# 
   902   000FBB                     CCPR2L          equ	4027	;# 
   903   000FBC                     CCPR2H          equ	4028	;# 
   904   000FBD                     CCP1CON         equ	4029	;# 
   905   000FBD                     ECCP1CON        equ	4029	;# 
   906   000FBE                     CCPR1           equ	4030	;# 
   907   000FBE                     CCPR1L          equ	4030	;# 
   908   000FBF                     CCPR1H          equ	4031	;# 
   909   000FC0                     ADCON2          equ	4032	;# 
   910   000FC1                     ADCON1          equ	4033	;# 
   911   000FC2                     ADCON0          equ	4034	;# 
   912   000FC3                     ADRES           equ	4035	;# 
   913   000FC3                     ADRESL          equ	4035	;# 
   914   000FC4                     ADRESH          equ	4036	;# 
   915   000FC5                     SSPCON2         equ	4037	;# 
   916   000FC6                     SSPCON1         equ	4038	;# 
   917   000FC7                     SSPSTAT         equ	4039	;# 
   918   000FC8                     SSPADD          equ	4040	;# 
   919   000FC9                     SSPBUF          equ	4041	;# 
   920   000FCA                     T2CON           equ	4042	;# 
   921   000FCB                     PR2             equ	4043	;# 
   922   000FCB                     MEMCON          equ	4043	;# 
   923   000FCC                     TMR2            equ	4044	;# 
   924   000FCD                     T1CON           equ	4045	;# 
   925   000FCE                     TMR1            equ	4046	;# 
   926   000FCE                     TMR1L           equ	4046	;# 
   927   000FCF                     TMR1H           equ	4047	;# 
   928   000FD0                     RCON            equ	4048	;# 
   929   000FD1                     WDTCON          equ	4049	;# 
   930   000FD2                     HLVDCON         equ	4050	;# 
   931   000FD2                     LVDCON          equ	4050	;# 
   932   000FD3                     OSCCON          equ	4051	;# 
   933   000FD5                     T0CON           equ	4053	;# 
   934   000FD6                     TMR0            equ	4054	;# 
   935   000FD6                     TMR0L           equ	4054	;# 
   936   000FD7                     TMR0H           equ	4055	;# 
   937   000FD8                     STATUS          equ	4056	;# 
   938   000FD9                     FSR2            equ	4057	;# 
   939   000FD9                     FSR2L           equ	4057	;# 
   940   000FDA                     FSR2H           equ	4058	;# 
   941   000FDB                     PLUSW2          equ	4059	;# 
   942   000FDC                     PREINC2         equ	4060	;# 
   943   000FDD                     POSTDEC2        equ	4061	;# 
   944   000FDE                     POSTINC2        equ	4062	;# 
   945   000FDF                     INDF2           equ	4063	;# 
   946   000FE0                     BSR             equ	4064	;# 
   947   000FE1                     FSR1            equ	4065	;# 
   948   000FE1                     FSR1L           equ	4065	;# 
   949   000FE2                     FSR1H           equ	4066	;# 
   950   000FE3                     PLUSW1          equ	4067	;# 
   951   000FE4                     PREINC1         equ	4068	;# 
   952   000FE5                     POSTDEC1        equ	4069	;# 
   953   000FE6                     POSTINC1        equ	4070	;# 
   954   000FE7                     INDF1           equ	4071	;# 
   955   000FE8                     WREG            equ	4072	;# 
   956   000FE9                     FSR0            equ	4073	;# 
   957   000FE9                     FSR0L           equ	4073	;# 
   958   000FEA                     FSR0H           equ	4074	;# 
   959   000FEB                     PLUSW0          equ	4075	;# 
   960   000FEC                     PREINC0         equ	4076	;# 
   961   000FED                     POSTDEC0        equ	4077	;# 
   962   000FEE                     POSTINC0        equ	4078	;# 
   963   000FEF                     INDF0           equ	4079	;# 
   964   000FF0                     INTCON3         equ	4080	;# 
   965   000FF1                     INTCON2         equ	4081	;# 
   966   000FF2                     INTCON          equ	4082	;# 
   967   000FF3                     PROD            equ	4083	;# 
   968   000FF3                     PRODL           equ	4083	;# 
   969   000FF4                     PRODH           equ	4084	;# 
   970   000FF5                     TABLAT          equ	4085	;# 
   971   000FF6                     TBLPTR          equ	4086	;# 
   972   000FF6                     TBLPTRL         equ	4086	;# 
   973   000FF7                     TBLPTRH         equ	4087	;# 
   974   000FF8                     TBLPTRU         equ	4088	;# 
   975   000FF9                     PCLAT           equ	4089	;# 
   976   000FF9                     PC              equ	4089	;# 
   977   000FF9                     PCL             equ	4089	;# 
   978   000FFA                     PCLATH          equ	4090	;# 
   979   000FFB                     PCLATU          equ	4091	;# 
   980   000FFC                     STKPTR          equ	4092	;# 
   981   000FFD                     TOS             equ	4093	;# 
   982   000FFD                     TOSL            equ	4093	;# 
   983   000FFE                     TOSH            equ	4094	;# 
   984   000FFF                     TOSU            equ	4095	;# 
   985   000F62                     SPPDATA         equ	3938	;# 
   986   000F63                     SPPCFG          equ	3939	;# 
   987   000F64                     SPPEPS          equ	3940	;# 
   988   000F65                     SPPCON          equ	3941	;# 
   989   000F66                     UFRM            equ	3942	;# 
   990   000F66                     UFRML           equ	3942	;# 
   991   000F67                     UFRMH           equ	3943	;# 
   992   000F68                     UIR             equ	3944	;# 
   993   000F69                     UIE             equ	3945	;# 
   994   000F6A                     UEIR            equ	3946	;# 
   995   000F6B                     UEIE            equ	3947	;# 
   996   000F6C                     USTAT           equ	3948	;# 
   997   000F6D                     UCON            equ	3949	;# 
   998   000F6E                     UADDR           equ	3950	;# 
   999   000F6F                     UCFG            equ	3951	;# 
  1000   000F70                     UEP0            equ	3952	;# 
  1001   000F71                     UEP1            equ	3953	;# 
  1002   000F72                     UEP2            equ	3954	;# 
  1003   000F73                     UEP3            equ	3955	;# 
  1004   000F74                     UEP4            equ	3956	;# 
  1005   000F75                     UEP5            equ	3957	;# 
  1006   000F76                     UEP6            equ	3958	;# 
  1007   000F77                     UEP7            equ	3959	;# 
  1008   000F78                     UEP8            equ	3960	;# 
  1009   000F79                     UEP9            equ	3961	;# 
  1010   000F7A                     UEP10           equ	3962	;# 
  1011   000F7B                     UEP11           equ	3963	;# 
  1012   000F7C                     UEP12           equ	3964	;# 
  1013   000F7D                     UEP13           equ	3965	;# 
  1014   000F7E                     UEP14           equ	3966	;# 
  1015   000F7F                     UEP15           equ	3967	;# 
  1016   000F80                     PORTA           equ	3968	;# 
  1017   000F81                     PORTB           equ	3969	;# 
  1018   000F82                     PORTC           equ	3970	;# 
  1019   000F83                     PORTD           equ	3971	;# 
  1020   000F84                     PORTE           equ	3972	;# 
  1021   000F89                     LATA            equ	3977	;# 
  1022   000F8A                     LATB            equ	3978	;# 
  1023   000F8B                     LATC            equ	3979	;# 
  1024   000F8C                     LATD            equ	3980	;# 
  1025   000F8D                     LATE            equ	3981	;# 
  1026   000F92                     TRISA           equ	3986	;# 
  1027   000F92                     DDRA            equ	3986	;# 
  1028   000F93                     TRISB           equ	3987	;# 
  1029   000F93                     DDRB            equ	3987	;# 
  1030   000F94                     TRISC           equ	3988	;# 
  1031   000F94                     DDRC            equ	3988	;# 
  1032   000F95                     TRISD           equ	3989	;# 
  1033   000F95                     DDRD            equ	3989	;# 
  1034   000F96                     TRISE           equ	3990	;# 
  1035   000F96                     DDRE            equ	3990	;# 
  1036   000F9B                     OSCTUNE         equ	3995	;# 
  1037   000F9D                     PIE1            equ	3997	;# 
  1038   000F9E                     PIR1            equ	3998	;# 
  1039   000F9F                     IPR1            equ	3999	;# 
  1040   000FA0                     PIE2            equ	4000	;# 
  1041   000FA1                     PIR2            equ	4001	;# 
  1042   000FA2                     IPR2            equ	4002	;# 
  1043   000FA6                     EECON1          equ	4006	;# 
  1044   000FA7                     EECON2          equ	4007	;# 
  1045   000FA8                     EEDATA          equ	4008	;# 
  1046   000FA9                     EEADR           equ	4009	;# 
  1047   000FAB                     RCSTA           equ	4011	;# 
  1048   000FAB                     RCSTA1          equ	4011	;# 
  1049   000FAC                     TXSTA           equ	4012	;# 
  1050   000FAC                     TXSTA1          equ	4012	;# 
  1051   000FAD                     TXREG           equ	4013	;# 
  1052   000FAD                     TXREG1          equ	4013	;# 
  1053   000FAE                     RCREG           equ	4014	;# 
  1054   000FAE                     RCREG1          equ	4014	;# 
  1055   000FAF                     SPBRG           equ	4015	;# 
  1056   000FAF                     SPBRG1          equ	4015	;# 
  1057   000FB0                     SPBRGH          equ	4016	;# 
  1058   000FB1                     T3CON           equ	4017	;# 
  1059   000FB2                     TMR3            equ	4018	;# 
  1060   000FB2                     TMR3L           equ	4018	;# 
  1061   000FB3                     TMR3H           equ	4019	;# 
  1062   000FB4                     CMCON           equ	4020	;# 
  1063   000FB5                     CVRCON          equ	4021	;# 
  1064   000FB6                     ECCP1AS         equ	4022	;# 
  1065   000FB6                     CCP1AS          equ	4022	;# 
  1066   000FB7                     ECCP1DEL        equ	4023	;# 
  1067   000FB7                     CCP1DEL         equ	4023	;# 
  1068   000FB8                     BAUDCON         equ	4024	;# 
  1069   000FB8                     BAUDCTL         equ	4024	;# 
  1070   000FBA                     CCP2CON         equ	4026	;# 
  1071   000FBB                     CCPR2           equ	4027	;# 
  1072   000FBB                     CCPR2L          equ	4027	;# 
  1073   000FBC                     CCPR2H          equ	4028	;# 
  1074   000FBD                     CCP1CON         equ	4029	;# 
  1075   000FBD                     ECCP1CON        equ	4029	;# 
  1076   000FBE                     CCPR1           equ	4030	;# 
  1077   000FBE                     CCPR1L          equ	4030	;# 
  1078   000FBF                     CCPR1H          equ	4031	;# 
  1079   000FC0                     ADCON2          equ	4032	;# 
  1080   000FC1                     ADCON1          equ	4033	;# 
  1081   000FC2                     ADCON0          equ	4034	;# 
  1082   000FC3                     ADRES           equ	4035	;# 
  1083   000FC3                     ADRESL          equ	4035	;# 
  1084   000FC4                     ADRESH          equ	4036	;# 
  1085   000FC5                     SSPCON2         equ	4037	;# 
  1086   000FC6                     SSPCON1         equ	4038	;# 
  1087   000FC7                     SSPSTAT         equ	4039	;# 
  1088   000FC8                     SSPADD          equ	4040	;# 
  1089   000FC9                     SSPBUF          equ	4041	;# 
  1090   000FCA                     T2CON           equ	4042	;# 
  1091   000FCB                     PR2             equ	4043	;# 
  1092   000FCB                     MEMCON          equ	4043	;# 
  1093   000FCC                     TMR2            equ	4044	;# 
  1094   000FCD                     T1CON           equ	4045	;# 
  1095   000FCE                     TMR1            equ	4046	;# 
  1096   000FCE                     TMR1L           equ	4046	;# 
  1097   000FCF                     TMR1H           equ	4047	;# 
  1098   000FD0                     RCON            equ	4048	;# 
  1099   000FD1                     WDTCON          equ	4049	;# 
  1100   000FD2                     HLVDCON         equ	4050	;# 
  1101   000FD2                     LVDCON          equ	4050	;# 
  1102   000FD3                     OSCCON          equ	4051	;# 
  1103   000FD5                     T0CON           equ	4053	;# 
  1104   000FD6                     TMR0            equ	4054	;# 
  1105   000FD6                     TMR0L           equ	4054	;# 
  1106   000FD7                     TMR0H           equ	4055	;# 
  1107   000FD8                     STATUS          equ	4056	;# 
  1108   000FD9                     FSR2            equ	4057	;# 
  1109   000FD9                     FSR2L           equ	4057	;# 
  1110   000FDA                     FSR2H           equ	4058	;# 
  1111   000FDB                     PLUSW2          equ	4059	;# 
  1112   000FDC                     PREINC2         equ	4060	;# 
  1113   000FDD                     POSTDEC2        equ	4061	;# 
  1114   000FDE                     POSTINC2        equ	4062	;# 
  1115   000FDF                     INDF2           equ	4063	;# 
  1116   000FE0                     BSR             equ	4064	;# 
  1117   000FE1                     FSR1            equ	4065	;# 
  1118   000FE1                     FSR1L           equ	4065	;# 
  1119   000FE2                     FSR1H           equ	4066	;# 
  1120   000FE3                     PLUSW1          equ	4067	;# 
  1121   000FE4                     PREINC1         equ	4068	;# 
  1122   000FE5                     POSTDEC1        equ	4069	;# 
  1123   000FE6                     POSTINC1        equ	4070	;# 
  1124   000FE7                     INDF1           equ	4071	;# 
  1125   000FE8                     WREG            equ	4072	;# 
  1126   000FE9                     FSR0            equ	4073	;# 
  1127   000FE9                     FSR0L           equ	4073	;# 
  1128   000FEA                     FSR0H           equ	4074	;# 
  1129   000FEB                     PLUSW0          equ	4075	;# 
  1130   000FEC                     PREINC0         equ	4076	;# 
  1131   000FED                     POSTDEC0        equ	4077	;# 
  1132   000FEE                     POSTINC0        equ	4078	;# 
  1133   000FEF                     INDF0           equ	4079	;# 
  1134   000FF0                     INTCON3         equ	4080	;# 
  1135   000FF1                     INTCON2         equ	4081	;# 
  1136   000FF2                     INTCON          equ	4082	;# 
  1137   000FF3                     PROD            equ	4083	;# 
  1138   000FF3                     PRODL           equ	4083	;# 
  1139   000FF4                     PRODH           equ	4084	;# 
  1140   000FF5                     TABLAT          equ	4085	;# 
  1141   000FF6                     TBLPTR          equ	4086	;# 
  1142   000FF6                     TBLPTRL         equ	4086	;# 
  1143   000FF7                     TBLPTRH         equ	4087	;# 
  1144   000FF8                     TBLPTRU         equ	4088	;# 
  1145   000FF9                     PCLAT           equ	4089	;# 
  1146   000FF9                     PC              equ	4089	;# 
  1147   000FF9                     PCL             equ	4089	;# 
  1148   000FFA                     PCLATH          equ	4090	;# 
  1149   000FFB                     PCLATU          equ	4091	;# 
  1150   000FFC                     STKPTR          equ	4092	;# 
  1151   000FFD                     TOS             equ	4093	;# 
  1152   000FFD                     TOSL            equ	4093	;# 
  1153   000FFE                     TOSH            equ	4094	;# 
  1154   000FFF                     TOSU            equ	4095	;# 
  1155   000F62                     SPPDATA         equ	3938	;# 
  1156   000F63                     SPPCFG          equ	3939	;# 
  1157   000F64                     SPPEPS          equ	3940	;# 
  1158   000F65                     SPPCON          equ	3941	;# 
  1159   000F66                     UFRM            equ	3942	;# 
  1160   000F66                     UFRML           equ	3942	;# 
  1161   000F67                     UFRMH           equ	3943	;# 
  1162   000F68                     UIR             equ	3944	;# 
  1163   000F69                     UIE             equ	3945	;# 
  1164   000F6A                     UEIR            equ	3946	;# 
  1165   000F6B                     UEIE            equ	3947	;# 
  1166   000F6C                     USTAT           equ	3948	;# 
  1167   000F6D                     UCON            equ	3949	;# 
  1168   000F6E                     UADDR           equ	3950	;# 
  1169   000F6F                     UCFG            equ	3951	;# 
  1170   000F70                     UEP0            equ	3952	;# 
  1171   000F71                     UEP1            equ	3953	;# 
  1172   000F72                     UEP2            equ	3954	;# 
  1173   000F73                     UEP3            equ	3955	;# 
  1174   000F74                     UEP4            equ	3956	;# 
  1175   000F75                     UEP5            equ	3957	;# 
  1176   000F76                     UEP6            equ	3958	;# 
  1177   000F77                     UEP7            equ	3959	;# 
  1178   000F78                     UEP8            equ	3960	;# 
  1179   000F79                     UEP9            equ	3961	;# 
  1180   000F7A                     UEP10           equ	3962	;# 
  1181   000F7B                     UEP11           equ	3963	;# 
  1182   000F7C                     UEP12           equ	3964	;# 
  1183   000F7D                     UEP13           equ	3965	;# 
  1184   000F7E                     UEP14           equ	3966	;# 
  1185   000F7F                     UEP15           equ	3967	;# 
  1186   000F80                     PORTA           equ	3968	;# 
  1187   000F81                     PORTB           equ	3969	;# 
  1188   000F82                     PORTC           equ	3970	;# 
  1189   000F83                     PORTD           equ	3971	;# 
  1190   000F84                     PORTE           equ	3972	;# 
  1191   000F89                     LATA            equ	3977	;# 
  1192   000F8A                     LATB            equ	3978	;# 
  1193   000F8B                     LATC            equ	3979	;# 
  1194   000F8C                     LATD            equ	3980	;# 
  1195   000F8D                     LATE            equ	3981	;# 
  1196   000F92                     TRISA           equ	3986	;# 
  1197   000F92                     DDRA            equ	3986	;# 
  1198   000F93                     TRISB           equ	3987	;# 
  1199   000F93                     DDRB            equ	3987	;# 
  1200   000F94                     TRISC           equ	3988	;# 
  1201   000F94                     DDRC            equ	3988	;# 
  1202   000F95                     TRISD           equ	3989	;# 
  1203   000F95                     DDRD            equ	3989	;# 
  1204   000F96                     TRISE           equ	3990	;# 
  1205   000F96                     DDRE            equ	3990	;# 
  1206   000F9B                     OSCTUNE         equ	3995	;# 
  1207   000F9D                     PIE1            equ	3997	;# 
  1208   000F9E                     PIR1            equ	3998	;# 
  1209   000F9F                     IPR1            equ	3999	;# 
  1210   000FA0                     PIE2            equ	4000	;# 
  1211   000FA1                     PIR2            equ	4001	;# 
  1212   000FA2                     IPR2            equ	4002	;# 
  1213   000FA6                     EECON1          equ	4006	;# 
  1214   000FA7                     EECON2          equ	4007	;# 
  1215   000FA8                     EEDATA          equ	4008	;# 
  1216   000FA9                     EEADR           equ	4009	;# 
  1217   000FAB                     RCSTA           equ	4011	;# 
  1218   000FAB                     RCSTA1          equ	4011	;# 
  1219   000FAC                     TXSTA           equ	4012	;# 
  1220   000FAC                     TXSTA1          equ	4012	;# 
  1221   000FAD                     TXREG           equ	4013	;# 
  1222   000FAD                     TXREG1          equ	4013	;# 
  1223   000FAE                     RCREG           equ	4014	;# 
  1224   000FAE                     RCREG1          equ	4014	;# 
  1225   000FAF                     SPBRG           equ	4015	;# 
  1226   000FAF                     SPBRG1          equ	4015	;# 
  1227   000FB0                     SPBRGH          equ	4016	;# 
  1228   000FB1                     T3CON           equ	4017	;# 
  1229   000FB2                     TMR3            equ	4018	;# 
  1230   000FB2                     TMR3L           equ	4018	;# 
  1231   000FB3                     TMR3H           equ	4019	;# 
  1232   000FB4                     CMCON           equ	4020	;# 
  1233   000FB5                     CVRCON          equ	4021	;# 
  1234   000FB6                     ECCP1AS         equ	4022	;# 
  1235   000FB6                     CCP1AS          equ	4022	;# 
  1236   000FB7                     ECCP1DEL        equ	4023	;# 
  1237   000FB7                     CCP1DEL         equ	4023	;# 
  1238   000FB8                     BAUDCON         equ	4024	;# 
  1239   000FB8                     BAUDCTL         equ	4024	;# 
  1240   000FBA                     CCP2CON         equ	4026	;# 
  1241   000FBB                     CCPR2           equ	4027	;# 
  1242   000FBB                     CCPR2L          equ	4027	;# 
  1243   000FBC                     CCPR2H          equ	4028	;# 
  1244   000FBD                     CCP1CON         equ	4029	;# 
  1245   000FBD                     ECCP1CON        equ	4029	;# 
  1246   000FBE                     CCPR1           equ	4030	;# 
  1247   000FBE                     CCPR1L          equ	4030	;# 
  1248   000FBF                     CCPR1H          equ	4031	;# 
  1249   000FC0                     ADCON2          equ	4032	;# 
  1250   000FC1                     ADCON1          equ	4033	;# 
  1251   000FC2                     ADCON0          equ	4034	;# 
  1252   000FC3                     ADRES           equ	4035	;# 
  1253   000FC3                     ADRESL          equ	4035	;# 
  1254   000FC4                     ADRESH          equ	4036	;# 
  1255   000FC5                     SSPCON2         equ	4037	;# 
  1256   000FC6                     SSPCON1         equ	4038	;# 
  1257   000FC7                     SSPSTAT         equ	4039	;# 
  1258   000FC8                     SSPADD          equ	4040	;# 
  1259   000FC9                     SSPBUF          equ	4041	;# 
  1260   000FCA                     T2CON           equ	4042	;# 
  1261   000FCB                     PR2             equ	4043	;# 
  1262   000FCB                     MEMCON          equ	4043	;# 
  1263   000FCC                     TMR2            equ	4044	;# 
  1264   000FCD                     T1CON           equ	4045	;# 
  1265   000FCE                     TMR1            equ	4046	;# 
  1266   000FCE                     TMR1L           equ	4046	;# 
  1267   000FCF                     TMR1H           equ	4047	;# 
  1268   000FD0                     RCON            equ	4048	;# 
  1269   000FD1                     WDTCON          equ	4049	;# 
  1270   000FD2                     HLVDCON         equ	4050	;# 
  1271   000FD2                     LVDCON          equ	4050	;# 
  1272   000FD3                     OSCCON          equ	4051	;# 
  1273   000FD5                     T0CON           equ	4053	;# 
  1274   000FD6                     TMR0            equ	4054	;# 
  1275   000FD6                     TMR0L           equ	4054	;# 
  1276   000FD7                     TMR0H           equ	4055	;# 
  1277   000FD8                     STATUS          equ	4056	;# 
  1278   000FD9                     FSR2            equ	4057	;# 
  1279   000FD9                     FSR2L           equ	4057	;# 
  1280   000FDA                     FSR2H           equ	4058	;# 
  1281   000FDB                     PLUSW2          equ	4059	;# 
  1282   000FDC                     PREINC2         equ	4060	;# 
  1283   000FDD                     POSTDEC2        equ	4061	;# 
  1284   000FDE                     POSTINC2        equ	4062	;# 
  1285   000FDF                     INDF2           equ	4063	;# 
  1286   000FE0                     BSR             equ	4064	;# 
  1287   000FE1                     FSR1            equ	4065	;# 
  1288   000FE1                     FSR1L           equ	4065	;# 
  1289   000FE2                     FSR1H           equ	4066	;# 
  1290   000FE3                     PLUSW1          equ	4067	;# 
  1291   000FE4                     PREINC1         equ	4068	;# 
  1292   000FE5                     POSTDEC1        equ	4069	;# 
  1293   000FE6                     POSTINC1        equ	4070	;# 
  1294   000FE7                     INDF1           equ	4071	;# 
  1295   000FE8                     WREG            equ	4072	;# 
  1296   000FE9                     FSR0            equ	4073	;# 
  1297   000FE9                     FSR0L           equ	4073	;# 
  1298   000FEA                     FSR0H           equ	4074	;# 
  1299   000FEB                     PLUSW0          equ	4075	;# 
  1300   000FEC                     PREINC0         equ	4076	;# 
  1301   000FED                     POSTDEC0        equ	4077	;# 
  1302   000FEE                     POSTINC0        equ	4078	;# 
  1303   000FEF                     INDF0           equ	4079	;# 
  1304   000FF0                     INTCON3         equ	4080	;# 
  1305   000FF1                     INTCON2         equ	4081	;# 
  1306   000FF2                     INTCON          equ	4082	;# 
  1307   000FF3                     PROD            equ	4083	;# 
  1308   000FF3                     PRODL           equ	4083	;# 
  1309   000FF4                     PRODH           equ	4084	;# 
  1310   000FF5                     TABLAT          equ	4085	;# 
  1311   000FF6                     TBLPTR          equ	4086	;# 
  1312   000FF6                     TBLPTRL         equ	4086	;# 
  1313   000FF7                     TBLPTRH         equ	4087	;# 
  1314   000FF8                     TBLPTRU         equ	4088	;# 
  1315   000FF9                     PCLAT           equ	4089	;# 
  1316   000FF9                     PC              equ	4089	;# 
  1317   000FF9                     PCL             equ	4089	;# 
  1318   000FFA                     PCLATH          equ	4090	;# 
  1319   000FFB                     PCLATU          equ	4091	;# 
  1320   000FFC                     STKPTR          equ	4092	;# 
  1321   000FFD                     TOS             equ	4093	;# 
  1322   000FFD                     TOSL            equ	4093	;# 
  1323   000FFE                     TOSH            equ	4094	;# 
  1324   000FFF                     TOSU            equ	4095	;# 
  1325   000F62                     SPPDATA         equ	3938	;# 
  1326   000F63                     SPPCFG          equ	3939	;# 
  1327   000F64                     SPPEPS          equ	3940	;# 
  1328   000F65                     SPPCON          equ	3941	;# 
  1329   000F66                     UFRM            equ	3942	;# 
  1330   000F66                     UFRML           equ	3942	;# 
  1331   000F67                     UFRMH           equ	3943	;# 
  1332   000F68                     UIR             equ	3944	;# 
  1333   000F69                     UIE             equ	3945	;# 
  1334   000F6A                     UEIR            equ	3946	;# 
  1335   000F6B                     UEIE            equ	3947	;# 
  1336   000F6C                     USTAT           equ	3948	;# 
  1337   000F6D                     UCON            equ	3949	;# 
  1338   000F6E                     UADDR           equ	3950	;# 
  1339   000F6F                     UCFG            equ	3951	;# 
  1340   000F70                     UEP0            equ	3952	;# 
  1341   000F71                     UEP1            equ	3953	;# 
  1342   000F72                     UEP2            equ	3954	;# 
  1343   000F73                     UEP3            equ	3955	;# 
  1344   000F74                     UEP4            equ	3956	;# 
  1345   000F75                     UEP5            equ	3957	;# 
  1346   000F76                     UEP6            equ	3958	;# 
  1347   000F77                     UEP7            equ	3959	;# 
  1348   000F78                     UEP8            equ	3960	;# 
  1349   000F79                     UEP9            equ	3961	;# 
  1350   000F7A                     UEP10           equ	3962	;# 
  1351   000F7B                     UEP11           equ	3963	;# 
  1352   000F7C                     UEP12           equ	3964	;# 
  1353   000F7D                     UEP13           equ	3965	;# 
  1354   000F7E                     UEP14           equ	3966	;# 
  1355   000F7F                     UEP15           equ	3967	;# 
  1356   000F80                     PORTA           equ	3968	;# 
  1357   000F81                     PORTB           equ	3969	;# 
  1358   000F82                     PORTC           equ	3970	;# 
  1359   000F83                     PORTD           equ	3971	;# 
  1360   000F84                     PORTE           equ	3972	;# 
  1361   000F89                     LATA            equ	3977	;# 
  1362   000F8A                     LATB            equ	3978	;# 
  1363   000F8B                     LATC            equ	3979	;# 
  1364   000F8C                     LATD            equ	3980	;# 
  1365   000F8D                     LATE            equ	3981	;# 
  1366   000F92                     TRISA           equ	3986	;# 
  1367   000F92                     DDRA            equ	3986	;# 
  1368   000F93                     TRISB           equ	3987	;# 
  1369   000F93                     DDRB            equ	3987	;# 
  1370   000F94                     TRISC           equ	3988	;# 
  1371   000F94                     DDRC            equ	3988	;# 
  1372   000F95                     TRISD           equ	3989	;# 
  1373   000F95                     DDRD            equ	3989	;# 
  1374   000F96                     TRISE           equ	3990	;# 
  1375   000F96                     DDRE            equ	3990	;# 
  1376   000F9B                     OSCTUNE         equ	3995	;# 
  1377   000F9D                     PIE1            equ	3997	;# 
  1378   000F9E                     PIR1            equ	3998	;# 
  1379   000F9F                     IPR1            equ	3999	;# 
  1380   000FA0                     PIE2            equ	4000	;# 
  1381   000FA1                     PIR2            equ	4001	;# 
  1382   000FA2                     IPR2            equ	4002	;# 
  1383   000FA6                     EECON1          equ	4006	;# 
  1384   000FA7                     EECON2          equ	4007	;# 
  1385   000FA8                     EEDATA          equ	4008	;# 
  1386   000FA9                     EEADR           equ	4009	;# 
  1387   000FAB                     RCSTA           equ	4011	;# 
  1388   000FAB                     RCSTA1          equ	4011	;# 
  1389   000FAC                     TXSTA           equ	4012	;# 
  1390   000FAC                     TXSTA1          equ	4012	;# 
  1391   000FAD                     TXREG           equ	4013	;# 
  1392   000FAD                     TXREG1          equ	4013	;# 
  1393   000FAE                     RCREG           equ	4014	;# 
  1394   000FAE                     RCREG1          equ	4014	;# 
  1395   000FAF                     SPBRG           equ	4015	;# 
  1396   000FAF                     SPBRG1          equ	4015	;# 
  1397   000FB0                     SPBRGH          equ	4016	;# 
  1398   000FB1                     T3CON           equ	4017	;# 
  1399   000FB2                     TMR3            equ	4018	;# 
  1400   000FB2                     TMR3L           equ	4018	;# 
  1401   000FB3                     TMR3H           equ	4019	;# 
  1402   000FB4                     CMCON           equ	4020	;# 
  1403   000FB5                     CVRCON          equ	4021	;# 
  1404   000FB6                     ECCP1AS         equ	4022	;# 
  1405   000FB6                     CCP1AS          equ	4022	;# 
  1406   000FB7                     ECCP1DEL        equ	4023	;# 
  1407   000FB7                     CCP1DEL         equ	4023	;# 
  1408   000FB8                     BAUDCON         equ	4024	;# 
  1409   000FB8                     BAUDCTL         equ	4024	;# 
  1410   000FBA                     CCP2CON         equ	4026	;# 
  1411   000FBB                     CCPR2           equ	4027	;# 
  1412   000FBB                     CCPR2L          equ	4027	;# 
  1413   000FBC                     CCPR2H          equ	4028	;# 
  1414   000FBD                     CCP1CON         equ	4029	;# 
  1415   000FBD                     ECCP1CON        equ	4029	;# 
  1416   000FBE                     CCPR1           equ	4030	;# 
  1417   000FBE                     CCPR1L          equ	4030	;# 
  1418   000FBF                     CCPR1H          equ	4031	;# 
  1419   000FC0                     ADCON2          equ	4032	;# 
  1420   000FC1                     ADCON1          equ	4033	;# 
  1421   000FC2                     ADCON0          equ	4034	;# 
  1422   000FC3                     ADRES           equ	4035	;# 
  1423   000FC3                     ADRESL          equ	4035	;# 
  1424   000FC4                     ADRESH          equ	4036	;# 
  1425   000FC5                     SSPCON2         equ	4037	;# 
  1426   000FC6                     SSPCON1         equ	4038	;# 
  1427   000FC7                     SSPSTAT         equ	4039	;# 
  1428   000FC8                     SSPADD          equ	4040	;# 
  1429   000FC9                     SSPBUF          equ	4041	;# 
  1430   000FCA                     T2CON           equ	4042	;# 
  1431   000FCB                     PR2             equ	4043	;# 
  1432   000FCB                     MEMCON          equ	4043	;# 
  1433   000FCC                     TMR2            equ	4044	;# 
  1434   000FCD                     T1CON           equ	4045	;# 
  1435   000FCE                     TMR1            equ	4046	;# 
  1436   000FCE                     TMR1L           equ	4046	;# 
  1437   000FCF                     TMR1H           equ	4047	;# 
  1438   000FD0                     RCON            equ	4048	;# 
  1439   000FD1                     WDTCON          equ	4049	;# 
  1440   000FD2                     HLVDCON         equ	4050	;# 
  1441   000FD2                     LVDCON          equ	4050	;# 
  1442   000FD3                     OSCCON          equ	4051	;# 
  1443   000FD5                     T0CON           equ	4053	;# 
  1444   000FD6                     TMR0            equ	4054	;# 
  1445   000FD6                     TMR0L           equ	4054	;# 
  1446   000FD7                     TMR0H           equ	4055	;# 
  1447   000FD8                     STATUS          equ	4056	;# 
  1448   000FD9                     FSR2            equ	4057	;# 
  1449   000FD9                     FSR2L           equ	4057	;# 
  1450   000FDA                     FSR2H           equ	4058	;# 
  1451   000FDB                     PLUSW2          equ	4059	;# 
  1452   000FDC                     PREINC2         equ	4060	;# 
  1453   000FDD                     POSTDEC2        equ	4061	;# 
  1454   000FDE                     POSTINC2        equ	4062	;# 
  1455   000FDF                     INDF2           equ	4063	;# 
  1456   000FE0                     BSR             equ	4064	;# 
  1457   000FE1                     FSR1            equ	4065	;# 
  1458   000FE1                     FSR1L           equ	4065	;# 
  1459   000FE2                     FSR1H           equ	4066	;# 
  1460   000FE3                     PLUSW1          equ	4067	;# 
  1461   000FE4                     PREINC1         equ	4068	;# 
  1462   000FE5                     POSTDEC1        equ	4069	;# 
  1463   000FE6                     POSTINC1        equ	4070	;# 
  1464   000FE7                     INDF1           equ	4071	;# 
  1465   000FE8                     WREG            equ	4072	;# 
  1466   000FE9                     FSR0            equ	4073	;# 
  1467   000FE9                     FSR0L           equ	4073	;# 
  1468   000FEA                     FSR0H           equ	4074	;# 
  1469   000FEB                     PLUSW0          equ	4075	;# 
  1470   000FEC                     PREINC0         equ	4076	;# 
  1471   000FED                     POSTDEC0        equ	4077	;# 
  1472   000FEE                     POSTINC0        equ	4078	;# 
  1473   000FEF                     INDF0           equ	4079	;# 
  1474   000FF0                     INTCON3         equ	4080	;# 
  1475   000FF1                     INTCON2         equ	4081	;# 
  1476   000FF2                     INTCON          equ	4082	;# 
  1477   000FF3                     PROD            equ	4083	;# 
  1478   000FF3                     PRODL           equ	4083	;# 
  1479   000FF4                     PRODH           equ	4084	;# 
  1480   000FF5                     TABLAT          equ	4085	;# 
  1481   000FF6                     TBLPTR          equ	4086	;# 
  1482   000FF6                     TBLPTRL         equ	4086	;# 
  1483   000FF7                     TBLPTRH         equ	4087	;# 
  1484   000FF8                     TBLPTRU         equ	4088	;# 
  1485   000FF9                     PCLAT           equ	4089	;# 
  1486   000FF9                     PC              equ	4089	;# 
  1487   000FF9                     PCL             equ	4089	;# 
  1488   000FFA                     PCLATH          equ	4090	;# 
  1489   000FFB                     PCLATU          equ	4091	;# 
  1490   000FFC                     STKPTR          equ	4092	;# 
  1491   000FFD                     TOS             equ	4093	;# 
  1492   000FFD                     TOSL            equ	4093	;# 
  1493   000FFE                     TOSH            equ	4094	;# 
  1494   000FFF                     TOSU            equ	4095	;# 
  1495                           
  1496 ;;_t	offset	0
  1497 ;;_idx	offset	2
  1498 ;;_offset	offset	3
  1499 ;;_i	offset	4
  1500 ;;_highest	offset	5
  1501 ;;_start	offset	6
  1502 ;;_t	offset	0
  1503 ;;_idx	offset	2
  1504 ;;_offset	offset	3
  1505 ;;_i	offset	4
  1506 ;;_highest	offset	5
  1507 ;;_start	offset	6
  1508                           
  1509                           	psect	idataBANK1
  1510   0025F2                     __pidataBANK1:
  1511                           	callstack 0
  1512                           
  1513                           ;initializer for tarefa_injecao_eletronica@last_duty
  1514   0025F2  FF                 	db	255
  1515   000FFD                     _TOS            set	4093
  1516   000FD6                     _TMR0           set	4054
  1517   000FD5                     _T0CONbits      set	4053
  1518   000F8C                     _LATD           set	3980
  1519   000F95                     _TRISDbits      set	3989
  1520   000F8C                     _LATDbits       set	3980
  1521   000FF1                     _INTCON2bits    set	4081
  1522   000F93                     _TRISBbits      set	3987
  1523   000FBD                     _CCP1CONbits    set	4029
  1524   000FBE                     _CCPR1L         set	4030
  1525   000FBD                     _CCP1CON        set	4029
  1526   000FCB                     _PR2            set	4043
  1527   000FCA                     _T2CON          set	4042
  1528   000F94                     _TRISCbits      set	3988
  1529   000FC3                     _ADRESL         set	4035
  1530   000FC4                     _ADRESH         set	4036
  1531   000FC2                     _ADCON0bits     set	4034
  1532   000F92                     _TRISAbits      set	3986
  1533   000FC0                     _ADCON2         set	4032
  1534   000FC1                     _ADCON1         set	4033
  1535   000FC2                     _ADCON0         set	4034
  1536   000FFC                     _STKPTR         set	4092
  1537   000FE8                     _WREG           set	4072
  1538   000FD8                     _STATUS         set	4056
  1539   000FE0                     _BSR            set	4064
  1540   000FF2                     _INTCONbits     set	4082
  1541                           
  1542                           ; #config settings
  1543                           
  1544                           	psect	cinit
  1545   0023B0                     __pcinit:
  1546                           	callstack 0
  1547   0023B0                     start_initialization:
  1548                           	callstack 0
  1549   0023B0                     __initialization:
  1550                           	callstack 0
  1551                           
  1552                           ; Initialize objects allocated to BANK1 (1 bytes)
  1553                           ; load TBLPTR registers with __pidataBANK1
  1554   0023B0  0EF2               	movlw	low __pidataBANK1
  1555   0023B2  6EF6               	movwf	tblptrl,c
  1556   0023B4  0E25               	movlw	high __pidataBANK1
  1557   0023B6  6EF7               	movwf	tblptrh,c
  1558   0023B8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1559   0023BA  6EF8               	movwf	tblptru,c
  1560   0023BC  0009               	tblrd		*+	;fetch initializer
  1561   0023BE  CFF5 F1A5          	movff	tablat,__pdataBANK1
  1562                           
  1563                           ; Clear objects allocated to BIGRAM (539 bytes)
  1564   0023C2  EE02  F06C         	lfsr	0,__pbssBIGRAM
  1565   0023C6  EE22 F01B          	lfsr	2,539
  1566   0023CA                     clear_0:
  1567   0023CA  6AEE               	clrf	postinc0,c
  1568   0023CC  50DD               	movf	postdec2,w,c
  1569   0023CE  50D9               	movf	fsr2l,w,c
  1570   0023D0  E1FC               	bnz	clear_0
  1571   0023D2  50DA               	movf	fsr2h,w,c
  1572   0023D4  E1FA               	bnz	clear_0
  1573                           
  1574                           ; Clear objects allocated to BANK1 (108 bytes)
  1575   0023D6  EE01  F000         	lfsr	0,__pbssBANK1
  1576   0023DA  0E6C               	movlw	108
  1577   0023DC                     clear_1:
  1578   0023DC  6AEE               	clrf	postinc0,c
  1579   0023DE  06E8               	decf	wreg,f,c
  1580   0023E0  E1FD               	bnz	clear_1
  1581                           
  1582                           ; Clear objects allocated to COMRAM (9 bytes)
  1583   0023E2  EE00  F03E         	lfsr	0,__pbssCOMRAM
  1584   0023E6  0E09               	movlw	9
  1585   0023E8                     clear_2:
  1586   0023E8  6AEE               	clrf	postinc0,c
  1587   0023EA  06E8               	decf	wreg,f,c
  1588   0023EC  E1FD               	bnz	clear_2
  1589   0023EE                     end_of_initialization:
  1590                           	callstack 0
  1591   0023EE                     __end_of__initialization:
  1592                           	callstack 0
  1593   0023EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1594   0023F0  6EF8               	movwf	tblptru,c
  1595   0023F2  0100               	movlb	0
  1596   0023F4  EFFC  F011         	goto	_main	;jump to C main() function
  1597                           
  1598                           	psect	bssCOMRAM
  1599   00003E                     __pbssCOMRAM:
  1600                           	callstack 0
  1601   00003E                     _last_run_idx:
  1602                           	callstack 0
  1603   00003E                     	ds	5
  1604   000043                     	ds	2
  1605   000045                     _est_created:
  1606                           	callstack 0
  1607   000045                     	ds	1
  1608   000046                     _est_flag:
  1609                           	callstack 0
  1610   000046                     	ds	1
  1611                           
  1612                           	psect	bssBANK1
  1613   000100                     __pbssBANK1:
  1614                           	callstack 0
  1615   000100                     _accel_data:
  1616                           	callstack 0
  1617   000100                     	ds	1
  1618   000101                     __uDynamicHeap:
  1619                           	callstack 0
  1620   000101                     	ds	80
  1621   000151                     _accel_pipe:
  1622                           	callstack 0
  1623   000151                     	ds	20
  1624   000165                     _buffer_mutex:
  1625                           	callstack 0
  1626   000165                     	ds	7
  1627                           
  1628                           	psect	dataBANK1
  1629   0001A5                     __pdataBANK1:
  1630                           	callstack 0
  1631   0001A5                     tarefa_injecao_eletronica@last_duty:
  1632                           	callstack 0
  1633   0001A5                     	ds	1
  1634                           
  1635                           	psect	bssBIGRAM
  1636   00026C                     __pbssBIGRAM:
  1637                           	callstack 0
  1638   00026C                     _r_queue:
  1639                           	callstack 0
  1640   00026C                     	ds	539
  1641                           
  1642                           	psect	cstackBANK2
  1643   000200                     __pcstackBANK2:
  1644                           	callstack 0
  1645   000200                     create_task@id:
  1646                           	callstack 0
  1647                           
  1648                           ; 1 bytes @ 0x0
  1649   000200                     	ds	1
  1650   000201                     create_task@new_task:
  1651                           	callstack 0
  1652                           
  1653                           ; 107 bytes @ 0x1
  1654   000201                     	ds	107
  1655                           
  1656                           	psect	cstackBANK1
  1657   00016C                     __pcstackBANK1:
  1658                           	callstack 0
  1659   00016C                     
  1660                           ; 1 bytes @ 0x0
  1661   00016C                     	ds	9
  1662   000175                     write_pipe@p:
  1663                           	callstack 0
  1664                           
  1665                           ; 2 bytes @ 0x9
  1666   000175                     	ds	2
  1667   000177                     write_pipe@data:
  1668                           	callstack 0
  1669                           
  1670                           ; 1 bytes @ 0xB
  1671   000177                     	ds	1
  1672   000178                     ??_write_pipe:
  1673                           
  1674                           ; 1 bytes @ 0xC
  1675   000178                     	ds	3
  1676   00017B                     ??_tarefa_acelerador:
  1677                           
  1678                           ; 1 bytes @ 0xF
  1679   00017B                     	ds	2
  1680   00017D                     tarefa_acelerador@raw:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x11
  1684   00017D                     	ds	2
  1685   00017F                     tarefa_acelerador@data:
  1686                           	callstack 0
  1687                           
  1688                           ; 1 bytes @ 0x13
  1689   00017F                     	ds	1
  1690   000180                     sem_wait@sem:
  1691                           	callstack 0
  1692   000180                     sem_post@sem:
  1693                           	callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x14
  1696   000180                     	ds	2
  1697   000182                     ??_sem_wait:
  1698   000182                     ??_sem_post:
  1699                           
  1700                           ; 1 bytes @ 0x16
  1701   000182                     	ds	7
  1702   000189                     read_pipe@p:
  1703                           	callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x1D
  1706   000189                     	ds	2
  1707   00018B                     read_pipe@data:
  1708                           	callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x1F
  1711   00018B                     	ds	2
  1712   00018D                     ??_read_pipe:
  1713                           
  1714                           ; 1 bytes @ 0x21
  1715   00018D                     	ds	3
  1716   000190                     tarefa_controle_central@duty:
  1717                           	callstack 0
  1718   000190                     
  1719                           ; 1 bytes @ 0x24
  1720   000190                     	ds	1
  1721   000191                     tarefa_controle_central@data:
  1722                           	callstack 0
  1723                           
  1724                           ; 1 bytes @ 0x25
  1725   000191                     	ds	1
  1726   000192                     mutex_lock@m:
  1727                           	callstack 0
  1728   000192                     mutex_unlock@m:
  1729                           	callstack 0
  1730   000192                     ??_yield:
  1731   000192                     ??_pwm_set:
  1732                           
  1733                           ; 1 bytes @ 0x26
  1734   000192                     	ds	2
  1735   000194                     pwm_set@duty_cycle:
  1736                           	callstack 0
  1737   000194                     ??_mutex_lock:
  1738   000194                     ??_mutex_unlock:
  1739                           
  1740                           ; 1 bytes @ 0x28
  1741   000194                     	ds	1
  1742   000195                     pwm_set@duty:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x29
  1746   000195                     	ds	2
  1747   000197                     mutex_unlock@tid:
  1748                           	callstack 0
  1749                           
  1750                           ; 1 bytes @ 0x2B
  1751   000197                     	ds	4
  1752   00019B                     tarefa_injecao_eletronica@duty:
  1753                           	callstack 0
  1754   00019B                     
  1755                           ; 1 bytes @ 0x2F
  1756   00019B                     	ds	1
  1757   00019C                     ?___awmod:
  1758                           	callstack 0
  1759   00019C                     delay@time:
  1760                           	callstack 0
  1761   00019C                     ___awmod@dividend:
  1762                           	callstack 0
  1763   00019C                     ??_change_state:
  1764                           
  1765                           ; 1 bytes @ 0x30
  1766   00019C                     	ds	2
  1767   00019E                     ___awmod@divisor:
  1768                           	callstack 0
  1769   00019E                     ??_delay:
  1770                           
  1771                           ; 1 bytes @ 0x32
  1772   00019E                     	ds	2
  1773   0001A0                     ___awmod@counter:
  1774                           	callstack 0
  1775   0001A0                     
  1776                           ; 1 bytes @ 0x34
  1777   0001A0                     	ds	1
  1778   0001A1                     ___awmod@sign:
  1779                           	callstack 0
  1780                           
  1781                           ; 1 bytes @ 0x35
  1782   0001A1                     	ds	2
  1783   0001A3                     change_state@new_state:
  1784                           	callstack 0
  1785                           
  1786                           ; 1 bytes @ 0x37
  1787   0001A3                     	ds	2
  1788   0001A5                     
  1789                           ; 1 bytes @ 0x39
  1790                           
  1791                           	psect	cstackBANK0
  1792   000060                     __pcstackBANK0:
  1793                           	callstack 0
  1794   000060                     i2create_task@id:
  1795                           	callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x0
  1798   000060                     	ds	1
  1799   000061                     i2create_task@new_task:
  1800                           	callstack 0
  1801                           
  1802                           ; 107 bytes @ 0x1
  1803   000061                     	ds	107
  1804                           
  1805                           	psect	cstackCOMRAM
  1806   000021                     __pcstackCOMRAM:
  1807                           	callstack 0
  1808   000021                     ?i2___awmod:
  1809                           	callstack 0
  1810   000021                     create_task@priority:
  1811                           	callstack 0
  1812   000021                     i2create_task@priority:
  1813                           	callstack 0
  1814   000021                     sem_init@sem:
  1815                           	callstack 0
  1816   000021                     mutex_init@m:
  1817                           	callstack 0
  1818   000021                     SRAMInitHeap@pHeap:
  1819                           	callstack 0
  1820   000021                     __SRAMmerge@pSegA:
  1821                           	callstack 0
  1822   000021                     i2___awmod@dividend:
  1823                           	callstack 0
  1824   000021                     
  1825                           ; 1 bytes @ 0x0
  1826   000021                     	ds	1
  1827   000022                     create_task@task:
  1828                           	callstack 0
  1829   000022                     i2create_task@task:
  1830                           	callstack 0
  1831                           
  1832                           ; 2 bytes @ 0x1
  1833   000022                     	ds	1
  1834   000023                     decrease_time@i:
  1835                           	callstack 0
  1836   000023                     sem_init@value:
  1837                           	callstack 0
  1838   000023                     SRAMInitHeap@count:
  1839                           	callstack 0
  1840   000023                     i2___awmod@divisor:
  1841                           	callstack 0
  1842   000023                     ??__SRAMmerge:
  1843   000023                     
  1844                           ; 1 bytes @ 0x2
  1845   000023                     	ds	1
  1846   000024                     __SRAMmerge@pSegB:
  1847                           	callstack 0
  1848   000024                     ??_create_task:
  1849   000024                     ??i2_create_task:
  1850                           
  1851                           ; 1 bytes @ 0x3
  1852   000024                     	ds	1
  1853   000025                     i2___awmod@counter:
  1854                           	callstack 0
  1855   000025                     
  1856                           ; 1 bytes @ 0x4
  1857   000025                     	ds	1
  1858   000026                     __SRAMmerge@uSum:
  1859                           	callstack 0
  1860   000026                     i2___awmod@sign:
  1861                           	callstack 0
  1862                           
  1863                           ; 1 bytes @ 0x5
  1864   000026                     	ds	1
  1865   000027                     __SRAMmerge@uSegA:
  1866                           	callstack 0
  1867   000027                     ??_ISR:
  1868                           
  1869                           ; 1 bytes @ 0x6
  1870   000027                     	ds	1
  1871   000028                     __SRAMmerge@uSegB:
  1872                           	callstack 0
  1873                           
  1874                           ; 1 bytes @ 0x7
  1875   000028                     	ds	1
  1876   000029                     ?_SRAMalloc:
  1877                           	callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x8
  1880   000029                     	ds	2
  1881   00002B                     ??_SRAMalloc:
  1882                           
  1883                           ; 1 bytes @ 0xA
  1884   00002B                     	ds	2
  1885   00002D                     SRAMalloc@temp:
  1886                           	callstack 0
  1887                           
  1888                           ; 2 bytes @ 0xC
  1889   00002D                     	ds	2
  1890   00002F                     SRAMalloc@segLen:
  1891                           	callstack 0
  1892                           
  1893                           ; 1 bytes @ 0xE
  1894   00002F                     	ds	1
  1895   000030                     SRAMalloc@segHeader:
  1896                           	callstack 0
  1897                           
  1898                           ; 1 bytes @ 0xF
  1899   000030                     	ds	1
  1900   000031                     SRAMalloc@nBytes:
  1901                           	callstack 0
  1902                           
  1903                           ; 1 bytes @ 0x10
  1904   000031                     	ds	1
  1905   000032                     SRAMalloc@pHeap:
  1906                           	callstack 0
  1907                           
  1908                           ; 2 bytes @ 0x11
  1909   000032                     	ds	2
  1910   000034                     create_pipe@p:
  1911                           	callstack 0
  1912                           
  1913                           ; 2 bytes @ 0x13
  1914   000034                     	ds	2
  1915   000036                     
  1916                           ; 1 bytes @ 0x15
  1917   000036                     	ds	3
  1918   000039                     ISR@i:
  1919                           	callstack 0
  1920                           
  1921                           ; 1 bytes @ 0x18
  1922   000039                     	ds	1
  1923   00003A                     ?_adc_read:
  1924                           	callstack 0
  1925                           
  1926                           ; 2 bytes @ 0x19
  1927   00003A                     	ds	2
  1928   00003C                     ??_adc_read:
  1929                           
  1930                           ; 1 bytes @ 0x1B
  1931   00003C                     	ds	2
  1932                           
  1933 ;;
  1934 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1935 ;;
  1936 ;; *************** function _main *****************
  1937 ;; Defined at:
  1938 ;;		line 4 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2   16[None  ] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels required when called: 15
  1958 ;; This function calls:
  1959 ;;		_create_task
  1960 ;;		_os_init
  1961 ;;		_os_start
  1962 ;; This function is called by:
  1963 ;;		Startup code after reset
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text0
  1968   0023F8                     __ptext0:
  1969                           	callstack 0
  1970   0023F8                     _main:
  1971                           	callstack 16
  1972   0023F8                     
  1973                           ;main.c: 6:     os_init();
  1974   0023F8  ECA1  F012         	call	_os_init	;wreg free
  1975                           
  1976                           ;main.c: 8:     create_task(1, 4, tarefa_acelerador);
  1977   0023FC  0E04               	movlw	4
  1978   0023FE  6E21               	movwf	create_task@priority^0,c
  1979   002400  0E3E               	movlw	low _tarefa_acelerador
  1980   002402  6E22               	movwf	create_task@task^0,c
  1981   002404  0E24               	movlw	high _tarefa_acelerador
  1982   002406  6E23               	movwf	(create_task@task+1)^0,c
  1983   002408  0E01               	movlw	1
  1984   00240A  EC5A  F011         	call	_create_task
  1985                           
  1986                           ;main.c: 9:     create_task(2, 3, tarefa_controle_central);
  1987   00240E  0E03               	movlw	3
  1988   002410  6E21               	movwf	create_task@priority^0,c
  1989   002412  0E58               	movlw	low _tarefa_controle_central
  1990   002414  6E22               	movwf	create_task@task^0,c
  1991   002416  0E22               	movlw	high _tarefa_controle_central
  1992   002418  6E23               	movwf	(create_task@task+1)^0,c
  1993   00241A  0E02               	movlw	2
  1994   00241C  EC5A  F011         	call	_create_task
  1995                           
  1996                           ;main.c: 10:     create_task(3, 3, tarefa_injecao_eletronica);
  1997   002420  0E03               	movlw	3
  1998   002422  6E21               	movwf	create_task@priority^0,c
  1999   002424  0E60               	movlw	low _tarefa_injecao_eletronica
  2000   002426  6E22               	movwf	create_task@task^0,c
  2001   002428  0E23               	movlw	high _tarefa_injecao_eletronica
  2002   00242A  6E23               	movwf	(create_task@task+1)^0,c
  2003   00242C  0E03               	movlw	3
  2004   00242E  EC5A  F011         	call	_create_task
  2005   002432                     
  2006                           ;main.c: 13:     os_start();
  2007   002432  ECE4  F012         	call	_os_start	;wreg free
  2008   002436                     l17:
  2009   002436  EF1B  F012         	goto	l17
  2010   00243A  EF06  F000         	goto	start
  2011   00243E                     __end_of_main:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _os_start *****************
  2015 ;; Defined at:
  2016 ;;		line 66 in file "kernel.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2033 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 14
  2037 ;; This function calls:
  2038 ;;		_start_timer0
  2039 ;;		_user_config
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text1
  2046   0025C8                     __ptext1:
  2047                           	callstack 0
  2048   0025C8                     _os_start:
  2049                           	callstack 16
  2050   0025C8                     
  2051                           ;kernel.c: 71:     user_config();
  2052   0025C8  EC41  F012         	call	_user_config	;wreg free
  2053   0025CC                     
  2054                           ;kernel.c: 74:     (INTCONbits.GIE = 1);
  2055   0025CC  8EF2               	bsf	242,7,c	;volatile
  2056   0025CE                     
  2057                           ;kernel.c: 77:     start_timer0();
  2058   0025CE  ECF7  F012         	call	_start_timer0	;wreg free
  2059   0025D2  0012               	return		;funcret
  2060   0025D4                     __end_of_os_start:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _user_config *****************
  2064 ;; Defined at:
  2065 ;;		line 87 in file "user_app.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2079 ;;      Params:         0       0       0       0       0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2082 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 13
  2086 ;; This function calls:
  2087 ;;		_adc_init
  2088 ;;		_config_timer0
  2089 ;;		_create_pipe
  2090 ;;		_int_ext_init
  2091 ;;		_mutex_init
  2092 ;;		_pwm_init
  2093 ;;		_start_timer0
  2094 ;; This function is called by:
  2095 ;;		_os_start
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text2
  2100   002482                     __ptext2:
  2101                           	callstack 0
  2102   002482                     _user_config:
  2103                           	callstack 16
  2104   002482                     
  2105                           ;user_app.c: 90:     TRISDbits.RD0 = 0;
  2106   002482  9095               	bcf	149,0,c	;volatile
  2107                           
  2108                           ;user_app.c: 91:     TRISDbits.RD1 = 0;
  2109   002484  9295               	bcf	149,1,c	;volatile
  2110                           
  2111                           ;user_app.c: 92:     TRISDbits.RD2 = 0;
  2112   002486  9495               	bcf	149,2,c	;volatile
  2113                           
  2114                           ;user_app.c: 93:     TRISDbits.RD3 = 0;
  2115   002488  9695               	bcf	149,3,c	;volatile
  2116                           
  2117                           ;user_app.c: 94:     LATD = 0;
  2118   00248A  6A8C               	clrf	140,c	;volatile
  2119   00248C                     
  2120                           ;user_app.c: 97:     create_pipe(&accel_pipe);
  2121   00248C  0E51               	movlw	low _accel_pipe
  2122   00248E  6E34               	movwf	create_pipe@p^0,c
  2123   002490  0E01               	movlw	high _accel_pipe
  2124   002492  6E35               	movwf	(create_pipe@p+1)^0,c
  2125   002494  ECFA  F010         	call	_create_pipe	;wreg free
  2126   002498                     
  2127                           ;user_app.c: 98:     mutex_init(&buffer_mutex);
  2128   002498  0E65               	movlw	low _buffer_mutex
  2129   00249A  6E21               	movwf	mutex_init@m^0,c
  2130   00249C  0E01               	movlw	high _buffer_mutex
  2131   00249E  6E22               	movwf	(mutex_init@m+1)^0,c
  2132   0024A0  EC8C  F012         	call	_mutex_init	;wreg free
  2133   0024A4                     
  2134                           ;user_app.c: 101:     adc_init();
  2135   0024A4  ECDC  F012         	call	_adc_init	;wreg free
  2136   0024A8                     
  2137                           ;user_app.c: 102:     pwm_init();
  2138   0024A8  ECD2  F012         	call	_pwm_init	;wreg free
  2139   0024AC                     
  2140                           ;user_app.c: 103:     int_ext_init();
  2141   0024AC  ECEA  F012         	call	_int_ext_init	;wreg free
  2142   0024B0                     
  2143                           ;user_app.c: 106:     config_timer0();
  2144   0024B0  ECC4  F012         	call	_config_timer0	;wreg free
  2145   0024B4                     
  2146                           ;user_app.c: 107:     start_timer0();
  2147   0024B4  ECF7  F012         	call	_start_timer0	;# 
  2148   0024B8  0012               	return		;funcret
  2149   0024BA                     __end_of_user_config:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _start_timer0 *****************
  2153 ;; Defined at:
  2154 ;;		line 67 in file "timer.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		None
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 10
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_user_config
  2179 ;;		_os_start
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text3
  2184   0025EE                     __ptext3:
  2185                           	callstack 0
  2186   0025EE                     _start_timer0:
  2187                           	callstack 18
  2188   0025EE                     
  2189                           ;timer.c: 69:     T0CONbits.TMR0ON = 1;
  2190   0025EE  8ED5               	bsf	213,7,c	;volatile
  2191   0025F0  0012               	return		;funcret
  2192   0025F2                     __end_of_start_timer0:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _pwm_init *****************
  2196 ;; Defined at:
  2197 ;;		line 25 in file "io.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 10
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_user_config
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text4
  2226   0025A4                     __ptext4:
  2227                           	callstack 0
  2228   0025A4                     _pwm_init:
  2229                           	callstack 18
  2230   0025A4                     
  2231                           ;io.c: 27:     TRISCbits.RC2 = 0;
  2232   0025A4  9494               	bcf	148,2,c	;volatile
  2233   0025A6                     
  2234                           ;io.c: 28:     T2CON = 0b00000111;
  2235   0025A6  0E07               	movlw	7
  2236   0025A8  6ECA               	movwf	202,c	;volatile
  2237   0025AA                     
  2238                           ;io.c: 29:     PR2 = 255;
  2239   0025AA  68CB               	setf	203,c	;volatile
  2240                           
  2241                           ;io.c: 30:     CCP1CON = 0b00001100;
  2242   0025AC  0E0C               	movlw	12
  2243   0025AE  6EBD               	movwf	189,c	;volatile
  2244   0025B0                     
  2245                           ;io.c: 31:     CCPR1L = 0;
  2246   0025B0  6ABE               	clrf	190,c	;volatile
  2247                           
  2248                           ;io.c: 32:     CCP1CONbits.DC1B = 0;
  2249   0025B2  0ECF               	movlw	-49
  2250   0025B4  16BD               	andwf	189,f,c	;volatile
  2251   0025B6  0012               	return		;funcret
  2252   0025B8                     __end_of_pwm_init:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _mutex_init *****************
  2256 ;; Defined at:
  2257 ;;		line 48 in file "sync.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  m               2    0[COMRAM] PTR struct mutex
  2260 ;;		 -> buffer_mutex(7), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2272 ;;      Params:         2       0       0       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2275 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2276 ;;Total ram usage:        2 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 10
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_user_config
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text5
  2287   002518                     __ptext5:
  2288                           	callstack 0
  2289   002518                     _mutex_init:
  2290                           	callstack 18
  2291   002518                     
  2292                           ;sync.c: 48: void mutex_init(mutex_t *m);sync.c: 49: {;sync.c: 50:     m->flag = 1;
  2293   002518  C021  FFD9         	movff	mutex_init@m,fsr2l
  2294   00251C  C022  FFDA         	movff	mutex_init@m+1,fsr2h
  2295   002520  0E01               	movlw	1
  2296   002522  6EDF               	movwf	indf2,c
  2297   002524                     
  2298                           ;sync.c: 51:     m->s_size = 0;
  2299   002524  EE20 F005          	lfsr	2,5
  2300   002528  5021               	movf	mutex_init@m^0,w,c
  2301   00252A  26D9               	addwf	fsr2l,f,c
  2302   00252C  5022               	movf	(mutex_init@m+1)^0,w,c
  2303   00252E  22DA               	addwfc	fsr2h,f,c
  2304   002530  6ADF               	clrf	indf2,c
  2305   002532                     
  2306                           ;sync.c: 52:     m->s_pos_out = 0;
  2307   002532  EE20 F006          	lfsr	2,6
  2308   002536  5021               	movf	mutex_init@m^0,w,c
  2309   002538  26D9               	addwf	fsr2l,f,c
  2310   00253A  5022               	movf	(mutex_init@m+1)^0,w,c
  2311   00253C  22DA               	addwfc	fsr2h,f,c
  2312   00253E  6ADF               	clrf	indf2,c
  2313   002540  0012               	return		;funcret
  2314   002542                     __end_of_mutex_init:
  2315                           	callstack 0
  2316                           
  2317 ;; *************** function _int_ext_init *****************
  2318 ;; Defined at:
  2319 ;;		line 47 in file "io.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		None
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2333 ;;      Params:         0       0       0       0       0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 10
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_user_config
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text6
  2348   0025D4                     __ptext6:
  2349                           	callstack 0
  2350   0025D4                     _int_ext_init:
  2351                           	callstack 18
  2352   0025D4                     
  2353                           ;io.c: 49:     TRISBbits.RB0 = 1;
  2354   0025D4  8093               	bsf	147,0,c	;volatile
  2355                           
  2356                           ;io.c: 50:     INTCON2bits.INTEDG0 = 1;
  2357   0025D6  8CF1               	bsf	241,6,c	;volatile
  2358                           
  2359                           ;io.c: 51:     INTCONbits.INT0IF = 0;
  2360   0025D8  92F2               	bcf	242,1,c	;volatile
  2361                           
  2362                           ;io.c: 52:     INTCONbits.INT0IE = 1;
  2363   0025DA  88F2               	bsf	242,4,c	;volatile
  2364                           
  2365                           ;io.c: 53:     INTCONbits.GIE = 1;
  2366   0025DC  8EF2               	bsf	242,7,c	;volatile
  2367   0025DE  0012               	return		;funcret
  2368   0025E0                     __end_of_int_ext_init:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _create_pipe *****************
  2372 ;; Defined at:
  2373 ;;		line 4 in file "pipe.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  p               2   19[COMRAM] PTR struct pipe
  2376 ;;		 -> accel_pipe(20), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         2       0       0       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        2 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 12
  2395 ;; This function calls:
  2396 ;;		_SRAMalloc
  2397 ;;		_sem_init
  2398 ;; This function is called by:
  2399 ;;		_user_config
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text7
  2404   0021F4                     __ptext7:
  2405                           	callstack 0
  2406   0021F4                     _create_pipe:
  2407                           	callstack 16
  2408   0021F4                     
  2409                           ;pipe.c: 4: void create_pipe(pipe_t *p);pipe.c: 5: {;pipe.c: 6:     p->pipe_msg = (uint8
      +                          _t *)SRAMalloc(4);
  2410   0021F4  0E04               	movlw	4
  2411   0021F6  EC80  F00D         	call	_SRAMalloc
  2412   0021FA  C034  FFD9         	movff	create_pipe@p,fsr2l
  2413   0021FE  C035  FFDA         	movff	create_pipe@p+1,fsr2h
  2414   002202  C029  FFDE         	movff	?_SRAMalloc,postinc2
  2415   002206  C02A  FFDD         	movff	?_SRAMalloc+1,postdec2
  2416   00220A                     
  2417                           ;pipe.c: 7:     p->pipe_pos_read = 0;
  2418   00220A  EE20 F002          	lfsr	2,2
  2419   00220E  5034               	movf	create_pipe@p^0,w,c
  2420   002210  26D9               	addwf	fsr2l,f,c
  2421   002212  5035               	movf	(create_pipe@p+1)^0,w,c
  2422   002214  22DA               	addwfc	fsr2h,f,c
  2423   002216  6ADF               	clrf	indf2,c
  2424   002218                     
  2425                           ;pipe.c: 8:     p->pipe_pos_write = 0;
  2426   002218  EE20 F003          	lfsr	2,3
  2427   00221C  5034               	movf	create_pipe@p^0,w,c
  2428   00221E  26D9               	addwf	fsr2l,f,c
  2429   002220  5035               	movf	(create_pipe@p+1)^0,w,c
  2430   002222  22DA               	addwfc	fsr2h,f,c
  2431   002224  6ADF               	clrf	indf2,c
  2432   002226                     
  2433                           ;pipe.c: 9:     sem_init(&p->pipe_sem_read, 0);
  2434   002226  0E04               	movlw	4
  2435   002228  2434               	addwf	create_pipe@p^0,w,c
  2436   00222A  6E21               	movwf	sem_init@sem^0,c
  2437   00222C  0E00               	movlw	0
  2438   00222E  2035               	addwfc	(create_pipe@p+1)^0,w,c
  2439   002230  6E22               	movwf	(sem_init@sem+1)^0,c
  2440   002232  0E00               	movlw	0
  2441   002234  6E24               	movwf	(sem_init@value+1)^0,c
  2442   002236  0E00               	movlw	0
  2443   002238  6E23               	movwf	sem_init@value^0,c
  2444   00223A  EC75  F012         	call	_sem_init	;wreg free
  2445   00223E                     
  2446                           ;pipe.c: 10:     sem_init(&p->pipe_sem_write, 4);
  2447   00223E  0E0C               	movlw	12
  2448   002240  2434               	addwf	create_pipe@p^0,w,c
  2449   002242  6E21               	movwf	sem_init@sem^0,c
  2450   002244  0E00               	movlw	0
  2451   002246  2035               	addwfc	(create_pipe@p+1)^0,w,c
  2452   002248  6E22               	movwf	(sem_init@sem+1)^0,c
  2453   00224A  0E00               	movlw	0
  2454   00224C  6E24               	movwf	(sem_init@value+1)^0,c
  2455   00224E  0E04               	movlw	4
  2456   002250  6E23               	movwf	sem_init@value^0,c
  2457   002252  EC75  F012         	call	_sem_init	;wreg free
  2458   002256  0012               	return		;funcret
  2459   002258                     __end_of_create_pipe:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _sem_init *****************
  2463 ;; Defined at:
  2464 ;;		line 11 in file "sync.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  sem             2    0[COMRAM] PTR struct sem
  2467 ;;		 -> accel_pipe(20), 
  2468 ;;  value           2    2[COMRAM] short 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2480 ;;      Params:         4       0       0       0       0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2483 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2484 ;;Total ram usage:        4 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 10
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_create_pipe
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text8
  2495   0024EA                     __ptext8:
  2496                           	callstack 0
  2497   0024EA                     _sem_init:
  2498                           	callstack 17
  2499   0024EA                     
  2500                           ;sync.c: 11: void sem_init(sem_t *sem, int16_t value);sync.c: 12: {;sync.c: 13:     sem-
      +                          >s_value = value;
  2501   0024EA  C021  FFD9         	movff	sem_init@sem,fsr2l
  2502   0024EE  C022  FFDA         	movff	sem_init@sem+1,fsr2h
  2503   0024F2  C023  FFDE         	movff	sem_init@value,postinc2
  2504   0024F6  C024  FFDD         	movff	sem_init@value+1,postdec2
  2505   0024FA                     
  2506                           ;sync.c: 14:     sem->s_size = 0;
  2507   0024FA  EE20 F006          	lfsr	2,6
  2508   0024FE  5021               	movf	sem_init@sem^0,w,c
  2509   002500  26D9               	addwf	fsr2l,f,c
  2510   002502  5022               	movf	(sem_init@sem+1)^0,w,c
  2511   002504  22DA               	addwfc	fsr2h,f,c
  2512   002506  6ADF               	clrf	indf2,c
  2513   002508                     
  2514                           ;sync.c: 15:     sem->s_pos_out = 0;
  2515   002508  EE20 F007          	lfsr	2,7
  2516   00250C  5021               	movf	sem_init@sem^0,w,c
  2517   00250E  26D9               	addwf	fsr2l,f,c
  2518   002510  5022               	movf	(sem_init@sem+1)^0,w,c
  2519   002512  22DA               	addwfc	fsr2h,f,c
  2520   002514  6ADF               	clrf	indf2,c
  2521   002516  0012               	return		;funcret
  2522   002518                     __end_of_sem_init:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function _SRAMalloc *****************
  2526 ;; Defined at:
  2527 ;;		line 138 in file "mem.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  nBytes          1    wreg     unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  nBytes          1   16[COMRAM] unsigned char 
  2532 ;;  pHeap           2   17[COMRAM] PTR struct _SALLOC
  2533 ;;		 -> _uDynamicHeap(80), 
  2534 ;;  temp            2   12[COMRAM] PTR struct _SALLOC
  2535 ;;		 -> _uDynamicHeap(80), 
  2536 ;;  segHeader       1   15[COMRAM] struct _SALLOC
  2537 ;;  segLen          1   14[COMRAM] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  2    8[COMRAM] PTR unsigned char 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         2       0       0       0       0       0       0       0       0
  2548 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2550 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:       11 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 11
  2554 ;; This function calls:
  2555 ;;		__SRAMmerge
  2556 ;; This function is called by:
  2557 ;;		_create_pipe
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text9
  2562   001B00                     __ptext9:
  2563                           	callstack 0
  2564   001B00                     _SRAMalloc:
  2565                           	callstack 16
  2566                           
  2567                           ;incstack = 0
  2568                           ;SRAMalloc@nBytes stored from wreg
  2569   001B00  6E31               	movwf	SRAMalloc@nBytes^0,c
  2570   001B02                     
  2571                           ;mem.c: 138: unsigned char * SRAMalloc( unsigned char nBytes);mem.c: 139: {;mem.c: 140: 
      +                           SALLOC * pHeap;;mem.c: 141:  SALLOC * temp;;mem.c: 142:       SALLOC segHeader;;mem.c: 
      +                          143:       unsigned char segLen;;mem.c: 146:  if (nBytes > (0x7F - 1))
  2572   001B02  0E7E               	movlw	126
  2573   001B04  6431               	cpfsgt	SRAMalloc@nBytes^0,c
  2574   001B06  EF87  F00D         	goto	u841
  2575   001B0A  EF89  F00D         	goto	u840
  2576   001B0E                     u841:
  2577   001B0E  EF8F  F00D         	goto	l1903
  2578   001B12                     u840:
  2579   001B12                     l1899:
  2580                           
  2581                           ;mem.c: 147:   return (0);
  2582   001B12  0E00               	movlw	0
  2583   001B14  6E29               	movwf	?_SRAMalloc^0,c
  2584   001B16  0E00               	movlw	0
  2585   001B18  6E2A               	movwf	(?_SRAMalloc+1)^0,c
  2586   001B1A  EF0E  F00E         	goto	l142
  2587   001B1E                     l1903:
  2588                           
  2589                           ;mem.c: 150:  pHeap = (SALLOC *)_uDynamicHeap;
  2590   001B1E  0E01               	movlw	low __uDynamicHeap
  2591   001B20  6E32               	movwf	SRAMalloc@pHeap^0,c
  2592   001B22  0E01               	movlw	high __uDynamicHeap
  2593   001B24  6E33               	movwf	(SRAMalloc@pHeap+1)^0,c
  2594   001B26                     l1905:
  2595                           
  2596                           ;mem.c: 153:  {;mem.c: 155:   segHeader = *pHeap;
  2597   001B26  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2598   001B2A  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2599   001B2E  50DF               	movf	indf2,w,c
  2600   001B30  6E30               	movwf	SRAMalloc@segHeader^0,c
  2601   001B32                     
  2602                           ;mem.c: 158:   segLen = segHeader.bits.count - 1;
  2603   001B32  5030               	movf	SRAMalloc@segHeader^0,w,c
  2604   001B34  0B7F               	andlw	127
  2605   001B36  6E2B               	movwf	??_SRAMalloc^0,c
  2606   001B38  042B               	decf	??_SRAMalloc^0,w,c
  2607   001B3A  6E2F               	movwf	SRAMalloc@segLen^0,c
  2608   001B3C                     
  2609                           ;mem.c: 161:   if (segHeader.byte == 0)
  2610   001B3C  5030               	movf	SRAMalloc@segHeader^0,w,c
  2611   001B3E  A4D8               	btfss	status,2,c
  2612   001B40  EFA4  F00D         	goto	u851
  2613   001B44  EFA6  F00D         	goto	u850
  2614   001B48                     u851:
  2615   001B48  EFA8  F00D         	goto	l144
  2616   001B4C                     u850:
  2617   001B4C  EF89  F00D         	goto	l1899
  2618   001B50                     l144:
  2619                           
  2620                           ;mem.c: 165:   if (!(segHeader.bits.alloc))
  2621   001B50  BE30               	btfsc	SRAMalloc@segHeader^0,7,c
  2622   001B52  EFAD  F00D         	goto	u861
  2623   001B56  EFAF  F00D         	goto	u860
  2624   001B5A                     u861:
  2625   001B5A  EFC6  F00D         	goto	l1919
  2626   001B5E                     u860:
  2627   001B5E                     
  2628                           ;mem.c: 166:   {;mem.c: 168:    if (nBytes > segLen)
  2629   001B5E  5031               	movf	SRAMalloc@nBytes^0,w,c
  2630   001B60  5C2F               	subwf	SRAMalloc@segLen^0,w,c
  2631   001B62  B0D8               	btfsc	status,0,c
  2632   001B64  EFB6  F00D         	goto	u871
  2633   001B68  EFB8  F00D         	goto	u870
  2634   001B6C                     u871:
  2635   001B6C  EFD1  F00D         	goto	l1921
  2636   001B70                     u870:
  2637   001B70                     
  2638                           ;mem.c: 169:    {;mem.c: 171:     if (!(_SRAMmerge(pHeap)))
  2639   001B70  C032  F021         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  2640   001B74  C033  F022         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  2641   001B78  EC0F  F00E         	call	__SRAMmerge	;wreg free
  2642   001B7C  0900               	iorlw	0
  2643   001B7E  A4D8               	btfss	status,2,c
  2644   001B80  EFC4  F00D         	goto	u881
  2645   001B84  EFC6  F00D         	goto	u880
  2646   001B88                     u881:
  2647   001B88  EF0C  F00E         	goto	l151
  2648   001B8C                     u880:
  2649   001B8C                     l1919:
  2650                           
  2651                           ;mem.c: 172:      pHeap += segHeader.bits.count;
  2652   001B8C  5030               	movf	SRAMalloc@segHeader^0,w,c
  2653   001B8E  0B7F               	andlw	127
  2654   001B90  6E2B               	movwf	??_SRAMalloc^0,c
  2655   001B92  502B               	movf	??_SRAMalloc^0,w,c
  2656   001B94  0D01               	mullw	1
  2657   001B96  50F3               	movf	243,w,c
  2658   001B98  2632               	addwf	SRAMalloc@pHeap^0,f,c
  2659   001B9A  50F4               	movf	244,w,c
  2660   001B9C  2233               	addwfc	(SRAMalloc@pHeap+1)^0,f,c
  2661   001B9E  EF93  F00D         	goto	l1905
  2662   001BA2                     l1921:
  2663                           
  2664                           ;mem.c: 178:     if (nBytes == segLen)
  2665   001BA2  502F               	movf	SRAMalloc@segLen^0,w,c
  2666   001BA4  1831               	xorwf	SRAMalloc@nBytes^0,w,c
  2667   001BA6  A4D8               	btfss	status,2,c
  2668   001BA8  EFD8  F00D         	goto	u891
  2669   001BAC  EFDA  F00D         	goto	u890
  2670   001BB0                     u891:
  2671   001BB0  EFE7  F00D         	goto	l1931
  2672   001BB4                     u890:
  2673   001BB4                     
  2674                           ;mem.c: 179:     {;mem.c: 181:      (*pHeap).bits.alloc = 1;
  2675   001BB4  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2676   001BB8  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2677   001BBC  8EDF               	bsf	indf2,7,c
  2678   001BBE                     
  2679                           ;mem.c: 184:      return ((unsigned char *)(pHeap + 1));
  2680   001BBE  0E01               	movlw	1
  2681   001BC0  2432               	addwf	SRAMalloc@pHeap^0,w,c
  2682   001BC2  6E29               	movwf	?_SRAMalloc^0,c
  2683   001BC4  0E00               	movlw	0
  2684   001BC6  2033               	addwfc	(SRAMalloc@pHeap+1)^0,w,c
  2685   001BC8  6E2A               	movwf	(?_SRAMalloc+1)^0,c
  2686   001BCA  EF0E  F00E         	goto	l142
  2687   001BCE                     l1931:
  2688                           
  2689                           ;mem.c: 189:     {;mem.c: 191:      (*pHeap).byte = nBytes + 0x81;
  2690   001BCE  5031               	movf	SRAMalloc@nBytes^0,w,c
  2691   001BD0  0F81               	addlw	129
  2692   001BD2  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2693   001BD6  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2694   001BDA  6EDF               	movwf	indf2,c
  2695   001BDC                     
  2696                           ;mem.c: 194:      temp = pHeap + 1;
  2697   001BDC  0E01               	movlw	1
  2698   001BDE  2432               	addwf	SRAMalloc@pHeap^0,w,c
  2699   001BE0  6E2D               	movwf	SRAMalloc@temp^0,c
  2700   001BE2  0E00               	movlw	0
  2701   001BE4  2033               	addwfc	(SRAMalloc@pHeap+1)^0,w,c
  2702   001BE6  6E2E               	movwf	(SRAMalloc@temp+1)^0,c
  2703   001BE8                     
  2704                           ;mem.c: 197:      pHeap += (nBytes + 1);
  2705   001BE8  5031               	movf	SRAMalloc@nBytes^0,w,c
  2706   001BEA  6E2B               	movwf	??_SRAMalloc^0,c
  2707   001BEC  6A2C               	clrf	(??_SRAMalloc+1)^0,c
  2708   001BEE  0E01               	movlw	1
  2709   001BF0  262B               	addwf	??_SRAMalloc^0,f,c
  2710   001BF2  0E00               	movlw	0
  2711   001BF4  222C               	addwfc	(??_SRAMalloc+1)^0,f,c
  2712   001BF6  502B               	movf	??_SRAMalloc^0,w,c
  2713   001BF8  2632               	addwf	SRAMalloc@pHeap^0,f,c
  2714   001BFA  502C               	movf	(??_SRAMalloc+1)^0,w,c
  2715   001BFC  2233               	addwfc	(SRAMalloc@pHeap+1)^0,f,c
  2716                           
  2717                           ;mem.c: 200:      (*pHeap).byte = segLen - nBytes;
  2718   001BFE  5031               	movf	SRAMalloc@nBytes^0,w,c
  2719   001C00  5C2F               	subwf	SRAMalloc@segLen^0,w,c
  2720   001C02  C032  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2721   001C06  C033  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2722   001C0A  6EDF               	movwf	indf2,c
  2723   001C0C                     
  2724                           ;mem.c: 203:      return ((unsigned char *)temp);
  2725   001C0C  C02D  F029         	movff	SRAMalloc@temp,?_SRAMalloc
  2726   001C10  C02E  F02A         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  2727   001C14  EF0E  F00E         	goto	l142
  2728   001C18                     l151:
  2729   001C18  EF93  F00D         	goto	l1905
  2730   001C1C                     l142:
  2731   001C1C  0012               	return		;funcret
  2732   001C1E                     __end_of_SRAMalloc:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function __SRAMmerge *****************
  2736 ;; Defined at:
  2737 ;;		line 302 in file "mem.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  pSegA           2    0[COMRAM] PTR struct _SALLOC
  2740 ;;		 -> _uDynamicHeap(80), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  pSegB           2    3[COMRAM] PTR struct _SALLOC
  2743 ;;		 -> _uDynamicHeap(80), 
  2744 ;;  uSegB           1    7[COMRAM] struct _SALLOC
  2745 ;;  uSegA           1    6[COMRAM] struct _SALLOC
  2746 ;;  uSum            1    5[COMRAM] struct _SALLOC
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      unsigned char 
  2749 ;; Registers used:
  2750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2756 ;;      Params:         2       0       0       0       0       0       0       0       0
  2757 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2758 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2759 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2760 ;;Total ram usage:        8 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 10
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_SRAMalloc
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text10
  2771   001C1E                     __ptext10:
  2772                           	callstack 0
  2773   001C1E                     __SRAMmerge:
  2774                           	callstack 16
  2775   001C1E                     
  2776                           ;mem.c: 302:      unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 303: {;mem.c: 304:  SA
      +                          LLOC * pSegB;;mem.c: 305:       SALLOC uSegA, uSegB, uSum;;mem.c: 308:  pSegB = pSegA + 
      +                          (*pSegA).byte;
  2777   001C1E  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2778   001C22  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2779   001C26  50DF               	movf	indf2,w,c
  2780   001C28  6E23               	movwf	??__SRAMmerge^0,c
  2781   001C2A  5023               	movf	??__SRAMmerge^0,w,c
  2782   001C2C  2421               	addwf	__SRAMmerge@pSegA^0,w,c
  2783   001C2E  6E24               	movwf	__SRAMmerge@pSegB^0,c
  2784   001C30  0E00               	movlw	0
  2785   001C32  2022               	addwfc	(__SRAMmerge@pSegA+1)^0,w,c
  2786   001C34  6E25               	movwf	(__SRAMmerge@pSegB+1)^0,c
  2787   001C36                     
  2788                           ;mem.c: 311:  uSegA = *pSegA;
  2789   001C36  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2790   001C3A  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2791   001C3E  50DF               	movf	indf2,w,c
  2792   001C40  6E27               	movwf	__SRAMmerge@uSegA^0,c
  2793   001C42                     
  2794                           ;mem.c: 312:  uSegB = *pSegB;
  2795   001C42  C024  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  2796   001C46  C025  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  2797   001C4A  50DF               	movf	indf2,w,c
  2798   001C4C  6E28               	movwf	__SRAMmerge@uSegB^0,c
  2799   001C4E                     
  2800                           ;mem.c: 315:  if (uSegB.byte == 0)
  2801   001C4E  5028               	movf	__SRAMmerge@uSegB^0,w,c
  2802   001C50  A4D8               	btfss	status,2,c
  2803   001C52  EF2D  F00E         	goto	u791
  2804   001C56  EF2F  F00E         	goto	u790
  2805   001C5A                     u791:
  2806   001C5A  EF32  F00E         	goto	l167
  2807   001C5E                     u790:
  2808   001C5E                     l1855:
  2809                           
  2810                           ;mem.c: 316:   return (0);
  2811   001C5E  0E00               	movlw	0
  2812   001C60  EF7A  F00E         	goto	l168
  2813   001C64                     l167:
  2814                           
  2815                           ;mem.c: 319:  if (uSegA.bits.alloc || uSegB.bits.alloc)
  2816   001C64  BE27               	btfsc	__SRAMmerge@uSegA^0,7,c
  2817   001C66  EF37  F00E         	goto	u801
  2818   001C6A  EF39  F00E         	goto	u800
  2819   001C6E                     u801:
  2820   001C6E  EF2F  F00E         	goto	l1855
  2821   001C72                     u800:
  2822   001C72  AE28               	btfss	__SRAMmerge@uSegB^0,7,c
  2823   001C74  EF3E  F00E         	goto	u811
  2824   001C78  EF40  F00E         	goto	u810
  2825   001C7C                     u811:
  2826   001C7C  EF42  F00E         	goto	l1865
  2827   001C80                     u810:
  2828   001C80  EF2F  F00E         	goto	l1855
  2829   001C84                     l1865:
  2830                           
  2831                           ;mem.c: 323:  if (uSegA.bits.count == 0x7F)
  2832   001C84  5027               	movf	__SRAMmerge@uSegA^0,w,c
  2833   001C86  0B7F               	andlw	127
  2834   001C88  0A7F               	xorlw	127
  2835   001C8A  A4D8               	btfss	status,2,c
  2836   001C8C  EF4A  F00E         	goto	u821
  2837   001C90  EF4C  F00E         	goto	u820
  2838   001C94                     u821:
  2839   001C94  EF4E  F00E         	goto	l1871
  2840   001C98                     u820:
  2841   001C98  EF2F  F00E         	goto	l1855
  2842   001C9C                     l1871:
  2843                           
  2844                           ;mem.c: 327:  uSum.byte = uSegA.byte + uSegB.byte;
  2845   001C9C  5027               	movf	__SRAMmerge@uSegA^0,w,c
  2846   001C9E  2428               	addwf	__SRAMmerge@uSegB^0,w,c
  2847   001CA0  6E26               	movwf	__SRAMmerge@uSum^0,c
  2848                           
  2849                           ;mem.c: 332:  if ((uSum.byte) > 0x7F)
  2850   001CA2  0E7F               	movlw	127
  2851   001CA4  6426               	cpfsgt	__SRAMmerge@uSum^0,c
  2852   001CA6  EF57  F00E         	goto	u831
  2853   001CAA  EF59  F00E         	goto	u830
  2854   001CAE                     u831:
  2855   001CAE  EF73  F00E         	goto	l1887
  2856   001CB2                     u830:
  2857   001CB2                     
  2858                           ;mem.c: 333:  {;mem.c: 334:   (*pSegA).byte = 0x7F;
  2859   001CB2  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2860   001CB6  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2861   001CBA  0E7F               	movlw	127
  2862   001CBC  6EDF               	movwf	indf2,c
  2863   001CBE                     
  2864                           ;mem.c: 335:   pSegA += 0x7F;
  2865   001CBE  0E7F               	movlw	127
  2866   001CC0  2621               	addwf	__SRAMmerge@pSegA^0,f,c
  2867   001CC2  0E00               	movlw	0
  2868   001CC4  2222               	addwfc	(__SRAMmerge@pSegA+1)^0,f,c
  2869   001CC6                     
  2870                           ;mem.c: 336:   pSegB += uSegB.byte;
  2871   001CC6  5028               	movf	__SRAMmerge@uSegB^0,w,c
  2872   001CC8  0D01               	mullw	1
  2873   001CCA  50F3               	movf	243,w,c
  2874   001CCC  2624               	addwf	__SRAMmerge@pSegB^0,f,c
  2875   001CCE  50F4               	movf	244,w,c
  2876   001CD0  2225               	addwfc	(__SRAMmerge@pSegB+1)^0,f,c
  2877   001CD2                     
  2878                           ;mem.c: 337:   (*pSegA).byte = (unsigned char)(pSegB - pSegA);
  2879   001CD2  5021               	movf	__SRAMmerge@pSegA^0,w,c
  2880   001CD4  5C24               	subwf	__SRAMmerge@pSegB^0,w,c
  2881   001CD6  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2882   001CDA  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2883   001CDE  6EDF               	movwf	indf2,c
  2884   001CE0                     
  2885                           ;mem.c: 339:   return (0x7F);
  2886   001CE0  0E7F               	movlw	127
  2887   001CE2  EF7A  F00E         	goto	l168
  2888   001CE6                     l1887:
  2889                           
  2890                           ;mem.c: 344:  {;mem.c: 345:   return ((*pSegA).byte = uSum.byte);
  2891   001CE6  C021  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2892   001CEA  C022  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2893   001CEE  C026  FFDF         	movff	__SRAMmerge@uSum,indf2
  2894   001CF2  50DF               	movf	223,w,c
  2895   001CF4                     l168:
  2896   001CF4  0012               	return		;funcret
  2897   001CF6                     __end_of__SRAMmerge:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _adc_init *****************
  2901 ;; Defined at:
  2902 ;;		line 9 in file "io.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 10
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_user_config
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text11
  2931   0025B8                     __ptext11:
  2932                           	callstack 0
  2933   0025B8                     _adc_init:
  2934                           	callstack 18
  2935   0025B8                     
  2936                           ;io.c: 11:     ADCON0 = 0x01;
  2937   0025B8  0E01               	movlw	1
  2938   0025BA  6EC2               	movwf	194,c	;volatile
  2939                           
  2940                           ;io.c: 12:     ADCON1 = 0x0E;
  2941   0025BC  0E0E               	movlw	14
  2942   0025BE  6EC1               	movwf	193,c	;volatile
  2943                           
  2944                           ;io.c: 13:     ADCON2 = 0b10101010;
  2945   0025C0  0EAA               	movlw	170
  2946   0025C2  6EC0               	movwf	192,c	;volatile
  2947   0025C4                     
  2948                           ;io.c: 14:     TRISAbits.RA0 = 1;
  2949   0025C4  8092               	bsf	146,0,c	;volatile
  2950   0025C6  0012               	return		;funcret
  2951   0025C8                     __end_of_adc_init:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _os_init *****************
  2955 ;; Defined at:
  2956 ;;		line 50 in file "kernel.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 11
  2977 ;; This function calls:
  2978 ;;		_SRAMInitHeap
  2979 ;;		_config_timer0
  2980 ;;		_create_task
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text12
  2987   002542                     __ptext12:
  2988                           	callstack 0
  2989   002542                     _os_init:
  2990                           	callstack 19
  2991   002542                     
  2992                           ;kernel.c: 52:     r_queue.ready_queue_size = 0;
  2993   002542  0E00               	movlw	0
  2994   002544  CFE8 F484          	movff	wreg,_r_queue+536
  2995                           
  2996                           ;kernel.c: 53:     r_queue.task_running = 0;
  2997   002548  0E00               	movlw	0
  2998   00254A  CFE8 F483          	movff	wreg,_r_queue+535
  2999   00254E                     
  3000                           ;kernel.c: 56:     create_task(0, 0, idle);
  3001   00254E  0E00               	movlw	0
  3002   002550  6E21               	movwf	create_task@priority^0,c
  3003   002552  0EE0               	movlw	low _idle
  3004   002554  6E22               	movwf	create_task@task^0,c
  3005   002556  0E25               	movlw	high _idle
  3006   002558  6E23               	movwf	(create_task@task+1)^0,c
  3007   00255A  0E00               	movlw	0
  3008   00255C  EC5A  F011         	call	_create_task	;# 
  3009   002560                     
  3010                           ;kernel.c: 59:     config_timer0();
  3011   002560  ECC4  F012         	call	_config_timer0	;wreg free
  3012   002564                     
  3013                           ;kernel.c: 62:     SRAMInitHeap();
  3014   002564  ECC7  F010         	call	_SRAMInitHeap	;wreg free
  3015   002568  0012               	return		;funcret
  3016   00256A                     __end_of_os_init:
  3017                           	callstack 0
  3018                           
  3019 ;; *************** function _create_task *****************
  3020 ;; Defined at:
  3021 ;;		line 11 in file "kernel.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  id              1    wreg     unsigned char 
  3024 ;;  priority        1    0[COMRAM] unsigned char 
  3025 ;;  task            2    1[COMRAM] PTR FTN()void 
  3026 ;;		 -> idle(1), tarefa_estabilidade(1), tarefa_injecao_eletronica(1), tarefa_controle_central(1), 
  3027 ;;		 -> tarefa_acelerador(1), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  id              1    0[BANK2 ] unsigned char 
  3030 ;;  new_task      107    1[BANK2 ] struct tcb
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3040 ;;      Params:         3       0       0       0       0       0       0       0       0
  3041 ;;      Locals:         0       0       0     108       0       0       0       0       0
  3042 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3043 ;;      Totals:         4       0       0     108       0       0       0       0       0
  3044 ;;Total ram usage:      112 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 10
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;;		_os_init
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text13
  3056   0022B4                     __ptext13:
  3057                           	callstack 0
  3058   0022B4                     _create_task:
  3059                           	callstack 19
  3060                           
  3061                           ;incstack = 0
  3062                           ;create_task@id stored from wreg
  3063   0022B4  0102               	movlb	2	; () banked
  3064   0022B6  6F00               	movwf	create_task@id& (0+255),b
  3065   0022B8                     
  3066                           ;kernel.c: 11: void create_task(uint8_t id, uint8_t priority, f_ptr task);kernel.c: 12: 
      +                          {;kernel.c: 13:     tcb_t new_task;;kernel.c: 15:     new_task.task_id = id;
  3067   0022B8  C200  F201         	movff	create_task@id,create_task@new_task
  3068   0022BC                     
  3069                           ;kernel.c: 16:     new_task.task_priority = priority;
  3070   0022BC  C021  F202         	movff	create_task@priority,create_task@new_task+1
  3071   0022C0                     
  3072                           ;kernel.c: 17:     new_task.task_f = task;
  3073   0022C0  C022  F204         	movff	create_task@task,create_task@new_task+3
  3074   0022C4  C023  F205         	movff	create_task@task+1,create_task@new_task+4
  3075   0022C8                     
  3076                           ;kernel.c: 19:     new_task.task_sp = 0;
  3077   0022C8  0102               	movlb	2	; () banked
  3078   0022CA  6B6B               	clrf	(create_task@new_task+106)& (0+255),b
  3079   0022CC                     
  3080                           ; BSR set to: 2
  3081                           ;kernel.c: 20:     new_task.time_sleeping = 0;
  3082   0022CC  0E00               	movlw	0
  3083   0022CE  6F07               	movwf	(create_task@new_task+6)& (0+255),b
  3084   0022D0  0E00               	movlw	0
  3085   0022D2  6F06               	movwf	(create_task@new_task+5)& (0+255),b
  3086   0022D4                     
  3087                           ; BSR set to: 2
  3088                           ;kernel.c: 21:     new_task.task_state = READY;
  3089   0022D4  6B03               	clrf	(create_task@new_task+2)& (0+255),b
  3090   0022D6                     
  3091                           ; BSR set to: 2
  3092                           ;kernel.c: 23:     new_task.BSR_REG = 0x000;
  3093   0022D6  6B0A               	clrf	(create_task@new_task+9)& (0+255),b
  3094   0022D8                     
  3095                           ; BSR set to: 2
  3096                           ;kernel.c: 24:     new_task.W_REG = 0x000;
  3097   0022D8  6B08               	clrf	(create_task@new_task+7)& (0+255),b
  3098   0022DA                     
  3099                           ; BSR set to: 2
  3100                           ;kernel.c: 25:     new_task.STATUS_REG = 0x000;
  3101   0022DA  6B09               	clrf	(create_task@new_task+8)& (0+255),b
  3102   0022DC                     
  3103                           ; BSR set to: 2
  3104                           ;kernel.c: 27:     r_queue.ready_queue[r_queue.ready_queue_size] = new_task;
  3105   0022DC  EE22  F001         	lfsr	2,create_task@new_task
  3106   0022E0  C484  F024         	movff	_r_queue+536,??_create_task
  3107   0022E4  5024               	movf	??_create_task^0,w,c
  3108   0022E6  0D6B               	mullw	107
  3109   0022E8  0E6C               	movlw	low _r_queue
  3110   0022EA  24F3               	addwf	243,w,c
  3111   0022EC  6EE9               	movwf	fsr0l,c
  3112   0022EE  0E02               	movlw	high _r_queue
  3113   0022F0  20F4               	addwfc	prodh,w,c
  3114   0022F2  6EEA               	movwf	fsr0h,c
  3115   0022F4  0E6A               	movlw	106
  3116   0022F6                     u1571:
  3117   0022F6  CFDB FFEB          	movff	plusw2,plusw0
  3118   0022FA  06E8               	decf	wreg,f,c
  3119   0022FC  E2FC               	bc	u1571
  3120   0022FE                     
  3121                           ; BSR set to: 2
  3122                           ;kernel.c: 28:     r_queue.ready_queue_size += 1;
  3123   0022FE  C484  FFE8         	movff	_r_queue+536,wreg
  3124   002302  0F01               	addlw	1
  3125   002304  CFE8 F484          	movff	wreg,_r_queue+536
  3126   002308                     
  3127                           ; BSR set to: 2
  3128   002308  0012               	return		;funcret
  3129   00230A                     __end_of_create_task:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _config_timer0 *****************
  3133 ;; Defined at:
  3134 ;;		line 53 in file "timer.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 10
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_user_config
  3159 ;;		_os_init
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text14
  3164   002588                     __ptext14:
  3165                           	callstack 0
  3166   002588                     _config_timer0:
  3167                           	callstack 18
  3168   002588                     
  3169                           ;timer.c: 55:     INTCONbits.PEIE = 1;
  3170   002588  8CF2               	bsf	242,6,c	;volatile
  3171                           
  3172                           ;timer.c: 56:     INTCONbits.TMR0IE = 1;
  3173   00258A  8AF2               	bsf	242,5,c	;volatile
  3174                           
  3175                           ;timer.c: 57:     INTCONbits.TMR0IF = 0;
  3176   00258C  94F2               	bcf	242,2,c	;volatile
  3177                           
  3178                           ;timer.c: 59:     T0CONbits.T0CS = 0;
  3179   00258E  9AD5               	bcf	213,5,c	;volatile
  3180                           
  3181                           ;timer.c: 60:     T0CONbits.PSA = 0;
  3182   002590  96D5               	bcf	213,3,c	;volatile
  3183   002592                     
  3184                           ;timer.c: 61:     T0CONbits.T0PS = 0b101;
  3185   002592  50D5               	movf	213,w,c	;volatile
  3186   002594  0BF8               	andlw	-8
  3187   002596  0905               	iorlw	5
  3188   002598  6ED5               	movwf	213,c	;volatile
  3189                           
  3190                           ;timer.c: 63:     TMR0 = 0;
  3191   00259A  0E00               	movlw	0
  3192   00259C  6ED7               	movwf	215,c	;volatile
  3193   00259E  0E00               	movlw	0
  3194   0025A0  6ED6               	movwf	214,c	;volatile
  3195   0025A2  0012               	return		;funcret
  3196   0025A4                     __end_of_config_timer0:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _SRAMInitHeap *****************
  3200 ;; Defined at:
  3201 ;;		line 259 in file "mem.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  count           2    2[COMRAM] unsigned int 
  3206 ;;  pHeap           2    0[COMRAM] PTR unsigned char 
  3207 ;;		 -> _uDynamicHeap(80), 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0
  3218 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3220 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3221 ;;Total ram usage:        4 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 10
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_os_init
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text15
  3232   00218E                     __ptext15:
  3233                           	callstack 0
  3234   00218E                     _SRAMInitHeap:
  3235                           	callstack 19
  3236   00218E                     
  3237                           ;mem.c: 261:  unsigned char * pHeap;;mem.c: 262:       unsigned int count;;mem.c: 264:  
      +                          pHeap = _uDynamicHeap;
  3238   00218E  0E01               	movlw	low __uDynamicHeap
  3239   002190  6E21               	movwf	SRAMInitHeap@pHeap^0,c
  3240   002192  0E01               	movlw	high __uDynamicHeap
  3241   002194  6E22               	movwf	(SRAMInitHeap@pHeap+1)^0,c
  3242   002196                     
  3243                           ;mem.c: 265:  count = 0x50 - 1;
  3244   002196  0E00               	movlw	0
  3245   002198  6E24               	movwf	(SRAMInitHeap@count+1)^0,c
  3246   00219A  0E4F               	movlw	79
  3247   00219C  6E23               	movwf	SRAMInitHeap@count^0,c
  3248   00219E                     l2125:
  3249                           
  3250                           ;mem.c: 268:  {;mem.c: 269:   if (count > 0x7F)
  3251   00219E  5024               	movf	(SRAMInitHeap@count+1)^0,w,c
  3252   0021A0  E109               	bnz	u1100
  3253   0021A2  0E80               	movlw	128
  3254   0021A4  5C23               	subwf	SRAMInitHeap@count^0,w,c
  3255   0021A6  A0D8               	btfss	status,0,c
  3256   0021A8  EFD8  F010         	goto	u1101
  3257   0021AC  EFDA  F010         	goto	u1100
  3258   0021B0                     u1101:
  3259   0021B0  EFEC  F010         	goto	l2133
  3260   0021B4                     u1100:
  3261   0021B4                     
  3262                           ;mem.c: 270:   {;mem.c: 271:    *pHeap = 0x7F;
  3263   0021B4  C021  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  3264   0021B8  C022  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  3265   0021BC  0E7F               	movlw	127
  3266   0021BE  6EDF               	movwf	indf2,c
  3267   0021C0                     
  3268                           ;mem.c: 272:    pHeap += 0x7F;
  3269   0021C0  0E7F               	movlw	127
  3270   0021C2  2621               	addwf	SRAMInitHeap@pHeap^0,f,c
  3271   0021C4  0E00               	movlw	0
  3272   0021C6  2222               	addwfc	(SRAMInitHeap@pHeap+1)^0,f,c
  3273   0021C8                     
  3274                           ;mem.c: 273:    count = count - 0x7F;
  3275   0021C8  0E81               	movlw	129
  3276   0021CA  2423               	addwf	SRAMInitHeap@count^0,w,c
  3277   0021CC  6E23               	movwf	SRAMInitHeap@count^0,c
  3278   0021CE  0EFF               	movlw	255
  3279   0021D0  2024               	addwfc	(SRAMInitHeap@count+1)^0,w,c
  3280   0021D2  6E24               	movwf	(SRAMInitHeap@count+1)^0,c
  3281                           
  3282                           ;mem.c: 274:   }
  3283   0021D4  EFCF  F010         	goto	l2125
  3284   0021D8                     l2133:
  3285                           
  3286                           ;mem.c: 276:   {;mem.c: 277:    *pHeap = (unsigned char)count;
  3287   0021D8  C021  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  3288   0021DC  C022  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  3289   0021E0  C023  FFDF         	movff	SRAMInitHeap@count,indf2
  3290   0021E4                     
  3291                           ;mem.c: 278:    *(pHeap + count) = 0;
  3292   0021E4  5023               	movf	SRAMInitHeap@count^0,w,c
  3293   0021E6  2421               	addwf	SRAMInitHeap@pHeap^0,w,c
  3294   0021E8  6ED9               	movwf	fsr2l,c
  3295   0021EA  5024               	movf	(SRAMInitHeap@count+1)^0,w,c
  3296   0021EC  2022               	addwfc	(SRAMInitHeap@pHeap+1)^0,w,c
  3297   0021EE  6EDA               	movwf	fsr2h,c
  3298   0021F0  6ADF               	clrf	indf2,c
  3299   0021F2  0012               	return		;funcret
  3300   0021F4                     __end_of_SRAMInitHeap:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function _tarefa_acelerador *****************
  3304 ;; Defined at:
  3305 ;;		line 17 in file "user_app.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  raw             2   17[BANK1 ] unsigned short 
  3310 ;;  data            1   19[BANK1 ] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0
  3321 ;;      Locals:         0       0       3       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3323 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3324 ;;Total ram usage:        5 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 9
  3327 ;; This function calls:
  3328 ;;		_adc_read
  3329 ;;		_write_pipe
  3330 ;;		_yield
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text16
  3337   00243E                     __ptext16:
  3338                           	callstack 0
  3339   00243E                     _tarefa_acelerador:
  3340                           	callstack 16
  3341   00243E                     l276:
  3342                           
  3343                           ;user_app.c: 20:     {;user_app.c: 21:         LATDbits.LATD1 = 1;
  3344   00243E  828C               	bsf	140,1,c	;volatile
  3345   002440                     
  3346                           ;user_app.c: 22:         uint16_t raw = adc_read();
  3347   002440  ECB5  F012         	call	_adc_read	;wreg free
  3348   002444  C03A  F17D         	movff	?_adc_read,tarefa_acelerador@raw
  3349   002448  C03B  F17E         	movff	?_adc_read+1,tarefa_acelerador@raw+1
  3350   00244C                     
  3351                           ;user_app.c: 23:         uint8_t data = raw >> 2;
  3352   00244C  C17D  F17B         	movff	tarefa_acelerador@raw,??_tarefa_acelerador
  3353   002450  C17E  F17C         	movff	tarefa_acelerador@raw+1,??_tarefa_acelerador+1
  3354   002454  0101               	movlb	1	; () banked
  3355   002456  90D8               	bcf	status,0,c
  3356   002458  337C               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3357   00245A  337B               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3358   00245C  90D8               	bcf	status,0,c
  3359   00245E  337C               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3360   002460  337B               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3361   002462  517B               	movf	??_tarefa_acelerador& (0+255),w,b
  3362   002464  6F7F               	movwf	tarefa_acelerador@data& (0+255),b
  3363   002466                     
  3364                           ; BSR set to: 1
  3365                           ;user_app.c: 24:         write_pipe(&accel_pipe, data);
  3366   002466  0E51               	movlw	low _accel_pipe
  3367   002468  6F75               	movwf	write_pipe@p& (0+255),b
  3368   00246A  0E01               	movlw	high _accel_pipe
  3369   00246C  6F76               	movwf	(write_pipe@p+1)& (0+255),b
  3370   00246E  C17F  F177         	movff	tarefa_acelerador@data,write_pipe@data
  3371   002472  EC52  F010         	call	_write_pipe	;wreg free
  3372   002476                     
  3373                           ;user_app.c: 25:         LATDbits.LATD1 = 0;
  3374   002476  928C               	bcf	140,1,c	;volatile
  3375   002478                     
  3376                           ;user_app.c: 26:         yield();
  3377   002478  EC55  F00B         	call	_yield	;wreg free
  3378   00247C  EF1F  F012         	goto	l276
  3379   002480  0012               	return		;funcret
  3380   002482                     __end_of_tarefa_acelerador:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _yield *****************
  3384 ;; Defined at:
  3385 ;;		line 41 in file "kernel.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       7       0       0       0       0       0       0
  3402 ;;      Totals:         0       0       7       0       0       0       0       0       0
  3403 ;;Total ram usage:        7 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 7
  3406 ;; This function calls:
  3407 ;;		_scheduler
  3408 ;; This function is called by:
  3409 ;;		_tarefa_acelerador
  3410 ;;		_tarefa_controle_central
  3411 ;;		_tarefa_injecao_eletronica
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text17
  3416   0016AA                     __ptext17:
  3417                           	callstack 0
  3418   0016AA                     _yield:
  3419                           	callstack 17
  3420   0016AA                     
  3421                           ;kernel.c: 43:     (INTCONbits.GIE = 0);
  3422   0016AA  9EF2               	bcf	242,7,c	;volatile
  3423   0016AC  C483  F192         	movff	_r_queue+535,??_yield
  3424   0016B0  0101               	movlb	1	; () banked
  3425   0016B2  5192               	movf	??_yield& (0+255),w,b
  3426   0016B4  0D6B               	mullw	107
  3427   0016B6  0E6C               	movlw	low _r_queue
  3428   0016B8  24F3               	addwf	243,w,c
  3429   0016BA  6F93               	movwf	(??_yield+1)& (0+255),b
  3430   0016BC  0E02               	movlw	high _r_queue
  3431   0016BE  20F4               	addwfc	prodh,w,c
  3432   0016C0  6F94               	movwf	(??_yield+2)& (0+255),b
  3433   0016C2  C193  F485         	movff	??_yield+1,_r_queue+537
  3434   0016C6  C194  F486         	movff	??_yield+2,_r_queue+538
  3435   0016CA                     
  3436                           ; BSR set to: 1
  3437   0016CA  EE24  F085         	lfsr	2,_r_queue+537
  3438   0016CE  EE00 F002          	lfsr	0,2
  3439   0016D2  50DE               	movf	postinc2,w,c
  3440   0016D4  26E9               	addwf	fsr0l,f,c
  3441   0016D6  50DD               	movf	postdec2,w,c
  3442   0016D8  22EA               	addwfc	fsr0h,f,c
  3443   0016DA  04EE               	decf	postinc0,w,c
  3444   0016DC  A4D8               	btfss	status,2,c
  3445   0016DE  EF73  F00B         	goto	i1u120_21
  3446   0016E2  EF75  F00B         	goto	i1u120_20
  3447   0016E6                     i1u120_21:
  3448   0016E6  EFE2  F00B         	goto	i1l2281
  3449   0016EA                     i1u120_20:
  3450   0016EA                     
  3451                           ; BSR set to: 1
  3452   0016EA  EE24  F085         	lfsr	2,_r_queue+537
  3453   0016EE  EE00 F009          	lfsr	0,9
  3454   0016F2  50DE               	movf	postinc2,w,c
  3455   0016F4  26E9               	addwf	fsr0l,f,c
  3456   0016F6  50DD               	movf	postdec2,w,c
  3457   0016F8  22EA               	addwfc	fsr0h,f,c
  3458   0016FA  CFE0 FFEF          	movff	bsr,indf0	;volatile
  3459   0016FE  EE24  F085         	lfsr	2,_r_queue+537
  3460   001702  EE00 F008          	lfsr	0,8
  3461   001706  50DE               	movf	postinc2,w,c
  3462   001708  26E9               	addwf	fsr0l,f,c
  3463   00170A  50DD               	movf	postdec2,w,c
  3464   00170C  22EA               	addwfc	fsr0h,f,c
  3465   00170E  CFD8 FFEF          	movff	status,indf0	;volatile
  3466   001712  EE24  F085         	lfsr	2,_r_queue+537
  3467   001716  EE00 F007          	lfsr	0,7
  3468   00171A  50DE               	movf	postinc2,w,c
  3469   00171C  26E9               	addwf	fsr0l,f,c
  3470   00171E  50DD               	movf	postdec2,w,c
  3471   001720  22EA               	addwfc	fsr0h,f,c
  3472   001722  CFE8 FFEF          	movff	wreg,indf0	;volatile
  3473   001726  EE24  F085         	lfsr	2,_r_queue+537
  3474   00172A  EE00 F06A          	lfsr	0,106
  3475   00172E  50DE               	movf	postinc2,w,c
  3476   001730  26E9               	addwf	fsr0l,f,c
  3477   001732  50DD               	movf	postdec2,w,c
  3478   001734  22EA               	addwfc	fsr0h,f,c
  3479   001736  6AEF               	clrf	indf0,c
  3480   001738  EE24  F085         	lfsr	2,_r_queue+537
  3481   00173C  EE00 F002          	lfsr	0,2
  3482   001740  50DE               	movf	postinc2,w,c
  3483   001742  26E9               	addwf	fsr0l,f,c
  3484   001744  50DD               	movf	postdec2,w,c
  3485   001746  22EA               	addwfc	fsr0h,f,c
  3486   001748  6AEF               	clrf	indf0,c
  3487   00174A  EFDA  F00B         	goto	i1l2279
  3488   00174E                     i1l2275:
  3489   00174E  EE24  F085         	lfsr	2,_r_queue+537
  3490   001752  EE00 F06A          	lfsr	0,106
  3491   001756  50DE               	movf	postinc2,w,c
  3492   001758  26E9               	addwf	fsr0l,f,c
  3493   00175A  50DD               	movf	postdec2,w,c
  3494   00175C  22EA               	addwfc	fsr0h,f,c
  3495   00175E  50EF               	movf	indf0,w,c
  3496   001760  0101               	movlb	1	; () banked
  3497   001762  6F92               	movwf	??_yield& (0+255),b
  3498   001764  5192               	movf	??_yield& (0+255),w,b
  3499   001766  0D03               	mullw	3
  3500   001768  CFF3 F193          	movff	prodl,??_yield+1
  3501   00176C  CFF4 F194          	movff	prodh,??_yield+2
  3502   001770  EE24  F085         	lfsr	2,_r_queue+537
  3503   001774  CFDE F195          	movff	postinc2,??_yield+3
  3504   001778  CFDD F196          	movff	postdec2,??_yield+4
  3505   00177C  5193               	movf	(??_yield+1)& (0+255),w,b
  3506   00177E  2595               	addwf	(??_yield+3)& (0+255),w,b
  3507   001780  6F97               	movwf	(??_yield+5)& (0+255),b
  3508   001782  5194               	movf	(??_yield+2)& (0+255),w,b
  3509   001784  2196               	addwfc	(??_yield+4)& (0+255),w,b
  3510   001786  6F98               	movwf	(??_yield+6)& (0+255),b
  3511   001788  0E0A               	movlw	10
  3512   00178A  2597               	addwf	(??_yield+5)& (0+255),w,b
  3513   00178C  6ED9               	movwf	fsr2l,c
  3514   00178E  0E00               	movlw	0
  3515   001790  2198               	addwfc	(??_yield+6)& (0+255),w,b
  3516   001792  6EDA               	movwf	fsr2h,c
  3517   001794  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3518   001798  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3519   00179C  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3520   0017A0                     
  3521                           ; BSR set to: 1
  3522   0017A0  EE24  F085         	lfsr	2,_r_queue+537
  3523   0017A4  EE00 F06A          	lfsr	0,106
  3524   0017A8  50DE               	movf	postinc2,w,c
  3525   0017AA  26E9               	addwf	fsr0l,f,c
  3526   0017AC  50DD               	movf	postdec2,w,c
  3527   0017AE  22EA               	addwfc	fsr0h,f,c
  3528   0017B0  2AEF               	incf	indf0,f,c
  3529   0017B2  0006               	pop		;# 
  3530   0017B4                     i1l2279:
  3531   0017B4  50FC               	movf	252,w,c	;volatile
  3532   0017B6  A4D8               	btfss	status,2,c
  3533   0017B8  EFE0  F00B         	goto	i1u121_21
  3534   0017BC  EFE2  F00B         	goto	i1u121_20
  3535   0017C0                     i1u121_21:
  3536   0017C0  EFA7  F00B         	goto	i1l2275
  3537   0017C4                     i1u121_20:
  3538   0017C4                     i1l2281:
  3539                           
  3540                           ;kernel.c: 45:     scheduler();
  3541   0017C4  ECF4  F012         	call	_scheduler	;wreg free
  3542   0017C8  C483  F192         	movff	_r_queue+535,??_yield
  3543   0017CC  0101               	movlb	1	; () banked
  3544   0017CE  5192               	movf	??_yield& (0+255),w,b
  3545   0017D0  0D6B               	mullw	107
  3546   0017D2  0E6C               	movlw	low _r_queue
  3547   0017D4  24F3               	addwf	243,w,c
  3548   0017D6  6F93               	movwf	(??_yield+1)& (0+255),b
  3549   0017D8  0E02               	movlw	high _r_queue
  3550   0017DA  20F4               	addwfc	prodh,w,c
  3551   0017DC  6F94               	movwf	(??_yield+2)& (0+255),b
  3552   0017DE  C193  F485         	movff	??_yield+1,_r_queue+537
  3553   0017E2  C194  F486         	movff	??_yield+2,_r_queue+538
  3554   0017E6                     
  3555                           ; BSR set to: 1
  3556   0017E6  EE24  F085         	lfsr	2,_r_queue+537
  3557   0017EA  EE00 F002          	lfsr	0,2
  3558   0017EE  50DE               	movf	postinc2,w,c
  3559   0017F0  26E9               	addwf	fsr0l,f,c
  3560   0017F2  50DD               	movf	postdec2,w,c
  3561   0017F4  22EA               	addwfc	fsr0h,f,c
  3562   0017F6  50EF               	movf	indf0,w,c
  3563   0017F8  A4D8               	btfss	status,2,c
  3564   0017FA  EF01  F00C         	goto	i1u122_21
  3565   0017FE  EF03  F00C         	goto	i1u122_20
  3566   001802                     i1u122_21:
  3567   001802  EF94  F00C         	goto	i1l2299
  3568   001806                     i1u122_20:
  3569   001806                     
  3570                           ; BSR set to: 1
  3571   001806  6AFC               	clrf	252,c	;volatile
  3572   001808                     
  3573                           ; BSR set to: 1
  3574   001808  EE24  F085         	lfsr	2,_r_queue+537
  3575   00180C  EE00 F06A          	lfsr	0,106
  3576   001810  50DE               	movf	postinc2,w,c
  3577   001812  26E9               	addwf	fsr0l,f,c
  3578   001814  50DD               	movf	postdec2,w,c
  3579   001816  22EA               	addwfc	fsr0h,f,c
  3580   001818  50EF               	movf	indf0,w,c
  3581   00181A  B4D8               	btfsc	status,2,c
  3582   00181C  EF12  F00C         	goto	i1u123_21
  3583   001820  EF14  F00C         	goto	i1u123_20
  3584   001824                     i1u123_21:
  3585   001824  EF78  F00C         	goto	i1l364
  3586   001828                     i1u123_20:
  3587   001828                     
  3588                           ; BSR set to: 1
  3589   001828  EE24  F085         	lfsr	2,_r_queue+537
  3590   00182C  EE00 F009          	lfsr	0,9
  3591   001830  50DE               	movf	postinc2,w,c
  3592   001832  26E9               	addwf	fsr0l,f,c
  3593   001834  50DD               	movf	postdec2,w,c
  3594   001836  22EA               	addwfc	fsr0h,f,c
  3595   001838  50EF               	movf	indf0,w,c
  3596   00183A  6EE0               	movwf	224,c	;volatile
  3597   00183C  EE24  F085         	lfsr	2,_r_queue+537
  3598   001840  EE00 F008          	lfsr	0,8
  3599   001844  50DE               	movf	postinc2,w,c
  3600   001846  26E9               	addwf	fsr0l,f,c
  3601   001848  50DD               	movf	postdec2,w,c
  3602   00184A  22EA               	addwfc	fsr0h,f,c
  3603   00184C  50EF               	movf	indf0,w,c
  3604   00184E  6ED8               	movwf	216,c	;volatile
  3605   001850  EE24  F085         	lfsr	2,_r_queue+537
  3606   001854  EE00 F007          	lfsr	0,7
  3607   001858  50DE               	movf	postinc2,w,c
  3608   00185A  26E9               	addwf	fsr0l,f,c
  3609   00185C  50DD               	movf	postdec2,w,c
  3610   00185E  22EA               	addwfc	fsr0h,f,c
  3611   001860  50EF               	movf	indf0,w,c
  3612   001862  6F92               	movwf	??_yield& (0+255),b
  3613   001864  5192               	movf	??_yield& (0+255),w,b
  3614   001866                     i1l365:
  3615                           
  3616                           ; BSR set to: 1
  3617   001866  0005               	push		;# 
  3618   001868  EE24  F085         	lfsr	2,_r_queue+537
  3619   00186C  EE00 F06A          	lfsr	0,106
  3620   001870  50DE               	movf	postinc2,w,c
  3621   001872  26E9               	addwf	fsr0l,f,c
  3622   001874  50DD               	movf	postdec2,w,c
  3623   001876  22EA               	addwfc	fsr0h,f,c
  3624   001878  06EF               	decf	indf0,f,c
  3625   00187A  EE24  F085         	lfsr	2,_r_queue+537
  3626   00187E  EE00 F06A          	lfsr	0,106
  3627   001882  50DE               	movf	postinc2,w,c
  3628   001884  26E9               	addwf	fsr0l,f,c
  3629   001886  50DD               	movf	postdec2,w,c
  3630   001888  22EA               	addwfc	fsr0h,f,c
  3631   00188A  50EF               	movf	indf0,w,c
  3632   00188C  0101               	movlb	1	; () banked
  3633   00188E  6F92               	movwf	??_yield& (0+255),b
  3634   001890  5192               	movf	??_yield& (0+255),w,b
  3635   001892  0D03               	mullw	3
  3636   001894  CFF3 F193          	movff	prodl,??_yield+1
  3637   001898  CFF4 F194          	movff	prodh,??_yield+2
  3638   00189C  EE24  F085         	lfsr	2,_r_queue+537
  3639   0018A0  CFDE F195          	movff	postinc2,??_yield+3
  3640   0018A4  CFDD F196          	movff	postdec2,??_yield+4
  3641   0018A8  5193               	movf	(??_yield+1)& (0+255),w,b
  3642   0018AA  2595               	addwf	(??_yield+3)& (0+255),w,b
  3643   0018AC  6F97               	movwf	(??_yield+5)& (0+255),b
  3644   0018AE  5194               	movf	(??_yield+2)& (0+255),w,b
  3645   0018B0  2196               	addwfc	(??_yield+4)& (0+255),w,b
  3646   0018B2  6F98               	movwf	(??_yield+6)& (0+255),b
  3647   0018B4  0E0A               	movlw	10
  3648   0018B6  2597               	addwf	(??_yield+5)& (0+255),w,b
  3649   0018B8  6ED9               	movwf	fsr2l,c
  3650   0018BA  0E00               	movlw	0
  3651   0018BC  2198               	addwfc	(??_yield+6)& (0+255),w,b
  3652   0018BE  6EDA               	movwf	fsr2h,c
  3653   0018C0  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3654   0018C4  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3655   0018C8  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3656   0018CC                     
  3657                           ; BSR set to: 1
  3658   0018CC  EE24  F085         	lfsr	2,_r_queue+537
  3659   0018D0  EE00 F06A          	lfsr	0,106
  3660   0018D4  50DE               	movf	postinc2,w,c
  3661   0018D6  26E9               	addwf	fsr0l,f,c
  3662   0018D8  50DD               	movf	postdec2,w,c
  3663   0018DA  22EA               	addwfc	fsr0h,f,c
  3664   0018DC  50EF               	movf	indf0,w,c
  3665   0018DE  A4D8               	btfss	status,2,c
  3666   0018E0  EF74  F00C         	goto	i1u124_21
  3667   0018E4  EF76  F00C         	goto	i1u124_20
  3668   0018E8                     i1u124_21:
  3669   0018E8  EF33  F00C         	goto	i1l365
  3670   0018EC                     i1u124_20:
  3671   0018EC  EF8A  F00C         	goto	i1l367
  3672   0018F0                     i1l364:
  3673                           
  3674                           ; BSR set to: 1
  3675   0018F0  0005               	push		;# 
  3676   0018F2  EE24  F085         	lfsr	2,_r_queue+537
  3677   0018F6  EE00 F003          	lfsr	0,3
  3678   0018FA  50DE               	movf	postinc2,w,c
  3679   0018FC  26E9               	addwf	fsr0l,f,c
  3680   0018FE  50DD               	movf	postdec2,w,c
  3681   001900  22EA               	addwfc	fsr0h,f,c
  3682   001902  CFEE F192          	movff	postinc0,??_yield
  3683   001906  CFED F193          	movff	postdec0,??_yield+1
  3684   00190A  C192  FFFD         	movff	??_yield,tosl	;volatile
  3685   00190E  C193  FFFE         	movff	??_yield+1,tosh	;volatile
  3686   001912  6AFF               	clrf	255,c	;volatile
  3687   001914                     i1l367:
  3688   001914  EE24  F085         	lfsr	2,_r_queue+537
  3689   001918  EE00 F002          	lfsr	0,2
  3690   00191C  50DE               	movf	postinc2,w,c
  3691   00191E  26E9               	addwf	fsr0l,f,c
  3692   001920  50DD               	movf	postdec2,w,c
  3693   001922  22EA               	addwfc	fsr0h,f,c
  3694   001924  0E01               	movlw	1
  3695   001926  6EEF               	movwf	indf0,c
  3696   001928                     i1l2299:
  3697                           
  3698                           ;kernel.c: 47:     (INTCONbits.GIE = 1);
  3699   001928  8EF2               	bsf	242,7,c	;volatile
  3700   00192A  0012               	return		;funcret
  3701   00192C                     __end_of_yield:
  3702                           	callstack 0
  3703                           
  3704 ;; *************** function _write_pipe *****************
  3705 ;; Defined at:
  3706 ;;		line 13 in file "pipe.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  p               2    9[BANK1 ] PTR struct pipe
  3709 ;;		 -> accel_pipe(20), 
  3710 ;;  data            1   11[BANK1 ] unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3722 ;;      Params:         0       0       3       0       0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3724 ;;      Temps:          0       0       3       0       0       0       0       0       0
  3725 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3726 ;;Total ram usage:        6 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; Hardware stack levels required when called: 8
  3729 ;; This function calls:
  3730 ;;		_sem_post
  3731 ;;		_sem_wait
  3732 ;; This function is called by:
  3733 ;;		_tarefa_acelerador
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text18
  3738   0020A4                     __ptext18:
  3739                           	callstack 0
  3740   0020A4                     _write_pipe:
  3741                           	callstack 16
  3742   0020A4                     
  3743                           ;pipe.c: 13: void write_pipe(pipe_t *p, uint8_t data);pipe.c: 14: {;pipe.c: 15:     (INT
      +                          CONbits.GIE = 0);
  3744   0020A4  9EF2               	bcf	242,7,c	;volatile
  3745   0020A6                     
  3746                           ;pipe.c: 16:     sem_wait(&p->pipe_sem_write);
  3747   0020A6  0E0C               	movlw	12
  3748   0020A8  0101               	movlb	1	; () banked
  3749   0020AA  2575               	addwf	write_pipe@p& (0+255),w,b
  3750   0020AC  6F80               	movwf	sem_wait@sem& (0+255),b
  3751   0020AE  0E00               	movlw	0
  3752   0020B0  2176               	addwfc	(write_pipe@p+1)& (0+255),w,b
  3753   0020B2  6F81               	movwf	(sem_wait@sem+1)& (0+255),b
  3754   0020B4  EC42  F007         	call	_sem_wait	;wreg free
  3755   0020B8                     
  3756                           ;pipe.c: 17:     p->pipe_msg[p->pipe_pos_write] = data;
  3757   0020B8  0101               	movlb	1	; () banked
  3758   0020BA  EE20 F003          	lfsr	2,3
  3759   0020BE  5175               	movf	write_pipe@p& (0+255),w,b
  3760   0020C0  26D9               	addwf	fsr2l,f,c
  3761   0020C2  5176               	movf	(write_pipe@p+1)& (0+255),w,b
  3762   0020C4  22DA               	addwfc	fsr2h,f,c
  3763   0020C6  50DF               	movf	indf2,w,c
  3764   0020C8  6F78               	movwf	??_write_pipe& (0+255),b
  3765   0020CA  C175  FFD9         	movff	write_pipe@p,fsr2l
  3766   0020CE  C176  FFDA         	movff	write_pipe@p+1,fsr2h
  3767   0020D2  CFDE F179          	movff	postinc2,??_write_pipe+1
  3768   0020D6  CFDD F17A          	movff	postdec2,??_write_pipe+2
  3769   0020DA  5178               	movf	??_write_pipe& (0+255),w,b
  3770   0020DC  2579               	addwf	(??_write_pipe+1)& (0+255),w,b
  3771   0020DE  6ED9               	movwf	fsr2l,c
  3772   0020E0  0E00               	movlw	0
  3773   0020E2  217A               	addwfc	(??_write_pipe+2)& (0+255),w,b
  3774   0020E4  6EDA               	movwf	fsr2h,c
  3775   0020E6  C177  FFDF         	movff	write_pipe@data,indf2
  3776   0020EA                     
  3777                           ; BSR set to: 1
  3778                           ;pipe.c: 18:     p->pipe_pos_write = (p->pipe_pos_write + 1) % 4;
  3779   0020EA  EE20 F003          	lfsr	2,3
  3780   0020EE  5175               	movf	write_pipe@p& (0+255),w,b
  3781   0020F0  26D9               	addwf	fsr2l,f,c
  3782   0020F2  5176               	movf	(write_pipe@p+1)& (0+255),w,b
  3783   0020F4  22DA               	addwfc	fsr2h,f,c
  3784   0020F6  EE00 F003          	lfsr	0,3
  3785   0020FA  5175               	movf	write_pipe@p& (0+255),w,b
  3786   0020FC  26E9               	addwf	fsr0l,f,c
  3787   0020FE  5176               	movf	(write_pipe@p+1)& (0+255),w,b
  3788   002100  22EA               	addwfc	fsr0h,f,c
  3789   002102  50EF               	movf	indf0,w,c
  3790   002104  6F78               	movwf	??_write_pipe& (0+255),b
  3791   002106  2978               	incf	??_write_pipe& (0+255),w,b
  3792   002108  0B03               	andlw	3
  3793   00210A  6EDF               	movwf	indf2,c
  3794   00210C                     
  3795                           ; BSR set to: 1
  3796                           ;pipe.c: 19:     sem_post(&p->pipe_sem_read);
  3797   00210C  0E04               	movlw	4
  3798   00210E  2575               	addwf	write_pipe@p& (0+255),w,b
  3799   002110  6F80               	movwf	sem_post@sem& (0+255),b
  3800   002112  0E00               	movlw	0
  3801   002114  2176               	addwfc	(write_pipe@p+1)& (0+255),w,b
  3802   002116  6F81               	movwf	(sem_post@sem+1)& (0+255),b
  3803   002118  EC7B  F00F         	call	_sem_post	;wreg free
  3804   00211C                     
  3805                           ;pipe.c: 20:     (INTCONbits.GIE = 1);
  3806   00211C  8EF2               	bsf	242,7,c	;volatile
  3807   00211E  0012               	return		;funcret
  3808   002120                     __end_of_write_pipe:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _sem_wait *****************
  3812 ;; Defined at:
  3813 ;;		line 18 in file "sync.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  sem             2   20[BANK1 ] PTR struct sem
  3816 ;;		 -> accel_pipe(20), 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3828 ;;      Params:         0       0       2       0       0       0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3830 ;;      Temps:          0       0       7       0       0       0       0       0       0
  3831 ;;      Totals:         0       0       9       0       0       0       0       0       0
  3832 ;;Total ram usage:        9 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 7
  3835 ;; This function calls:
  3836 ;;		_scheduler
  3837 ;; This function is called by:
  3838 ;;		_write_pipe
  3839 ;;		_read_pipe
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text19
  3844   000E84                     __ptext19:
  3845                           	callstack 0
  3846   000E84                     _sem_wait:
  3847                           	callstack 16
  3848   000E84                     
  3849                           ;sync.c: 18: void sem_wait(sem_t *sem);sync.c: 19: {;sync.c: 20:     (INTCONbits.GIE = 0
      +                          );
  3850   000E84  9EF2               	bcf	242,7,c	;volatile
  3851   000E86                     
  3852                           ;sync.c: 21:     sem->s_value--;
  3853   000E86  C180  FFD9         	movff	sem_wait@sem,fsr2l
  3854   000E8A  C181  FFDA         	movff	sem_wait@sem+1,fsr2h
  3855   000E8E  06DE               	decf	postinc2,f,c
  3856   000E90  0E00               	movlw	0
  3857   000E92  5ADD               	subwfb	postdec2,f,c
  3858                           
  3859                           ;sync.c: 22:     if (sem->s_value < 0)
  3860   000E94  C180  FFD9         	movff	sem_wait@sem,fsr2l
  3861   000E98  C181  FFDA         	movff	sem_wait@sem+1,fsr2h
  3862   000E9C  0E01               	movlw	1
  3863   000E9E  BEDB               	btfsc	plusw2,7,c
  3864   000EA0  EF56  F007         	goto	i1u103_20
  3865   000EA4  EF54  F007         	goto	i1u103_21
  3866   000EA8                     i1u103_21:
  3867   000EA8  EFBE  F008         	goto	i1l2109
  3868   000EAC                     i1u103_20:
  3869   000EAC                     
  3870                           ;sync.c: 23:     {;sync.c: 25:         sem->s_queue[sem->s_size] = r_queue.task_running;
  3871   000EAC  EE24  F083         	lfsr	2,_r_queue+535
  3872   000EB0  0101               	movlb	1	; () banked
  3873   000EB2  EE00 F006          	lfsr	0,6
  3874   000EB6  5180               	movf	sem_wait@sem& (0+255),w,b
  3875   000EB8  26E9               	addwf	fsr0l,f,c
  3876   000EBA  5181               	movf	(sem_wait@sem+1)& (0+255),w,b
  3877   000EBC  22EA               	addwfc	fsr0h,f,c
  3878   000EBE  50EF               	movf	indf0,w,c
  3879   000EC0  6F82               	movwf	??_sem_wait& (0+255),b
  3880   000EC2  5182               	movf	??_sem_wait& (0+255),w,b
  3881   000EC4  2580               	addwf	sem_wait@sem& (0+255),w,b
  3882   000EC6  6F83               	movwf	(??_sem_wait+1)& (0+255),b
  3883   000EC8  0E00               	movlw	0
  3884   000ECA  2181               	addwfc	(sem_wait@sem+1)& (0+255),w,b
  3885   000ECC  6F84               	movwf	(??_sem_wait+2)& (0+255),b
  3886   000ECE  0E02               	movlw	2
  3887   000ED0  2583               	addwf	(??_sem_wait+1)& (0+255),w,b
  3888   000ED2  6EE9               	movwf	fsr0l,c
  3889   000ED4  0E00               	movlw	0
  3890   000ED6  2184               	addwfc	(??_sem_wait+2)& (0+255),w,b
  3891   000ED8  6EEA               	movwf	fsr0h,c
  3892   000EDA  CFDF FFEF          	movff	indf2,indf0
  3893                           
  3894                           ;sync.c: 26:         sem->s_size = (sem->s_size + 1) % 4;
  3895   000EDE  EE20 F006          	lfsr	2,6
  3896   000EE2  5180               	movf	sem_wait@sem& (0+255),w,b
  3897   000EE4  26D9               	addwf	fsr2l,f,c
  3898   000EE6  5181               	movf	(sem_wait@sem+1)& (0+255),w,b
  3899   000EE8  22DA               	addwfc	fsr2h,f,c
  3900   000EEA  EE00 F006          	lfsr	0,6
  3901   000EEE  5180               	movf	sem_wait@sem& (0+255),w,b
  3902   000EF0  26E9               	addwf	fsr0l,f,c
  3903   000EF2  5181               	movf	(sem_wait@sem+1)& (0+255),w,b
  3904   000EF4  22EA               	addwfc	fsr0h,f,c
  3905   000EF6  50EF               	movf	indf0,w,c
  3906   000EF8  6F82               	movwf	??_sem_wait& (0+255),b
  3907   000EFA  2982               	incf	??_sem_wait& (0+255),w,b
  3908   000EFC  0B03               	andlw	3
  3909   000EFE  6EDF               	movwf	indf2,c
  3910   000F00                     
  3911                           ; BSR set to: 1
  3912   000F00  C483  F182         	movff	_r_queue+535,??_sem_wait
  3913   000F04  5182               	movf	??_sem_wait& (0+255),w,b
  3914   000F06  0D6B               	mullw	107
  3915   000F08  0E6C               	movlw	low _r_queue
  3916   000F0A  24F3               	addwf	243,w,c
  3917   000F0C  6F83               	movwf	(??_sem_wait+1)& (0+255),b
  3918   000F0E  0E02               	movlw	high _r_queue
  3919   000F10  20F4               	addwfc	prodh,w,c
  3920   000F12  6F84               	movwf	(??_sem_wait+2)& (0+255),b
  3921   000F14  C183  F485         	movff	??_sem_wait+1,_r_queue+537
  3922   000F18  C184  F486         	movff	??_sem_wait+2,_r_queue+538
  3923   000F1C                     
  3924                           ; BSR set to: 1
  3925   000F1C  EE24  F085         	lfsr	2,_r_queue+537
  3926   000F20  EE00 F002          	lfsr	0,2
  3927   000F24  50DE               	movf	postinc2,w,c
  3928   000F26  26E9               	addwf	fsr0l,f,c
  3929   000F28  50DD               	movf	postdec2,w,c
  3930   000F2A  22EA               	addwfc	fsr0h,f,c
  3931   000F2C  04EE               	decf	postinc0,w,c
  3932   000F2E  A4D8               	btfss	status,2,c
  3933   000F30  EF9C  F007         	goto	i1u104_21
  3934   000F34  EF9E  F007         	goto	i1u104_20
  3935   000F38                     i1u104_21:
  3936   000F38  EF0C  F008         	goto	i1l2091
  3937   000F3C                     i1u104_20:
  3938   000F3C                     
  3939                           ; BSR set to: 1
  3940   000F3C  EE24  F085         	lfsr	2,_r_queue+537
  3941   000F40  EE00 F009          	lfsr	0,9
  3942   000F44  50DE               	movf	postinc2,w,c
  3943   000F46  26E9               	addwf	fsr0l,f,c
  3944   000F48  50DD               	movf	postdec2,w,c
  3945   000F4A  22EA               	addwfc	fsr0h,f,c
  3946   000F4C  CFE0 FFEF          	movff	bsr,indf0	;volatile
  3947   000F50  EE24  F085         	lfsr	2,_r_queue+537
  3948   000F54  EE00 F008          	lfsr	0,8
  3949   000F58  50DE               	movf	postinc2,w,c
  3950   000F5A  26E9               	addwf	fsr0l,f,c
  3951   000F5C  50DD               	movf	postdec2,w,c
  3952   000F5E  22EA               	addwfc	fsr0h,f,c
  3953   000F60  CFD8 FFEF          	movff	status,indf0	;volatile
  3954   000F64  EE24  F085         	lfsr	2,_r_queue+537
  3955   000F68  EE00 F007          	lfsr	0,7
  3956   000F6C  50DE               	movf	postinc2,w,c
  3957   000F6E  26E9               	addwf	fsr0l,f,c
  3958   000F70  50DD               	movf	postdec2,w,c
  3959   000F72  22EA               	addwfc	fsr0h,f,c
  3960   000F74  CFE8 FFEF          	movff	wreg,indf0	;volatile
  3961   000F78  EE24  F085         	lfsr	2,_r_queue+537
  3962   000F7C  EE00 F06A          	lfsr	0,106
  3963   000F80  50DE               	movf	postinc2,w,c
  3964   000F82  26E9               	addwf	fsr0l,f,c
  3965   000F84  50DD               	movf	postdec2,w,c
  3966   000F86  22EA               	addwfc	fsr0h,f,c
  3967   000F88  6AEF               	clrf	indf0,c
  3968   000F8A  EE24  F085         	lfsr	2,_r_queue+537
  3969   000F8E  EE00 F002          	lfsr	0,2
  3970   000F92  50DE               	movf	postinc2,w,c
  3971   000F94  26E9               	addwf	fsr0l,f,c
  3972   000F96  50DD               	movf	postdec2,w,c
  3973   000F98  22EA               	addwfc	fsr0h,f,c
  3974   000F9A  0E03               	movlw	3
  3975   000F9C  6EEF               	movwf	indf0,c
  3976   000F9E  EF04  F008         	goto	i1l2089
  3977   000FA2                     i1l2085:
  3978   000FA2  EE24  F085         	lfsr	2,_r_queue+537
  3979   000FA6  EE00 F06A          	lfsr	0,106
  3980   000FAA  50DE               	movf	postinc2,w,c
  3981   000FAC  26E9               	addwf	fsr0l,f,c
  3982   000FAE  50DD               	movf	postdec2,w,c
  3983   000FB0  22EA               	addwfc	fsr0h,f,c
  3984   000FB2  50EF               	movf	indf0,w,c
  3985   000FB4  0101               	movlb	1	; () banked
  3986   000FB6  6F82               	movwf	??_sem_wait& (0+255),b
  3987   000FB8  5182               	movf	??_sem_wait& (0+255),w,b
  3988   000FBA  0D03               	mullw	3
  3989   000FBC  CFF3 F183          	movff	prodl,??_sem_wait+1
  3990   000FC0  CFF4 F184          	movff	prodh,??_sem_wait+2
  3991   000FC4  EE24  F085         	lfsr	2,_r_queue+537
  3992   000FC8  CFDE F185          	movff	postinc2,??_sem_wait+3
  3993   000FCC  CFDD F186          	movff	postdec2,??_sem_wait+4
  3994   000FD0  5183               	movf	(??_sem_wait+1)& (0+255),w,b
  3995   000FD2  2585               	addwf	(??_sem_wait+3)& (0+255),w,b
  3996   000FD4  6F87               	movwf	(??_sem_wait+5)& (0+255),b
  3997   000FD6  5184               	movf	(??_sem_wait+2)& (0+255),w,b
  3998   000FD8  2186               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3999   000FDA  6F88               	movwf	(??_sem_wait+6)& (0+255),b
  4000   000FDC  0E0A               	movlw	10
  4001   000FDE  2587               	addwf	(??_sem_wait+5)& (0+255),w,b
  4002   000FE0  6ED9               	movwf	fsr2l,c
  4003   000FE2  0E00               	movlw	0
  4004   000FE4  2188               	addwfc	(??_sem_wait+6)& (0+255),w,b
  4005   000FE6  6EDA               	movwf	fsr2h,c
  4006   000FE8  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4007   000FEC  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4008   000FF0  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4009   000FF4                     
  4010                           ; BSR set to: 1
  4011   000FF4  EE24  F085         	lfsr	2,_r_queue+537
  4012   000FF8  EE00 F06A          	lfsr	0,106
  4013   000FFC  50DE               	movf	postinc2,w,c
  4014   000FFE  26E9               	addwf	fsr0l,f,c
  4015   001000  50DD               	movf	postdec2,w,c
  4016   001002  22EA               	addwfc	fsr0h,f,c
  4017   001004  2AEF               	incf	indf0,f,c
  4018   001006  0006               	pop		;# 
  4019   001008                     i1l2089:
  4020   001008  50FC               	movf	252,w,c	;volatile
  4021   00100A  A4D8               	btfss	status,2,c
  4022   00100C  EF0A  F008         	goto	i1u105_21
  4023   001010  EF0C  F008         	goto	i1u105_20
  4024   001014                     i1u105_21:
  4025   001014  EFD1  F007         	goto	i1l2085
  4026   001018                     i1u105_20:
  4027   001018                     i1l2091:
  4028                           
  4029                           ;sync.c: 28:         scheduler();
  4030   001018  ECF4  F012         	call	_scheduler	;wreg free
  4031   00101C  C483  F182         	movff	_r_queue+535,??_sem_wait
  4032   001020  0101               	movlb	1	; () banked
  4033   001022  5182               	movf	??_sem_wait& (0+255),w,b
  4034   001024  0D6B               	mullw	107
  4035   001026  0E6C               	movlw	low _r_queue
  4036   001028  24F3               	addwf	243,w,c
  4037   00102A  6F83               	movwf	(??_sem_wait+1)& (0+255),b
  4038   00102C  0E02               	movlw	high _r_queue
  4039   00102E  20F4               	addwfc	prodh,w,c
  4040   001030  6F84               	movwf	(??_sem_wait+2)& (0+255),b
  4041   001032  C183  F485         	movff	??_sem_wait+1,_r_queue+537
  4042   001036  C184  F486         	movff	??_sem_wait+2,_r_queue+538
  4043   00103A                     
  4044                           ; BSR set to: 1
  4045   00103A  EE24  F085         	lfsr	2,_r_queue+537
  4046   00103E  EE00 F002          	lfsr	0,2
  4047   001042  50DE               	movf	postinc2,w,c
  4048   001044  26E9               	addwf	fsr0l,f,c
  4049   001046  50DD               	movf	postdec2,w,c
  4050   001048  22EA               	addwfc	fsr0h,f,c
  4051   00104A  50EF               	movf	indf0,w,c
  4052   00104C  A4D8               	btfss	status,2,c
  4053   00104E  EF2B  F008         	goto	i1u106_21
  4054   001052  EF2D  F008         	goto	i1u106_20
  4055   001056                     i1u106_21:
  4056   001056  EFBE  F008         	goto	i1l2109
  4057   00105A                     i1u106_20:
  4058   00105A                     
  4059                           ; BSR set to: 1
  4060   00105A  6AFC               	clrf	252,c	;volatile
  4061   00105C                     
  4062                           ; BSR set to: 1
  4063   00105C  EE24  F085         	lfsr	2,_r_queue+537
  4064   001060  EE00 F06A          	lfsr	0,106
  4065   001064  50DE               	movf	postinc2,w,c
  4066   001066  26E9               	addwf	fsr0l,f,c
  4067   001068  50DD               	movf	postdec2,w,c
  4068   00106A  22EA               	addwfc	fsr0h,f,c
  4069   00106C  50EF               	movf	indf0,w,c
  4070   00106E  B4D8               	btfsc	status,2,c
  4071   001070  EF3C  F008         	goto	i1u107_21
  4072   001074  EF3E  F008         	goto	i1u107_20
  4073   001078                     i1u107_21:
  4074   001078  EFA2  F008         	goto	i1l78
  4075   00107C                     i1u107_20:
  4076   00107C                     
  4077                           ; BSR set to: 1
  4078   00107C  EE24  F085         	lfsr	2,_r_queue+537
  4079   001080  EE00 F009          	lfsr	0,9
  4080   001084  50DE               	movf	postinc2,w,c
  4081   001086  26E9               	addwf	fsr0l,f,c
  4082   001088  50DD               	movf	postdec2,w,c
  4083   00108A  22EA               	addwfc	fsr0h,f,c
  4084   00108C  50EF               	movf	indf0,w,c
  4085   00108E  6EE0               	movwf	224,c	;volatile
  4086   001090  EE24  F085         	lfsr	2,_r_queue+537
  4087   001094  EE00 F008          	lfsr	0,8
  4088   001098  50DE               	movf	postinc2,w,c
  4089   00109A  26E9               	addwf	fsr0l,f,c
  4090   00109C  50DD               	movf	postdec2,w,c
  4091   00109E  22EA               	addwfc	fsr0h,f,c
  4092   0010A0  50EF               	movf	indf0,w,c
  4093   0010A2  6ED8               	movwf	216,c	;volatile
  4094   0010A4  EE24  F085         	lfsr	2,_r_queue+537
  4095   0010A8  EE00 F007          	lfsr	0,7
  4096   0010AC  50DE               	movf	postinc2,w,c
  4097   0010AE  26E9               	addwf	fsr0l,f,c
  4098   0010B0  50DD               	movf	postdec2,w,c
  4099   0010B2  22EA               	addwfc	fsr0h,f,c
  4100   0010B4  50EF               	movf	indf0,w,c
  4101   0010B6  6F82               	movwf	??_sem_wait& (0+255),b
  4102   0010B8  5182               	movf	??_sem_wait& (0+255),w,b
  4103   0010BA                     i1l79:
  4104                           
  4105                           ; BSR set to: 1
  4106   0010BA  0005               	push		;# 
  4107   0010BC  EE24  F085         	lfsr	2,_r_queue+537
  4108   0010C0  EE00 F06A          	lfsr	0,106
  4109   0010C4  50DE               	movf	postinc2,w,c
  4110   0010C6  26E9               	addwf	fsr0l,f,c
  4111   0010C8  50DD               	movf	postdec2,w,c
  4112   0010CA  22EA               	addwfc	fsr0h,f,c
  4113   0010CC  06EF               	decf	indf0,f,c
  4114   0010CE  EE24  F085         	lfsr	2,_r_queue+537
  4115   0010D2  EE00 F06A          	lfsr	0,106
  4116   0010D6  50DE               	movf	postinc2,w,c
  4117   0010D8  26E9               	addwf	fsr0l,f,c
  4118   0010DA  50DD               	movf	postdec2,w,c
  4119   0010DC  22EA               	addwfc	fsr0h,f,c
  4120   0010DE  50EF               	movf	indf0,w,c
  4121   0010E0  0101               	movlb	1	; () banked
  4122   0010E2  6F82               	movwf	??_sem_wait& (0+255),b
  4123   0010E4  5182               	movf	??_sem_wait& (0+255),w,b
  4124   0010E6  0D03               	mullw	3
  4125   0010E8  CFF3 F183          	movff	prodl,??_sem_wait+1
  4126   0010EC  CFF4 F184          	movff	prodh,??_sem_wait+2
  4127   0010F0  EE24  F085         	lfsr	2,_r_queue+537
  4128   0010F4  CFDE F185          	movff	postinc2,??_sem_wait+3
  4129   0010F8  CFDD F186          	movff	postdec2,??_sem_wait+4
  4130   0010FC  5183               	movf	(??_sem_wait+1)& (0+255),w,b
  4131   0010FE  2585               	addwf	(??_sem_wait+3)& (0+255),w,b
  4132   001100  6F87               	movwf	(??_sem_wait+5)& (0+255),b
  4133   001102  5184               	movf	(??_sem_wait+2)& (0+255),w,b
  4134   001104  2186               	addwfc	(??_sem_wait+4)& (0+255),w,b
  4135   001106  6F88               	movwf	(??_sem_wait+6)& (0+255),b
  4136   001108  0E0A               	movlw	10
  4137   00110A  2587               	addwf	(??_sem_wait+5)& (0+255),w,b
  4138   00110C  6ED9               	movwf	fsr2l,c
  4139   00110E  0E00               	movlw	0
  4140   001110  2188               	addwfc	(??_sem_wait+6)& (0+255),w,b
  4141   001112  6EDA               	movwf	fsr2h,c
  4142   001114  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4143   001118  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4144   00111C  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4145   001120                     
  4146                           ; BSR set to: 1
  4147   001120  EE24  F085         	lfsr	2,_r_queue+537
  4148   001124  EE00 F06A          	lfsr	0,106
  4149   001128  50DE               	movf	postinc2,w,c
  4150   00112A  26E9               	addwf	fsr0l,f,c
  4151   00112C  50DD               	movf	postdec2,w,c
  4152   00112E  22EA               	addwfc	fsr0h,f,c
  4153   001130  50EF               	movf	indf0,w,c
  4154   001132  A4D8               	btfss	status,2,c
  4155   001134  EF9E  F008         	goto	i1u108_21
  4156   001138  EFA0  F008         	goto	i1u108_20
  4157   00113C                     i1u108_21:
  4158   00113C  EF5D  F008         	goto	i1l79
  4159   001140                     i1u108_20:
  4160   001140  EFB4  F008         	goto	i1l81
  4161   001144                     i1l78:
  4162                           
  4163                           ; BSR set to: 1
  4164   001144  0005               	push		;# 
  4165   001146  EE24  F085         	lfsr	2,_r_queue+537
  4166   00114A  EE00 F003          	lfsr	0,3
  4167   00114E  50DE               	movf	postinc2,w,c
  4168   001150  26E9               	addwf	fsr0l,f,c
  4169   001152  50DD               	movf	postdec2,w,c
  4170   001154  22EA               	addwfc	fsr0h,f,c
  4171   001156  CFEE F182          	movff	postinc0,??_sem_wait
  4172   00115A  CFED F183          	movff	postdec0,??_sem_wait+1
  4173   00115E  C182  FFFD         	movff	??_sem_wait,tosl	;volatile
  4174   001162  C183  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  4175   001166  6AFF               	clrf	255,c	;volatile
  4176   001168                     i1l81:
  4177   001168  EE24  F085         	lfsr	2,_r_queue+537
  4178   00116C  EE00 F002          	lfsr	0,2
  4179   001170  50DE               	movf	postinc2,w,c
  4180   001172  26E9               	addwf	fsr0l,f,c
  4181   001174  50DD               	movf	postdec2,w,c
  4182   001176  22EA               	addwfc	fsr0h,f,c
  4183   001178  0E01               	movlw	1
  4184   00117A  6EEF               	movwf	indf0,c
  4185   00117C                     i1l2109:
  4186                           
  4187                           ;sync.c: 31:     (INTCONbits.GIE = 1);
  4188   00117C  8EF2               	bsf	242,7,c	;volatile
  4189   00117E  0012               	return		;funcret
  4190   001180                     __end_of_sem_wait:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _scheduler *****************
  4194 ;; Defined at:
  4195 ;;		line 10 in file "scheduler.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1  [STACK] void 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/1
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4212 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; Hardware stack levels required when called: 6
  4216 ;; This function calls:
  4217 ;;		_priority_scheduler
  4218 ;; This function is called by:
  4219 ;;		_sem_wait
  4220 ;;		_mutex_lock
  4221 ;;		_delay
  4222 ;;		_yield
  4223 ;;		_change_state
  4224 ;;		_ISR
  4225 ;; This function uses a reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text20
  4229   0025E8                     __ptext20:
  4230                           	callstack 0
  4231   0025E8                     _scheduler:
  4232                           	callstack 12
  4233   0025E8                     
  4234                           ;scheduler.c: 15:     priority_scheduler();
  4235   0025E8  EC96  F00C         	call	_priority_scheduler	;wreg free
  4236   0025EC                     
  4237                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4238   0025EC  0012               	return		;funcret
  4239   0025EE                     __end_of_scheduler:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _priority_scheduler *****************
  4243 ;; Defined at:
  4244 ;;		line 35 in file "scheduler.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  t               2  [STACK] PTR struct tcb
  4249 ;;		 -> r_queue$ready_queue(535), r_queue(539), 
  4250 ;;  idx             1  [STACK] unsigned char 
  4251 ;;  offset          1  [STACK] unsigned char 
  4252 ;;  i               1  [STACK] unsigned char 
  4253 ;;  highest         1  [STACK] unsigned char 
  4254 ;;  start           1  [STACK] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1  [STACK] void 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/1
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4264 ;;      Params:         0       0       0       0       0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4268 ;;Total ram usage:        0 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 5
  4271 ;; This function calls:
  4272 ;;		i2___awmod
  4273 ;; This function is called by:
  4274 ;;		_scheduler
  4275 ;; This function uses a reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text21
  4279   00192C                     __ptext21:
  4280                           	callstack 0
  4281   00192C                     _priority_scheduler:
  4282                           	callstack 0
  4283                           
  4284                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4285   00192C  0E07               	movlw	7
  4286   00192E  26E1               	addwf	fsr1l,f,c
  4287   001930  0E00               	movlw	0
  4288   001932  22E2               	addwfc	fsr1h,f,c
  4289   001934                     
  4290                           ;scheduler.c: 37:      uint8_t highest = 0xFF;
  4291   001934  0EFF               	movlw	255
  4292   001936  6E0C               	movwf	(btemp+11)^0,c
  4293                           
  4294                           ;stkvar	_highest @ sp[(-7)+5]
  4295   001938  0EFE               	movlw	-2
  4296   00193A  C00C  FFE3         	movff	btemp+11,plusw1
  4297   00193E                     
  4298                           ;scheduler.c: 39:     for (uint8_t i = 1; i < r_queue.ready_queue_size; i++) {
  4299                           ;stkvar	_i @ sp[(-7)+4]
  4300   00193E  0EFD               	movlw	-3
  4301   001940  6AE3               	clrf	plusw1,c
  4302   001942  2AE3               	incf	plusw1,f,c
  4303   001944  EFD8  F00C         	goto	l2049
  4304   001948                     l2041:
  4305                           
  4306                           ;scheduler.c: 40:         if (r_queue.ready_queue[i].task_state == READY &&
  4307                           ;stkvar	_i @ sp[(-7)+4]
  4308   001948  0EFD               	movlw	-3
  4309   00194A  50E3               	movf	plusw1,w,c
  4310   00194C  0D6B               	mullw	107
  4311   00194E  0E6E               	movlw	low (_r_queue+2)
  4312   001950  24F3               	addwf	243,w,c
  4313   001952  6ED9               	movwf	fsr2l,c
  4314   001954  0E02               	movlw	high (_r_queue+2)
  4315   001956  20F4               	addwfc	prodh,w,c
  4316   001958  6EDA               	movwf	fsr2h,c
  4317   00195A  50DF               	movf	indf2,w,c
  4318   00195C  A4D8               	btfss	status,2,c
  4319   00195E  EFB3  F00C         	goto	u97_21
  4320   001962  EFB5  F00C         	goto	u97_20
  4321   001966                     u97_21:
  4322   001966  EFD6  F00C         	goto	l2047
  4323   00196A                     u97_20:
  4324   00196A                     
  4325                           ;stkvar	_highest @ sp[(-7)+5]
  4326                           ;stkvar	_i @ sp[(-7)+4]
  4327   00196A  0EFD               	movlw	-3
  4328   00196C  50E3               	movf	plusw1,w,c
  4329   00196E  0D6B               	mullw	107
  4330   001970  0E6D               	movlw	low (_r_queue+1)
  4331   001972  24F3               	addwf	243,w,c
  4332   001974  6ED9               	movwf	fsr2l,c
  4333   001976  0E02               	movlw	high (_r_queue+1)
  4334   001978  20F4               	addwfc	prodh,w,c
  4335   00197A  6EDA               	movwf	fsr2h,c
  4336   00197C  0EFE               	movlw	-2
  4337   00197E  50E3               	movf	plusw1,w,c
  4338   001980  5CDE               	subwf	postinc2,w,c
  4339   001982  B0D8               	btfsc	status,0,c
  4340   001984  EFC6  F00C         	goto	u98_21
  4341   001988  EFC8  F00C         	goto	u98_20
  4342   00198C                     u98_21:
  4343   00198C  EFD6  F00C         	goto	l2047
  4344   001990                     u98_20:
  4345   001990                     
  4346                           ;scheduler.c: 41:             r_queue.ready_queue[i].task_priority < highest) {;schedule
      +                          r.c: 42:             highest = r_queue.ready_queue[i].task_priority;
  4347                           ;stkvar	_i @ sp[(-7)+4]
  4348   001990  0EFD               	movlw	-3
  4349   001992  50E3               	movf	plusw1,w,c
  4350   001994  0D6B               	mullw	107
  4351   001996  0E6D               	movlw	low (_r_queue+1)
  4352   001998  24F3               	addwf	243,w,c
  4353   00199A  6ED9               	movwf	fsr2l,c
  4354   00199C  0E02               	movlw	high (_r_queue+1)
  4355   00199E  20F4               	addwfc	prodh,w,c
  4356   0019A0  6EDA               	movwf	fsr2h,c
  4357   0019A2  50DF               	movf	indf2,w,c
  4358   0019A4  6E0C               	movwf	(btemp+11)^0,c
  4359                           
  4360                           ;stkvar	_highest @ sp[(-7)+5]
  4361   0019A6  0EFE               	movlw	-2
  4362   0019A8  C00C  FFE3         	movff	btemp+11,plusw1
  4363   0019AC                     l2047:
  4364                           
  4365                           ;scheduler.c: 44:     }
  4366                           ;stkvar	_i @ sp[(-7)+4]
  4367   0019AC  0EFD               	movlw	-3
  4368   0019AE  2AE3               	incf	plusw1,f,c
  4369   0019B0                     l2049:
  4370   0019B0  EE24  F084         	lfsr	2,_r_queue+536
  4371                           
  4372                           ;stkvar	_i @ sp[(-7)+4]
  4373   0019B4  0EFD               	movlw	-3
  4374   0019B6  CFE3 F001          	movff	plusw1,btemp
  4375   0019BA  50DE               	movf	postinc2,w,c
  4376   0019BC  5C01               	subwf	btemp^0,w,c
  4377   0019BE  A0D8               	btfss	status,0,c
  4378   0019C0  EFE4  F00C         	goto	u99_21
  4379   0019C4  EFE6  F00C         	goto	u99_20
  4380   0019C8                     u99_21:
  4381   0019C8  EFA4  F00C         	goto	l2041
  4382   0019CC                     u99_20:
  4383   0019CC                     
  4384                           ;scheduler.c: 46:     uint8_t start = (last_run_idx[highest] + 1) % r_queue.ready_queue_
      +                          size;
  4385                           ;stkvar	_highest @ sp[(-7)+5]
  4386   0019CC  0EFE               	movlw	-2
  4387   0019CE  CFE3 F00C          	movff	plusw1,btemp+11
  4388   0019D2  500C               	movf	(btemp+11)^0,w,c
  4389   0019D4  0F3E               	addlw	low _last_run_idx
  4390   0019D6  6ED9               	movwf	fsr2l,c
  4391   0019D8  6ADA               	clrf	fsr2h,c
  4392   0019DA  50DF               	movf	indf2,w,c
  4393   0019DC  6E0C               	movwf	(btemp+11)^0,c
  4394   0019DE  0E01               	movlw	1
  4395   0019E0  240C               	addwf	(btemp+11)^0,w,c
  4396   0019E2  6E21               	movwf	i2___awmod@dividend^0,c
  4397   0019E4  6A22               	clrf	(i2___awmod@dividend+1)^0,c
  4398   0019E6  0E00               	movlw	0
  4399   0019E8  2222               	addwfc	(i2___awmod@dividend+1)^0,f,c
  4400   0019EA  EE24  F084         	lfsr	2,_r_queue+536
  4401   0019EE  50DF               	movf	indf2,w,c
  4402   0019F0  6E23               	movwf	i2___awmod@divisor^0,c
  4403   0019F2  6A24               	clrf	(i2___awmod@divisor+1)^0,c
  4404   0019F4  ECD3  F00E         	call	i2___awmod	;wreg free
  4405   0019F8  C021  F00B         	movff	?i2___awmod,btemp+10
  4406   0019FC  C022  F00C         	movff	?i2___awmod+1,btemp+11
  4407                           
  4408                           ;stkvar	_start @ sp[(-7)+6]
  4409   001A00  0EFF               	movlw	-1
  4410   001A02  C00B  FFE3         	movff	btemp+10,plusw1
  4411   001A06                     
  4412                           ;scheduler.c: 47:     for (uint8_t offset = 0; offset < r_queue.ready_queue_size; offset
      +                          ++) {
  4413                           ;stkvar	_offset @ sp[(-7)+3]
  4414   001A06  0EFC               	movlw	-4
  4415   001A08  6AE3               	clrf	plusw1,c
  4416   001A0A  EF6A  F00D         	goto	l2071
  4417   001A0E                     l2055:
  4418                           
  4419                           ;scheduler.c: 48:         uint8_t idx = (start + offset) % r_queue.ready_queue_size;
  4420                           ;stkvar	_offset @ sp[(-7)+3]
  4421   001A0E  0EFC               	movlw	-4
  4422   001A10  CFE3 F00C          	movff	plusw1,btemp+11
  4423                           
  4424                           ;stkvar	_start @ sp[(-7)+6]
  4425   001A14  0EFF               	movlw	-1
  4426   001A16  50E3               	movf	plusw1,w,c
  4427   001A18  240C               	addwf	(btemp+11)^0,w,c
  4428   001A1A  6E21               	movwf	i2___awmod@dividend^0,c
  4429   001A1C  6A22               	clrf	(i2___awmod@dividend+1)^0,c
  4430   001A1E  3622               	rlcf	(i2___awmod@dividend+1)^0,f,c
  4431   001A20  EE24  F084         	lfsr	2,_r_queue+536
  4432   001A24  50DF               	movf	indf2,w,c
  4433   001A26  6E23               	movwf	i2___awmod@divisor^0,c
  4434   001A28  6A24               	clrf	(i2___awmod@divisor+1)^0,c
  4435   001A2A  ECD3  F00E         	call	i2___awmod	;wreg free
  4436   001A2E  C021  F00B         	movff	?i2___awmod,btemp+10
  4437   001A32  C022  F00C         	movff	?i2___awmod+1,btemp+11
  4438                           
  4439                           ;stkvar	_idx @ sp[(-7)+2]
  4440   001A36  0EFB               	movlw	-5
  4441   001A38  C00B  FFE3         	movff	btemp+10,plusw1
  4442   001A3C                     
  4443                           ;scheduler.c: 49:         tcb_t *t = &r_queue.ready_queue[idx];
  4444                           ;stkvar	_idx @ sp[(-7)+2]
  4445   001A3C  0EFB               	movlw	-5
  4446   001A3E  50E3               	movf	plusw1,w,c
  4447   001A40  0D6B               	mullw	107
  4448   001A42  0E6C               	movlw	low _r_queue
  4449   001A44  24F3               	addwf	243,w,c
  4450   001A46  6E0B               	movwf	(btemp+10)^0,c
  4451   001A48  0E02               	movlw	high _r_queue
  4452   001A4A  20F4               	addwfc	prodh,w,c
  4453   001A4C  6E0C               	movwf	(btemp+11)^0,c
  4454                           
  4455                           ;stkvar	_t @ sp[(-7)+0]
  4456   001A4E  0EFA               	movlw	-6
  4457   001A50  C00C  FFE3         	movff	btemp+11,plusw1
  4458   001A54  0EF9               	movlw	-7
  4459   001A56  C00B  FFE3         	movff	btemp+10,plusw1
  4460   001A5A                     
  4461                           ;scheduler.c: 50:         if (t->task_state == READY && t->task_priority == highest) {
  4462                           ;stkvar	_t @ sp[(-7)+0]
  4463   001A5A  0EF9               	movlw	-7
  4464   001A5C  CFE3 F00B          	movff	plusw1,btemp+10
  4465   001A60  0EFA               	movlw	-6
  4466   001A62  CFE3 F00C          	movff	plusw1,btemp+11
  4467   001A66  0E02               	movlw	2
  4468   001A68  240B               	addwf	(btemp+10)^0,w,c
  4469   001A6A  6ED9               	movwf	fsr2l,c
  4470   001A6C  0E00               	movlw	0
  4471   001A6E  200C               	addwfc	(btemp+11)^0,w,c
  4472   001A70  6EDA               	movwf	fsr2h,c
  4473   001A72  50DF               	movf	indf2,w,c
  4474   001A74  A4D8               	btfss	status,2,c
  4475   001A76  EF3F  F00D         	goto	u100_21
  4476   001A7A  EF41  F00D         	goto	u100_20
  4477   001A7E                     u100_21:
  4478   001A7E  EF68  F00D         	goto	l2069
  4479   001A82                     u100_20:
  4480   001A82                     
  4481                           ;stkvar	_highest @ sp[(-7)+5]
  4482                           ;stkvar	_t @ sp[(-7)+0]
  4483   001A82  0EF9               	movlw	-7
  4484   001A84  CFE3 F00B          	movff	plusw1,btemp+10
  4485   001A88  0EFA               	movlw	-6
  4486   001A8A  CFE3 F00C          	movff	plusw1,btemp+11
  4487   001A8E  0E01               	movlw	1
  4488   001A90  240B               	addwf	(btemp+10)^0,w,c
  4489   001A92  6ED9               	movwf	fsr2l,c
  4490   001A94  0E00               	movlw	0
  4491   001A96  200C               	addwfc	(btemp+11)^0,w,c
  4492   001A98  6EDA               	movwf	fsr2h,c
  4493   001A9A  0EFE               	movlw	-2
  4494   001A9C  50E3               	movf	plusw1,w,c
  4495   001A9E  18DE               	xorwf	postinc2,w,c
  4496   001AA0  A4D8               	btfss	status,2,c
  4497   001AA2  EF55  F00D         	goto	u101_21
  4498   001AA6  EF57  F00D         	goto	u101_20
  4499   001AAA                     u101_21:
  4500   001AAA  EF68  F00D         	goto	l2069
  4501   001AAE                     u101_20:
  4502   001AAE                     
  4503                           ;scheduler.c: 51:             r_queue.task_running = idx;
  4504                           ;stkvar	_idx @ sp[(-7)+2]
  4505   001AAE  0EFB               	movlw	-5
  4506   001AB0  CFE3 F00C          	movff	plusw1,btemp+11
  4507   001AB4  C00C  F483         	movff	btemp+11,_r_queue+535
  4508   001AB8                     
  4509                           ;scheduler.c: 52:             last_run_idx[highest] = idx;
  4510                           ;stkvar	_idx @ sp[(-7)+2]
  4511                           ;stkvar	_highest @ sp[(-7)+5]
  4512   001AB8  0EFE               	movlw	-2
  4513   001ABA  CFE3 F00C          	movff	plusw1,btemp+11
  4514   001ABE  500C               	movf	(btemp+11)^0,w,c
  4515   001AC0  0F3E               	addlw	low _last_run_idx
  4516   001AC2  6ED9               	movwf	fsr2l,c
  4517   001AC4  6ADA               	clrf	fsr2h,c
  4518   001AC6  0EFB               	movlw	-5
  4519   001AC8  CFE3 FFDF          	movff	plusw1,indf2
  4520   001ACC  EF7B  F00D         	goto	l46
  4521   001AD0                     l2069:
  4522                           
  4523                           ;scheduler.c: 55:     }
  4524                           ;stkvar	_offset @ sp[(-7)+3]
  4525   001AD0  0EFC               	movlw	-4
  4526   001AD2  2AE3               	incf	plusw1,f,c
  4527   001AD4                     l2071:
  4528   001AD4  EE24  F084         	lfsr	2,_r_queue+536
  4529                           
  4530                           ;stkvar	_offset @ sp[(-7)+3]
  4531   001AD8  0EFC               	movlw	-4
  4532   001ADA  CFE3 F001          	movff	plusw1,btemp
  4533   001ADE  50DE               	movf	postinc2,w,c
  4534   001AE0  5C01               	subwf	btemp^0,w,c
  4535   001AE2  A0D8               	btfss	status,0,c
  4536   001AE4  EF76  F00D         	goto	u102_21
  4537   001AE8  EF78  F00D         	goto	u102_20
  4538   001AEC                     u102_21:
  4539   001AEC  EF07  F00D         	goto	l2055
  4540   001AF0                     u102_20:
  4541   001AF0                     
  4542                           ;scheduler.c: 57:     r_queue.task_running = 0;
  4543   001AF0  0E00               	movlw	0
  4544   001AF2  CFE8 F483          	movff	wreg,_r_queue+535
  4545   001AF6                     l46:
  4546                           
  4547                           ; _priority_scheduler: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  4548   001AF6  0EF9               	movlw	249
  4549   001AF8  26E1               	addwf	fsr1l,f,c
  4550   001AFA  0EFF               	movlw	255
  4551   001AFC  22E2               	addwfc	fsr1h,f,c
  4552   001AFE  0012               	return		;funcret
  4553   001B00                     __end_of_priority_scheduler:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function ___awmod *****************
  4557 ;; Defined at:
  4558 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  dividend        2   48[BANK1 ] int 
  4561 ;;  divisor         2   50[BANK1 ] int 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  sign            1   53[BANK1 ] unsigned char 
  4564 ;;  counter         1   52[BANK1 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2   48[BANK1 ] int 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         0       0       4       0       0       0       0       0       0
  4575 ;;      Locals:         0       0       2       0       0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4578 ;;Total ram usage:        6 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 4
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_tarefa_controle_central
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text22
  4589   001CF6                     __ptext22:
  4590                           	callstack 0
  4591   001CF6                     ___awmod:
  4592                           	callstack 20
  4593   001CF6  0101               	movlb	1	; () banked
  4594   001CF8  6BA1               	clrf	___awmod@sign& (0+255),b
  4595   001CFA                     
  4596                           ; BSR set to: 1
  4597   001CFA  BF9D               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4598   001CFC  EF84  F00E         	goto	i1u180_20
  4599   001D00  EF82  F00E         	goto	i1u180_21
  4600   001D04                     i1u180_21:
  4601   001D04  EF8A  F00E         	goto	i1l2941
  4602   001D08                     i1u180_20:
  4603   001D08                     
  4604                           ; BSR set to: 1
  4605   001D08  6D9C               	negf	___awmod@dividend& (0+255),b
  4606   001D0A  1F9D               	comf	(___awmod@dividend+1)& (0+255),f,b
  4607   001D0C  B0D8               	btfsc	status,0,c
  4608   001D0E  2B9D               	incf	(___awmod@dividend+1)& (0+255),f,b
  4609   001D10                     
  4610                           ; BSR set to: 1
  4611   001D10  0E01               	movlw	1
  4612   001D12  6FA1               	movwf	___awmod@sign& (0+255),b
  4613   001D14                     i1l2941:
  4614                           
  4615                           ; BSR set to: 1
  4616   001D14  BF9F               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4617   001D16  EF91  F00E         	goto	i1u181_20
  4618   001D1A  EF8F  F00E         	goto	i1u181_21
  4619   001D1E                     i1u181_21:
  4620   001D1E  EF95  F00E         	goto	i1l2945
  4621   001D22                     i1u181_20:
  4622   001D22                     
  4623                           ; BSR set to: 1
  4624   001D22  6D9E               	negf	___awmod@divisor& (0+255),b
  4625   001D24  1F9F               	comf	(___awmod@divisor+1)& (0+255),f,b
  4626   001D26  B0D8               	btfsc	status,0,c
  4627   001D28  2B9F               	incf	(___awmod@divisor+1)& (0+255),f,b
  4628   001D2A                     i1l2945:
  4629                           
  4630                           ; BSR set to: 1
  4631   001D2A  519E               	movf	___awmod@divisor& (0+255),w,b
  4632   001D2C  119F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4633   001D2E  B4D8               	btfsc	status,2,c
  4634   001D30  EF9C  F00E         	goto	i1u182_21
  4635   001D34  EF9E  F00E         	goto	i1u182_20
  4636   001D38                     i1u182_21:
  4637   001D38  EFC2  F00E         	goto	i1l2961
  4638   001D3C                     i1u182_20:
  4639   001D3C                     
  4640                           ; BSR set to: 1
  4641   001D3C  0E01               	movlw	1
  4642   001D3E  6FA0               	movwf	___awmod@counter& (0+255),b
  4643   001D40  EFA6  F00E         	goto	i1l2951
  4644   001D44                     i1l2949:
  4645                           
  4646                           ; BSR set to: 1
  4647   001D44  90D8               	bcf	status,0,c
  4648   001D46  379E               	rlcf	___awmod@divisor& (0+255),f,b
  4649   001D48  379F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4650   001D4A  2BA0               	incf	___awmod@counter& (0+255),f,b
  4651   001D4C                     i1l2951:
  4652                           
  4653                           ; BSR set to: 1
  4654   001D4C  AF9F               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4655   001D4E  EFAB  F00E         	goto	i1u183_21
  4656   001D52  EFAD  F00E         	goto	i1u183_20
  4657   001D56                     i1u183_21:
  4658   001D56  EFA2  F00E         	goto	i1l2949
  4659   001D5A                     i1u183_20:
  4660   001D5A                     i1l2953:
  4661                           
  4662                           ; BSR set to: 1
  4663   001D5A  519E               	movf	___awmod@divisor& (0+255),w,b
  4664   001D5C  5D9C               	subwf	___awmod@dividend& (0+255),w,b
  4665   001D5E  519F               	movf	(___awmod@divisor+1)& (0+255),w,b
  4666   001D60  599D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4667   001D62  A0D8               	btfss	status,0,c
  4668   001D64  EFB6  F00E         	goto	i1u184_21
  4669   001D68  EFB8  F00E         	goto	i1u184_20
  4670   001D6C                     i1u184_21:
  4671   001D6C  EFBC  F00E         	goto	i1l2957
  4672   001D70                     i1u184_20:
  4673   001D70                     
  4674                           ; BSR set to: 1
  4675   001D70  519E               	movf	___awmod@divisor& (0+255),w,b
  4676   001D72  5F9C               	subwf	___awmod@dividend& (0+255),f,b
  4677   001D74  519F               	movf	(___awmod@divisor+1)& (0+255),w,b
  4678   001D76  5B9D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4679   001D78                     i1l2957:
  4680                           
  4681                           ; BSR set to: 1
  4682   001D78  90D8               	bcf	status,0,c
  4683   001D7A  339F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4684   001D7C  339E               	rrcf	___awmod@divisor& (0+255),f,b
  4685   001D7E                     
  4686                           ; BSR set to: 1
  4687   001D7E  2FA0               	decfsz	___awmod@counter& (0+255),f,b
  4688   001D80  EFAD  F00E         	goto	i1l2953
  4689   001D84                     i1l2961:
  4690                           
  4691                           ; BSR set to: 1
  4692   001D84  51A1               	movf	___awmod@sign& (0+255),w,b
  4693   001D86  B4D8               	btfsc	status,2,c
  4694   001D88  EFC8  F00E         	goto	i1u185_21
  4695   001D8C  EFCA  F00E         	goto	i1u185_20
  4696   001D90                     i1u185_21:
  4697   001D90  EFCE  F00E         	goto	i1l2965
  4698   001D94                     i1u185_20:
  4699   001D94                     
  4700                           ; BSR set to: 1
  4701   001D94  6D9C               	negf	___awmod@dividend& (0+255),b
  4702   001D96  1F9D               	comf	(___awmod@dividend+1)& (0+255),f,b
  4703   001D98  B0D8               	btfsc	status,0,c
  4704   001D9A  2B9D               	incf	(___awmod@dividend+1)& (0+255),f,b
  4705   001D9C                     i1l2965:
  4706                           
  4707                           ; BSR set to: 1
  4708   001D9C  C19C  F19C         	movff	___awmod@dividend,?___awmod
  4709   001DA0  C19D  F19D         	movff	___awmod@dividend+1,?___awmod+1
  4710   001DA4                     
  4711                           ; BSR set to: 1
  4712   001DA4  0012               	return		;funcret
  4713   001DA6                     __end_of___awmod:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function _sem_post *****************
  4717 ;; Defined at:
  4718 ;;		line 34 in file "sync.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  sem             2   20[BANK1 ] PTR struct sem
  4721 ;;		 -> accel_pipe(20), 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;		None
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4733 ;;      Params:         0       0       2       0       0       0       0       0       0
  4734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4735 ;;      Temps:          0       0       4       0       0       0       0       0       0
  4736 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4737 ;;Total ram usage:        6 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 4
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_write_pipe
  4744 ;;		_read_pipe
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text23
  4749   001EF6                     __ptext23:
  4750                           	callstack 0
  4751   001EF6                     _sem_post:
  4752                           	callstack 19
  4753   001EF6                     
  4754                           ;sync.c: 34: void sem_post(sem_t *sem);sync.c: 35: {;sync.c: 36:     (INTCONbits.GIE = 0
      +                          );
  4755   001EF6  9EF2               	bcf	242,7,c	;volatile
  4756   001EF8                     
  4757                           ;sync.c: 37:     sem->s_value++;
  4758   001EF8  C180  FFD9         	movff	sem_post@sem,fsr2l
  4759   001EFC  C181  FFDA         	movff	sem_post@sem+1,fsr2h
  4760   001F00  2ADE               	incf	postinc2,f,c
  4761   001F02  0E00               	movlw	0
  4762   001F04  22DD               	addwfc	postdec2,f,c
  4763                           
  4764                           ;sync.c: 38:     if (sem->s_value <= 0)
  4765   001F06  C180  FFD9         	movff	sem_post@sem,fsr2l
  4766   001F0A  C181  FFDA         	movff	sem_post@sem+1,fsr2h
  4767   001F0E  0E01               	movlw	1
  4768   001F10  BEDB               	btfsc	plusw2,7,c
  4769   001F12  EF96  F00F         	goto	i1u179_20
  4770   001F16  0E01               	movlw	1
  4771   001F18  50DB               	movf	plusw2,w,c
  4772   001F1A  E106               	bnz	i1u179_21
  4773   001F1C  04DE               	decf	postinc2,w,c
  4774   001F1E  B0D8               	btfsc	status,0,c
  4775   001F20  EF94  F00F         	goto	i1u179_21
  4776   001F24  EF96  F00F         	goto	i1u179_20
  4777   001F28                     i1u179_21:
  4778   001F28  EFC7  F00F         	goto	i1l2899
  4779   001F2C                     i1u179_20:
  4780   001F2C                     
  4781                           ;sync.c: 39:     {;sync.c: 41:         r_queue.ready_queue[sem->s_queue[sem->s_pos_out]]
      +                          .task_state = READY;
  4782   001F2C  0101               	movlb	1	; () banked
  4783   001F2E  EE20 F007          	lfsr	2,7
  4784   001F32  5180               	movf	sem_post@sem& (0+255),w,b
  4785   001F34  26D9               	addwf	fsr2l,f,c
  4786   001F36  5181               	movf	(sem_post@sem+1)& (0+255),w,b
  4787   001F38  22DA               	addwfc	fsr2h,f,c
  4788   001F3A  50DF               	movf	indf2,w,c
  4789   001F3C  6F82               	movwf	??_sem_post& (0+255),b
  4790   001F3E  5182               	movf	??_sem_post& (0+255),w,b
  4791   001F40  2580               	addwf	sem_post@sem& (0+255),w,b
  4792   001F42  6F83               	movwf	(??_sem_post+1)& (0+255),b
  4793   001F44  0E00               	movlw	0
  4794   001F46  2181               	addwfc	(sem_post@sem+1)& (0+255),w,b
  4795   001F48  6F84               	movwf	(??_sem_post+2)& (0+255),b
  4796   001F4A  0E02               	movlw	2
  4797   001F4C  2583               	addwf	(??_sem_post+1)& (0+255),w,b
  4798   001F4E  6ED9               	movwf	fsr2l,c
  4799   001F50  0E00               	movlw	0
  4800   001F52  2184               	addwfc	(??_sem_post+2)& (0+255),w,b
  4801   001F54  6EDA               	movwf	fsr2h,c
  4802   001F56  50DF               	movf	indf2,w,c
  4803   001F58  6F85               	movwf	(??_sem_post+3)& (0+255),b
  4804   001F5A  5185               	movf	(??_sem_post+3)& (0+255),w,b
  4805   001F5C  0D6B               	mullw	107
  4806   001F5E  0E6E               	movlw	low (_r_queue+2)
  4807   001F60  24F3               	addwf	243,w,c
  4808   001F62  6ED9               	movwf	fsr2l,c
  4809   001F64  0E02               	movlw	high (_r_queue+2)
  4810   001F66  20F4               	addwfc	prodh,w,c
  4811   001F68  6EDA               	movwf	fsr2h,c
  4812   001F6A  6ADF               	clrf	indf2,c
  4813   001F6C                     
  4814                           ; BSR set to: 1
  4815                           ;sync.c: 42:         sem->s_pos_out = (sem->s_pos_out + 1) % 4;
  4816   001F6C  EE20 F007          	lfsr	2,7
  4817   001F70  5180               	movf	sem_post@sem& (0+255),w,b
  4818   001F72  26D9               	addwf	fsr2l,f,c
  4819   001F74  5181               	movf	(sem_post@sem+1)& (0+255),w,b
  4820   001F76  22DA               	addwfc	fsr2h,f,c
  4821   001F78  EE00 F007          	lfsr	0,7
  4822   001F7C  5180               	movf	sem_post@sem& (0+255),w,b
  4823   001F7E  26E9               	addwf	fsr0l,f,c
  4824   001F80  5181               	movf	(sem_post@sem+1)& (0+255),w,b
  4825   001F82  22EA               	addwfc	fsr0h,f,c
  4826   001F84  50EF               	movf	indf0,w,c
  4827   001F86  6F82               	movwf	??_sem_post& (0+255),b
  4828   001F88  2982               	incf	??_sem_post& (0+255),w,b
  4829   001F8A  0B03               	andlw	3
  4830   001F8C  6EDF               	movwf	indf2,c
  4831   001F8E                     i1l2899:
  4832                           
  4833                           ;sync.c: 44:     (INTCONbits.GIE = 1);
  4834   001F8E  8EF2               	bsf	242,7,c	;volatile
  4835   001F90  0012               	return		;funcret
  4836   001F92                     __end_of_sem_post:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _adc_read *****************
  4840 ;; Defined at:
  4841 ;;		line 17 in file "io.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2   25[COMRAM] unsigned short 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4855 ;;      Params:         2       0       0       0       0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4857 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4858 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4859 ;;Total ram usage:        4 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 4
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_tarefa_acelerador
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text24
  4870   00256A                     __ptext24:
  4871                           	callstack 0
  4872   00256A                     _adc_read:
  4873                           	callstack 20
  4874   00256A                     
  4875                           ;io.c: 19:     ADCON0bits.GO = 1;
  4876   00256A  82C2               	bsf	194,1,c	;volatile
  4877   00256C                     i1l214:
  4878   00256C  B2C2               	btfsc	194,1,c	;volatile
  4879   00256E  EFBB  F012         	goto	i1u118_21
  4880   002572  EFBD  F012         	goto	i1u118_20
  4881   002576                     i1u118_21:
  4882   002576  EFB6  F012         	goto	i1l214
  4883   00257A                     i1u118_20:
  4884   00257A                     
  4885                           ;io.c: 21:     return ((uint16_t)ADRESH << 8) | ADRESL;
  4886   00257A  50C4               	movf	196,w,c	;volatile
  4887   00257C  6E3C               	movwf	??_adc_read^0,c
  4888   00257E  50C3               	movf	195,w,c	;volatile
  4889   002580  6E3A               	movwf	?_adc_read^0,c
  4890   002582  C03C  F03B         	movff	??_adc_read,?_adc_read+1
  4891   002586  0012               	return		;funcret
  4892   002588                     __end_of_adc_read:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _tarefa_controle_central *****************
  4896 ;; Defined at:
  4897 ;;		line 31 in file "user_app.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  data            1   37[BANK1 ] unsigned char 
  4902 ;;  duty            1   36[BANK1 ] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0
  4913 ;;      Locals:         0       0       2       0       0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4915 ;;      Totals:         0       0       2       0       0       0       0       0       0
  4916 ;;Total ram usage:        2 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 9
  4919 ;; This function calls:
  4920 ;;		___awmod
  4921 ;;		_mutex_lock
  4922 ;;		_mutex_unlock
  4923 ;;		_read_pipe
  4924 ;;		_yield
  4925 ;; This function is called by:
  4926 ;;		_main
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text25
  4931   002258                     __ptext25:
  4932                           	callstack 0
  4933   002258                     _tarefa_controle_central:
  4934                           	callstack 16
  4935   002258                     l282:
  4936                           
  4937                           ;user_app.c: 34:     {;user_app.c: 35:         LATDbits.LATD2 = 1;
  4938   002258  848C               	bsf	140,2,c	;volatile
  4939   00225A                     
  4940                           ;user_app.c: 36:         uint8_t data;;user_app.c: 37:         read_pipe(&accel_pipe, &d
      +                          ata);
  4941   00225A  0E51               	movlw	low _accel_pipe
  4942   00225C  0101               	movlb	1	; () banked
  4943   00225E  6F89               	movwf	read_pipe@p& (0+255),b
  4944   002260  0E01               	movlw	high _accel_pipe
  4945   002262  6F8A               	movwf	(read_pipe@p+1)& (0+255),b
  4946   002264  0E91               	movlw	low tarefa_controle_central@data
  4947   002266  6F8B               	movwf	read_pipe@data& (0+255),b
  4948   002268  0E01               	movlw	high tarefa_controle_central@data
  4949   00226A  6F8C               	movwf	(read_pipe@data+1)& (0+255),b
  4950   00226C  EC10  F010         	call	_read_pipe	;wreg free
  4951   002270                     
  4952                           ;user_app.c: 38:         uint8_t duty = data % 100;
  4953   002270  C191  F19C         	movff	tarefa_controle_central@data,___awmod@dividend
  4954   002274  0101               	movlb	1	; () banked
  4955   002276  6B9D               	clrf	(___awmod@dividend+1)& (0+255),b
  4956   002278  0E00               	movlw	0
  4957   00227A  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  4958   00227C  0E64               	movlw	100
  4959   00227E  6F9E               	movwf	___awmod@divisor& (0+255),b
  4960   002280  EC7B  F00E         	call	___awmod	;wreg free
  4961   002284  0101               	movlb	1	; () banked
  4962   002286  519C               	movf	?___awmod& (0+255),w,b
  4963   002288  6F90               	movwf	tarefa_controle_central@duty& (0+255),b
  4964   00228A                     
  4965                           ; BSR set to: 1
  4966                           ;user_app.c: 39:         mutex_lock(&buffer_mutex);
  4967   00228A  0E65               	movlw	low _buffer_mutex
  4968   00228C  6F92               	movwf	mutex_lock@m& (0+255),b
  4969   00228E  0E01               	movlw	high _buffer_mutex
  4970   002290  6F93               	movwf	(mutex_lock@m+1)& (0+255),b
  4971   002292  ECC3  F005         	call	_mutex_lock	;wreg free
  4972   002296                     
  4973                           ;user_app.c: 40:         accel_data = duty;
  4974   002296  C190  F100         	movff	tarefa_controle_central@duty,_accel_data	;volatile
  4975   00229A                     
  4976                           ;user_app.c: 41:         mutex_unlock(&buffer_mutex);
  4977   00229A  0E65               	movlw	low _buffer_mutex
  4978   00229C  0101               	movlb	1	; () banked
  4979   00229E  6F92               	movwf	mutex_unlock@m& (0+255),b
  4980   0022A0  0E01               	movlw	high _buffer_mutex
  4981   0022A2  6F93               	movwf	(mutex_unlock@m+1)& (0+255),b
  4982   0022A4  EC2A  F00F         	call	_mutex_unlock	;wreg free
  4983   0022A8                     
  4984                           ;user_app.c: 42:         LATDbits.LATD2 = 0;
  4985   0022A8  948C               	bcf	140,2,c	;volatile
  4986   0022AA                     
  4987                           ;user_app.c: 43:         yield();
  4988   0022AA  EC55  F00B         	call	_yield	;wreg free
  4989   0022AE  EF2C  F011         	goto	l282
  4990   0022B2  0012               	return		;funcret
  4991   0022B4                     __end_of_tarefa_controle_central:
  4992                           	callstack 0
  4993                           
  4994 ;; *************** function _read_pipe *****************
  4995 ;; Defined at:
  4996 ;;		line 23 in file "pipe.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  p               2   29[BANK1 ] PTR struct pipe
  4999 ;;		 -> accel_pipe(20), 
  5000 ;;  data            2   31[BANK1 ] PTR unsigned char 
  5001 ;;		 -> tarefa_controle_central@data(1), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5013 ;;      Params:         0       0       4       0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5015 ;;      Temps:          0       0       3       0       0       0       0       0       0
  5016 ;;      Totals:         0       0       7       0       0       0       0       0       0
  5017 ;;Total ram usage:        7 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 8
  5020 ;; This function calls:
  5021 ;;		_sem_post
  5022 ;;		_sem_wait
  5023 ;; This function is called by:
  5024 ;;		_tarefa_controle_central
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text26
  5029   002020                     __ptext26:
  5030                           	callstack 0
  5031   002020                     _read_pipe:
  5032                           	callstack 16
  5033   002020                     
  5034                           ;pipe.c: 23: void read_pipe(pipe_t *p, uint8_t *data);pipe.c: 24: {;pipe.c: 25:     (INT
      +                          CONbits.GIE = 0);
  5035   002020  9EF2               	bcf	242,7,c	;volatile
  5036   002022                     
  5037                           ;pipe.c: 26:     sem_wait(&p->pipe_sem_read);
  5038   002022  0E04               	movlw	4
  5039   002024  0101               	movlb	1	; () banked
  5040   002026  2589               	addwf	read_pipe@p& (0+255),w,b
  5041   002028  6F80               	movwf	sem_wait@sem& (0+255),b
  5042   00202A  0E00               	movlw	0
  5043   00202C  218A               	addwfc	(read_pipe@p+1)& (0+255),w,b
  5044   00202E  6F81               	movwf	(sem_wait@sem+1)& (0+255),b
  5045   002030  EC42  F007         	call	_sem_wait	;wreg free
  5046   002034                     
  5047                           ;pipe.c: 27:     *data = p->pipe_msg[p->pipe_pos_read];
  5048   002034  0101               	movlb	1	; () banked
  5049   002036  EE20 F002          	lfsr	2,2
  5050   00203A  5189               	movf	read_pipe@p& (0+255),w,b
  5051   00203C  26D9               	addwf	fsr2l,f,c
  5052   00203E  518A               	movf	(read_pipe@p+1)& (0+255),w,b
  5053   002040  22DA               	addwfc	fsr2h,f,c
  5054   002042  50DF               	movf	indf2,w,c
  5055   002044  6F8D               	movwf	??_read_pipe& (0+255),b
  5056   002046  C189  FFD9         	movff	read_pipe@p,fsr2l
  5057   00204A  C18A  FFDA         	movff	read_pipe@p+1,fsr2h
  5058   00204E  CFDE F18E          	movff	postinc2,??_read_pipe+1
  5059   002052  CFDD F18F          	movff	postdec2,??_read_pipe+2
  5060   002056  518D               	movf	??_read_pipe& (0+255),w,b
  5061   002058  258E               	addwf	(??_read_pipe+1)& (0+255),w,b
  5062   00205A  6ED9               	movwf	fsr2l,c
  5063   00205C  0E00               	movlw	0
  5064   00205E  218F               	addwfc	(??_read_pipe+2)& (0+255),w,b
  5065   002060  6EDA               	movwf	fsr2h,c
  5066   002062  C18B  FFE9         	movff	read_pipe@data,fsr0l
  5067   002066  C18C  FFEA         	movff	read_pipe@data+1,fsr0h
  5068   00206A  CFDF FFEF          	movff	indf2,indf0
  5069   00206E                     
  5070                           ; BSR set to: 1
  5071                           ;pipe.c: 28:     p->pipe_pos_read = (p->pipe_pos_read + 1) % 4;
  5072   00206E  EE20 F002          	lfsr	2,2
  5073   002072  5189               	movf	read_pipe@p& (0+255),w,b
  5074   002074  26D9               	addwf	fsr2l,f,c
  5075   002076  518A               	movf	(read_pipe@p+1)& (0+255),w,b
  5076   002078  22DA               	addwfc	fsr2h,f,c
  5077   00207A  EE00 F002          	lfsr	0,2
  5078   00207E  5189               	movf	read_pipe@p& (0+255),w,b
  5079   002080  26E9               	addwf	fsr0l,f,c
  5080   002082  518A               	movf	(read_pipe@p+1)& (0+255),w,b
  5081   002084  22EA               	addwfc	fsr0h,f,c
  5082   002086  50EF               	movf	indf0,w,c
  5083   002088  6F8D               	movwf	??_read_pipe& (0+255),b
  5084   00208A  298D               	incf	??_read_pipe& (0+255),w,b
  5085   00208C  0B03               	andlw	3
  5086   00208E  6EDF               	movwf	indf2,c
  5087   002090                     
  5088                           ; BSR set to: 1
  5089                           ;pipe.c: 29:     sem_post(&p->pipe_sem_write);
  5090   002090  0E0C               	movlw	12
  5091   002092  2589               	addwf	read_pipe@p& (0+255),w,b
  5092   002094  6F80               	movwf	sem_post@sem& (0+255),b
  5093   002096  0E00               	movlw	0
  5094   002098  218A               	addwfc	(read_pipe@p+1)& (0+255),w,b
  5095   00209A  6F81               	movwf	(sem_post@sem+1)& (0+255),b
  5096   00209C  EC7B  F00F         	call	_sem_post	;wreg free
  5097   0020A0                     
  5098                           ;pipe.c: 30:     (INTCONbits.GIE = 1);
  5099   0020A0  8EF2               	bsf	242,7,c	;volatile
  5100   0020A2  0012               	return		;funcret
  5101   0020A4                     __end_of_read_pipe:
  5102                           	callstack 0
  5103                           
  5104 ;; *************** function _mutex_unlock *****************
  5105 ;; Defined at:
  5106 ;;		line 75 in file "sync.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  m               2   38[BANK1 ] PTR struct mutex
  5109 ;;		 -> buffer_mutex(7), 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  tid             1   43[BANK1 ] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5121 ;;      Params:         0       0       2       0       0       0       0       0       0
  5122 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5123 ;;      Temps:          0       0       3       0       0       0       0       0       0
  5124 ;;      Totals:         0       0       6       0       0       0       0       0       0
  5125 ;;Total ram usage:        6 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 4
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_tarefa_controle_central
  5132 ;;		_tarefa_injecao_eletronica
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text27
  5137   001E54                     __ptext27:
  5138                           	callstack 0
  5139   001E54                     _mutex_unlock:
  5140                           	callstack 20
  5141   001E54                     
  5142                           ;sync.c: 75: void mutex_unlock(mutex_t *m);sync.c: 76: {;sync.c: 77:     (INTCONbits.GIE
      +                           = 0);
  5143   001E54  9EF2               	bcf	242,7,c	;volatile
  5144   001E56                     
  5145                           ;sync.c: 78:     if (m->s_pos_out != m->s_size)
  5146   001E56  0101               	movlb	1	; () banked
  5147   001E58  EE20 F005          	lfsr	2,5
  5148   001E5C  5192               	movf	mutex_unlock@m& (0+255),w,b
  5149   001E5E  26D9               	addwf	fsr2l,f,c
  5150   001E60  5193               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5151   001E62  22DA               	addwfc	fsr2h,f,c
  5152   001E64  EE00 F006          	lfsr	0,6
  5153   001E68  5192               	movf	mutex_unlock@m& (0+255),w,b
  5154   001E6A  26E9               	addwf	fsr0l,f,c
  5155   001E6C  5193               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5156   001E6E  22EA               	addwfc	fsr0h,f,c
  5157   001E70  50DE               	movf	postinc2,w,c
  5158   001E72  18EE               	xorwf	postinc0,w,c
  5159   001E74  B4D8               	btfsc	status,2,c
  5160   001E76  EF3F  F00F         	goto	i1u117_21
  5161   001E7A  EF41  F00F         	goto	i1u117_20
  5162   001E7E                     i1u117_21:
  5163   001E7E  EF73  F00F         	goto	i1l2223
  5164   001E82                     i1u117_20:
  5165   001E82                     
  5166                           ; BSR set to: 1
  5167                           ;sync.c: 79:     {;sync.c: 81:         uint8_t tid = m->s_queue[m->s_pos_out];
  5168   001E82  EE20 F006          	lfsr	2,6
  5169   001E86  5192               	movf	mutex_unlock@m& (0+255),w,b
  5170   001E88  26D9               	addwf	fsr2l,f,c
  5171   001E8A  5193               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5172   001E8C  22DA               	addwfc	fsr2h,f,c
  5173   001E8E  50DF               	movf	indf2,w,c
  5174   001E90  6F94               	movwf	??_mutex_unlock& (0+255),b
  5175   001E92  5194               	movf	??_mutex_unlock& (0+255),w,b
  5176   001E94  2592               	addwf	mutex_unlock@m& (0+255),w,b
  5177   001E96  6F95               	movwf	(??_mutex_unlock+1)& (0+255),b
  5178   001E98  0E00               	movlw	0
  5179   001E9A  2193               	addwfc	(mutex_unlock@m+1)& (0+255),w,b
  5180   001E9C  6F96               	movwf	(??_mutex_unlock+2)& (0+255),b
  5181   001E9E  0E01               	movlw	1
  5182   001EA0  2595               	addwf	(??_mutex_unlock+1)& (0+255),w,b
  5183   001EA2  6ED9               	movwf	fsr2l,c
  5184   001EA4  0E00               	movlw	0
  5185   001EA6  2196               	addwfc	(??_mutex_unlock+2)& (0+255),w,b
  5186   001EA8  6EDA               	movwf	fsr2h,c
  5187   001EAA  50DF               	movf	indf2,w,c
  5188   001EAC  6F97               	movwf	mutex_unlock@tid& (0+255),b
  5189   001EAE                     
  5190                           ; BSR set to: 1
  5191                           ;sync.c: 82:         r_queue.ready_queue[tid].task_state = READY;
  5192   001EAE  5197               	movf	mutex_unlock@tid& (0+255),w,b
  5193   001EB0  0D6B               	mullw	107
  5194   001EB2  0E6E               	movlw	low (_r_queue+2)
  5195   001EB4  24F3               	addwf	243,w,c
  5196   001EB6  6ED9               	movwf	fsr2l,c
  5197   001EB8  0E02               	movlw	high (_r_queue+2)
  5198   001EBA  20F4               	addwfc	prodh,w,c
  5199   001EBC  6EDA               	movwf	fsr2h,c
  5200   001EBE  6ADF               	clrf	indf2,c
  5201   001EC0                     
  5202                           ; BSR set to: 1
  5203                           ;sync.c: 83:         m->s_pos_out = (m->s_pos_out + 1) % 4;
  5204   001EC0  EE20 F006          	lfsr	2,6
  5205   001EC4  5192               	movf	mutex_unlock@m& (0+255),w,b
  5206   001EC6  26D9               	addwf	fsr2l,f,c
  5207   001EC8  5193               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5208   001ECA  22DA               	addwfc	fsr2h,f,c
  5209   001ECC  EE00 F006          	lfsr	0,6
  5210   001ED0  5192               	movf	mutex_unlock@m& (0+255),w,b
  5211   001ED2  26E9               	addwf	fsr0l,f,c
  5212   001ED4  5193               	movf	(mutex_unlock@m+1)& (0+255),w,b
  5213   001ED6  22EA               	addwfc	fsr0h,f,c
  5214   001ED8  50EF               	movf	indf0,w,c
  5215   001EDA  6F94               	movwf	??_mutex_unlock& (0+255),b
  5216   001EDC  2994               	incf	??_mutex_unlock& (0+255),w,b
  5217   001EDE  0B03               	andlw	3
  5218   001EE0  6EDF               	movwf	indf2,c
  5219                           
  5220                           ;sync.c: 84:     }
  5221   001EE2  EF79  F00F         	goto	i1l2225
  5222   001EE6                     i1l2223:
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;sync.c: 86:     {;sync.c: 88:         m->flag = 1;
  5226   001EE6  C192  FFD9         	movff	mutex_unlock@m,fsr2l
  5227   001EEA  C193  FFDA         	movff	mutex_unlock@m+1,fsr2h
  5228   001EEE  0E01               	movlw	1
  5229   001EF0  6EDF               	movwf	indf2,c
  5230   001EF2                     i1l2225:
  5231                           
  5232                           ; BSR set to: 1
  5233                           ;sync.c: 90:     (INTCONbits.GIE = 1);
  5234   001EF2  8EF2               	bsf	242,7,c	;volatile
  5235   001EF4                     
  5236                           ; BSR set to: 1
  5237   001EF4  0012               	return		;funcret
  5238   001EF6                     __end_of_mutex_unlock:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function _mutex_lock *****************
  5242 ;; Defined at:
  5243 ;;		line 55 in file "sync.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  m               2   38[BANK1 ] PTR struct mutex
  5246 ;;		 -> buffer_mutex(7), 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5258 ;;      Params:         0       0       2       0       0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5260 ;;      Temps:          0       0       7       0       0       0       0       0       0
  5261 ;;      Totals:         0       0       9       0       0       0       0       0       0
  5262 ;;Total ram usage:        9 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; Hardware stack levels required when called: 7
  5265 ;; This function calls:
  5266 ;;		_scheduler
  5267 ;; This function is called by:
  5268 ;;		_tarefa_controle_central
  5269 ;;		_tarefa_injecao_eletronica
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text28
  5274   000B86                     __ptext28:
  5275                           	callstack 0
  5276   000B86                     _mutex_lock:
  5277                           	callstack 17
  5278   000B86                     
  5279                           ;sync.c: 55: void mutex_lock(mutex_t *m);sync.c: 56: {;sync.c: 57:     (INTCONbits.GIE =
      +                           0);
  5280   000B86  9EF2               	bcf	242,7,c	;volatile
  5281   000B88                     
  5282                           ;sync.c: 58:     if (m->flag)
  5283   000B88  C192  FFD9         	movff	mutex_lock@m,fsr2l
  5284   000B8C  C193  FFDA         	movff	mutex_lock@m+1,fsr2h
  5285   000B90  50DF               	movf	indf2,w,c
  5286   000B92  B4D8               	btfsc	status,2,c
  5287   000B94  EFCE  F005         	goto	i1u111_21
  5288   000B98  EFD0  F005         	goto	i1u111_20
  5289   000B9C                     i1u111_21:
  5290   000B9C  EFD8  F005         	goto	i1l2179
  5291   000BA0                     i1u111_20:
  5292   000BA0                     
  5293                           ;sync.c: 59:     {;sync.c: 60:         m->flag = 0;
  5294   000BA0  C192  FFD9         	movff	mutex_lock@m,fsr2l
  5295   000BA4  C193  FFDA         	movff	mutex_lock@m+1,fsr2h
  5296   000BA8  6ADF               	clrf	indf2,c
  5297   000BAA                     
  5298                           ;sync.c: 61:         (INTCONbits.GIE = 1);
  5299   000BAA  8EF2               	bsf	242,7,c	;volatile
  5300                           
  5301                           ;sync.c: 62:     }
  5302   000BAC  EF41  F007         	goto	i1l108
  5303   000BB0                     i1l2179:
  5304                           
  5305                           ;sync.c: 64:     {;sync.c: 66:         m->s_queue[m->s_size] = r_queue.task_running;
  5306   000BB0  EE24  F083         	lfsr	2,_r_queue+535
  5307   000BB4  0101               	movlb	1	; () banked
  5308   000BB6  EE00 F005          	lfsr	0,5
  5309   000BBA  5192               	movf	mutex_lock@m& (0+255),w,b
  5310   000BBC  26E9               	addwf	fsr0l,f,c
  5311   000BBE  5193               	movf	(mutex_lock@m+1)& (0+255),w,b
  5312   000BC0  22EA               	addwfc	fsr0h,f,c
  5313   000BC2  50EF               	movf	indf0,w,c
  5314   000BC4  6F94               	movwf	??_mutex_lock& (0+255),b
  5315   000BC6  5194               	movf	??_mutex_lock& (0+255),w,b
  5316   000BC8  2592               	addwf	mutex_lock@m& (0+255),w,b
  5317   000BCA  6F95               	movwf	(??_mutex_lock+1)& (0+255),b
  5318   000BCC  0E00               	movlw	0
  5319   000BCE  2193               	addwfc	(mutex_lock@m+1)& (0+255),w,b
  5320   000BD0  6F96               	movwf	(??_mutex_lock+2)& (0+255),b
  5321   000BD2  0E01               	movlw	1
  5322   000BD4  2595               	addwf	(??_mutex_lock+1)& (0+255),w,b
  5323   000BD6  6EE9               	movwf	fsr0l,c
  5324   000BD8  0E00               	movlw	0
  5325   000BDA  2196               	addwfc	(??_mutex_lock+2)& (0+255),w,b
  5326   000BDC  6EEA               	movwf	fsr0h,c
  5327   000BDE  CFDF FFEF          	movff	indf2,indf0
  5328                           
  5329                           ;sync.c: 67:         m->s_size = (m->s_size + 1) % 4;
  5330   000BE2  EE20 F005          	lfsr	2,5
  5331   000BE6  5192               	movf	mutex_lock@m& (0+255),w,b
  5332   000BE8  26D9               	addwf	fsr2l,f,c
  5333   000BEA  5193               	movf	(mutex_lock@m+1)& (0+255),w,b
  5334   000BEC  22DA               	addwfc	fsr2h,f,c
  5335   000BEE  EE00 F005          	lfsr	0,5
  5336   000BF2  5192               	movf	mutex_lock@m& (0+255),w,b
  5337   000BF4  26E9               	addwf	fsr0l,f,c
  5338   000BF6  5193               	movf	(mutex_lock@m+1)& (0+255),w,b
  5339   000BF8  22EA               	addwfc	fsr0h,f,c
  5340   000BFA  50EF               	movf	indf0,w,c
  5341   000BFC  6F94               	movwf	??_mutex_lock& (0+255),b
  5342   000BFE  2994               	incf	??_mutex_lock& (0+255),w,b
  5343   000C00  0B03               	andlw	3
  5344   000C02  6EDF               	movwf	indf2,c
  5345   000C04                     
  5346                           ; BSR set to: 1
  5347   000C04  C483  F194         	movff	_r_queue+535,??_mutex_lock
  5348   000C08  5194               	movf	??_mutex_lock& (0+255),w,b
  5349   000C0A  0D6B               	mullw	107
  5350   000C0C  0E6C               	movlw	low _r_queue
  5351   000C0E  24F3               	addwf	243,w,c
  5352   000C10  6F95               	movwf	(??_mutex_lock+1)& (0+255),b
  5353   000C12  0E02               	movlw	high _r_queue
  5354   000C14  20F4               	addwfc	prodh,w,c
  5355   000C16  6F96               	movwf	(??_mutex_lock+2)& (0+255),b
  5356   000C18  C195  F485         	movff	??_mutex_lock+1,_r_queue+537
  5357   000C1C  C196  F486         	movff	??_mutex_lock+2,_r_queue+538
  5358   000C20                     
  5359                           ; BSR set to: 1
  5360   000C20  EE24  F085         	lfsr	2,_r_queue+537
  5361   000C24  EE00 F002          	lfsr	0,2
  5362   000C28  50DE               	movf	postinc2,w,c
  5363   000C2A  26E9               	addwf	fsr0l,f,c
  5364   000C2C  50DD               	movf	postdec2,w,c
  5365   000C2E  22EA               	addwfc	fsr0h,f,c
  5366   000C30  04EE               	decf	postinc0,w,c
  5367   000C32  A4D8               	btfss	status,2,c
  5368   000C34  EF1E  F006         	goto	i1u112_21
  5369   000C38  EF20  F006         	goto	i1u112_20
  5370   000C3C                     i1u112_21:
  5371   000C3C  EF8E  F006         	goto	i1l2193
  5372   000C40                     i1u112_20:
  5373   000C40                     
  5374                           ; BSR set to: 1
  5375   000C40  EE24  F085         	lfsr	2,_r_queue+537
  5376   000C44  EE00 F009          	lfsr	0,9
  5377   000C48  50DE               	movf	postinc2,w,c
  5378   000C4A  26E9               	addwf	fsr0l,f,c
  5379   000C4C  50DD               	movf	postdec2,w,c
  5380   000C4E  22EA               	addwfc	fsr0h,f,c
  5381   000C50  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5382   000C54  EE24  F085         	lfsr	2,_r_queue+537
  5383   000C58  EE00 F008          	lfsr	0,8
  5384   000C5C  50DE               	movf	postinc2,w,c
  5385   000C5E  26E9               	addwf	fsr0l,f,c
  5386   000C60  50DD               	movf	postdec2,w,c
  5387   000C62  22EA               	addwfc	fsr0h,f,c
  5388   000C64  CFD8 FFEF          	movff	status,indf0	;volatile
  5389   000C68  EE24  F085         	lfsr	2,_r_queue+537
  5390   000C6C  EE00 F007          	lfsr	0,7
  5391   000C70  50DE               	movf	postinc2,w,c
  5392   000C72  26E9               	addwf	fsr0l,f,c
  5393   000C74  50DD               	movf	postdec2,w,c
  5394   000C76  22EA               	addwfc	fsr0h,f,c
  5395   000C78  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5396   000C7C  EE24  F085         	lfsr	2,_r_queue+537
  5397   000C80  EE00 F06A          	lfsr	0,106
  5398   000C84  50DE               	movf	postinc2,w,c
  5399   000C86  26E9               	addwf	fsr0l,f,c
  5400   000C88  50DD               	movf	postdec2,w,c
  5401   000C8A  22EA               	addwfc	fsr0h,f,c
  5402   000C8C  6AEF               	clrf	indf0,c
  5403   000C8E  EE24  F085         	lfsr	2,_r_queue+537
  5404   000C92  EE00 F002          	lfsr	0,2
  5405   000C96  50DE               	movf	postinc2,w,c
  5406   000C98  26E9               	addwf	fsr0l,f,c
  5407   000C9A  50DD               	movf	postdec2,w,c
  5408   000C9C  22EA               	addwfc	fsr0h,f,c
  5409   000C9E  0E03               	movlw	3
  5410   000CA0  6EEF               	movwf	indf0,c
  5411   000CA2  EF86  F006         	goto	i1l2191
  5412   000CA6                     i1l2187:
  5413   000CA6  EE24  F085         	lfsr	2,_r_queue+537
  5414   000CAA  EE00 F06A          	lfsr	0,106
  5415   000CAE  50DE               	movf	postinc2,w,c
  5416   000CB0  26E9               	addwf	fsr0l,f,c
  5417   000CB2  50DD               	movf	postdec2,w,c
  5418   000CB4  22EA               	addwfc	fsr0h,f,c
  5419   000CB6  50EF               	movf	indf0,w,c
  5420   000CB8  0101               	movlb	1	; () banked
  5421   000CBA  6F94               	movwf	??_mutex_lock& (0+255),b
  5422   000CBC  5194               	movf	??_mutex_lock& (0+255),w,b
  5423   000CBE  0D03               	mullw	3
  5424   000CC0  CFF3 F195          	movff	prodl,??_mutex_lock+1
  5425   000CC4  CFF4 F196          	movff	prodh,??_mutex_lock+2
  5426   000CC8  EE24  F085         	lfsr	2,_r_queue+537
  5427   000CCC  CFDE F197          	movff	postinc2,??_mutex_lock+3
  5428   000CD0  CFDD F198          	movff	postdec2,??_mutex_lock+4
  5429   000CD4  5195               	movf	(??_mutex_lock+1)& (0+255),w,b
  5430   000CD6  2597               	addwf	(??_mutex_lock+3)& (0+255),w,b
  5431   000CD8  6F99               	movwf	(??_mutex_lock+5)& (0+255),b
  5432   000CDA  5196               	movf	(??_mutex_lock+2)& (0+255),w,b
  5433   000CDC  2198               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  5434   000CDE  6F9A               	movwf	(??_mutex_lock+6)& (0+255),b
  5435   000CE0  0E0A               	movlw	10
  5436   000CE2  2599               	addwf	(??_mutex_lock+5)& (0+255),w,b
  5437   000CE4  6ED9               	movwf	fsr2l,c
  5438   000CE6  0E00               	movlw	0
  5439   000CE8  219A               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  5440   000CEA  6EDA               	movwf	fsr2h,c
  5441   000CEC  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5442   000CF0  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5443   000CF4  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5444   000CF8                     
  5445                           ; BSR set to: 1
  5446   000CF8  EE24  F085         	lfsr	2,_r_queue+537
  5447   000CFC  EE00 F06A          	lfsr	0,106
  5448   000D00  50DE               	movf	postinc2,w,c
  5449   000D02  26E9               	addwf	fsr0l,f,c
  5450   000D04  50DD               	movf	postdec2,w,c
  5451   000D06  22EA               	addwfc	fsr0h,f,c
  5452   000D08  2AEF               	incf	indf0,f,c
  5453   000D0A  0006               	pop		;# 
  5454   000D0C                     i1l2191:
  5455   000D0C  50FC               	movf	252,w,c	;volatile
  5456   000D0E  A4D8               	btfss	status,2,c
  5457   000D10  EF8C  F006         	goto	i1u113_21
  5458   000D14  EF8E  F006         	goto	i1u113_20
  5459   000D18                     i1u113_21:
  5460   000D18  EF53  F006         	goto	i1l2187
  5461   000D1C                     i1u113_20:
  5462   000D1C                     i1l2193:
  5463                           
  5464                           ;sync.c: 69:         scheduler();
  5465   000D1C  ECF4  F012         	call	_scheduler	;wreg free
  5466   000D20  C483  F194         	movff	_r_queue+535,??_mutex_lock
  5467   000D24  0101               	movlb	1	; () banked
  5468   000D26  5194               	movf	??_mutex_lock& (0+255),w,b
  5469   000D28  0D6B               	mullw	107
  5470   000D2A  0E6C               	movlw	low _r_queue
  5471   000D2C  24F3               	addwf	243,w,c
  5472   000D2E  6F95               	movwf	(??_mutex_lock+1)& (0+255),b
  5473   000D30  0E02               	movlw	high _r_queue
  5474   000D32  20F4               	addwfc	prodh,w,c
  5475   000D34  6F96               	movwf	(??_mutex_lock+2)& (0+255),b
  5476   000D36  C195  F485         	movff	??_mutex_lock+1,_r_queue+537
  5477   000D3A  C196  F486         	movff	??_mutex_lock+2,_r_queue+538
  5478   000D3E                     
  5479                           ; BSR set to: 1
  5480   000D3E  EE24  F085         	lfsr	2,_r_queue+537
  5481   000D42  EE00 F002          	lfsr	0,2
  5482   000D46  50DE               	movf	postinc2,w,c
  5483   000D48  26E9               	addwf	fsr0l,f,c
  5484   000D4A  50DD               	movf	postdec2,w,c
  5485   000D4C  22EA               	addwfc	fsr0h,f,c
  5486   000D4E  50EF               	movf	indf0,w,c
  5487   000D50  A4D8               	btfss	status,2,c
  5488   000D52  EFAD  F006         	goto	i1u114_21
  5489   000D56  EFAF  F006         	goto	i1u114_20
  5490   000D5A                     i1u114_21:
  5491   000D5A  EF40  F007         	goto	i1l2211
  5492   000D5E                     i1u114_20:
  5493   000D5E                     
  5494                           ; BSR set to: 1
  5495   000D5E  6AFC               	clrf	252,c	;volatile
  5496   000D60                     
  5497                           ; BSR set to: 1
  5498   000D60  EE24  F085         	lfsr	2,_r_queue+537
  5499   000D64  EE00 F06A          	lfsr	0,106
  5500   000D68  50DE               	movf	postinc2,w,c
  5501   000D6A  26E9               	addwf	fsr0l,f,c
  5502   000D6C  50DD               	movf	postdec2,w,c
  5503   000D6E  22EA               	addwfc	fsr0h,f,c
  5504   000D70  50EF               	movf	indf0,w,c
  5505   000D72  B4D8               	btfsc	status,2,c
  5506   000D74  EFBE  F006         	goto	i1u115_21
  5507   000D78  EFC0  F006         	goto	i1u115_20
  5508   000D7C                     i1u115_21:
  5509   000D7C  EF24  F007         	goto	i1l103
  5510   000D80                     i1u115_20:
  5511   000D80                     
  5512                           ; BSR set to: 1
  5513   000D80  EE24  F085         	lfsr	2,_r_queue+537
  5514   000D84  EE00 F009          	lfsr	0,9
  5515   000D88  50DE               	movf	postinc2,w,c
  5516   000D8A  26E9               	addwf	fsr0l,f,c
  5517   000D8C  50DD               	movf	postdec2,w,c
  5518   000D8E  22EA               	addwfc	fsr0h,f,c
  5519   000D90  50EF               	movf	indf0,w,c
  5520   000D92  6EE0               	movwf	224,c	;volatile
  5521   000D94  EE24  F085         	lfsr	2,_r_queue+537
  5522   000D98  EE00 F008          	lfsr	0,8
  5523   000D9C  50DE               	movf	postinc2,w,c
  5524   000D9E  26E9               	addwf	fsr0l,f,c
  5525   000DA0  50DD               	movf	postdec2,w,c
  5526   000DA2  22EA               	addwfc	fsr0h,f,c
  5527   000DA4  50EF               	movf	indf0,w,c
  5528   000DA6  6ED8               	movwf	216,c	;volatile
  5529   000DA8  EE24  F085         	lfsr	2,_r_queue+537
  5530   000DAC  EE00 F007          	lfsr	0,7
  5531   000DB0  50DE               	movf	postinc2,w,c
  5532   000DB2  26E9               	addwf	fsr0l,f,c
  5533   000DB4  50DD               	movf	postdec2,w,c
  5534   000DB6  22EA               	addwfc	fsr0h,f,c
  5535   000DB8  50EF               	movf	indf0,w,c
  5536   000DBA  6F94               	movwf	??_mutex_lock& (0+255),b
  5537   000DBC  5194               	movf	??_mutex_lock& (0+255),w,b
  5538   000DBE                     i1l104:
  5539                           
  5540                           ; BSR set to: 1
  5541   000DBE  0005               	push		;# 
  5542   000DC0  EE24  F085         	lfsr	2,_r_queue+537
  5543   000DC4  EE00 F06A          	lfsr	0,106
  5544   000DC8  50DE               	movf	postinc2,w,c
  5545   000DCA  26E9               	addwf	fsr0l,f,c
  5546   000DCC  50DD               	movf	postdec2,w,c
  5547   000DCE  22EA               	addwfc	fsr0h,f,c
  5548   000DD0  06EF               	decf	indf0,f,c
  5549   000DD2  EE24  F085         	lfsr	2,_r_queue+537
  5550   000DD6  EE00 F06A          	lfsr	0,106
  5551   000DDA  50DE               	movf	postinc2,w,c
  5552   000DDC  26E9               	addwf	fsr0l,f,c
  5553   000DDE  50DD               	movf	postdec2,w,c
  5554   000DE0  22EA               	addwfc	fsr0h,f,c
  5555   000DE2  50EF               	movf	indf0,w,c
  5556   000DE4  0101               	movlb	1	; () banked
  5557   000DE6  6F94               	movwf	??_mutex_lock& (0+255),b
  5558   000DE8  5194               	movf	??_mutex_lock& (0+255),w,b
  5559   000DEA  0D03               	mullw	3
  5560   000DEC  CFF3 F195          	movff	prodl,??_mutex_lock+1
  5561   000DF0  CFF4 F196          	movff	prodh,??_mutex_lock+2
  5562   000DF4  EE24  F085         	lfsr	2,_r_queue+537
  5563   000DF8  CFDE F197          	movff	postinc2,??_mutex_lock+3
  5564   000DFC  CFDD F198          	movff	postdec2,??_mutex_lock+4
  5565   000E00  5195               	movf	(??_mutex_lock+1)& (0+255),w,b
  5566   000E02  2597               	addwf	(??_mutex_lock+3)& (0+255),w,b
  5567   000E04  6F99               	movwf	(??_mutex_lock+5)& (0+255),b
  5568   000E06  5196               	movf	(??_mutex_lock+2)& (0+255),w,b
  5569   000E08  2198               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  5570   000E0A  6F9A               	movwf	(??_mutex_lock+6)& (0+255),b
  5571   000E0C  0E0A               	movlw	10
  5572   000E0E  2599               	addwf	(??_mutex_lock+5)& (0+255),w,b
  5573   000E10  6ED9               	movwf	fsr2l,c
  5574   000E12  0E00               	movlw	0
  5575   000E14  219A               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  5576   000E16  6EDA               	movwf	fsr2h,c
  5577   000E18  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5578   000E1C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5579   000E20  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5580   000E24                     
  5581                           ; BSR set to: 1
  5582   000E24  EE24  F085         	lfsr	2,_r_queue+537
  5583   000E28  EE00 F06A          	lfsr	0,106
  5584   000E2C  50DE               	movf	postinc2,w,c
  5585   000E2E  26E9               	addwf	fsr0l,f,c
  5586   000E30  50DD               	movf	postdec2,w,c
  5587   000E32  22EA               	addwfc	fsr0h,f,c
  5588   000E34  50EF               	movf	indf0,w,c
  5589   000E36  A4D8               	btfss	status,2,c
  5590   000E38  EF20  F007         	goto	i1u116_21
  5591   000E3C  EF22  F007         	goto	i1u116_20
  5592   000E40                     i1u116_21:
  5593   000E40  EFDF  F006         	goto	i1l104
  5594   000E44                     i1u116_20:
  5595   000E44  EF36  F007         	goto	i1l106
  5596   000E48                     i1l103:
  5597                           
  5598                           ; BSR set to: 1
  5599   000E48  0005               	push		;# 
  5600   000E4A  EE24  F085         	lfsr	2,_r_queue+537
  5601   000E4E  EE00 F003          	lfsr	0,3
  5602   000E52  50DE               	movf	postinc2,w,c
  5603   000E54  26E9               	addwf	fsr0l,f,c
  5604   000E56  50DD               	movf	postdec2,w,c
  5605   000E58  22EA               	addwfc	fsr0h,f,c
  5606   000E5A  CFEE F194          	movff	postinc0,??_mutex_lock
  5607   000E5E  CFED F195          	movff	postdec0,??_mutex_lock+1
  5608   000E62  C194  FFFD         	movff	??_mutex_lock,tosl	;volatile
  5609   000E66  C195  FFFE         	movff	??_mutex_lock+1,tosh	;volatile
  5610   000E6A  6AFF               	clrf	255,c	;volatile
  5611   000E6C                     i1l106:
  5612   000E6C  EE24  F085         	lfsr	2,_r_queue+537
  5613   000E70  EE00 F002          	lfsr	0,2
  5614   000E74  50DE               	movf	postinc2,w,c
  5615   000E76  26E9               	addwf	fsr0l,f,c
  5616   000E78  50DD               	movf	postdec2,w,c
  5617   000E7A  22EA               	addwfc	fsr0h,f,c
  5618   000E7C  0E01               	movlw	1
  5619   000E7E  6EEF               	movwf	indf0,c
  5620   000E80                     i1l2211:
  5621                           
  5622                           ;sync.c: 71:         (INTCONbits.GIE = 1);
  5623   000E80  8EF2               	bsf	242,7,c	;volatile
  5624   000E82                     i1l108:
  5625   000E82  0012               	return		;funcret
  5626   000E84                     __end_of_mutex_lock:
  5627                           	callstack 0
  5628                           
  5629 ;; *************** function _tarefa_injecao_eletronica *****************
  5630 ;; Defined at:
  5631 ;;		line 47 in file "user_app.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  duty            1   47[BANK1 ] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0
  5646 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5648 ;;      Totals:         0       0       1       0       0       0       0       0       0
  5649 ;;Total ram usage:        1 bytes
  5650 ;; Hardware stack levels used: 1
  5651 ;; Hardware stack levels required when called: 8
  5652 ;; This function calls:
  5653 ;;		_mutex_lock
  5654 ;;		_mutex_unlock
  5655 ;;		_pwm_set
  5656 ;;		_yield
  5657 ;; This function is called by:
  5658 ;;		_main
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text29
  5663   002360                     __ptext29:
  5664                           	callstack 0
  5665   002360                     _tarefa_injecao_eletronica:
  5666                           	callstack 17
  5667   002360                     l288:
  5668                           
  5669                           ;user_app.c: 50:     {;user_app.c: 51:         LATDbits.LATD0 = 1;
  5670   002360  808C               	bsf	140,0,c	;volatile
  5671   002362                     
  5672                           ;user_app.c: 52:         static uint8_t last_duty = 255;;user_app.c: 53:         uint8_t
      +                           duty;;user_app.c: 55:         mutex_lock(&buffer_mutex);
  5673   002362  0E65               	movlw	low _buffer_mutex
  5674   002364  0101               	movlb	1	; () banked
  5675   002366  6F92               	movwf	mutex_lock@m& (0+255),b
  5676   002368  0E01               	movlw	high _buffer_mutex
  5677   00236A  6F93               	movwf	(mutex_lock@m+1)& (0+255),b
  5678   00236C  ECC3  F005         	call	_mutex_lock	;wreg free
  5679   002370                     
  5680                           ;user_app.c: 56:         duty = accel_data;
  5681   002370  C100  F19B         	movff	_accel_data,tarefa_injecao_eletronica@duty	;volatile
  5682   002374                     
  5683                           ;user_app.c: 57:         mutex_unlock(&buffer_mutex);
  5684   002374  0E65               	movlw	low _buffer_mutex
  5685   002376  0101               	movlb	1	; () banked
  5686   002378  6F92               	movwf	mutex_unlock@m& (0+255),b
  5687   00237A  0E01               	movlw	high _buffer_mutex
  5688   00237C  6F93               	movwf	(mutex_unlock@m+1)& (0+255),b
  5689   00237E  EC2A  F00F         	call	_mutex_unlock	;wreg free
  5690   002382                     
  5691                           ;user_app.c: 59:         if (duty != last_duty)
  5692   002382  0101               	movlb	1	; () banked
  5693   002384  51A5               	movf	tarefa_injecao_eletronica@last_duty& (0+255),w,b
  5694   002386  199B               	xorwf	tarefa_injecao_eletronica@duty& (0+255),w,b
  5695   002388  B4D8               	btfsc	status,2,c
  5696   00238A  EFC9  F011         	goto	u145_21
  5697   00238E  EFCB  F011         	goto	u145_20
  5698   002392                     u145_21:
  5699   002392  EFD0  F011         	goto	l2481
  5700   002396                     u145_20:
  5701   002396                     
  5702                           ; BSR set to: 1
  5703                           ;user_app.c: 60:         {;user_app.c: 61:             pwm_set(duty);
  5704   002396  519B               	movf	tarefa_injecao_eletronica@duty& (0+255),w,b
  5705   002398  EC90  F010         	call	_pwm_set
  5706   00239C                     
  5707                           ;user_app.c: 62:             last_duty = duty;
  5708   00239C  C19B  F1A5         	movff	tarefa_injecao_eletronica@duty,tarefa_injecao_eletronica@last_duty
  5709   0023A0                     l2481:
  5710                           
  5711                           ;user_app.c: 65:         yield();
  5712   0023A0  EC55  F00B         	call	_yield	;wreg free
  5713   0023A4                     
  5714                           ;user_app.c: 66:         LATDbits.LATD0 = 0;
  5715   0023A4  908C               	bcf	140,0,c	;volatile
  5716   0023A6                     
  5717                           ;user_app.c: 67:         yield();
  5718   0023A6  EC55  F00B         	call	_yield	;wreg free
  5719   0023AA  EFB0  F011         	goto	l288
  5720   0023AE  0012               	return		;funcret
  5721   0023B0                     __end_of_tarefa_injecao_eletronica:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function _pwm_set *****************
  5725 ;; Defined at:
  5726 ;;		line 35 in file "io.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  duty_cycle      1    wreg     unsigned char 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  duty_cycle      1   40[BANK1 ] unsigned char 
  5731 ;;  duty            2   41[BANK1 ] unsigned short 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0
  5742 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5743 ;;      Temps:          0       0       2       0       0       0       0       0       0
  5744 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5745 ;;Total ram usage:        5 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 4
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_tarefa_injecao_eletronica
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text30
  5756   002120                     __ptext30:
  5757                           	callstack 0
  5758   002120                     _pwm_set:
  5759                           	callstack 20
  5760                           
  5761                           ;incstack = 0
  5762                           ;pwm_set@duty_cycle stored from wreg
  5763   002120  0101               	movlb	1	; () banked
  5764   002122  6F94               	movwf	pwm_set@duty_cycle& (0+255),b
  5765   002124                     
  5766                           ;io.c: 35: void pwm_set(uint8_t duty_cycle);io.c: 36: {;io.c: 37:     uint16_t duty = du
      +                          ty_cycle;
  5767   002124  C194  F195         	movff	pwm_set@duty_cycle,pwm_set@duty
  5768   002128  0101               	movlb	1	; () banked
  5769   00212A  6B96               	clrf	(pwm_set@duty+1)& (0+255),b
  5770   00212C                     
  5771                           ; BSR set to: 1
  5772                           ;io.c: 38:     duty = duty << 2;
  5773   00212C  C195  F192         	movff	pwm_set@duty,??_pwm_set
  5774   002130  C196  F193         	movff	pwm_set@duty+1,??_pwm_set+1
  5775   002134  90D8               	bcf	status,0,c
  5776   002136  3792               	rlcf	??_pwm_set& (0+255),f,b
  5777   002138  3793               	rlcf	(??_pwm_set+1)& (0+255),f,b
  5778   00213A  90D8               	bcf	status,0,c
  5779   00213C  3792               	rlcf	??_pwm_set& (0+255),f,b
  5780   00213E  3793               	rlcf	(??_pwm_set+1)& (0+255),f,b
  5781   002140  C192  F195         	movff	??_pwm_set,pwm_set@duty
  5782   002144  C193  F196         	movff	??_pwm_set+1,pwm_set@duty+1
  5783                           
  5784                           ;io.c: 40:     if (duty > 1023) duty = 1023;
  5785   002148  0E04               	movlw	4
  5786   00214A  5D96               	subwf	(pwm_set@duty+1)& (0+255),w,b
  5787   00214C  A0D8               	btfss	status,0,c
  5788   00214E  EFAB  F010         	goto	i1u119_21
  5789   002152  EFAD  F010         	goto	i1u119_20
  5790   002156                     i1u119_21:
  5791   002156  EFB0  F010         	goto	i1l2263
  5792   00215A                     i1u119_20:
  5793   00215A                     
  5794                           ; BSR set to: 1
  5795   00215A  0E03               	movlw	3
  5796   00215C  6F96               	movwf	(pwm_set@duty+1)& (0+255),b
  5797   00215E  6995               	setf	pwm_set@duty& (0+255),b
  5798   002160                     i1l2263:
  5799                           
  5800                           ; BSR set to: 1
  5801                           ;io.c: 42:     CCPR1L = duty >> 2;
  5802   002160  C195  F192         	movff	pwm_set@duty,??_pwm_set
  5803   002164  C196  F193         	movff	pwm_set@duty+1,??_pwm_set+1
  5804   002168  90D8               	bcf	status,0,c
  5805   00216A  3393               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5806   00216C  3392               	rrcf	??_pwm_set& (0+255),f,b
  5807   00216E  90D8               	bcf	status,0,c
  5808   002170  3393               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5809   002172  3392               	rrcf	??_pwm_set& (0+255),f,b
  5810   002174  5192               	movf	??_pwm_set& (0+255),w,b
  5811   002176  6EBE               	movwf	190,c	;volatile
  5812   002178                     
  5813                           ; BSR set to: 1
  5814                           ;io.c: 43:     CCP1CONbits.DC1B = duty & 0x03;
  5815   002178  C195  F192         	movff	pwm_set@duty,??_pwm_set
  5816   00217C  0E03               	movlw	3
  5817   00217E  1792               	andwf	??_pwm_set& (0+255),f,b
  5818   002180  3B92               	swapf	??_pwm_set& (0+255),f,b
  5819   002182  50BD               	movf	189,w,c	;volatile
  5820   002184  1992               	xorwf	??_pwm_set& (0+255),w,b
  5821   002186  0BCF               	andlw	-49
  5822   002188  1992               	xorwf	??_pwm_set& (0+255),w,b
  5823   00218A  6EBD               	movwf	189,c	;volatile
  5824   00218C                     
  5825                           ; BSR set to: 1
  5826   00218C  0012               	return		;funcret
  5827   00218E                     __end_of_pwm_set:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function _tarefa_estabilidade *****************
  5831 ;; Defined at:
  5832 ;;		line 71 in file "user_app.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5846 ;;      Params:         0       0       0       0       0       0       0       0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5849 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; Hardware stack levels required when called: 8
  5853 ;; This function calls:
  5854 ;;		_change_state
  5855 ;;		_delay
  5856 ;; This function is called by:
  5857 ;;		_ISR
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text31
  5862   0024BA                     __ptext31:
  5863                           	callstack 0
  5864   0024BA                     _tarefa_estabilidade:
  5865                           	callstack 17
  5866   0024BA                     l297:
  5867   0024BA                     
  5868                           ;user_app.c: 74:     {;user_app.c: 75:         if (est_flag)
  5869   0024BA  5046               	movf	_est_flag^0,w,c	;volatile
  5870   0024BC  B4D8               	btfsc	status,2,c
  5871   0024BE  EF63  F012         	goto	u146_21
  5872   0024C2  EF65  F012         	goto	u146_20
  5873   0024C6                     u146_21:
  5874   0024C6  EF6F  F012         	goto	l298
  5875   0024CA                     u146_20:
  5876   0024CA                     
  5877                           ;user_app.c: 76:         {;user_app.c: 77:             est_flag = 0;
  5878   0024CA  6A46               	clrf	_est_flag^0,c	;volatile
  5879                           
  5880                           ;user_app.c: 78:             LATDbits.LATD3 = 1;
  5881   0024CC  868C               	bsf	140,3,c	;volatile
  5882   0024CE                     
  5883                           ;user_app.c: 79:             delay(2);
  5884   0024CE  0E00               	movlw	0
  5885   0024D0  0101               	movlb	1	; () banked
  5886   0024D2  6F9D               	movwf	(delay@time+1)& (0+255),b
  5887   0024D4  0E02               	movlw	2
  5888   0024D6  6F9C               	movwf	delay@time& (0+255),b
  5889   0024D8  ECC0  F008         	call	_delay	;wreg free
  5890   0024DC                     
  5891                           ;user_app.c: 80:             LATDbits.LATD3 = 0;
  5892   0024DC  968C               	bcf	140,3,c	;volatile
  5893   0024DE                     l298:
  5894                           
  5895                           ;user_app.c: 82:         change_state(WAITING);
  5896   0024DE  0E02               	movlw	2
  5897   0024E0  EC11  F00A         	call	_change_state
  5898   0024E4  EF5D  F012         	goto	l297
  5899   0024E8  0012               	return		;funcret
  5900   0024EA                     __end_of_tarefa_estabilidade:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function _delay *****************
  5904 ;; Defined at:
  5905 ;;		line 31 in file "kernel.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  time            2   48[BANK1 ] unsigned short 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5919 ;;      Params:         0       0       2       0       0       0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5921 ;;      Temps:          0       0       7       0       0       0       0       0       0
  5922 ;;      Totals:         0       0       9       0       0       0       0       0       0
  5923 ;;Total ram usage:        9 bytes
  5924 ;; Hardware stack levels used: 1
  5925 ;; Hardware stack levels required when called: 7
  5926 ;; This function calls:
  5927 ;;		_scheduler
  5928 ;; This function is called by:
  5929 ;;		_tarefa_estabilidade
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text32
  5934   001180                     __ptext32:
  5935                           	callstack 0
  5936   001180                     _delay:
  5937                           	callstack 17
  5938   001180                     
  5939                           ;kernel.c: 31: void delay(uint16_t time);kernel.c: 32: {;kernel.c: 33:     (INTCONbits.G
      +                          IE = 0);
  5940   001180  9EF2               	bcf	242,7,c	;volatile
  5941   001182  C483  F19E         	movff	_r_queue+535,??_delay
  5942   001186  0101               	movlb	1	; () banked
  5943   001188  519E               	movf	??_delay& (0+255),w,b
  5944   00118A  0D6B               	mullw	107
  5945   00118C  0E6C               	movlw	low _r_queue
  5946   00118E  24F3               	addwf	243,w,c
  5947   001190  6F9F               	movwf	(??_delay+1)& (0+255),b
  5948   001192  0E02               	movlw	high _r_queue
  5949   001194  20F4               	addwfc	prodh,w,c
  5950   001196  6FA0               	movwf	(??_delay+2)& (0+255),b
  5951   001198  C19F  F485         	movff	??_delay+1,_r_queue+537
  5952   00119C  C1A0  F486         	movff	??_delay+2,_r_queue+538
  5953   0011A0                     
  5954                           ; BSR set to: 1
  5955   0011A0  EE24  F085         	lfsr	2,_r_queue+537
  5956   0011A4  EE00 F002          	lfsr	0,2
  5957   0011A8  50DE               	movf	postinc2,w,c
  5958   0011AA  26E9               	addwf	fsr0l,f,c
  5959   0011AC  50DD               	movf	postdec2,w,c
  5960   0011AE  22EA               	addwfc	fsr0h,f,c
  5961   0011B0  04EE               	decf	postinc0,w,c
  5962   0011B2  A4D8               	btfss	status,2,c
  5963   0011B4  EFDE  F008         	goto	i1u125_21
  5964   0011B8  EFE0  F008         	goto	i1u125_20
  5965   0011BC                     i1u125_21:
  5966   0011BC  EF4E  F009         	goto	i1l2315
  5967   0011C0                     i1u125_20:
  5968   0011C0                     
  5969                           ; BSR set to: 1
  5970   0011C0  EE24  F085         	lfsr	2,_r_queue+537
  5971   0011C4  EE00 F009          	lfsr	0,9
  5972   0011C8  50DE               	movf	postinc2,w,c
  5973   0011CA  26E9               	addwf	fsr0l,f,c
  5974   0011CC  50DD               	movf	postdec2,w,c
  5975   0011CE  22EA               	addwfc	fsr0h,f,c
  5976   0011D0  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5977   0011D4  EE24  F085         	lfsr	2,_r_queue+537
  5978   0011D8  EE00 F008          	lfsr	0,8
  5979   0011DC  50DE               	movf	postinc2,w,c
  5980   0011DE  26E9               	addwf	fsr0l,f,c
  5981   0011E0  50DD               	movf	postdec2,w,c
  5982   0011E2  22EA               	addwfc	fsr0h,f,c
  5983   0011E4  CFD8 FFEF          	movff	status,indf0	;volatile
  5984   0011E8  EE24  F085         	lfsr	2,_r_queue+537
  5985   0011EC  EE00 F007          	lfsr	0,7
  5986   0011F0  50DE               	movf	postinc2,w,c
  5987   0011F2  26E9               	addwf	fsr0l,f,c
  5988   0011F4  50DD               	movf	postdec2,w,c
  5989   0011F6  22EA               	addwfc	fsr0h,f,c
  5990   0011F8  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5991   0011FC  EE24  F085         	lfsr	2,_r_queue+537
  5992   001200  EE00 F06A          	lfsr	0,106
  5993   001204  50DE               	movf	postinc2,w,c
  5994   001206  26E9               	addwf	fsr0l,f,c
  5995   001208  50DD               	movf	postdec2,w,c
  5996   00120A  22EA               	addwfc	fsr0h,f,c
  5997   00120C  6AEF               	clrf	indf0,c
  5998   00120E  EE24  F085         	lfsr	2,_r_queue+537
  5999   001212  EE00 F002          	lfsr	0,2
  6000   001216  50DE               	movf	postinc2,w,c
  6001   001218  26E9               	addwf	fsr0l,f,c
  6002   00121A  50DD               	movf	postdec2,w,c
  6003   00121C  22EA               	addwfc	fsr0h,f,c
  6004   00121E  0E02               	movlw	2
  6005   001220  6EEF               	movwf	indf0,c
  6006   001222  EF46  F009         	goto	i1l2313
  6007   001226                     i1l2309:
  6008   001226  EE24  F085         	lfsr	2,_r_queue+537
  6009   00122A  EE00 F06A          	lfsr	0,106
  6010   00122E  50DE               	movf	postinc2,w,c
  6011   001230  26E9               	addwf	fsr0l,f,c
  6012   001232  50DD               	movf	postdec2,w,c
  6013   001234  22EA               	addwfc	fsr0h,f,c
  6014   001236  50EF               	movf	indf0,w,c
  6015   001238  0101               	movlb	1	; () banked
  6016   00123A  6F9E               	movwf	??_delay& (0+255),b
  6017   00123C  519E               	movf	??_delay& (0+255),w,b
  6018   00123E  0D03               	mullw	3
  6019   001240  CFF3 F19F          	movff	prodl,??_delay+1
  6020   001244  CFF4 F1A0          	movff	prodh,??_delay+2
  6021   001248  EE24  F085         	lfsr	2,_r_queue+537
  6022   00124C  CFDE F1A1          	movff	postinc2,??_delay+3
  6023   001250  CFDD F1A2          	movff	postdec2,??_delay+4
  6024   001254  519F               	movf	(??_delay+1)& (0+255),w,b
  6025   001256  25A1               	addwf	(??_delay+3)& (0+255),w,b
  6026   001258  6FA3               	movwf	(??_delay+5)& (0+255),b
  6027   00125A  51A0               	movf	(??_delay+2)& (0+255),w,b
  6028   00125C  21A2               	addwfc	(??_delay+4)& (0+255),w,b
  6029   00125E  6FA4               	movwf	(??_delay+6)& (0+255),b
  6030   001260  0E0A               	movlw	10
  6031   001262  25A3               	addwf	(??_delay+5)& (0+255),w,b
  6032   001264  6ED9               	movwf	fsr2l,c
  6033   001266  0E00               	movlw	0
  6034   001268  21A4               	addwfc	(??_delay+6)& (0+255),w,b
  6035   00126A  6EDA               	movwf	fsr2h,c
  6036   00126C  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6037   001270  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6038   001274  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6039   001278                     
  6040                           ; BSR set to: 1
  6041   001278  EE24  F085         	lfsr	2,_r_queue+537
  6042   00127C  EE00 F06A          	lfsr	0,106
  6043   001280  50DE               	movf	postinc2,w,c
  6044   001282  26E9               	addwf	fsr0l,f,c
  6045   001284  50DD               	movf	postdec2,w,c
  6046   001286  22EA               	addwfc	fsr0h,f,c
  6047   001288  2AEF               	incf	indf0,f,c
  6048   00128A  0006               	pop		;# 
  6049   00128C                     i1l2313:
  6050   00128C  50FC               	movf	252,w,c	;volatile
  6051   00128E  A4D8               	btfss	status,2,c
  6052   001290  EF4C  F009         	goto	i1u126_21
  6053   001294  EF4E  F009         	goto	i1u126_20
  6054   001298                     i1u126_21:
  6055   001298  EF13  F009         	goto	i1l2309
  6056   00129C                     i1u126_20:
  6057   00129C                     i1l2315:
  6058                           
  6059                           ;kernel.c: 35:     r_queue.ready_queue[r_queue.task_running].time_sleeping = time;
  6060   00129C  C483  F19E         	movff	_r_queue+535,??_delay
  6061   0012A0  0101               	movlb	1	; () banked
  6062   0012A2  519E               	movf	??_delay& (0+255),w,b
  6063   0012A4  0D6B               	mullw	107
  6064   0012A6  0E71               	movlw	low (_r_queue+5)
  6065   0012A8  24F3               	addwf	243,w,c
  6066   0012AA  6ED9               	movwf	fsr2l,c
  6067   0012AC  0E02               	movlw	high (_r_queue+5)
  6068   0012AE  20F4               	addwfc	prodh,w,c
  6069   0012B0  6EDA               	movwf	fsr2h,c
  6070   0012B2  C19C  FFDE         	movff	delay@time,postinc2
  6071   0012B6  C19D  FFDD         	movff	delay@time+1,postdec2
  6072   0012BA                     
  6073                           ; BSR set to: 1
  6074                           ;kernel.c: 36:     scheduler();
  6075   0012BA  ECF4  F012         	call	_scheduler	;wreg free
  6076   0012BE  C483  F19E         	movff	_r_queue+535,??_delay
  6077   0012C2  0101               	movlb	1	; () banked
  6078   0012C4  519E               	movf	??_delay& (0+255),w,b
  6079   0012C6  0D6B               	mullw	107
  6080   0012C8  0E6C               	movlw	low _r_queue
  6081   0012CA  24F3               	addwf	243,w,c
  6082   0012CC  6F9F               	movwf	(??_delay+1)& (0+255),b
  6083   0012CE  0E02               	movlw	high _r_queue
  6084   0012D0  20F4               	addwfc	prodh,w,c
  6085   0012D2  6FA0               	movwf	(??_delay+2)& (0+255),b
  6086   0012D4  C19F  F485         	movff	??_delay+1,_r_queue+537
  6087   0012D8  C1A0  F486         	movff	??_delay+2,_r_queue+538
  6088   0012DC                     
  6089                           ; BSR set to: 1
  6090   0012DC  EE24  F085         	lfsr	2,_r_queue+537
  6091   0012E0  EE00 F002          	lfsr	0,2
  6092   0012E4  50DE               	movf	postinc2,w,c
  6093   0012E6  26E9               	addwf	fsr0l,f,c
  6094   0012E8  50DD               	movf	postdec2,w,c
  6095   0012EA  22EA               	addwfc	fsr0h,f,c
  6096   0012EC  50EF               	movf	indf0,w,c
  6097   0012EE  A4D8               	btfss	status,2,c
  6098   0012F0  EF7C  F009         	goto	i1u127_21
  6099   0012F4  EF7E  F009         	goto	i1u127_20
  6100   0012F8                     i1u127_21:
  6101   0012F8  EF0F  F00A         	goto	i1l2335
  6102   0012FC                     i1u127_20:
  6103   0012FC                     
  6104                           ; BSR set to: 1
  6105   0012FC  6AFC               	clrf	252,c	;volatile
  6106   0012FE                     
  6107                           ; BSR set to: 1
  6108   0012FE  EE24  F085         	lfsr	2,_r_queue+537
  6109   001302  EE00 F06A          	lfsr	0,106
  6110   001306  50DE               	movf	postinc2,w,c
  6111   001308  26E9               	addwf	fsr0l,f,c
  6112   00130A  50DD               	movf	postdec2,w,c
  6113   00130C  22EA               	addwfc	fsr0h,f,c
  6114   00130E  50EF               	movf	indf0,w,c
  6115   001310  B4D8               	btfsc	status,2,c
  6116   001312  EF8D  F009         	goto	i1u128_21
  6117   001316  EF8F  F009         	goto	i1u128_20
  6118   00131A                     i1u128_21:
  6119   00131A  EFF3  F009         	goto	i1l348
  6120   00131E                     i1u128_20:
  6121   00131E                     
  6122                           ; BSR set to: 1
  6123   00131E  EE24  F085         	lfsr	2,_r_queue+537
  6124   001322  EE00 F009          	lfsr	0,9
  6125   001326  50DE               	movf	postinc2,w,c
  6126   001328  26E9               	addwf	fsr0l,f,c
  6127   00132A  50DD               	movf	postdec2,w,c
  6128   00132C  22EA               	addwfc	fsr0h,f,c
  6129   00132E  50EF               	movf	indf0,w,c
  6130   001330  6EE0               	movwf	224,c	;volatile
  6131   001332  EE24  F085         	lfsr	2,_r_queue+537
  6132   001336  EE00 F008          	lfsr	0,8
  6133   00133A  50DE               	movf	postinc2,w,c
  6134   00133C  26E9               	addwf	fsr0l,f,c
  6135   00133E  50DD               	movf	postdec2,w,c
  6136   001340  22EA               	addwfc	fsr0h,f,c
  6137   001342  50EF               	movf	indf0,w,c
  6138   001344  6ED8               	movwf	216,c	;volatile
  6139   001346  EE24  F085         	lfsr	2,_r_queue+537
  6140   00134A  EE00 F007          	lfsr	0,7
  6141   00134E  50DE               	movf	postinc2,w,c
  6142   001350  26E9               	addwf	fsr0l,f,c
  6143   001352  50DD               	movf	postdec2,w,c
  6144   001354  22EA               	addwfc	fsr0h,f,c
  6145   001356  50EF               	movf	indf0,w,c
  6146   001358  6F9E               	movwf	??_delay& (0+255),b
  6147   00135A  519E               	movf	??_delay& (0+255),w,b
  6148   00135C                     i1l349:
  6149                           
  6150                           ; BSR set to: 1
  6151   00135C  0005               	push		;# 
  6152   00135E  EE24  F085         	lfsr	2,_r_queue+537
  6153   001362  EE00 F06A          	lfsr	0,106
  6154   001366  50DE               	movf	postinc2,w,c
  6155   001368  26E9               	addwf	fsr0l,f,c
  6156   00136A  50DD               	movf	postdec2,w,c
  6157   00136C  22EA               	addwfc	fsr0h,f,c
  6158   00136E  06EF               	decf	indf0,f,c
  6159   001370  EE24  F085         	lfsr	2,_r_queue+537
  6160   001374  EE00 F06A          	lfsr	0,106
  6161   001378  50DE               	movf	postinc2,w,c
  6162   00137A  26E9               	addwf	fsr0l,f,c
  6163   00137C  50DD               	movf	postdec2,w,c
  6164   00137E  22EA               	addwfc	fsr0h,f,c
  6165   001380  50EF               	movf	indf0,w,c
  6166   001382  0101               	movlb	1	; () banked
  6167   001384  6F9E               	movwf	??_delay& (0+255),b
  6168   001386  519E               	movf	??_delay& (0+255),w,b
  6169   001388  0D03               	mullw	3
  6170   00138A  CFF3 F19F          	movff	prodl,??_delay+1
  6171   00138E  CFF4 F1A0          	movff	prodh,??_delay+2
  6172   001392  EE24  F085         	lfsr	2,_r_queue+537
  6173   001396  CFDE F1A1          	movff	postinc2,??_delay+3
  6174   00139A  CFDD F1A2          	movff	postdec2,??_delay+4
  6175   00139E  519F               	movf	(??_delay+1)& (0+255),w,b
  6176   0013A0  25A1               	addwf	(??_delay+3)& (0+255),w,b
  6177   0013A2  6FA3               	movwf	(??_delay+5)& (0+255),b
  6178   0013A4  51A0               	movf	(??_delay+2)& (0+255),w,b
  6179   0013A6  21A2               	addwfc	(??_delay+4)& (0+255),w,b
  6180   0013A8  6FA4               	movwf	(??_delay+6)& (0+255),b
  6181   0013AA  0E0A               	movlw	10
  6182   0013AC  25A3               	addwf	(??_delay+5)& (0+255),w,b
  6183   0013AE  6ED9               	movwf	fsr2l,c
  6184   0013B0  0E00               	movlw	0
  6185   0013B2  21A4               	addwfc	(??_delay+6)& (0+255),w,b
  6186   0013B4  6EDA               	movwf	fsr2h,c
  6187   0013B6  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6188   0013BA  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6189   0013BE  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6190   0013C2                     
  6191                           ; BSR set to: 1
  6192   0013C2  EE24  F085         	lfsr	2,_r_queue+537
  6193   0013C6  EE00 F06A          	lfsr	0,106
  6194   0013CA  50DE               	movf	postinc2,w,c
  6195   0013CC  26E9               	addwf	fsr0l,f,c
  6196   0013CE  50DD               	movf	postdec2,w,c
  6197   0013D0  22EA               	addwfc	fsr0h,f,c
  6198   0013D2  50EF               	movf	indf0,w,c
  6199   0013D4  A4D8               	btfss	status,2,c
  6200   0013D6  EFEF  F009         	goto	i1u129_21
  6201   0013DA  EFF1  F009         	goto	i1u129_20
  6202   0013DE                     i1u129_21:
  6203   0013DE  EFAE  F009         	goto	i1l349
  6204   0013E2                     i1u129_20:
  6205   0013E2  EF05  F00A         	goto	i1l351
  6206   0013E6                     i1l348:
  6207                           
  6208                           ; BSR set to: 1
  6209   0013E6  0005               	push		;# 
  6210   0013E8  EE24  F085         	lfsr	2,_r_queue+537
  6211   0013EC  EE00 F003          	lfsr	0,3
  6212   0013F0  50DE               	movf	postinc2,w,c
  6213   0013F2  26E9               	addwf	fsr0l,f,c
  6214   0013F4  50DD               	movf	postdec2,w,c
  6215   0013F6  22EA               	addwfc	fsr0h,f,c
  6216   0013F8  CFEE F19E          	movff	postinc0,??_delay
  6217   0013FC  CFED F19F          	movff	postdec0,??_delay+1
  6218   001400  C19E  FFFD         	movff	??_delay,tosl	;volatile
  6219   001404  C19F  FFFE         	movff	??_delay+1,tosh	;volatile
  6220   001408  6AFF               	clrf	255,c	;volatile
  6221   00140A                     i1l351:
  6222   00140A  EE24  F085         	lfsr	2,_r_queue+537
  6223   00140E  EE00 F002          	lfsr	0,2
  6224   001412  50DE               	movf	postinc2,w,c
  6225   001414  26E9               	addwf	fsr0l,f,c
  6226   001416  50DD               	movf	postdec2,w,c
  6227   001418  22EA               	addwfc	fsr0h,f,c
  6228   00141A  0E01               	movlw	1
  6229   00141C  6EEF               	movwf	indf0,c
  6230   00141E                     i1l2335:
  6231                           
  6232                           ;kernel.c: 38:     (INTCONbits.GIE = 1);
  6233   00141E  8EF2               	bsf	242,7,c	;volatile
  6234   001420  0012               	return		;funcret
  6235   001422                     __end_of_delay:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function _change_state *****************
  6239 ;; Defined at:
  6240 ;;		line 80 in file "kernel.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  new_state       1    wreg     enum E3348
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  new_state       1   55[BANK1 ] enum E3348
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1    wreg      void 
  6247 ;; Registers used:
  6248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6254 ;;      Params:         0       0       0       0       0       0       0       0       0
  6255 ;;      Locals:         0       0       1       0       0       0       0       0       0
  6256 ;;      Temps:          0       0       7       0       0       0       0       0       0
  6257 ;;      Totals:         0       0       8       0       0       0       0       0       0
  6258 ;;Total ram usage:        8 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; Hardware stack levels required when called: 7
  6261 ;; This function calls:
  6262 ;;		_scheduler
  6263 ;; This function is called by:
  6264 ;;		_tarefa_estabilidade
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text33
  6269   001422                     __ptext33:
  6270                           	callstack 0
  6271   001422                     _change_state:
  6272                           	callstack 17
  6273                           
  6274                           ;incstack = 0
  6275                           ;change_state@new_state stored from wreg
  6276   001422  0101               	movlb	1	; () banked
  6277   001424  6FA3               	movwf	change_state@new_state& (0+255),b
  6278   001426                     
  6279                           ;kernel.c: 80: void change_state(state_t new_state);kernel.c: 81: {;kernel.c: 82:     (I
      +                          NTCONbits.GIE = 0);
  6280   001426  9EF2               	bcf	242,7,c	;volatile
  6281   001428  C483  F19C         	movff	_r_queue+535,??_change_state
  6282   00142C  0101               	movlb	1	; () banked
  6283   00142E  519C               	movf	??_change_state& (0+255),w,b
  6284   001430  0D6B               	mullw	107
  6285   001432  0E6C               	movlw	low _r_queue
  6286   001434  24F3               	addwf	243,w,c
  6287   001436  6F9D               	movwf	(??_change_state+1)& (0+255),b
  6288   001438  0E02               	movlw	high _r_queue
  6289   00143A  20F4               	addwfc	prodh,w,c
  6290   00143C  6F9E               	movwf	(??_change_state+2)& (0+255),b
  6291   00143E  C19D  F485         	movff	??_change_state+1,_r_queue+537
  6292   001442  C19E  F486         	movff	??_change_state+2,_r_queue+538
  6293   001446                     
  6294                           ; BSR set to: 1
  6295   001446  EE24  F085         	lfsr	2,_r_queue+537
  6296   00144A  EE00 F002          	lfsr	0,2
  6297   00144E  50DE               	movf	postinc2,w,c
  6298   001450  26E9               	addwf	fsr0l,f,c
  6299   001452  50DD               	movf	postdec2,w,c
  6300   001454  22EA               	addwfc	fsr0h,f,c
  6301   001456  04EE               	decf	postinc0,w,c
  6302   001458  A4D8               	btfss	status,2,c
  6303   00145A  EF31  F00A         	goto	i1u130_21
  6304   00145E  EF33  F00A         	goto	i1u130_20
  6305   001462                     i1u130_21:
  6306   001462  EFA1  F00A         	goto	i1l2351
  6307   001466                     i1u130_20:
  6308   001466                     
  6309                           ; BSR set to: 1
  6310   001466  EE24  F085         	lfsr	2,_r_queue+537
  6311   00146A  EE00 F009          	lfsr	0,9
  6312   00146E  50DE               	movf	postinc2,w,c
  6313   001470  26E9               	addwf	fsr0l,f,c
  6314   001472  50DD               	movf	postdec2,w,c
  6315   001474  22EA               	addwfc	fsr0h,f,c
  6316   001476  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6317   00147A  EE24  F085         	lfsr	2,_r_queue+537
  6318   00147E  EE00 F008          	lfsr	0,8
  6319   001482  50DE               	movf	postinc2,w,c
  6320   001484  26E9               	addwf	fsr0l,f,c
  6321   001486  50DD               	movf	postdec2,w,c
  6322   001488  22EA               	addwfc	fsr0h,f,c
  6323   00148A  CFD8 FFEF          	movff	status,indf0	;volatile
  6324   00148E  EE24  F085         	lfsr	2,_r_queue+537
  6325   001492  EE00 F007          	lfsr	0,7
  6326   001496  50DE               	movf	postinc2,w,c
  6327   001498  26E9               	addwf	fsr0l,f,c
  6328   00149A  50DD               	movf	postdec2,w,c
  6329   00149C  22EA               	addwfc	fsr0h,f,c
  6330   00149E  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6331   0014A2  EE24  F085         	lfsr	2,_r_queue+537
  6332   0014A6  EE00 F06A          	lfsr	0,106
  6333   0014AA  50DE               	movf	postinc2,w,c
  6334   0014AC  26E9               	addwf	fsr0l,f,c
  6335   0014AE  50DD               	movf	postdec2,w,c
  6336   0014B0  22EA               	addwfc	fsr0h,f,c
  6337   0014B2  6AEF               	clrf	indf0,c
  6338   0014B4  EE24  F085         	lfsr	2,_r_queue+537
  6339   0014B8  EE00 F002          	lfsr	0,2
  6340   0014BC  50DE               	movf	postinc2,w,c
  6341   0014BE  26E9               	addwf	fsr0l,f,c
  6342   0014C0  50DD               	movf	postdec2,w,c
  6343   0014C2  22EA               	addwfc	fsr0h,f,c
  6344   0014C4  C1A3  FFEF         	movff	change_state@new_state,indf0
  6345   0014C8  EF99  F00A         	goto	i1l2349
  6346   0014CC                     i1l2345:
  6347   0014CC  EE24  F085         	lfsr	2,_r_queue+537
  6348   0014D0  EE00 F06A          	lfsr	0,106
  6349   0014D4  50DE               	movf	postinc2,w,c
  6350   0014D6  26E9               	addwf	fsr0l,f,c
  6351   0014D8  50DD               	movf	postdec2,w,c
  6352   0014DA  22EA               	addwfc	fsr0h,f,c
  6353   0014DC  50EF               	movf	indf0,w,c
  6354   0014DE  0101               	movlb	1	; () banked
  6355   0014E0  6F9C               	movwf	??_change_state& (0+255),b
  6356   0014E2  519C               	movf	??_change_state& (0+255),w,b
  6357   0014E4  0D03               	mullw	3
  6358   0014E6  CFF3 F19D          	movff	prodl,??_change_state+1
  6359   0014EA  CFF4 F19E          	movff	prodh,??_change_state+2
  6360   0014EE  EE24  F085         	lfsr	2,_r_queue+537
  6361   0014F2  CFDE F19F          	movff	postinc2,??_change_state+3
  6362   0014F6  CFDD F1A0          	movff	postdec2,??_change_state+4
  6363   0014FA  519D               	movf	(??_change_state+1)& (0+255),w,b
  6364   0014FC  259F               	addwf	(??_change_state+3)& (0+255),w,b
  6365   0014FE  6FA1               	movwf	(??_change_state+5)& (0+255),b
  6366   001500  519E               	movf	(??_change_state+2)& (0+255),w,b
  6367   001502  21A0               	addwfc	(??_change_state+4)& (0+255),w,b
  6368   001504  6FA2               	movwf	(??_change_state+6)& (0+255),b
  6369   001506  0E0A               	movlw	10
  6370   001508  25A1               	addwf	(??_change_state+5)& (0+255),w,b
  6371   00150A  6ED9               	movwf	fsr2l,c
  6372   00150C  0E00               	movlw	0
  6373   00150E  21A2               	addwfc	(??_change_state+6)& (0+255),w,b
  6374   001510  6EDA               	movwf	fsr2h,c
  6375   001512  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6376   001516  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6377   00151A  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6378   00151E                     
  6379                           ; BSR set to: 1
  6380   00151E  EE24  F085         	lfsr	2,_r_queue+537
  6381   001522  EE00 F06A          	lfsr	0,106
  6382   001526  50DE               	movf	postinc2,w,c
  6383   001528  26E9               	addwf	fsr0l,f,c
  6384   00152A  50DD               	movf	postdec2,w,c
  6385   00152C  22EA               	addwfc	fsr0h,f,c
  6386   00152E  2AEF               	incf	indf0,f,c
  6387   001530  0006               	pop		;# 
  6388   001532                     i1l2349:
  6389   001532  50FC               	movf	252,w,c	;volatile
  6390   001534  A4D8               	btfss	status,2,c
  6391   001536  EF9F  F00A         	goto	i1u131_21
  6392   00153A  EFA1  F00A         	goto	i1u131_20
  6393   00153E                     i1u131_21:
  6394   00153E  EF66  F00A         	goto	i1l2345
  6395   001542                     i1u131_20:
  6396   001542                     i1l2351:
  6397                           
  6398                           ;kernel.c: 85:     scheduler();
  6399   001542  ECF4  F012         	call	_scheduler	;wreg free
  6400   001546  C483  F19C         	movff	_r_queue+535,??_change_state
  6401   00154A  0101               	movlb	1	; () banked
  6402   00154C  519C               	movf	??_change_state& (0+255),w,b
  6403   00154E  0D6B               	mullw	107
  6404   001550  0E6C               	movlw	low _r_queue
  6405   001552  24F3               	addwf	243,w,c
  6406   001554  6F9D               	movwf	(??_change_state+1)& (0+255),b
  6407   001556  0E02               	movlw	high _r_queue
  6408   001558  20F4               	addwfc	prodh,w,c
  6409   00155A  6F9E               	movwf	(??_change_state+2)& (0+255),b
  6410   00155C  C19D  F485         	movff	??_change_state+1,_r_queue+537
  6411   001560  C19E  F486         	movff	??_change_state+2,_r_queue+538
  6412   001564                     
  6413                           ; BSR set to: 1
  6414   001564  EE24  F085         	lfsr	2,_r_queue+537
  6415   001568  EE00 F002          	lfsr	0,2
  6416   00156C  50DE               	movf	postinc2,w,c
  6417   00156E  26E9               	addwf	fsr0l,f,c
  6418   001570  50DD               	movf	postdec2,w,c
  6419   001572  22EA               	addwfc	fsr0h,f,c
  6420   001574  50EF               	movf	indf0,w,c
  6421   001576  A4D8               	btfss	status,2,c
  6422   001578  EFC0  F00A         	goto	i1u132_21
  6423   00157C  EFC2  F00A         	goto	i1u132_20
  6424   001580                     i1u132_21:
  6425   001580  EF53  F00B         	goto	i1l2369
  6426   001584                     i1u132_20:
  6427   001584                     
  6428                           ; BSR set to: 1
  6429   001584  6AFC               	clrf	252,c	;volatile
  6430   001586                     
  6431                           ; BSR set to: 1
  6432   001586  EE24  F085         	lfsr	2,_r_queue+537
  6433   00158A  EE00 F06A          	lfsr	0,106
  6434   00158E  50DE               	movf	postinc2,w,c
  6435   001590  26E9               	addwf	fsr0l,f,c
  6436   001592  50DD               	movf	postdec2,w,c
  6437   001594  22EA               	addwfc	fsr0h,f,c
  6438   001596  50EF               	movf	indf0,w,c
  6439   001598  B4D8               	btfsc	status,2,c
  6440   00159A  EFD1  F00A         	goto	i1u133_21
  6441   00159E  EFD3  F00A         	goto	i1u133_20
  6442   0015A2                     i1u133_21:
  6443   0015A2  EF37  F00B         	goto	i1l386
  6444   0015A6                     i1u133_20:
  6445   0015A6                     
  6446                           ; BSR set to: 1
  6447   0015A6  EE24  F085         	lfsr	2,_r_queue+537
  6448   0015AA  EE00 F009          	lfsr	0,9
  6449   0015AE  50DE               	movf	postinc2,w,c
  6450   0015B0  26E9               	addwf	fsr0l,f,c
  6451   0015B2  50DD               	movf	postdec2,w,c
  6452   0015B4  22EA               	addwfc	fsr0h,f,c
  6453   0015B6  50EF               	movf	indf0,w,c
  6454   0015B8  6EE0               	movwf	224,c	;volatile
  6455   0015BA  EE24  F085         	lfsr	2,_r_queue+537
  6456   0015BE  EE00 F008          	lfsr	0,8
  6457   0015C2  50DE               	movf	postinc2,w,c
  6458   0015C4  26E9               	addwf	fsr0l,f,c
  6459   0015C6  50DD               	movf	postdec2,w,c
  6460   0015C8  22EA               	addwfc	fsr0h,f,c
  6461   0015CA  50EF               	movf	indf0,w,c
  6462   0015CC  6ED8               	movwf	216,c	;volatile
  6463   0015CE  EE24  F085         	lfsr	2,_r_queue+537
  6464   0015D2  EE00 F007          	lfsr	0,7
  6465   0015D6  50DE               	movf	postinc2,w,c
  6466   0015D8  26E9               	addwf	fsr0l,f,c
  6467   0015DA  50DD               	movf	postdec2,w,c
  6468   0015DC  22EA               	addwfc	fsr0h,f,c
  6469   0015DE  50EF               	movf	indf0,w,c
  6470   0015E0  6F9C               	movwf	??_change_state& (0+255),b
  6471   0015E2  519C               	movf	??_change_state& (0+255),w,b
  6472   0015E4                     i1l387:
  6473                           
  6474                           ; BSR set to: 1
  6475   0015E4  0005               	push		;# 
  6476   0015E6  EE24  F085         	lfsr	2,_r_queue+537
  6477   0015EA  EE00 F06A          	lfsr	0,106
  6478   0015EE  50DE               	movf	postinc2,w,c
  6479   0015F0  26E9               	addwf	fsr0l,f,c
  6480   0015F2  50DD               	movf	postdec2,w,c
  6481   0015F4  22EA               	addwfc	fsr0h,f,c
  6482   0015F6  06EF               	decf	indf0,f,c
  6483   0015F8  EE24  F085         	lfsr	2,_r_queue+537
  6484   0015FC  EE00 F06A          	lfsr	0,106
  6485   001600  50DE               	movf	postinc2,w,c
  6486   001602  26E9               	addwf	fsr0l,f,c
  6487   001604  50DD               	movf	postdec2,w,c
  6488   001606  22EA               	addwfc	fsr0h,f,c
  6489   001608  50EF               	movf	indf0,w,c
  6490   00160A  0101               	movlb	1	; () banked
  6491   00160C  6F9C               	movwf	??_change_state& (0+255),b
  6492   00160E  519C               	movf	??_change_state& (0+255),w,b
  6493   001610  0D03               	mullw	3
  6494   001612  CFF3 F19D          	movff	prodl,??_change_state+1
  6495   001616  CFF4 F19E          	movff	prodh,??_change_state+2
  6496   00161A  EE24  F085         	lfsr	2,_r_queue+537
  6497   00161E  CFDE F19F          	movff	postinc2,??_change_state+3
  6498   001622  CFDD F1A0          	movff	postdec2,??_change_state+4
  6499   001626  519D               	movf	(??_change_state+1)& (0+255),w,b
  6500   001628  259F               	addwf	(??_change_state+3)& (0+255),w,b
  6501   00162A  6FA1               	movwf	(??_change_state+5)& (0+255),b
  6502   00162C  519E               	movf	(??_change_state+2)& (0+255),w,b
  6503   00162E  21A0               	addwfc	(??_change_state+4)& (0+255),w,b
  6504   001630  6FA2               	movwf	(??_change_state+6)& (0+255),b
  6505   001632  0E0A               	movlw	10
  6506   001634  25A1               	addwf	(??_change_state+5)& (0+255),w,b
  6507   001636  6ED9               	movwf	fsr2l,c
  6508   001638  0E00               	movlw	0
  6509   00163A  21A2               	addwfc	(??_change_state+6)& (0+255),w,b
  6510   00163C  6EDA               	movwf	fsr2h,c
  6511   00163E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6512   001642  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6513   001646  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6514   00164A                     
  6515                           ; BSR set to: 1
  6516   00164A  EE24  F085         	lfsr	2,_r_queue+537
  6517   00164E  EE00 F06A          	lfsr	0,106
  6518   001652  50DE               	movf	postinc2,w,c
  6519   001654  26E9               	addwf	fsr0l,f,c
  6520   001656  50DD               	movf	postdec2,w,c
  6521   001658  22EA               	addwfc	fsr0h,f,c
  6522   00165A  50EF               	movf	indf0,w,c
  6523   00165C  A4D8               	btfss	status,2,c
  6524   00165E  EF33  F00B         	goto	i1u134_21
  6525   001662  EF35  F00B         	goto	i1u134_20
  6526   001666                     i1u134_21:
  6527   001666  EFF2  F00A         	goto	i1l387
  6528   00166A                     i1u134_20:
  6529   00166A  EF49  F00B         	goto	i1l389
  6530   00166E                     i1l386:
  6531                           
  6532                           ; BSR set to: 1
  6533   00166E  0005               	push		;# 
  6534   001670  EE24  F085         	lfsr	2,_r_queue+537
  6535   001674  EE00 F003          	lfsr	0,3
  6536   001678  50DE               	movf	postinc2,w,c
  6537   00167A  26E9               	addwf	fsr0l,f,c
  6538   00167C  50DD               	movf	postdec2,w,c
  6539   00167E  22EA               	addwfc	fsr0h,f,c
  6540   001680  CFEE F19C          	movff	postinc0,??_change_state
  6541   001684  CFED F19D          	movff	postdec0,??_change_state+1
  6542   001688  C19C  FFFD         	movff	??_change_state,tosl	;volatile
  6543   00168C  C19D  FFFE         	movff	??_change_state+1,tosh	;volatile
  6544   001690  6AFF               	clrf	255,c	;volatile
  6545   001692                     i1l389:
  6546   001692  EE24  F085         	lfsr	2,_r_queue+537
  6547   001696  EE00 F002          	lfsr	0,2
  6548   00169A  50DE               	movf	postinc2,w,c
  6549   00169C  26E9               	addwf	fsr0l,f,c
  6550   00169E  50DD               	movf	postdec2,w,c
  6551   0016A0  22EA               	addwfc	fsr0h,f,c
  6552   0016A2  0E01               	movlw	1
  6553   0016A4  6EEF               	movwf	indf0,c
  6554   0016A6                     i1l2369:
  6555                           
  6556                           ;kernel.c: 88:     (INTCONbits.GIE = 1);
  6557   0016A6  8EF2               	bsf	242,7,c	;volatile
  6558   0016A8  0012               	return		;funcret
  6559   0016AA                     __end_of_change_state:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function _idle *****************
  6563 ;; Defined at:
  6564 ;;		line 92 in file "kernel.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		None
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used: 1
  6584 ;; Hardware stack levels required when called: 4
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_os_init
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text34
  6593   0025E0                     __ptext34:
  6594                           	callstack 0
  6595   0025E0                     _idle:
  6596                           	callstack 21
  6597   0025E0                     l394:
  6598                           
  6599                           ;kernel.c: 99:     {;kernel.c: 103:         __nop();
  6600   0025E0  0000               	nop	
  6601   0025E2  EFF0  F012         	goto	l394
  6602   0025E6  0012               	return		;funcret
  6603   0025E8                     __end_of_idle:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function _ISR *****************
  6607 ;; Defined at:
  6608 ;;		line 12 in file "timer.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  i               1   24[COMRAM] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6622 ;;      Params:         0       0       0       0       0       0       0       0       0
  6623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6624 ;;      Temps:         18       0       0       0       0       0       0       0       0
  6625 ;;      Totals:        19       0       0       0       0       0       0       0       0
  6626 ;;Total ram usage:       19 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; Hardware stack levels required when called: 3
  6629 ;; This function calls:
  6630 ;;		_decrease_time
  6631 ;;		_scheduler
  6632 ;;		i2_create_task
  6633 ;; This function is called by:
  6634 ;;		Interrupt level 2
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	intcode
  6639   000008                     __pintcode:
  6640                           	callstack 0
  6641   000008                     _ISR:
  6642                           	callstack 16
  6643                           
  6644                           ;incstack = 0
  6645   000008  ED01  F004         	call	int_func,f	;refresh shadow registers
  6646                           
  6647                           	psect	intcode_body
  6648   000802                     __pintcode_body:
  6649                           	callstack 16
  6650   000802                     int_func:
  6651                           	callstack 16
  6652   000802  0006               	pop		; remove dummy address from shadow register refresh
  6653   000804  CFE9 F02E          	movff	fsr0l,??_ISR+7
  6654   000808  CFEA F02F          	movff	fsr0h,??_ISR+8
  6655   00080C  CFE1 F030          	movff	fsr1l,??_ISR+9
  6656   000810  CFE2 F031          	movff	fsr1h,??_ISR+10
  6657   000814  CFD9 F032          	movff	fsr2l,??_ISR+11
  6658   000818  CFDA F033          	movff	fsr2h,??_ISR+12
  6659   00081C  CFF3 F034          	movff	prodl,??_ISR+13
  6660   000820  CFF4 F035          	movff	prodh,??_ISR+14
  6661   000824  C001  F036         	movff	btemp,??_ISR+15
  6662   000828  C00B  F037         	movff	btemp+10,??_ISR+16
  6663   00082C  C00C  F038         	movff	btemp+11,??_ISR+17
  6664   000830  EE16  F044         	lfsr	1,___inthi_sp
  6665   000834                     
  6666                           ;timer.c: 14:     (INTCONbits.GIE = 0);
  6667   000834  9EF2               	bcf	242,7,c	;volatile
  6668                           
  6669                           ;timer.c: 17:     if (INTCONbits.INT0IF)
  6670   000836  A2F2               	btfss	242,1,c	;volatile
  6671   000838  EF20  F004         	goto	i2u147_41
  6672   00083C  EF22  F004         	goto	i2u147_40
  6673   000840                     i2u147_41:
  6674   000840  EF63  F004         	goto	i2l438
  6675   000844                     i2u147_40:
  6676   000844                     
  6677                           ;timer.c: 18:     {;timer.c: 19:         INTCONbits.INT0IF = 0;
  6678   000844  92F2               	bcf	242,1,c	;volatile
  6679   000846                     
  6680                           ;timer.c: 21:         if (!est_created) {
  6681   000846  5045               	movf	_est_created^0,w,c
  6682   000848  A4D8               	btfss	status,2,c
  6683   00084A  EF29  F004         	goto	i2u148_41
  6684   00084E  EF2B  F004         	goto	i2u148_40
  6685   000852                     i2u148_41:
  6686   000852  EF38  F004         	goto	i2l439
  6687   000856                     i2u148_40:
  6688   000856                     
  6689                           ;timer.c: 23:             create_task(4, 1, tarefa_estabilidade);
  6690   000856  0E01               	movlw	1
  6691   000858  6E21               	movwf	i2create_task@priority^0,c
  6692   00085A  0EBA               	movlw	low _tarefa_estabilidade
  6693   00085C  6E22               	movwf	i2create_task@task^0,c
  6694   00085E  0E24               	movlw	high _tarefa_estabilidade
  6695   000860  6E23               	movwf	(i2create_task@task+1)^0,c
  6696   000862  0E04               	movlw	4
  6697   000864  EC85  F011         	call	i2_create_task
  6698   000868                     
  6699                           ;timer.c: 24:             est_created = 1;
  6700   000868  0E01               	movlw	1
  6701   00086A  6E45               	movwf	_est_created^0,c
  6702                           
  6703                           ;timer.c: 25:         } else {
  6704   00086C  EF63  F004         	goto	i2l438
  6705   000870                     i2l439:
  6706                           
  6707                           ;timer.c: 27:             for (uint8_t i = 0; i < r_queue.ready_queue_size; i++) {
  6708   000870  6A39               	clrf	ISR@i^0,c
  6709   000872  EF58  F004         	goto	i2l2511
  6710   000876                     i2l2505:
  6711                           
  6712                           ;timer.c: 28:                 if (r_queue.ready_queue[i].task_id == 4) {
  6713   000876  5039               	movf	ISR@i^0,w,c
  6714   000878  0D6B               	mullw	107
  6715   00087A  0E6C               	movlw	low _r_queue
  6716   00087C  24F3               	addwf	243,w,c
  6717   00087E  6ED9               	movwf	fsr2l,c
  6718   000880  0E02               	movlw	high _r_queue
  6719   000882  20F4               	addwfc	prodh,w,c
  6720   000884  6EDA               	movwf	fsr2h,c
  6721   000886  0E04               	movlw	4
  6722   000888  18DE               	xorwf	postinc2,w,c
  6723   00088A  A4D8               	btfss	status,2,c
  6724   00088C  EF4A  F004         	goto	i2u149_41
  6725   000890  EF4C  F004         	goto	i2u149_40
  6726   000894                     i2u149_41:
  6727   000894  EF57  F004         	goto	i2l2509
  6728   000898                     i2u149_40:
  6729   000898                     
  6730                           ;timer.c: 29:                     r_queue.ready_queue[i].task_state = READY;
  6731   000898  5039               	movf	ISR@i^0,w,c
  6732   00089A  0D6B               	mullw	107
  6733   00089C  0E6E               	movlw	low (_r_queue+2)
  6734   00089E  24F3               	addwf	243,w,c
  6735   0008A0  6ED9               	movwf	fsr2l,c
  6736   0008A2  0E02               	movlw	high (_r_queue+2)
  6737   0008A4  20F4               	addwfc	prodh,w,c
  6738   0008A6  6EDA               	movwf	fsr2h,c
  6739   0008A8  6ADF               	clrf	indf2,c
  6740                           
  6741                           ;timer.c: 30:                     break;
  6742   0008AA  EF63  F004         	goto	i2l438
  6743   0008AE                     i2l2509:
  6744                           
  6745                           ;timer.c: 32:             }
  6746   0008AE  2A39               	incf	ISR@i^0,f,c
  6747   0008B0                     i2l2511:
  6748   0008B0  EE24  F084         	lfsr	2,_r_queue+536
  6749   0008B4  50DE               	movf	postinc2,w,c
  6750   0008B6  5C39               	subwf	ISR@i^0,w,c
  6751   0008B8  A0D8               	btfss	status,0,c
  6752   0008BA  EF61  F004         	goto	i2u150_41
  6753   0008BE  EF63  F004         	goto	i2u150_40
  6754   0008C2                     i2u150_41:
  6755   0008C2  EF3B  F004         	goto	i2l2505
  6756   0008C6                     i2u150_40:
  6757   0008C6                     i2l438:
  6758                           
  6759                           ;timer.c: 37:     if (INTCONbits.TMR0IF)
  6760   0008C6  A4F2               	btfss	242,2,c	;volatile
  6761   0008C8  EF68  F004         	goto	i2u151_41
  6762   0008CC  EF6A  F004         	goto	i2u151_40
  6763   0008D0                     i2u151_41:
  6764   0008D0  EFAB  F005         	goto	i2l2549
  6765   0008D4                     i2u151_40:
  6766   0008D4                     
  6767                           ;timer.c: 38:     {;timer.c: 39:         INTCONbits.TMR0IF = 0;
  6768   0008D4  94F2               	bcf	242,2,c	;volatile
  6769   0008D6                     
  6770                           ;timer.c: 40:         TMR0 = 0;
  6771   0008D6  0E00               	movlw	0
  6772   0008D8  6ED7               	movwf	215,c	;volatile
  6773   0008DA  0E00               	movlw	0
  6774   0008DC  6ED6               	movwf	214,c	;volatile
  6775   0008DE                     
  6776                           ;timer.c: 42:         decrease_time();
  6777   0008DE  ECC9  F00F         	call	_decrease_time	;wreg free
  6778   0008E2  C483  F027         	movff	_r_queue+535,??_ISR
  6779   0008E6  5027               	movf	??_ISR^0,w,c
  6780   0008E8  0D6B               	mullw	107
  6781   0008EA  0E6C               	movlw	low _r_queue
  6782   0008EC  24F3               	addwf	243,w,c
  6783   0008EE  6E28               	movwf	(??_ISR+1)^0,c
  6784   0008F0  0E02               	movlw	high _r_queue
  6785   0008F2  20F4               	addwfc	prodh,w,c
  6786   0008F4  6E29               	movwf	(??_ISR+2)^0,c
  6787   0008F6  C028  F485         	movff	??_ISR+1,_r_queue+537
  6788   0008FA  C029  F486         	movff	??_ISR+2,_r_queue+538
  6789   0008FE  EE24  F085         	lfsr	2,_r_queue+537
  6790   000902  EE00 F002          	lfsr	0,2
  6791   000906  50DE               	movf	postinc2,w,c
  6792   000908  26E9               	addwf	fsr0l,f,c
  6793   00090A  50DD               	movf	postdec2,w,c
  6794   00090C  22EA               	addwfc	fsr0h,f,c
  6795   00090E  04EE               	decf	postinc0,w,c
  6796   000910  A4D8               	btfss	status,2,c
  6797   000912  EF8D  F004         	goto	i2u152_41
  6798   000916  EF8F  F004         	goto	i2u152_40
  6799   00091A                     i2u152_41:
  6800   00091A  EFFB  F004         	goto	i2l2531
  6801   00091E                     i2u152_40:
  6802   00091E  EE24  F085         	lfsr	2,_r_queue+537
  6803   000922  EE00 F009          	lfsr	0,9
  6804   000926  50DE               	movf	postinc2,w,c
  6805   000928  26E9               	addwf	fsr0l,f,c
  6806   00092A  50DD               	movf	postdec2,w,c
  6807   00092C  22EA               	addwfc	fsr0h,f,c
  6808   00092E  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6809   000932  EE24  F085         	lfsr	2,_r_queue+537
  6810   000936  EE00 F008          	lfsr	0,8
  6811   00093A  50DE               	movf	postinc2,w,c
  6812   00093C  26E9               	addwf	fsr0l,f,c
  6813   00093E  50DD               	movf	postdec2,w,c
  6814   000940  22EA               	addwfc	fsr0h,f,c
  6815   000942  CFD8 FFEF          	movff	status,indf0	;volatile
  6816   000946  EE24  F085         	lfsr	2,_r_queue+537
  6817   00094A  EE00 F007          	lfsr	0,7
  6818   00094E  50DE               	movf	postinc2,w,c
  6819   000950  26E9               	addwf	fsr0l,f,c
  6820   000952  50DD               	movf	postdec2,w,c
  6821   000954  22EA               	addwfc	fsr0h,f,c
  6822   000956  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6823   00095A  EE24  F085         	lfsr	2,_r_queue+537
  6824   00095E  EE00 F06A          	lfsr	0,106
  6825   000962  50DE               	movf	postinc2,w,c
  6826   000964  26E9               	addwf	fsr0l,f,c
  6827   000966  50DD               	movf	postdec2,w,c
  6828   000968  22EA               	addwfc	fsr0h,f,c
  6829   00096A  6AEF               	clrf	indf0,c
  6830   00096C  EE24  F085         	lfsr	2,_r_queue+537
  6831   000970  EE00 F002          	lfsr	0,2
  6832   000974  50DE               	movf	postinc2,w,c
  6833   000976  26E9               	addwf	fsr0l,f,c
  6834   000978  50DD               	movf	postdec2,w,c
  6835   00097A  22EA               	addwfc	fsr0h,f,c
  6836   00097C  6AEF               	clrf	indf0,c
  6837   00097E  EFF3  F004         	goto	i2l2529
  6838   000982                     i2l2525:
  6839   000982  EE24  F085         	lfsr	2,_r_queue+537
  6840   000986  EE00 F06A          	lfsr	0,106
  6841   00098A  50DE               	movf	postinc2,w,c
  6842   00098C  26E9               	addwf	fsr0l,f,c
  6843   00098E  50DD               	movf	postdec2,w,c
  6844   000990  22EA               	addwfc	fsr0h,f,c
  6845   000992  50EF               	movf	indf0,w,c
  6846   000994  6E27               	movwf	??_ISR^0,c
  6847   000996  5027               	movf	??_ISR^0,w,c
  6848   000998  0D03               	mullw	3
  6849   00099A  CFF3 F028          	movff	prodl,??_ISR+1
  6850   00099E  CFF4 F029          	movff	prodh,??_ISR+2
  6851   0009A2  EE24  F085         	lfsr	2,_r_queue+537
  6852   0009A6  CFDE F02A          	movff	postinc2,??_ISR+3
  6853   0009AA  CFDD F02B          	movff	postdec2,??_ISR+4
  6854   0009AE  5028               	movf	(??_ISR+1)^0,w,c
  6855   0009B0  242A               	addwf	(??_ISR+3)^0,w,c
  6856   0009B2  6E2C               	movwf	(??_ISR+5)^0,c
  6857   0009B4  5029               	movf	(??_ISR+2)^0,w,c
  6858   0009B6  202B               	addwfc	(??_ISR+4)^0,w,c
  6859   0009B8  6E2D               	movwf	(??_ISR+6)^0,c
  6860   0009BA  0E0A               	movlw	10
  6861   0009BC  242C               	addwf	(??_ISR+5)^0,w,c
  6862   0009BE  6ED9               	movwf	fsr2l,c
  6863   0009C0  0E00               	movlw	0
  6864   0009C2  202D               	addwfc	(??_ISR+6)^0,w,c
  6865   0009C4  6EDA               	movwf	fsr2h,c
  6866   0009C6  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6867   0009CA  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6868   0009CE  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6869   0009D2  EE24  F085         	lfsr	2,_r_queue+537
  6870   0009D6  EE00 F06A          	lfsr	0,106
  6871   0009DA  50DE               	movf	postinc2,w,c
  6872   0009DC  26E9               	addwf	fsr0l,f,c
  6873   0009DE  50DD               	movf	postdec2,w,c
  6874   0009E0  22EA               	addwfc	fsr0h,f,c
  6875   0009E2  2AEF               	incf	indf0,f,c
  6876   0009E4  0006               	pop		;# 
  6877   0009E6                     i2l2529:
  6878   0009E6  50FC               	movf	252,w,c	;volatile
  6879   0009E8  A4D8               	btfss	status,2,c
  6880   0009EA  EFF9  F004         	goto	i2u153_41
  6881   0009EE  EFFB  F004         	goto	i2u153_40
  6882   0009F2                     i2u153_41:
  6883   0009F2  EFC1  F004         	goto	i2l2525
  6884   0009F6                     i2u153_40:
  6885   0009F6                     i2l2531:
  6886                           
  6887                           ;timer.c: 45:         scheduler();
  6888   0009F6  ECF4  F012         	call	_scheduler	;wreg free
  6889   0009FA  C483  F027         	movff	_r_queue+535,??_ISR
  6890   0009FE  5027               	movf	??_ISR^0,w,c
  6891   000A00  0D6B               	mullw	107
  6892   000A02  0E6C               	movlw	low _r_queue
  6893   000A04  24F3               	addwf	243,w,c
  6894   000A06  6E28               	movwf	(??_ISR+1)^0,c
  6895   000A08  0E02               	movlw	high _r_queue
  6896   000A0A  20F4               	addwfc	prodh,w,c
  6897   000A0C  6E29               	movwf	(??_ISR+2)^0,c
  6898   000A0E  C028  F485         	movff	??_ISR+1,_r_queue+537
  6899   000A12  C029  F486         	movff	??_ISR+2,_r_queue+538
  6900   000A16  EE24  F085         	lfsr	2,_r_queue+537
  6901   000A1A  EE00 F002          	lfsr	0,2
  6902   000A1E  50DE               	movf	postinc2,w,c
  6903   000A20  26E9               	addwf	fsr0l,f,c
  6904   000A22  50DD               	movf	postdec2,w,c
  6905   000A24  22EA               	addwfc	fsr0h,f,c
  6906   000A26  50EF               	movf	indf0,w,c
  6907   000A28  A4D8               	btfss	status,2,c
  6908   000A2A  EF19  F005         	goto	i2u154_41
  6909   000A2E  EF1B  F005         	goto	i2u154_40
  6910   000A32                     i2u154_41:
  6911   000A32  EFAB  F005         	goto	i2l2549
  6912   000A36                     i2u154_40:
  6913   000A36  6AFC               	clrf	252,c	;volatile
  6914   000A38  EE24  F085         	lfsr	2,_r_queue+537
  6915   000A3C  EE00 F06A          	lfsr	0,106
  6916   000A40  50DE               	movf	postinc2,w,c
  6917   000A42  26E9               	addwf	fsr0l,f,c
  6918   000A44  50DD               	movf	postdec2,w,c
  6919   000A46  22EA               	addwfc	fsr0h,f,c
  6920   000A48  50EF               	movf	indf0,w,c
  6921   000A4A  B4D8               	btfsc	status,2,c
  6922   000A4C  EF2A  F005         	goto	i2u155_41
  6923   000A50  EF2C  F005         	goto	i2u155_40
  6924   000A54                     i2u155_41:
  6925   000A54  EF8F  F005         	goto	i2l454
  6926   000A58                     i2u155_40:
  6927   000A58  EE24  F085         	lfsr	2,_r_queue+537
  6928   000A5C  EE00 F009          	lfsr	0,9
  6929   000A60  50DE               	movf	postinc2,w,c
  6930   000A62  26E9               	addwf	fsr0l,f,c
  6931   000A64  50DD               	movf	postdec2,w,c
  6932   000A66  22EA               	addwfc	fsr0h,f,c
  6933   000A68  50EF               	movf	indf0,w,c
  6934   000A6A  6EE0               	movwf	224,c	;volatile
  6935   000A6C  EE24  F085         	lfsr	2,_r_queue+537
  6936   000A70  EE00 F008          	lfsr	0,8
  6937   000A74  50DE               	movf	postinc2,w,c
  6938   000A76  26E9               	addwf	fsr0l,f,c
  6939   000A78  50DD               	movf	postdec2,w,c
  6940   000A7A  22EA               	addwfc	fsr0h,f,c
  6941   000A7C  50EF               	movf	indf0,w,c
  6942   000A7E  6ED8               	movwf	216,c	;volatile
  6943   000A80  EE24  F085         	lfsr	2,_r_queue+537
  6944   000A84  EE00 F007          	lfsr	0,7
  6945   000A88  50DE               	movf	postinc2,w,c
  6946   000A8A  26E9               	addwf	fsr0l,f,c
  6947   000A8C  50DD               	movf	postdec2,w,c
  6948   000A8E  22EA               	addwfc	fsr0h,f,c
  6949   000A90  50EF               	movf	indf0,w,c
  6950   000A92  6E27               	movwf	??_ISR^0,c
  6951   000A94  5027               	movf	??_ISR^0,w,c
  6952   000A96                     i2l455:
  6953   000A96  0005               	push		;# 
  6954   000A98  EE24  F085         	lfsr	2,_r_queue+537
  6955   000A9C  EE00 F06A          	lfsr	0,106
  6956   000AA0  50DE               	movf	postinc2,w,c
  6957   000AA2  26E9               	addwf	fsr0l,f,c
  6958   000AA4  50DD               	movf	postdec2,w,c
  6959   000AA6  22EA               	addwfc	fsr0h,f,c
  6960   000AA8  06EF               	decf	indf0,f,c
  6961   000AAA  EE24  F085         	lfsr	2,_r_queue+537
  6962   000AAE  EE00 F06A          	lfsr	0,106
  6963   000AB2  50DE               	movf	postinc2,w,c
  6964   000AB4  26E9               	addwf	fsr0l,f,c
  6965   000AB6  50DD               	movf	postdec2,w,c
  6966   000AB8  22EA               	addwfc	fsr0h,f,c
  6967   000ABA  50EF               	movf	indf0,w,c
  6968   000ABC  6E27               	movwf	??_ISR^0,c
  6969   000ABE  5027               	movf	??_ISR^0,w,c
  6970   000AC0  0D03               	mullw	3
  6971   000AC2  CFF3 F028          	movff	prodl,??_ISR+1
  6972   000AC6  CFF4 F029          	movff	prodh,??_ISR+2
  6973   000ACA  EE24  F085         	lfsr	2,_r_queue+537
  6974   000ACE  CFDE F02A          	movff	postinc2,??_ISR+3
  6975   000AD2  CFDD F02B          	movff	postdec2,??_ISR+4
  6976   000AD6  5028               	movf	(??_ISR+1)^0,w,c
  6977   000AD8  242A               	addwf	(??_ISR+3)^0,w,c
  6978   000ADA  6E2C               	movwf	(??_ISR+5)^0,c
  6979   000ADC  5029               	movf	(??_ISR+2)^0,w,c
  6980   000ADE  202B               	addwfc	(??_ISR+4)^0,w,c
  6981   000AE0  6E2D               	movwf	(??_ISR+6)^0,c
  6982   000AE2  0E0A               	movlw	10
  6983   000AE4  242C               	addwf	(??_ISR+5)^0,w,c
  6984   000AE6  6ED9               	movwf	fsr2l,c
  6985   000AE8  0E00               	movlw	0
  6986   000AEA  202D               	addwfc	(??_ISR+6)^0,w,c
  6987   000AEC  6EDA               	movwf	fsr2h,c
  6988   000AEE  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6989   000AF2  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6990   000AF6  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6991   000AFA  EE24  F085         	lfsr	2,_r_queue+537
  6992   000AFE  EE00 F06A          	lfsr	0,106
  6993   000B02  50DE               	movf	postinc2,w,c
  6994   000B04  26E9               	addwf	fsr0l,f,c
  6995   000B06  50DD               	movf	postdec2,w,c
  6996   000B08  22EA               	addwfc	fsr0h,f,c
  6997   000B0A  50EF               	movf	indf0,w,c
  6998   000B0C  A4D8               	btfss	status,2,c
  6999   000B0E  EF8B  F005         	goto	i2u156_41
  7000   000B12  EF8D  F005         	goto	i2u156_40
  7001   000B16                     i2u156_41:
  7002   000B16  EF4B  F005         	goto	i2l455
  7003   000B1A                     i2u156_40:
  7004   000B1A  EFA1  F005         	goto	i2l457
  7005   000B1E                     i2l454:
  7006   000B1E  0005               	push		;# 
  7007   000B20  EE24  F085         	lfsr	2,_r_queue+537
  7008   000B24  EE00 F003          	lfsr	0,3
  7009   000B28  50DE               	movf	postinc2,w,c
  7010   000B2A  26E9               	addwf	fsr0l,f,c
  7011   000B2C  50DD               	movf	postdec2,w,c
  7012   000B2E  22EA               	addwfc	fsr0h,f,c
  7013   000B30  CFEE F027          	movff	postinc0,??_ISR
  7014   000B34  CFED F028          	movff	postdec0,??_ISR+1
  7015   000B38  C027  FFFD         	movff	??_ISR,tosl	;volatile
  7016   000B3C  C028  FFFE         	movff	??_ISR+1,tosh	;volatile
  7017   000B40  6AFF               	clrf	255,c	;volatile
  7018   000B42                     i2l457:
  7019   000B42  EE24  F085         	lfsr	2,_r_queue+537
  7020   000B46  EE00 F002          	lfsr	0,2
  7021   000B4A  50DE               	movf	postinc2,w,c
  7022   000B4C  26E9               	addwf	fsr0l,f,c
  7023   000B4E  50DD               	movf	postdec2,w,c
  7024   000B50  22EA               	addwfc	fsr0h,f,c
  7025   000B52  0E01               	movlw	1
  7026   000B54  6EEF               	movwf	indf0,c
  7027   000B56                     i2l2549:
  7028                           
  7029                           ;timer.c: 49:     (INTCONbits.GIE = 1);
  7030   000B56  8EF2               	bsf	242,7,c	;volatile
  7031   000B58  C038  F00C         	movff	??_ISR+17,btemp+11
  7032   000B5C  C037  F00B         	movff	??_ISR+16,btemp+10
  7033   000B60  C036  F001         	movff	??_ISR+15,btemp
  7034   000B64  C035  FFF4         	movff	??_ISR+14,prodh
  7035   000B68  C034  FFF3         	movff	??_ISR+13,prodl
  7036   000B6C  C033  FFDA         	movff	??_ISR+12,fsr2h
  7037   000B70  C032  FFD9         	movff	??_ISR+11,fsr2l
  7038   000B74  C031  FFE2         	movff	??_ISR+10,fsr1h
  7039   000B78  C030  FFE1         	movff	??_ISR+9,fsr1l
  7040   000B7C  C02F  FFEA         	movff	??_ISR+8,fsr0h
  7041   000B80  C02E  FFE9         	movff	??_ISR+7,fsr0l
  7042   000B84  0011               	retfie		f
  7043   000B86                     __end_of_ISR:
  7044                           	callstack 0
  7045                           
  7046 ;; *************** function i2_create_task *****************
  7047 ;; Defined at:
  7048 ;;		line 11 in file "kernel.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  id              1    wreg     unsigned char 
  7051 ;;  priority        1    0[COMRAM] unsigned char 
  7052 ;;  task            2    1[COMRAM] PTR FTN()void 
  7053 ;;		 -> idle(1), tarefa_estabilidade(1), tarefa_injecao_eletronica(1), tarefa_controle_central(1), 
  7054 ;;		 -> tarefa_acelerador(1), 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;  id              1    0[BANK0 ] unsigned char 
  7057 ;;  new_task      107    1[BANK0 ] struct tcb
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7067 ;;      Params:         3       0       0       0       0       0       0       0       0
  7068 ;;      Locals:         0     108       0       0       0       0       0       0       0
  7069 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7070 ;;      Totals:         4     108       0       0       0       0       0       0       0
  7071 ;;Total ram usage:      112 bytes
  7072 ;; Hardware stack levels used: 1
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_ISR
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text36
  7081   00230A                     __ptext36:
  7082                           	callstack 0
  7083   00230A                     i2_create_task:
  7084                           	callstack 18
  7085                           
  7086                           ;incstack = 0
  7087                           ;i2create_task@id stored from wreg
  7088   00230A  0100               	movlb	0	; () banked
  7089   00230C  6F60               	movwf	i2create_task@id& (0+255),b
  7090   00230E                     
  7091                           ;kernel.c: 11: void create_task(uint8_t id, uint8_t priority, f_ptr task);kernel.c: 12: 
      +                          {;kernel.c: 13:     tcb_t new_task;;kernel.c: 15:     new_task.task_id = id;
  7092   00230E  C060  F061         	movff	i2create_task@id,i2create_task@new_task
  7093   002312                     
  7094                           ;kernel.c: 16:     new_task.task_priority = priority;
  7095   002312  C021  F062         	movff	i2create_task@priority,i2create_task@new_task+1
  7096   002316                     
  7097                           ;kernel.c: 17:     new_task.task_f = task;
  7098   002316  C022  F064         	movff	i2create_task@task,i2create_task@new_task+3
  7099   00231A  C023  F065         	movff	i2create_task@task+1,i2create_task@new_task+4
  7100   00231E                     
  7101                           ;kernel.c: 19:     new_task.task_sp = 0;
  7102   00231E  0100               	movlb	0	; () banked
  7103   002320  6BCB               	clrf	(i2create_task@new_task+106)& (0+255),b
  7104   002322                     
  7105                           ; BSR set to: 0
  7106                           ;kernel.c: 20:     new_task.time_sleeping = 0;
  7107   002322  0E00               	movlw	0
  7108   002324  6F67               	movwf	(i2create_task@new_task+6)& (0+255),b
  7109   002326  0E00               	movlw	0
  7110   002328  6F66               	movwf	(i2create_task@new_task+5)& (0+255),b
  7111   00232A                     
  7112                           ; BSR set to: 0
  7113                           ;kernel.c: 21:     new_task.task_state = READY;
  7114   00232A  6B63               	clrf	(i2create_task@new_task+2)& (0+255),b
  7115   00232C                     
  7116                           ; BSR set to: 0
  7117                           ;kernel.c: 23:     new_task.BSR_REG = 0x000;
  7118   00232C  6B6A               	clrf	(i2create_task@new_task+9)& (0+255),b
  7119   00232E                     
  7120                           ; BSR set to: 0
  7121                           ;kernel.c: 24:     new_task.W_REG = 0x000;
  7122   00232E  6B68               	clrf	(i2create_task@new_task+7)& (0+255),b
  7123   002330                     
  7124                           ; BSR set to: 0
  7125                           ;kernel.c: 25:     new_task.STATUS_REG = 0x000;
  7126   002330  6B69               	clrf	(i2create_task@new_task+8)& (0+255),b
  7127   002332                     
  7128                           ; BSR set to: 0
  7129                           ;kernel.c: 27:     r_queue.ready_queue[r_queue.ready_queue_size] = new_task;
  7130   002332  EE20  F061         	lfsr	2,i2create_task@new_task
  7131   002336  C484  F024         	movff	_r_queue+536,??i2_create_task
  7132   00233A  5024               	movf	??i2_create_task^0,w,c
  7133   00233C  0D6B               	mullw	107
  7134   00233E  0E6C               	movlw	low _r_queue
  7135   002340  24F3               	addwf	243,w,c
  7136   002342  6EE9               	movwf	fsr0l,c
  7137   002344  0E02               	movlw	high _r_queue
  7138   002346  20F4               	addwfc	prodh,w,c
  7139   002348  6EEA               	movwf	fsr0h,c
  7140   00234A  0E6A               	movlw	106
  7141   00234C                     i2u144_41:
  7142   00234C  CFDB FFEB          	movff	plusw2,plusw0
  7143   002350  06E8               	decf	wreg,f,c
  7144   002352  E2FC               	bc	i2u144_41
  7145   002354                     
  7146                           ; BSR set to: 0
  7147                           ;kernel.c: 28:     r_queue.ready_queue_size += 1;
  7148   002354  C484  FFE8         	movff	_r_queue+536,wreg
  7149   002358  0F01               	addlw	1
  7150   00235A  CFE8 F484          	movff	wreg,_r_queue+536
  7151   00235E                     
  7152                           ; BSR set to: 0
  7153   00235E  0012               	return		;funcret
  7154   002360                     __end_ofi2_create_task:
  7155                           	callstack 0
  7156                           
  7157 ;; *************** function i2___awmod *****************
  7158 ;; Defined at:
  7159 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  dividend        2    0[COMRAM] int 
  7162 ;;  divisor         2    2[COMRAM] int 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  sign            1    5[COMRAM] unsigned char 
  7165 ;;  counter         1    4[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  2    0[COMRAM] int 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7175 ;;      Params:         4       0       0       0       0       0       0       0       0
  7176 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7178 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7179 ;;Total ram usage:        6 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 4
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_priority_scheduler
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text37
  7190   001DA6                     __ptext37:
  7191                           	callstack 0
  7192   001DA6                     i2___awmod:
  7193                           	callstack 12
  7194   001DA6  6A26               	clrf	i2___awmod@sign^0,c
  7195   001DA8  BE22               	btfsc	(i2___awmod@dividend+1)^0,7,c
  7196   001DAA  EFDB  F00E         	goto	i2u90_40
  7197   001DAE  EFD9  F00E         	goto	i2u90_41
  7198   001DB2                     i2u90_41:
  7199   001DB2  EFE1  F00E         	goto	i2l1987
  7200   001DB6                     i2u90_40:
  7201   001DB6  6C21               	negf	i2___awmod@dividend^0,c
  7202   001DB8  1E22               	comf	(i2___awmod@dividend+1)^0,f,c
  7203   001DBA  B0D8               	btfsc	status,0,c
  7204   001DBC  2A22               	incf	(i2___awmod@dividend+1)^0,f,c
  7205   001DBE  0E01               	movlw	1
  7206   001DC0  6E26               	movwf	i2___awmod@sign^0,c
  7207   001DC2                     i2l1987:
  7208   001DC2  BE24               	btfsc	(i2___awmod@divisor+1)^0,7,c
  7209   001DC4  EFE8  F00E         	goto	i2u91_40
  7210   001DC8  EFE6  F00E         	goto	i2u91_41
  7211   001DCC                     i2u91_41:
  7212   001DCC  EFEC  F00E         	goto	i2l1991
  7213   001DD0                     i2u91_40:
  7214   001DD0  6C23               	negf	i2___awmod@divisor^0,c
  7215   001DD2  1E24               	comf	(i2___awmod@divisor+1)^0,f,c
  7216   001DD4  B0D8               	btfsc	status,0,c
  7217   001DD6  2A24               	incf	(i2___awmod@divisor+1)^0,f,c
  7218   001DD8                     i2l1991:
  7219   001DD8  5023               	movf	i2___awmod@divisor^0,w,c
  7220   001DDA  1024               	iorwf	(i2___awmod@divisor+1)^0,w,c
  7221   001DDC  B4D8               	btfsc	status,2,c
  7222   001DDE  EFF3  F00E         	goto	i2u92_41
  7223   001DE2  EFF5  F00E         	goto	i2u92_40
  7224   001DE6                     i2u92_41:
  7225   001DE6  EF19  F00F         	goto	i2l2007
  7226   001DEA                     i2u92_40:
  7227   001DEA  0E01               	movlw	1
  7228   001DEC  6E25               	movwf	i2___awmod@counter^0,c
  7229   001DEE  EFFD  F00E         	goto	i2l1997
  7230   001DF2                     i2l1995:
  7231   001DF2  90D8               	bcf	status,0,c
  7232   001DF4  3623               	rlcf	i2___awmod@divisor^0,f,c
  7233   001DF6  3624               	rlcf	(i2___awmod@divisor+1)^0,f,c
  7234   001DF8  2A25               	incf	i2___awmod@counter^0,f,c
  7235   001DFA                     i2l1997:
  7236   001DFA  AE24               	btfss	(i2___awmod@divisor+1)^0,7,c
  7237   001DFC  EF02  F00F         	goto	i2u93_41
  7238   001E00  EF04  F00F         	goto	i2u93_40
  7239   001E04                     i2u93_41:
  7240   001E04  EFF9  F00E         	goto	i2l1995
  7241   001E08                     i2u93_40:
  7242   001E08                     i2l1999:
  7243   001E08  5023               	movf	i2___awmod@divisor^0,w,c
  7244   001E0A  5C21               	subwf	i2___awmod@dividend^0,w,c
  7245   001E0C  5024               	movf	(i2___awmod@divisor+1)^0,w,c
  7246   001E0E  5822               	subwfb	(i2___awmod@dividend+1)^0,w,c
  7247   001E10  A0D8               	btfss	status,0,c
  7248   001E12  EF0D  F00F         	goto	i2u94_41
  7249   001E16  EF0F  F00F         	goto	i2u94_40
  7250   001E1A                     i2u94_41:
  7251   001E1A  EF13  F00F         	goto	i2l2003
  7252   001E1E                     i2u94_40:
  7253   001E1E  5023               	movf	i2___awmod@divisor^0,w,c
  7254   001E20  5E21               	subwf	i2___awmod@dividend^0,f,c
  7255   001E22  5024               	movf	(i2___awmod@divisor+1)^0,w,c
  7256   001E24  5A22               	subwfb	(i2___awmod@dividend+1)^0,f,c
  7257   001E26                     i2l2003:
  7258   001E26  90D8               	bcf	status,0,c
  7259   001E28  3224               	rrcf	(i2___awmod@divisor+1)^0,f,c
  7260   001E2A  3223               	rrcf	i2___awmod@divisor^0,f,c
  7261   001E2C  2E25               	decfsz	i2___awmod@counter^0,f,c
  7262   001E2E  EF04  F00F         	goto	i2l1999
  7263   001E32                     i2l2007:
  7264   001E32  5026               	movf	i2___awmod@sign^0,w,c
  7265   001E34  B4D8               	btfsc	status,2,c
  7266   001E36  EF1F  F00F         	goto	i2u95_41
  7267   001E3A  EF21  F00F         	goto	i2u95_40
  7268   001E3E                     i2u95_41:
  7269   001E3E  EF25  F00F         	goto	i2l2011
  7270   001E42                     i2u95_40:
  7271   001E42  6C21               	negf	i2___awmod@dividend^0,c
  7272   001E44  1E22               	comf	(i2___awmod@dividend+1)^0,f,c
  7273   001E46  B0D8               	btfsc	status,0,c
  7274   001E48  2A22               	incf	(i2___awmod@dividend+1)^0,f,c
  7275   001E4A                     i2l2011:
  7276   001E4A  C021  F021         	movff	i2___awmod@dividend,?i2___awmod
  7277   001E4E  C022  F022         	movff	i2___awmod@dividend+1,?i2___awmod+1
  7278   001E52  0012               	return		;funcret
  7279   001E54                     __end_ofi2___awmod:
  7280                           	callstack 0
  7281                           
  7282 ;; *************** function _decrease_time *****************
  7283 ;; Defined at:
  7284 ;;		line 107 in file "kernel.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;		None
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;  i               1    2[COMRAM] unsigned char 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      void 
  7291 ;; Registers used:
  7292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7298 ;;      Params:         0       0       0       0       0       0       0       0       0
  7299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7300 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7301 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7302 ;;Total ram usage:        3 bytes
  7303 ;; Hardware stack levels used: 1
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_ISR
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text38
  7312   001F92                     __ptext38:
  7313                           	callstack 0
  7314   001F92                     _decrease_time:
  7315                           	callstack 18
  7316   001F92                     
  7317                           ;kernel.c: 109:     for (uint8_t i = 1; i < r_queue.ready_queue_size; i++)
  7318   001F92  0E01               	movlw	1
  7319   001F94  6E23               	movwf	decrease_time@i^0,c
  7320   001F96  EF04  F010         	goto	i2l2381
  7321   001F9A                     i2l2373:
  7322                           
  7323                           ;kernel.c: 110:     {;kernel.c: 111:         if (r_queue.ready_queue[i].time_sleeping > 
      +                          0)
  7324   001F9A  5023               	movf	decrease_time@i^0,w,c
  7325   001F9C  0D6B               	mullw	107
  7326   001F9E  0E71               	movlw	low (_r_queue+5)
  7327   001FA0  24F3               	addwf	243,w,c
  7328   001FA2  6ED9               	movwf	fsr2l,c
  7329   001FA4  0E02               	movlw	high (_r_queue+5)
  7330   001FA6  20F4               	addwfc	prodh,w,c
  7331   001FA8  6EDA               	movwf	fsr2h,c
  7332   001FAA  50DE               	movf	postinc2,w,c
  7333   001FAC  10DE               	iorwf	postinc2,w,c
  7334   001FAE  B4D8               	btfsc	status,2,c
  7335   001FB0  EFDC  F00F         	goto	i2u135_41
  7336   001FB4  EFDE  F00F         	goto	i2u135_40
  7337   001FB8                     i2u135_41:
  7338   001FB8  EF03  F010         	goto	i2l2379
  7339   001FBC                     i2u135_40:
  7340   001FBC                     
  7341                           ;kernel.c: 112:         {;kernel.c: 113:             r_queue.ready_queue[i].time_sleepin
      +                          g--;
  7342   001FBC  5023               	movf	decrease_time@i^0,w,c
  7343   001FBE  0D6B               	mullw	107
  7344   001FC0  0E71               	movlw	low (_r_queue+5)
  7345   001FC2  24F3               	addwf	243,w,c
  7346   001FC4  6ED9               	movwf	fsr2l,c
  7347   001FC6  0E02               	movlw	high (_r_queue+5)
  7348   001FC8  20F4               	addwfc	prodh,w,c
  7349   001FCA  6EDA               	movwf	fsr2h,c
  7350   001FCC  06DE               	decf	postinc2,f,c
  7351   001FCE  0E00               	movlw	0
  7352   001FD0  5ADD               	subwfb	postdec2,f,c
  7353                           
  7354                           ;kernel.c: 114:             if (r_queue.ready_queue[i].time_sleeping == 0)
  7355   001FD2  5023               	movf	decrease_time@i^0,w,c
  7356   001FD4  0D6B               	mullw	107
  7357   001FD6  0E71               	movlw	low (_r_queue+5)
  7358   001FD8  24F3               	addwf	243,w,c
  7359   001FDA  6ED9               	movwf	fsr2l,c
  7360   001FDC  0E02               	movlw	high (_r_queue+5)
  7361   001FDE  20F4               	addwfc	prodh,w,c
  7362   001FE0  6EDA               	movwf	fsr2h,c
  7363   001FE2  50DE               	movf	postinc2,w,c
  7364   001FE4  10DE               	iorwf	postinc2,w,c
  7365   001FE6  A4D8               	btfss	status,2,c
  7366   001FE8  EFF8  F00F         	goto	i2u136_41
  7367   001FEC  EFFA  F00F         	goto	i2u136_40
  7368   001FF0                     i2u136_41:
  7369   001FF0  EF03  F010         	goto	i2l2379
  7370   001FF4                     i2u136_40:
  7371   001FF4                     
  7372                           ;kernel.c: 115:             {;kernel.c: 116:                 r_queue.ready_queue[i].task
      +                          _state = READY;
  7373   001FF4  5023               	movf	decrease_time@i^0,w,c
  7374   001FF6  0D6B               	mullw	107
  7375   001FF8  0E6E               	movlw	low (_r_queue+2)
  7376   001FFA  24F3               	addwf	243,w,c
  7377   001FFC  6ED9               	movwf	fsr2l,c
  7378   001FFE  0E02               	movlw	high (_r_queue+2)
  7379   002000  20F4               	addwfc	prodh,w,c
  7380   002002  6EDA               	movwf	fsr2h,c
  7381   002004  6ADF               	clrf	indf2,c
  7382   002006                     i2l2379:
  7383                           
  7384                           ;kernel.c: 119:     }
  7385   002006  2A23               	incf	decrease_time@i^0,f,c
  7386   002008                     i2l2381:
  7387   002008  EE24  F084         	lfsr	2,_r_queue+536
  7388   00200C  50DE               	movf	postinc2,w,c
  7389   00200E  5C23               	subwf	decrease_time@i^0,w,c
  7390   002010  A0D8               	btfss	status,0,c
  7391   002012  EF0D  F010         	goto	i2u137_41
  7392   002016  EF0F  F010         	goto	i2u137_40
  7393   00201A                     i2u137_41:
  7394   00201A  EFCD  F00F         	goto	i2l2373
  7395   00201E                     i2u137_40:
  7396   00201E  0012               	return		;funcret
  7397   002020                     __end_of_decrease_time:
  7398                           	callstack 0
  7399                           
  7400                           	psect	smallconst
  7401   000800                     __psmallconst:
  7402                           	callstack 0
  7403   000800  00                 	db	0
  7404   000801  00                 	db	0	; dummy byte at the end
  7405   000800                     __smallconst    set	__psmallconst
  7406   000800                     __mediumconst   set	__psmallconst
  7407   000002                     __activetblptr  equ	2
  7408                           
  7409                           	psect	rparam
  7410   000001                     ___rparam_used  equ	1
  7411   000000                     ___param_bank   equ	0
  7412   000000                     __Lparam        equ	__Lrparam
  7413   000000                     __Hparam        equ	__Hrparam
  7414                           
  7415                           	psect	temp
  7416   000001                     btemp:
  7417                           	callstack 0
  7418   000001                     	ds	32
  7419   000001                     wtemp0          set	btemp
  7420   000003                     wtemp1          set	btemp+2
  7421   000005                     wtemp2          set	btemp+4
  7422   000007                     wtemp3          set	btemp+6
  7423   000009                     wtemp4          set	btemp+8
  7424   00000B                     wtemp5          set	btemp+10
  7425   000002                     wtemp8          set	btemp+1
  7426   000001                     ttemp0          set	btemp
  7427   000004                     ttemp1          set	btemp+3
  7428   000007                     ttemp2          set	btemp+6
  7429   00000A                     ttemp3          set	btemp+9
  7430   000002                     ttemp5          set	btemp+1
  7431   000005                     ttemp6          set	btemp+4
  7432   000009                     ttemp7          set	btemp+8
  7433   000001                     ltemp0          set	btemp
  7434   000005                     ltemp1          set	btemp+4
  7435   000009                     ltemp2          set	btemp+8
  7436   000001                     lltemp0         set	btemp
  7437   000009                     lltemp1         set	btemp+8
  7438   000011                     lltemp2         set	btemp+16
  7439   000019                     lltemp3         set	btemp+24
  7440                           tosu	equ	0xFFF
  7441                           tosh	equ	0xFFE
  7442                           tosl	equ	0xFFD
  7443                           stkptr	equ	0xFFC
  7444                           pclatu	equ	0xFFB
  7445                           pclath	equ	0xFFA
  7446                           pcl	equ	0xFF9
  7447                           tblptru	equ	0xFF8
  7448                           tblptrh	equ	0xFF7
  7449                           tblptrl	equ	0xFF6
  7450                           tablat	equ	0xFF5
  7451                           prodh	equ	0xFF4
  7452                           prodl	equ	0xFF3
  7453                           indf0	equ	0xFEF
  7454                           postinc0	equ	0xFEE
  7455                           postdec0	equ	0xFED
  7456                           preinc0	equ	0xFEC
  7457                           plusw0	equ	0xFEB
  7458                           fsr0h	equ	0xFEA
  7459                           fsr0l	equ	0xFE9
  7460                           wreg	equ	0xFE8
  7461                           indf1	equ	0xFE7
  7462                           postinc1	equ	0xFE6
  7463                           postdec1	equ	0xFE5
  7464                           preinc1	equ	0xFE4
  7465                           plusw1	equ	0xFE3
  7466                           fsr1h	equ	0xFE2
  7467                           fsr1l	equ	0xFE1
  7468                           bsr	equ	0xFE0
  7469                           indf2	equ	0xFDF
  7470                           postinc2	equ	0xFDE
  7471                           postdec2	equ	0xFDD
  7472                           preinc2	equ	0xFDC
  7473                           plusw2	equ	0xFDB
  7474                           fsr2h	equ	0xFDA
  7475                           fsr2l	equ	0xFD9
  7476                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         656
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     29      38
    BANK0           160    108     108
    BANK1           256     57     166
    BANK2           256    108     108
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    accel_pipe$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    create_pipe@p	PTR struct pipe size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    create_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    create_task@task	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    ext_int_callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2create_task@new_task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    mutex_init@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    mutex_lock@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    mutex_unlock@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    new_task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$ready_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), r_queue$ready_queue(BIGRAM[535]), 

    r_queue$task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    read_pipe@data	PTR unsigned char  size(2) Largest target is 1
		 -> tarefa_controle_central@data(BANK1[1]), 

    read_pipe@p	PTR struct pipe size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    read_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    S274pipe$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    S68tcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    S79ready_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), 

    sem_init@sem	PTR struct sem size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    sem_post@sem	PTR struct sem size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    sem_wait@sem	PTR struct sem size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    t	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), r_queue$ready_queue(BIGRAM[535]), 

    t$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    write_pipe@p	PTR struct pipe size(2) Largest target is 20
		 -> accel_pipe(BANK1[20]), 

    write_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _user_config->_create_pipe
    _create_pipe->_SRAMalloc
    _SRAMalloc->__SRAMmerge
    _os_init->_SRAMInitHeap
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in COMRAM

    _tarefa_acelerador->_adc_read

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_injecao_eletronica in COMRAM

    None.

Critical Paths under _tarefa_estabilidade in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tarefa_acelerador in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK0

    None.

Critical Paths under _tarefa_estabilidade in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->i2_create_task

Critical Paths under _main in BANK1

    None.

Critical Paths under _tarefa_acelerador in BANK1

    _tarefa_acelerador->_write_pipe

Critical Paths under _tarefa_controle_central in BANK1

    _tarefa_controle_central->_read_pipe
    _read_pipe->_sem_wait

Critical Paths under _tarefa_injecao_eletronica in BANK1

    _tarefa_injecao_eletronica->_mutex_lock

Critical Paths under _tarefa_estabilidade in BANK1

    _tarefa_estabilidade->_delay

Critical Paths under _idle in BANK1

    None.

Critical Paths under _idle in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_create_task
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK2

    None.

Critical Paths under _tarefa_estabilidade in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tarefa_acelerador in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK3

    None.

Critical Paths under _tarefa_estabilidade in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tarefa_acelerador in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK4

    None.

Critical Paths under _tarefa_estabilidade in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tarefa_acelerador in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK5

    None.

Critical Paths under _tarefa_estabilidade in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tarefa_acelerador in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK6

    None.

Critical Paths under _tarefa_estabilidade in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tarefa_acelerador in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK7

    None.

Critical Paths under _tarefa_estabilidade in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2290
                        _create_task
                            _os_init
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1206
                       _start_timer0
                        _user_config
 ---------------------------------------------------------------------------------
 (2) _user_config                                          0     0      0    1206
                           _adc_init
                      _config_timer0
                        _create_pipe
                       _int_ext_init
                         _mutex_init
                           _pwm_init
                       _start_timer0
 ---------------------------------------------------------------------------------
 (3) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           2     0      2      67
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _int_ext_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          2     0      2    1139
                                             19 COMRAM     2     0      2
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             4     0      4      92
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                           11     9      2     936
                                              8 COMRAM    11     9      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           8     6      2     403
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_init                                              0     0      0     621
                       _SRAMInitHeap
                      _config_timer0
                        _create_task
 ---------------------------------------------------------------------------------
 (2) _create_task                                        112   109      3     463
                                              0 COMRAM     4     1      3
                                              0 BANK2    108   108      0
 ---------------------------------------------------------------------------------
 (3) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     158
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_acelerador                                    5     5      0    2596
                                             15 BANK1      5     5      0
                           _adc_read
                         _write_pipe
                              _yield
 ---------------------------------------------------------------------------------
 (7) _yield                                                7     7      0     661
                                             38 BANK1      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           6     3      3    1765
                                              9 BANK1      6     3      3
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             9     7      2     795
                                             20 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (13) _scheduler                                           0     0      0     661
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (14) _priority_scheduler                                  7     7      0     661
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1090
                                             48 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             6     4      2     450
                                             20 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              2     2      0    4745
                                             36 BANK1      2     2      0
                            ___awmod
                         _mutex_lock
                       _mutex_unlock
                          _read_pipe
                              _yield
 ---------------------------------------------------------------------------------
 (7) _yield                                                7     7      0     661
                                             38 BANK1      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            7     3      4    1765
                                             29 BANK1      7     3      4
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             9     7      2     795
                                             20 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             6     4      2     450
                                             20 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         6     4      2     179
                                             38 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           9     7      2     795
                                             38 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (13) _scheduler                                           0     0      0     661
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (14) _priority_scheduler                                  7     7      0     661
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1090
                                             48 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_injecao_eletronica                            1     1      0    1822
                                             47 BANK1      1     1      0
                         _mutex_lock
                       _mutex_unlock
                            _pwm_set
                              _yield
 ---------------------------------------------------------------------------------
 (7) _yield                                                7     7      0     661
                                             38 BANK1      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _pwm_set                                              5     5      0     120
                                             38 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         6     4      2     179
                                             38 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           9     7      2     795
                                             38 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (13) _scheduler                                           0     0      0     661
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (14) _priority_scheduler                                  7     7      0     661
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1090
                                             48 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_estabilidade                                  0     0      0    1374
                       _change_state
                              _delay
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     684
                                             48 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _change_state                                         8     8      0     690
                                             48 BANK1      8     8      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (13) _scheduler                                           0     0      0     661
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (14) _priority_scheduler                                  7     7      0     661
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1090
                                             48 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR                                                19    19      0    1131
                                              6 COMRAM    19    19      0
                      _decrease_time
                          _scheduler
                      i2_create_task
 ---------------------------------------------------------------------------------
 (13) i2_create_task                                     112   109      3     290
                                              0 COMRAM     4     1      3
                                              0 BANK0    108   108      0
 ---------------------------------------------------------------------------------
 (13) _scheduler                                           0     0      0     661
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (14) _priority_scheduler                                  7     7      0     661
                          i2___awmod
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     300
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) _decrease_time                                       3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _create_task
   _os_init
     _SRAMInitHeap
     _config_timer0
     _create_task
   _os_start
     _start_timer0
     _user_config
       _adc_init
       _config_timer0
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _int_ext_init
       _mutex_init
       _pwm_init
       _start_timer0

 _tarefa_acelerador (ROOT)
   _adc_read
   _write_pipe
     _sem_post
     _sem_wait
       _scheduler
         _priority_scheduler
           i2___awmod
   _yield
     _scheduler

 _tarefa_controle_central (ROOT)
   ___awmod
   _mutex_lock
     _scheduler
       _priority_scheduler
         i2___awmod
   _mutex_unlock
   _read_pipe
     _sem_post
     _sem_wait
       _scheduler
   _yield
     _scheduler

 _tarefa_injecao_eletronica (ROOT)
   _mutex_lock
     _scheduler
       _priority_scheduler
         i2___awmod
   _mutex_unlock
   _pwm_set
   _yield
     _scheduler

 _tarefa_estabilidade (ROOT)
   _change_state
     _scheduler
       _priority_scheduler
         i2___awmod
   _delay
     _scheduler

 _idle (ROOT)

 _idle (ROOT)

 _ISR (ROOT)
   _decrease_time
   _scheduler
     _priority_scheduler
       i2___awmod
   i2_create_task

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     539     26.3%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256    108     108     42.2%
BITBANK1           256      0       0      0.0%
BANK1              256     57     166     64.8%
BITBANK0           160      0       0      0.0%
BANK0              160    108     108     67.5%
BITBIGSFRh          66      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     29      38     60.3%
BITBIGSFRlh         48      0       0      0.0%
BITBIGSFRll         44      0       0      0.0%
STACK                0      0      42      0.0%
DATA                 0      0    1001      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 29 17:13:28 2025

                                l17 2436                                  l18 2436  
                                l29 25EC                                  l46 1AF6  
                                l47 1AF0                                  l66 2516  
                                l90 2540                        create_pipe@p 0034  
                     SRAMalloc@temp 002D                                 l211 25C6  
                               l220 25B6                                 l142 1C1C  
                               l151 1C18                                 l144 1B50  
                               l128 2256                                 l304 24B8  
                               l162 21F2                                 l227 25DE  
                               l167 1C64                                 l168 1CF4  
                               l337 2308                                 l282 2258  
                               l276 243E                                 l372 2568  
                               l462 25A2                                 l375 25D2  
                               l288 2360                                 l297 24BA  
                               l465 25F0                                 l394 25E0  
                               l298 24DE                                 _BSR 0FE0  
                               _PR2 0FCB                                 _ISR 0008  
                               u800 1C72                                 u801 1C6E  
                               u810 1C80                                 u811 1C7C  
                               u820 1C98                                 u821 1C94  
                               u830 1CB2                                 u831 1CAE  
                               u840 1B12                                 u841 1B0E  
                               u850 1B4C                                 u851 1B48  
                               u860 1B5E                                 u861 1B5A  
                               u790 1C5E                                 u870 1B70  
                               u791 1C5A                                 u871 1B6C  
                               u880 1B8C                                 u881 1B88  
                               u890 1BB4                                 u891 1BB0  
                               _TOS 0FFD                       create_task@id 0200  
                      ___awmod@sign 01A1                                 prod 0FF3  
                               wreg 0FE8                __end_of_change_state 16AA  
                    SRAMalloc@pHeap 0032                   SRAMInitHeap@pHeap 0021  
                _priority_scheduler 192C                                ?_ISR 0021  
                 SRAMInitHeap@count 0023                                ISR@i 0039  
                              l2041 1948                                l2121 218E  
                              l3001 2560                                l2051 19CC  
                              l2043 196A                                l2131 21C8  
                              l2123 2196                                l3003 2564  
                              l2061 1A82                                l2053 1A06  
                              l2045 1990                                l2037 1934  
                              l2133 21D8                                l2125 219E  
                              l2141 248C                                l3005 23F8  
                              l2063 1AAE                                l2055 1A0E  
                              l2071 1AD4                                l2047 19AC  
                              l2039 193E                                l2135 21E4  
                              l2127 21B4                                l2151 24B0  
                              l2143 2498                                l3007 2432  
                              l2065 1AB8                                l2057 1A3C  
                              l2049 19B0                                l2129 21C0  
                              l2153 24B4                                l2145 24A4  
                              l2059 1A5A                                l2147 24A8  
                              l2139 2482                                l2163 25C8  
                              l2069 1AD0                                l2149 24AC  
                              l2165 25CC                                l2167 25CE  
                              l2169 25E8                                l2471 2370  
                              l2551 22B8                                l1903 1B1E  
                              l2481 23A0                                l2473 2374  
                              l2561 22D4                                l2553 22BC  
                              l1921 1BA2                                l1905 1B26  
                              l2491 24CE                                l2483 23A4  
                              l2475 2382                                l2571 22FE  
                              l2563 22D6                                l2555 22C0  
                              l1851 1C42                                l1923 1BB4  
                              l1931 1BCE                                l1915 1B5E  
                              l1907 1B32                                l2493 24DC  
                              l2485 23A6                                l2477 2396  
                              l2469 2362                                l2565 22D8  
                              l2557 22C8                                l1853 1C4E  
                              l1933 1BDC                                l1925 1BBE  
                              l1917 1B70                                l1909 1B3C  
                              l2487 24BA                                l2479 239C  
                              l2567 22DA                                l2559 22CC  
                              l1871 1C9C                                l1855 1C5E  
                              l1847 1C1E                                l1935 1BE8  
                              l1919 1B8C                                l1951 220A  
                              l1943 2518                                l2489 24CA  
                              l2569 22DC                                l1961 25C4  
                              l1881 1CE0                                l1873 1CB2  
                              l1865 1C84                                l1849 1C36  
                              l1937 1C0C                                l1953 2218  
                              l1945 2524                                l1875 1CBE  
                              l1859 1C72                                l1891 24EA  
                              l1955 2226                                l1971 25D4  
                              l1947 2532                                l1963 25A4  
                              l1973 2588                                l1877 1CC6  
                              l1893 24FA                                l1957 223E  
                              l1949 21F4                                l1965 25A6  
                              l1975 2592                                l1959 25B8  
                              l1879 1CD2                                l1887 1CE6  
                              l1895 2508                                l1967 25AA  
                              l1897 1B02                                l1969 25B0  
                              l1977 25EE                                l1899 1B12  
                              l2981 2478                                l2973 2440  
                              l2991 229A                                l2983 225A  
                              l2975 244C                                l2993 22A8  
                              l2985 2270                                l2977 2466  
                              l2995 22AA                                l2987 228A  
                              l2979 2476                                l2989 2296  
                              l2997 2542                                l2999 254E  
                              u1100 21B4                                u1101 21B0  
                              _LATD 0F8C                                u1571 22F6  
                              i1l81 1168                                i1l83 117E  
                              i1l78 1144                                i1l87 1F90  
                              i1l79 10BA                                _TMR0 0FD6  
                              _WREG 0FE8                         _user_config 2482  
                              _idle 25E0                                _main 23F8  
                              fsr0h 0FEA                                fsr1h 0FE2  
                              indf0 0FEF                                fsr2h 0FDA  
                              fsr0l 0FE9                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              btemp 0001                        _start_timer0 25EE  
                              prodh 0FF4                                prodl 0FF3  
                              start 000C                     SRAMalloc@nBytes 0031  
   __end_of_tarefa_controle_central 22B4                        ___param_bank 0000  
                   SRAMalloc@segLen 002F   __end_of_tarefa_injecao_eletronica 23B0  
                             ??_ISR 0027                   _tarefa_acelerador 243E  
                             ?_idle 0021                               ?_main 0021  
             __end_of_decrease_time 2020                     __end_of___awmod 1DA6  
                             _T2CON 0FCA                               i1l103 0E48  
                             i1l104 0DBE                               i1l113 1EF4  
                             i1l106 0E6C                               i1l131 211E  
                             i1l108 0E82                               i1l134 20A2  
                             i1l214 256C                               i1l224 218C  
                             i1l217 2586                               i1l351 140A  
                             i1l353 1420                               i1l348 13E6  
                             i1l364 18F0                               i1l349 135C  
                             i1l365 1866                               i1l391 16A8  
                             i1l367 1914                               i1l712 1DA4  
                             i1l369 192A                               i1l386 166E  
                             i1l387 15E4                               i2l405 201E  
                             i1l389 1692                               i2l337 235E  
                             i2l454 0B1E                               i2l438 08C6  
                             i2l455 0A96                               i2l439 0870  
                             i2l712 1E52                               i2l457 0B42  
                             i2l459 0B58                  ?_tarefa_acelerador 0021  
                             u97_20 196A                               u97_21 1966  
                             u98_20 1990                               u98_21 198C  
                             u99_20 19CC                               u99_21 19C8  
                        __SRAMmerge 1C1E                               _delay 1180  
               ??_tarefa_acelerador 017B                     create_task@task 0022  
                             _yield 16AA                     __end_of_os_init 256A  
                             tablat 0FF5                               ltemp0 0001  
                             ltemp1 0005                               ltemp2 0009  
                             plusw0 0FEB                               plusw1 0FE3  
                             plusw2 0FDB                     __end_of_pwm_set 218E  
                             ttemp0 0001                               ttemp1 0004  
                             ttemp2 0007                               ttemp3 000A  
                             ttemp5 0002                               ttemp6 0005  
                             ttemp7 0009                               status 0FD8  
                   ??_config_timer0 0021                               wtemp0 0001  
                             wtemp1 0003                               wtemp2 0005  
                             wtemp3 0007                               wtemp4 0009  
                             wtemp5 000B                               wtemp8 0002  
                    write_pipe@data 0177                     __initialization 23B0  
                      __end_of_idle 25E8                        __end_of_main 243E  
         __end_of_tarefa_acelerador 2482                              ??_idle 016C  
                            ??_main 0036                       __activetblptr 0002  
                            ?_delay 019C                              _ADCON0 0FC2  
                            _ADCON1 0FC1                              _ADCON2 0FC0  
                            _ADRESH 0FC4                              _ADRESL 0FC3  
                            _CCPR1L 0FBE                              ?_yield 0021  
                  __end_of_adc_init 25C8                    __end_of_adc_read 2588  
                            u100_20 1A82                              u100_21 1A7E  
                            u101_20 1AAE                              u101_21 1AAA  
                            u102_20 1AF0                              u102_21 1AEC  
                            i1l2101 107C                              i1l2103 10CE  
                            i1l2201 0D60                              i1l2105 1120  
                            i1l2203 0D80                              i1l2211 0E80  
                            i1l2107 1146                              i1l2301 1180  
                            i1l2205 0DD2                              i1l2221 1EC0  
                            i1l2213 1E54                              i1l2109 117C  
                            i1l2311 1278                              i1l2303 1182  
                            i1l2207 0E24                              i1l2223 1EE6  
                            i1l2215 1E56                              i1l2321 12DC  
                            i1l2313 128C                              i1l2305 11A0  
                            i1l2209 0E4A                              i1l2225 1EF2  
                            i1l2217 1E82                              i1l2081 0F1C  
                            i1l2073 0E84                              i1l2331 13C2  
                            i1l2323 12FC                              i1l2307 11C0  
                            i1l2315 129C                              i1l2171 0B86  
                            i1l2219 1EAE                              i1l2251 256A  
                            i1l2083 0F3C                              i1l2091 1018  
                            i1l2075 0E86                              i1l2341 1446  
                            i1l2333 13E8                              i1l2325 12FE  
                            i1l2317 12BA                              i1l2309 1226  
                            i1l2261 215A                              i1l2181 0C04  
                            i1l2173 0B88                              i1l2253 257A  
                            i1l2093 101C                              i1l2085 0FA2  
                            i1l2077 0EAC                              i1l2343 1466  
                            i1l2351 1542                              i1l2327 131E  
                            i1l2335 141E                              i1l2319 12BE  
                            i1l2263 2160                              i1l2191 0D0C  
                            i1l2183 0C20                              i1l2175 0BA0  
                            i1l2095 103A                              i1l2087 0FF4  
                            i1l2079 0F00                              i1l2271 16CA  
                            i1l2361 15A6                              i1l2353 1546  
                            i1l2345 14CC                              i1l2337 1426  
                            i1l2329 1370                              i1l2265 2178  
                            i1l2257 2124                              i1l2185 0C40  
                            i1l2193 0D1C                              i1l2177 0BAA  
                            i1l2097 105A                              i1l2089 1008  
                            i1l2273 16EA                              i1l2281 17C4  
                            i1l2363 15F8                              i1l2355 1564  
                            i1l2347 151E                              i1l2339 1428  
                            i1l2259 212C                              i1l2195 0D20  
                            i1l2187 0CA6                              i1l2179 0BB0  
                            i1l2099 105C                              i1l2291 1828  
                            i1l2283 17C8                              i1l2275 174E  
                            i1l2267 16AA                              i1l2365 164A  
                            i1l2357 1584                              i1l2349 1532  
                            i1l2197 0D3E                              i1l2189 0CF8  
                            i1l2293 187A                              i1l2285 17E6  
                            i1l2277 17A0                              i1l2269 16AC  
                            i1l2367 1670                              i1l2359 1586  
                            i1l2199 0D5E                              i1l2295 18CC  
                            i1l2287 1806                              i1l2279 17B4  
                            i2l2001 1E1E                              i1l2369 16A6  
                            i1l2297 18F2                              i1l2289 1808  
                            i2l2011 1E4A                              i2l2003 1E26  
                            i1l2299 1928                              i2l2005 1E2C  
                            i2l2007 1E32                              i1l2911 20A6  
                            i2l2009 1E42                              i1l2921 2020  
                            i1l2913 20B8                              i1l2931 20A0  
                            i1l2923 2022                              i1l2915 20EA  
                            i1l2925 2034                              i1l2941 1D14  
                            i1l2933 1CF6                              i1l2917 210C  
                            i1l2909 20A4                              i1l2927 206E  
                            i1l2951 1D4C                              i1l2943 1D22  
                            i1l2935 1CFA                              i1l2919 211C  
                            i1l2929 2090                              i1l2953 1D5A  
                            i1l2961 1D84                              i1l2945 1D2A  
                            i1l2937 1D08                              i1l2891 1EF6  
                            i1l2963 1D94                              i1l2955 1D70  
                            i1l2947 1D3C                              i1l2939 1D10  
                            i2l2421 2312                              i2l2501 0856  
                            i1l2893 1EF8                              i1l2965 1D9C  
                            i1l2957 1D78                              i1l2949 1D44  
                            i2l2431 232C                              i2l2423 2316  
                            i2l2511 08B0                              i2l2503 0868  
                            i1l2895 1F2C                              i1l2959 1D7E  
                            i2l2433 232E                              i2l2425 231E  
                            i2l2521 08FE                              i2l2513 08D4  
                            i2l2505 0876                              i1l2897 1F6C  
                            i2l2371 1F92                              i2l2435 2330  
                            i2l2427 2322                              i2l2419 230E  
                            i2l2523 091E                              i2l2531 09F6  
                            i2l2515 08D6                              i2l2507 0898  
                            i1l2899 1F8E                              i2l2373 1F9A  
                            i2l2381 2008                              i2l2437 2332  
                            i2l2429 232A                              i2l2541 0A58  
                            i2l2533 09FA                              i2l2525 0982  
                            i2l2517 08DE                              i2l2509 08AE  
                            i2l2375 1FBC                              i2l2439 2354  
                            i2l2543 0AAA                              i2l2535 0A16  
                            i2l2527 09D2                              i2l2519 08E2  
                            i2l2377 1FF4                              i2l2545 0AFA  
                            i2l2537 0A36                              i2l2529 09E6  
                            i2l2379 2006                              i2l2547 0B20  
                            i2l2539 0A38                              i2l2549 0B56  
                            i2l2495 0834                              i2l2497 0844  
                            i2l2499 0846                              i2l1981 1DA8  
                            i2l1991 1DD8                              i2l1983 1DB6  
                            i2l1993 1DEA                              i2l1985 1DBE  
                            i2l1995 1DF2                              i2l1987 1DC2  
                            i2l1979 1DA6                              i2l1997 1DFA  
                            i2l1989 1DD0                              i2l1999 1E08  
                            u145_20 2396                              u145_21 2392  
                            u146_20 24CA                              u146_21 24C6  
                            _STATUS 0FD8                              _STKPTR 0FFC  
                         ??___awmod 01A0                   __end_of_SRAMalloc 1C1E  
                     mutex_unlock@m 0192                              clear_0 23CA  
                            clear_1 23DC                              clear_2 23E8  
                   ___awmod@divisor 019E                              isa$std 0001  
                   ___awmod@counter 01A0                       ?_int_ext_init 0021  
       __end_of_tarefa_estabilidade 24EA                    __end_of_sem_init 2518  
                  __end_of_sem_wait 1180                    __end_of_sem_post 1F92  
                 __end_ofi2___awmod 1E54                    __end_of_os_start 25D4  
                            lltemp0 0001                              lltemp1 0009  
                            lltemp2 0011                              lltemp3 0019  
                      __mediumconst 0800                           ??_os_init 0025  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                         ?__SRAMmerge 0021  
                  __end_of_pwm_init 25B8                      i2___awmod@sign 0026  
                         ??_pwm_set 0192                          __accesstop 0060  
           __end_of__initialization 23EE                       ___rparam_used 0001  
                      _change_state 1422                      __pcstackCOMRAM 0021  
                        ___inthi_sp 0644                        __pidataBANK1 25F2  
                        _accel_data 0100                       __end_of_delay 1422  
                        _accel_pipe 0151                       __end_of_yield 192C  
                    ??_int_ext_init 0021                     __SRAMmerge@uSum 0026  
                           ??_delay 019E                             ??_yield 0192  
                        __pbssBANK1 0100                        ?_user_config 0021  
                     __uDynamicHeap 0101                       i2_create_task 230A  
                           _CCP1CON 0FBD                           ?_adc_init 0021  
                         ?_adc_read 003A            ?_tarefa_controle_central 0021  
                           i2u90_40 1DB6                             i2u90_41 1DB2  
                           i2u91_40 1DD0                             i2u91_41 1DCC  
                           i2u92_40 1DEA                             i2u92_41 1DE6  
                           i2u93_40 1E08                             i2u93_41 1E04  
                           i2u94_40 1E1E                             i2u94_41 1E1A  
                           i2u95_40 1E42                             i2u95_41 1E3E  
                       sem_init@sem 0021                      ?i2_create_task 0021  
                       sem_wait@sem 0180                             __Hparam 0000  
                       sem_post@sem 0180                           ?_sem_init 0021  
                         ?_sem_wait 0180                           ?_sem_post 0180  
                           __Lparam 0000                           ?_os_start 0021  
                           ___awmod 1CF6                           ?_pwm_init 0021  
                      __psmallconst 0800          ?_tarefa_injecao_eletronica 0021  
                           __pcinit 23B0                             __ramtop 0800  
                     ?_SRAMInitHeap 0021                          ??_adc_init 0021  
                        ??_adc_read 003C                             __ptext0 23F8  
                           __ptext1 25C8                             __ptext2 2482  
                           __ptext3 25EE                             __ptext4 25A4  
                           __ptext5 2518                             __ptext6 25D4  
                           __ptext7 21F4                             __ptext8 24EA  
                           __ptext9 1B00                           _T0CONbits 0FD5  
                  ___awmod@dividend 019C                   __end_of_read_pipe 20A4  
                           _r_queue 026C                             _os_init 2542  
                           _pwm_set 2120                   __end_of_scheduler 25EE  
                    __pintcode_body 0802                end_of_initialization 23EE  
                   i2create_task@id 0060                       __Lmediumconst 0000  
              __end_of_int_ext_init 25E0                             int_func 0802  
             __end_of_config_timer0 25A4                          ??_sem_init 0025  
                        ??_sem_wait 0182                          ??_sem_post 0182  
                        ??_os_start 0036                        _buffer_mutex 0165  
                           postdec0 0FED                             postdec2 0FDD  
                           postinc0 0FEE                             postinc2 0FDE  
                        ??_pwm_init 0021                      ??_SRAMInitHeap 0021  
                         _SRAMalloc 1B00                          _mutex_init 2518  
                        _mutex_lock 0B86                    _ext_int_callback 0043  
                         _TRISAbits 0F92                           _TRISBbits 0F93  
                         _TRISCbits 0F94                           _TRISDbits 0F95  
                      ??__SRAMmerge 0023                       sem_init@value 0023  
                         i2___awmod 1DA6                     ??i2_create_task 0024  
                     ??_create_pipe 0036                       ??_create_task 0024  
                     ?_mutex_unlock 0192                         _CCP1CONbits 0FBD  
             i2create_task@new_task 0061                  __end_of__SRAMmerge 1CF6  
                       mutex_init@m 0021                         mutex_lock@m 0192  
                        _write_pipe 20A4               i2create_task@priority 0021  
                     _decrease_time 1F92                          ?_SRAMalloc 0029  
               start_initialization 23B0                  SRAMalloc@segHeader 0030  
                       __end_of_ISR 0B86                    __SRAMmerge@pSegA 0021  
                  __SRAMmerge@pSegB 0024                    __SRAMmerge@uSegA 0027  
                  __SRAMmerge@uSegB 0028                          ?i2___awmod 0021  
                    ??_mutex_unlock 0194                       ?_start_timer0 0021  
                       pwm_set@duty 0195                 __end_of_create_pipe 2258  
               __end_of_create_task 230A         tarefa_controle_central@data 0191  
                       __pdataBANK1 01A5                   pwm_set@duty_cycle 0194  
       tarefa_controle_central@duty 0190                      ?_decrease_time 0021  
                        read_pipe@p 0189                         __pbssBIGRAM 026C  
                       ?_mutex_init 0021                         ?_mutex_lock 0192  
                       __pbssCOMRAM 003E                       __pcstackBANK0 0060  
                     __pcstackBANK1 016C                       __pcstackBANK2 0200  
                      _last_run_idx 003E                      ??_start_timer0 0021  
              __end_of_SRAMInitHeap 21F4                           __pintcode 0008  
                          ?___awmod 019C         ??_tarefa_injecao_eletronica 019B  
                       ?_write_pipe 0175                        _int_ext_init 25D4  
                       __smallconst 0800                         ??_SRAMalloc 002B  
                          ?_os_init 0021                            ?_pwm_set 0021  
                       ??i2___awmod 0025                           _read_pipe 2020  
                         delay@time 019C                           _scheduler 25E8  
                       _create_pipe 21F4                         _create_task 22B4  
                          _LATDbits 0F8C                            i1u111_20 0BA0  
                          i1u103_20 0EAC                            i1u111_21 0B9C  
                          i1u103_21 0EA8                            i1u112_20 0C40  
                          i1u104_20 0F3C                            i1u120_20 16EA  
                          i1u112_21 0C3C                            i1u104_21 0F38  
                          i1u120_21 16E6                            i1u113_20 0D1C  
                          i1u105_20 1018                            i1u121_20 17C4  
                          i1u113_21 0D18                            i1u105_21 1014  
                          i1u121_21 17C0                            i1u130_20 1466  
                          i1u114_20 0D5E                            i1u106_20 105A  
                          i1u122_20 1806                            i1u130_21 1462  
                          i1u114_21 0D5A                            i1u106_21 1056  
                          i1u122_21 1802                            i1u131_20 1542  
                          i1u115_20 0D80                            i1u107_20 107C  
                          i1u123_20 1828                            i1u131_21 153E  
                          i1u115_21 0D7C                            i1u107_21 1078  
                          i1u123_21 1824                            i1u132_20 1584  
                          i1u116_20 0E44                            i1u108_20 1140  
                          i1u124_20 18EC                            i1u132_21 1580  
                          i1u116_21 0E40                            i1u108_21 113C  
                          i1u124_21 18E8                            i1u133_20 15A6  
                          i1u125_20 11C0                            i1u117_20 1E82  
                          i1u133_21 15A2                            i1u125_21 11BC  
                          i1u117_21 1E7E                            i1u134_20 166A  
                          i1u126_20 129C                            i1u118_20 257A  
                          i1u134_21 1666                            i1u126_21 1298  
                          i1u118_21 2576                            i1u127_20 12FC  
                          i1u119_20 215A                            i1u127_21 12F8  
                          i1u119_21 2156                            i1u128_20 131E  
                          i1u128_21 131A                            i1u129_20 13E2  
                          i1u129_21 13DE                            i1u180_20 1D08  
                          i1u180_21 1D04                            i1u181_20 1D22  
                          i1u181_21 1D1E                            i1u182_20 1D3C  
                          i1u182_21 1D38                            i1u183_20 1D5A  
                          i1u183_21 1D56                            i1u184_20 1D70  
                          i1u184_21 1D6C                            i1u185_20 1D94  
                          i1u185_21 1D90                            i1u179_20 1F2C  
                          i1u179_21 1F28                            i2u150_40 08C6  
                          i2u150_41 08C2                            i2u135_40 1FBC  
                          i2u151_40 08D4                            i2u135_41 1FB8  
                          i2u151_41 08D0                            i2u136_40 1FF4  
                          i2u152_40 091E                            i2u136_41 1FF0  
                          i2u144_41 234C                            i2u152_41 091A  
                          i2u137_40 201E                            i2u153_40 09F6  
                          i2u137_41 201A                            i2u153_41 09F2  
                          i2u154_40 0A36                            i2u154_41 0A32  
                          i2u155_40 0A58                            i2u147_40 0844  
                          i2u155_41 0A54                            i2u147_41 0840  
                          i2u156_40 0B1A                            i2u148_40 0856  
                          i2u156_41 0B16                            i2u148_41 0852  
                          i2u149_40 0898                            i2u149_41 0894  
               create_task@new_task 0201          __end_of_priority_scheduler 1B00  
                   ??_decrease_time 0021                __end_of_mutex_unlock 1EF6  
                        _ADCON0bits 0FC2                 create_task@priority 0021  
             change_state@new_state 01A3                         write_pipe@p 0175  
                    decrease_time@i 0023                         _INTCON2bits 0FF1  
                        ?_read_pipe 0189           _tarefa_injecao_eletronica 2360  
                i2___awmod@dividend 0021                   i2create_task@task 0022  
             tarefa_acelerador@data 017F                            __Hrparam 0000  
                     ?_change_state 0021                            __Lrparam 0000  
               _tarefa_estabilidade 24BA                         _est_created 0045  
                          _adc_init 25B8                            _adc_read 256A  
              __end_of_start_timer0 25F2  tarefa_injecao_eletronica@last_duty 01A5  
                          __ptext10 1C1E                            __ptext11 25B8  
                          __ptext20 25E8                            __ptext12 2542  
                          __ptext21 192C                            __ptext13 22B4  
                          __ptext30 2120                            __ptext22 1CF6  
                          __ptext14 2588                            __ptext31 24BA  
                          __ptext23 1EF6                            __ptext15 218E  
                          __ptext32 1180                            __ptext24 256A  
                          __ptext16 243E                            __ptext33 1422  
                          __ptext25 2258                            __ptext17 16AA  
                          __ptext34 25E0                            __ptext26 2020  
                          __ptext18 20A4                            __ptext27 1E54  
                          __ptext19 0E84                            __ptext36 230A  
                          __ptext28 0B86                            __ptext37 1DA6  
                          __ptext29 2360                            __ptext38 1F92  
              ?_tarefa_estabilidade 0021             _tarefa_controle_central 2258  
                     ??_user_config 0036                            _est_flag 0046  
             __end_ofi2_create_task 2360                     mutex_unlock@tid 0197  
                    ??_change_state 019C                            _sem_init 24EA  
                          _sem_wait 0E84                            _sem_post 1EF6  
                          _os_start 25C8                            isa$xinst 0000  
                          _pwm_init 25A4                        _SRAMInitHeap 218E  
                 i2___awmod@divisor 0023                   i2___awmod@counter 0025  
                      ??_mutex_init 0023                        ??_mutex_lock 0194  
              tarefa_acelerador@raw 017D                          _INTCONbits 0FF2  
             ??_tarefa_estabilidade 01A5                         ??_read_pipe 018D  
                          intlevel1 0000                            intlevel2 0000  
                     _config_timer0 2588                 __end_of_user_config 24BA  
                __end_of_mutex_init 2542                  __end_of_mutex_lock 0E84  
     tarefa_injecao_eletronica@duty 019B                        ??_write_pipe 0178  
                     read_pipe@data 018B           ??_tarefa_controle_central 0190  
                      ?_create_pipe 0034                        ?_create_task 0021  
                      _mutex_unlock 1E54                  __end_of_write_pipe 2120  
                    ?_config_timer0 0021  
