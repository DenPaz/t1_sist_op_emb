

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 29 16:41:11 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    57   000000                     
    58                           ; Generated 05/12/2024 GMT
    59                           ; 
    60                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000FE0                     bsr             equ	4064
    93   000FE9                     fsr0            equ	4073
    94   000FEA                     fsr0h           equ	4074
    95   000FE9                     fsr0l           equ	4073
    96   000FE1                     fsr1            equ	4065
    97   000FE2                     fsr1h           equ	4066
    98   000FE1                     fsr1l           equ	4065
    99   000FD9                     fsr2            equ	4057
   100   000FDA                     fsr2h           equ	4058
   101   000FD9                     fsr2l           equ	4057
   102   000FEF                     indf0           equ	4079
   103   000FE7                     indf1           equ	4071
   104   000FDF                     indf2           equ	4063
   105   000FF2                     intcon          equ	4082
   106   000000                     nvmcon          equ	0
   107   000FF9                     pcl             equ	4089
   108   000FFA                     pclath          equ	4090
   109   000FFB                     pclatu          equ	4091
   110   000FEB                     plusw0          equ	4075
   111   000FE3                     plusw1          equ	4067
   112   000FDB                     plusw2          equ	4059
   113   000FED                     postdec0        equ	4077
   114   000FE5                     postdec1        equ	4069
   115   000FDD                     postdec2        equ	4061
   116   000FEE                     postinc0        equ	4078
   117   000FE6                     postinc1        equ	4070
   118   000FDE                     postinc2        equ	4062
   119   000FEC                     preinc0         equ	4076
   120   000FE4                     preinc1         equ	4068
   121   000FDC                     preinc2         equ	4060
   122   000FF3                     prod            equ	4083
   123   000FF4                     prodh           equ	4084
   124   000FF3                     prodl           equ	4083
   125   000FD8                     status          equ	4056
   126   000FF5                     tablat          equ	4085
   127   000FF6                     tblptr          equ	4086
   128   000FF7                     tblptrh         equ	4087
   129   000FF6                     tblptrl         equ	4086
   130   000FF8                     tblptru         equ	4088
   131   000FFD                     tosl            equ	4093
   132   000FE8                     wreg            equ	4072
   133   000F62                     SPPDATA         equ	3938	;# 
   134   000F63                     SPPCFG          equ	3939	;# 
   135   000F64                     SPPEPS          equ	3940	;# 
   136   000F65                     SPPCON          equ	3941	;# 
   137   000F66                     UFRM            equ	3942	;# 
   138   000F66                     UFRML           equ	3942	;# 
   139   000F67                     UFRMH           equ	3943	;# 
   140   000F68                     UIR             equ	3944	;# 
   141   000F69                     UIE             equ	3945	;# 
   142   000F6A                     UEIR            equ	3946	;# 
   143   000F6B                     UEIE            equ	3947	;# 
   144   000F6C                     USTAT           equ	3948	;# 
   145   000F6D                     UCON            equ	3949	;# 
   146   000F6E                     UADDR           equ	3950	;# 
   147   000F6F                     UCFG            equ	3951	;# 
   148   000F70                     UEP0            equ	3952	;# 
   149   000F71                     UEP1            equ	3953	;# 
   150   000F72                     UEP2            equ	3954	;# 
   151   000F73                     UEP3            equ	3955	;# 
   152   000F74                     UEP4            equ	3956	;# 
   153   000F75                     UEP5            equ	3957	;# 
   154   000F76                     UEP6            equ	3958	;# 
   155   000F77                     UEP7            equ	3959	;# 
   156   000F78                     UEP8            equ	3960	;# 
   157   000F79                     UEP9            equ	3961	;# 
   158   000F7A                     UEP10           equ	3962	;# 
   159   000F7B                     UEP11           equ	3963	;# 
   160   000F7C                     UEP12           equ	3964	;# 
   161   000F7D                     UEP13           equ	3965	;# 
   162   000F7E                     UEP14           equ	3966	;# 
   163   000F7F                     UEP15           equ	3967	;# 
   164   000F80                     PORTA           equ	3968	;# 
   165   000F81                     PORTB           equ	3969	;# 
   166   000F82                     PORTC           equ	3970	;# 
   167   000F83                     PORTD           equ	3971	;# 
   168   000F84                     PORTE           equ	3972	;# 
   169   000F89                     LATA            equ	3977	;# 
   170   000F8A                     LATB            equ	3978	;# 
   171   000F8B                     LATC            equ	3979	;# 
   172   000F8C                     LATD            equ	3980	;# 
   173   000F8D                     LATE            equ	3981	;# 
   174   000F92                     TRISA           equ	3986	;# 
   175   000F92                     DDRA            equ	3986	;# 
   176   000F93                     TRISB           equ	3987	;# 
   177   000F93                     DDRB            equ	3987	;# 
   178   000F94                     TRISC           equ	3988	;# 
   179   000F94                     DDRC            equ	3988	;# 
   180   000F95                     TRISD           equ	3989	;# 
   181   000F95                     DDRD            equ	3989	;# 
   182   000F96                     TRISE           equ	3990	;# 
   183   000F96                     DDRE            equ	3990	;# 
   184   000F9B                     OSCTUNE         equ	3995	;# 
   185   000F9D                     PIE1            equ	3997	;# 
   186   000F9E                     PIR1            equ	3998	;# 
   187   000F9F                     IPR1            equ	3999	;# 
   188   000FA0                     PIE2            equ	4000	;# 
   189   000FA1                     PIR2            equ	4001	;# 
   190   000FA2                     IPR2            equ	4002	;# 
   191   000FA6                     EECON1          equ	4006	;# 
   192   000FA7                     EECON2          equ	4007	;# 
   193   000FA8                     EEDATA          equ	4008	;# 
   194   000FA9                     EEADR           equ	4009	;# 
   195   000FAB                     RCSTA           equ	4011	;# 
   196   000FAB                     RCSTA1          equ	4011	;# 
   197   000FAC                     TXSTA           equ	4012	;# 
   198   000FAC                     TXSTA1          equ	4012	;# 
   199   000FAD                     TXREG           equ	4013	;# 
   200   000FAD                     TXREG1          equ	4013	;# 
   201   000FAE                     RCREG           equ	4014	;# 
   202   000FAE                     RCREG1          equ	4014	;# 
   203   000FAF                     SPBRG           equ	4015	;# 
   204   000FAF                     SPBRG1          equ	4015	;# 
   205   000FB0                     SPBRGH          equ	4016	;# 
   206   000FB1                     T3CON           equ	4017	;# 
   207   000FB2                     TMR3            equ	4018	;# 
   208   000FB2                     TMR3L           equ	4018	;# 
   209   000FB3                     TMR3H           equ	4019	;# 
   210   000FB4                     CMCON           equ	4020	;# 
   211   000FB5                     CVRCON          equ	4021	;# 
   212   000FB6                     ECCP1AS         equ	4022	;# 
   213   000FB6                     CCP1AS          equ	4022	;# 
   214   000FB7                     ECCP1DEL        equ	4023	;# 
   215   000FB7                     CCP1DEL         equ	4023	;# 
   216   000FB8                     BAUDCON         equ	4024	;# 
   217   000FB8                     BAUDCTL         equ	4024	;# 
   218   000FBA                     CCP2CON         equ	4026	;# 
   219   000FBB                     CCPR2           equ	4027	;# 
   220   000FBB                     CCPR2L          equ	4027	;# 
   221   000FBC                     CCPR2H          equ	4028	;# 
   222   000FBD                     CCP1CON         equ	4029	;# 
   223   000FBD                     ECCP1CON        equ	4029	;# 
   224   000FBE                     CCPR1           equ	4030	;# 
   225   000FBE                     CCPR1L          equ	4030	;# 
   226   000FBF                     CCPR1H          equ	4031	;# 
   227   000FC0                     ADCON2          equ	4032	;# 
   228   000FC1                     ADCON1          equ	4033	;# 
   229   000FC2                     ADCON0          equ	4034	;# 
   230   000FC3                     ADRES           equ	4035	;# 
   231   000FC3                     ADRESL          equ	4035	;# 
   232   000FC4                     ADRESH          equ	4036	;# 
   233   000FC5                     SSPCON2         equ	4037	;# 
   234   000FC6                     SSPCON1         equ	4038	;# 
   235   000FC7                     SSPSTAT         equ	4039	;# 
   236   000FC8                     SSPADD          equ	4040	;# 
   237   000FC9                     SSPBUF          equ	4041	;# 
   238   000FCA                     T2CON           equ	4042	;# 
   239   000FCB                     PR2             equ	4043	;# 
   240   000FCB                     MEMCON          equ	4043	;# 
   241   000FCC                     TMR2            equ	4044	;# 
   242   000FCD                     T1CON           equ	4045	;# 
   243   000FCE                     TMR1            equ	4046	;# 
   244   000FCE                     TMR1L           equ	4046	;# 
   245   000FCF                     TMR1H           equ	4047	;# 
   246   000FD0                     RCON            equ	4048	;# 
   247   000FD1                     WDTCON          equ	4049	;# 
   248   000FD2                     HLVDCON         equ	4050	;# 
   249   000FD2                     LVDCON          equ	4050	;# 
   250   000FD3                     OSCCON          equ	4051	;# 
   251   000FD5                     T0CON           equ	4053	;# 
   252   000FD6                     TMR0            equ	4054	;# 
   253   000FD6                     TMR0L           equ	4054	;# 
   254   000FD7                     TMR0H           equ	4055	;# 
   255   000FD8                     STATUS          equ	4056	;# 
   256   000FD9                     FSR2            equ	4057	;# 
   257   000FD9                     FSR2L           equ	4057	;# 
   258   000FDA                     FSR2H           equ	4058	;# 
   259   000FDB                     PLUSW2          equ	4059	;# 
   260   000FDC                     PREINC2         equ	4060	;# 
   261   000FDD                     POSTDEC2        equ	4061	;# 
   262   000FDE                     POSTINC2        equ	4062	;# 
   263   000FDF                     INDF2           equ	4063	;# 
   264   000FE0                     BSR             equ	4064	;# 
   265   000FE1                     FSR1            equ	4065	;# 
   266   000FE1                     FSR1L           equ	4065	;# 
   267   000FE2                     FSR1H           equ	4066	;# 
   268   000FE3                     PLUSW1          equ	4067	;# 
   269   000FE4                     PREINC1         equ	4068	;# 
   270   000FE5                     POSTDEC1        equ	4069	;# 
   271   000FE6                     POSTINC1        equ	4070	;# 
   272   000FE7                     INDF1           equ	4071	;# 
   273   000FE8                     WREG            equ	4072	;# 
   274   000FE9                     FSR0            equ	4073	;# 
   275   000FE9                     FSR0L           equ	4073	;# 
   276   000FEA                     FSR0H           equ	4074	;# 
   277   000FEB                     PLUSW0          equ	4075	;# 
   278   000FEC                     PREINC0         equ	4076	;# 
   279   000FED                     POSTDEC0        equ	4077	;# 
   280   000FEE                     POSTINC0        equ	4078	;# 
   281   000FEF                     INDF0           equ	4079	;# 
   282   000FF0                     INTCON3         equ	4080	;# 
   283   000FF1                     INTCON2         equ	4081	;# 
   284   000FF2                     INTCON          equ	4082	;# 
   285   000FF3                     PROD            equ	4083	;# 
   286   000FF3                     PRODL           equ	4083	;# 
   287   000FF4                     PRODH           equ	4084	;# 
   288   000FF5                     TABLAT          equ	4085	;# 
   289   000FF6                     TBLPTR          equ	4086	;# 
   290   000FF6                     TBLPTRL         equ	4086	;# 
   291   000FF7                     TBLPTRH         equ	4087	;# 
   292   000FF8                     TBLPTRU         equ	4088	;# 
   293   000FF9                     PCLAT           equ	4089	;# 
   294   000FF9                     PC              equ	4089	;# 
   295   000FF9                     PCL             equ	4089	;# 
   296   000FFA                     PCLATH          equ	4090	;# 
   297   000FFB                     PCLATU          equ	4091	;# 
   298   000FFC                     STKPTR          equ	4092	;# 
   299   000FFD                     TOS             equ	4093	;# 
   300   000FFD                     TOSL            equ	4093	;# 
   301   000FFE                     TOSH            equ	4094	;# 
   302   000FFF                     TOSU            equ	4095	;# 
   303   000F62                     SPPDATA         equ	3938	;# 
   304   000F63                     SPPCFG          equ	3939	;# 
   305   000F64                     SPPEPS          equ	3940	;# 
   306   000F65                     SPPCON          equ	3941	;# 
   307   000F66                     UFRM            equ	3942	;# 
   308   000F66                     UFRML           equ	3942	;# 
   309   000F67                     UFRMH           equ	3943	;# 
   310   000F68                     UIR             equ	3944	;# 
   311   000F69                     UIE             equ	3945	;# 
   312   000F6A                     UEIR            equ	3946	;# 
   313   000F6B                     UEIE            equ	3947	;# 
   314   000F6C                     USTAT           equ	3948	;# 
   315   000F6D                     UCON            equ	3949	;# 
   316   000F6E                     UADDR           equ	3950	;# 
   317   000F6F                     UCFG            equ	3951	;# 
   318   000F70                     UEP0            equ	3952	;# 
   319   000F71                     UEP1            equ	3953	;# 
   320   000F72                     UEP2            equ	3954	;# 
   321   000F73                     UEP3            equ	3955	;# 
   322   000F74                     UEP4            equ	3956	;# 
   323   000F75                     UEP5            equ	3957	;# 
   324   000F76                     UEP6            equ	3958	;# 
   325   000F77                     UEP7            equ	3959	;# 
   326   000F78                     UEP8            equ	3960	;# 
   327   000F79                     UEP9            equ	3961	;# 
   328   000F7A                     UEP10           equ	3962	;# 
   329   000F7B                     UEP11           equ	3963	;# 
   330   000F7C                     UEP12           equ	3964	;# 
   331   000F7D                     UEP13           equ	3965	;# 
   332   000F7E                     UEP14           equ	3966	;# 
   333   000F7F                     UEP15           equ	3967	;# 
   334   000F80                     PORTA           equ	3968	;# 
   335   000F81                     PORTB           equ	3969	;# 
   336   000F82                     PORTC           equ	3970	;# 
   337   000F83                     PORTD           equ	3971	;# 
   338   000F84                     PORTE           equ	3972	;# 
   339   000F89                     LATA            equ	3977	;# 
   340   000F8A                     LATB            equ	3978	;# 
   341   000F8B                     LATC            equ	3979	;# 
   342   000F8C                     LATD            equ	3980	;# 
   343   000F8D                     LATE            equ	3981	;# 
   344   000F92                     TRISA           equ	3986	;# 
   345   000F92                     DDRA            equ	3986	;# 
   346   000F93                     TRISB           equ	3987	;# 
   347   000F93                     DDRB            equ	3987	;# 
   348   000F94                     TRISC           equ	3988	;# 
   349   000F94                     DDRC            equ	3988	;# 
   350   000F95                     TRISD           equ	3989	;# 
   351   000F95                     DDRD            equ	3989	;# 
   352   000F96                     TRISE           equ	3990	;# 
   353   000F96                     DDRE            equ	3990	;# 
   354   000F9B                     OSCTUNE         equ	3995	;# 
   355   000F9D                     PIE1            equ	3997	;# 
   356   000F9E                     PIR1            equ	3998	;# 
   357   000F9F                     IPR1            equ	3999	;# 
   358   000FA0                     PIE2            equ	4000	;# 
   359   000FA1                     PIR2            equ	4001	;# 
   360   000FA2                     IPR2            equ	4002	;# 
   361   000FA6                     EECON1          equ	4006	;# 
   362   000FA7                     EECON2          equ	4007	;# 
   363   000FA8                     EEDATA          equ	4008	;# 
   364   000FA9                     EEADR           equ	4009	;# 
   365   000FAB                     RCSTA           equ	4011	;# 
   366   000FAB                     RCSTA1          equ	4011	;# 
   367   000FAC                     TXSTA           equ	4012	;# 
   368   000FAC                     TXSTA1          equ	4012	;# 
   369   000FAD                     TXREG           equ	4013	;# 
   370   000FAD                     TXREG1          equ	4013	;# 
   371   000FAE                     RCREG           equ	4014	;# 
   372   000FAE                     RCREG1          equ	4014	;# 
   373   000FAF                     SPBRG           equ	4015	;# 
   374   000FAF                     SPBRG1          equ	4015	;# 
   375   000FB0                     SPBRGH          equ	4016	;# 
   376   000FB1                     T3CON           equ	4017	;# 
   377   000FB2                     TMR3            equ	4018	;# 
   378   000FB2                     TMR3L           equ	4018	;# 
   379   000FB3                     TMR3H           equ	4019	;# 
   380   000FB4                     CMCON           equ	4020	;# 
   381   000FB5                     CVRCON          equ	4021	;# 
   382   000FB6                     ECCP1AS         equ	4022	;# 
   383   000FB6                     CCP1AS          equ	4022	;# 
   384   000FB7                     ECCP1DEL        equ	4023	;# 
   385   000FB7                     CCP1DEL         equ	4023	;# 
   386   000FB8                     BAUDCON         equ	4024	;# 
   387   000FB8                     BAUDCTL         equ	4024	;# 
   388   000FBA                     CCP2CON         equ	4026	;# 
   389   000FBB                     CCPR2           equ	4027	;# 
   390   000FBB                     CCPR2L          equ	4027	;# 
   391   000FBC                     CCPR2H          equ	4028	;# 
   392   000FBD                     CCP1CON         equ	4029	;# 
   393   000FBD                     ECCP1CON        equ	4029	;# 
   394   000FBE                     CCPR1           equ	4030	;# 
   395   000FBE                     CCPR1L          equ	4030	;# 
   396   000FBF                     CCPR1H          equ	4031	;# 
   397   000FC0                     ADCON2          equ	4032	;# 
   398   000FC1                     ADCON1          equ	4033	;# 
   399   000FC2                     ADCON0          equ	4034	;# 
   400   000FC3                     ADRES           equ	4035	;# 
   401   000FC3                     ADRESL          equ	4035	;# 
   402   000FC4                     ADRESH          equ	4036	;# 
   403   000FC5                     SSPCON2         equ	4037	;# 
   404   000FC6                     SSPCON1         equ	4038	;# 
   405   000FC7                     SSPSTAT         equ	4039	;# 
   406   000FC8                     SSPADD          equ	4040	;# 
   407   000FC9                     SSPBUF          equ	4041	;# 
   408   000FCA                     T2CON           equ	4042	;# 
   409   000FCB                     PR2             equ	4043	;# 
   410   000FCB                     MEMCON          equ	4043	;# 
   411   000FCC                     TMR2            equ	4044	;# 
   412   000FCD                     T1CON           equ	4045	;# 
   413   000FCE                     TMR1            equ	4046	;# 
   414   000FCE                     TMR1L           equ	4046	;# 
   415   000FCF                     TMR1H           equ	4047	;# 
   416   000FD0                     RCON            equ	4048	;# 
   417   000FD1                     WDTCON          equ	4049	;# 
   418   000FD2                     HLVDCON         equ	4050	;# 
   419   000FD2                     LVDCON          equ	4050	;# 
   420   000FD3                     OSCCON          equ	4051	;# 
   421   000FD5                     T0CON           equ	4053	;# 
   422   000FD6                     TMR0            equ	4054	;# 
   423   000FD6                     TMR0L           equ	4054	;# 
   424   000FD7                     TMR0H           equ	4055	;# 
   425   000FD8                     STATUS          equ	4056	;# 
   426   000FD9                     FSR2            equ	4057	;# 
   427   000FD9                     FSR2L           equ	4057	;# 
   428   000FDA                     FSR2H           equ	4058	;# 
   429   000FDB                     PLUSW2          equ	4059	;# 
   430   000FDC                     PREINC2         equ	4060	;# 
   431   000FDD                     POSTDEC2        equ	4061	;# 
   432   000FDE                     POSTINC2        equ	4062	;# 
   433   000FDF                     INDF2           equ	4063	;# 
   434   000FE0                     BSR             equ	4064	;# 
   435   000FE1                     FSR1            equ	4065	;# 
   436   000FE1                     FSR1L           equ	4065	;# 
   437   000FE2                     FSR1H           equ	4066	;# 
   438   000FE3                     PLUSW1          equ	4067	;# 
   439   000FE4                     PREINC1         equ	4068	;# 
   440   000FE5                     POSTDEC1        equ	4069	;# 
   441   000FE6                     POSTINC1        equ	4070	;# 
   442   000FE7                     INDF1           equ	4071	;# 
   443   000FE8                     WREG            equ	4072	;# 
   444   000FE9                     FSR0            equ	4073	;# 
   445   000FE9                     FSR0L           equ	4073	;# 
   446   000FEA                     FSR0H           equ	4074	;# 
   447   000FEB                     PLUSW0          equ	4075	;# 
   448   000FEC                     PREINC0         equ	4076	;# 
   449   000FED                     POSTDEC0        equ	4077	;# 
   450   000FEE                     POSTINC0        equ	4078	;# 
   451   000FEF                     INDF0           equ	4079	;# 
   452   000FF0                     INTCON3         equ	4080	;# 
   453   000FF1                     INTCON2         equ	4081	;# 
   454   000FF2                     INTCON          equ	4082	;# 
   455   000FF3                     PROD            equ	4083	;# 
   456   000FF3                     PRODL           equ	4083	;# 
   457   000FF4                     PRODH           equ	4084	;# 
   458   000FF5                     TABLAT          equ	4085	;# 
   459   000FF6                     TBLPTR          equ	4086	;# 
   460   000FF6                     TBLPTRL         equ	4086	;# 
   461   000FF7                     TBLPTRH         equ	4087	;# 
   462   000FF8                     TBLPTRU         equ	4088	;# 
   463   000FF9                     PCLAT           equ	4089	;# 
   464   000FF9                     PC              equ	4089	;# 
   465   000FF9                     PCL             equ	4089	;# 
   466   000FFA                     PCLATH          equ	4090	;# 
   467   000FFB                     PCLATU          equ	4091	;# 
   468   000FFC                     STKPTR          equ	4092	;# 
   469   000FFD                     TOS             equ	4093	;# 
   470   000FFD                     TOSL            equ	4093	;# 
   471   000FFE                     TOSH            equ	4094	;# 
   472   000FFF                     TOSU            equ	4095	;# 
   473   000F62                     SPPDATA         equ	3938	;# 
   474   000F63                     SPPCFG          equ	3939	;# 
   475   000F64                     SPPEPS          equ	3940	;# 
   476   000F65                     SPPCON          equ	3941	;# 
   477   000F66                     UFRM            equ	3942	;# 
   478   000F66                     UFRML           equ	3942	;# 
   479   000F67                     UFRMH           equ	3943	;# 
   480   000F68                     UIR             equ	3944	;# 
   481   000F69                     UIE             equ	3945	;# 
   482   000F6A                     UEIR            equ	3946	;# 
   483   000F6B                     UEIE            equ	3947	;# 
   484   000F6C                     USTAT           equ	3948	;# 
   485   000F6D                     UCON            equ	3949	;# 
   486   000F6E                     UADDR           equ	3950	;# 
   487   000F6F                     UCFG            equ	3951	;# 
   488   000F70                     UEP0            equ	3952	;# 
   489   000F71                     UEP1            equ	3953	;# 
   490   000F72                     UEP2            equ	3954	;# 
   491   000F73                     UEP3            equ	3955	;# 
   492   000F74                     UEP4            equ	3956	;# 
   493   000F75                     UEP5            equ	3957	;# 
   494   000F76                     UEP6            equ	3958	;# 
   495   000F77                     UEP7            equ	3959	;# 
   496   000F78                     UEP8            equ	3960	;# 
   497   000F79                     UEP9            equ	3961	;# 
   498   000F7A                     UEP10           equ	3962	;# 
   499   000F7B                     UEP11           equ	3963	;# 
   500   000F7C                     UEP12           equ	3964	;# 
   501   000F7D                     UEP13           equ	3965	;# 
   502   000F7E                     UEP14           equ	3966	;# 
   503   000F7F                     UEP15           equ	3967	;# 
   504   000F80                     PORTA           equ	3968	;# 
   505   000F81                     PORTB           equ	3969	;# 
   506   000F82                     PORTC           equ	3970	;# 
   507   000F83                     PORTD           equ	3971	;# 
   508   000F84                     PORTE           equ	3972	;# 
   509   000F89                     LATA            equ	3977	;# 
   510   000F8A                     LATB            equ	3978	;# 
   511   000F8B                     LATC            equ	3979	;# 
   512   000F8C                     LATD            equ	3980	;# 
   513   000F8D                     LATE            equ	3981	;# 
   514   000F92                     TRISA           equ	3986	;# 
   515   000F92                     DDRA            equ	3986	;# 
   516   000F93                     TRISB           equ	3987	;# 
   517   000F93                     DDRB            equ	3987	;# 
   518   000F94                     TRISC           equ	3988	;# 
   519   000F94                     DDRC            equ	3988	;# 
   520   000F95                     TRISD           equ	3989	;# 
   521   000F95                     DDRD            equ	3989	;# 
   522   000F96                     TRISE           equ	3990	;# 
   523   000F96                     DDRE            equ	3990	;# 
   524   000F9B                     OSCTUNE         equ	3995	;# 
   525   000F9D                     PIE1            equ	3997	;# 
   526   000F9E                     PIR1            equ	3998	;# 
   527   000F9F                     IPR1            equ	3999	;# 
   528   000FA0                     PIE2            equ	4000	;# 
   529   000FA1                     PIR2            equ	4001	;# 
   530   000FA2                     IPR2            equ	4002	;# 
   531   000FA6                     EECON1          equ	4006	;# 
   532   000FA7                     EECON2          equ	4007	;# 
   533   000FA8                     EEDATA          equ	4008	;# 
   534   000FA9                     EEADR           equ	4009	;# 
   535   000FAB                     RCSTA           equ	4011	;# 
   536   000FAB                     RCSTA1          equ	4011	;# 
   537   000FAC                     TXSTA           equ	4012	;# 
   538   000FAC                     TXSTA1          equ	4012	;# 
   539   000FAD                     TXREG           equ	4013	;# 
   540   000FAD                     TXREG1          equ	4013	;# 
   541   000FAE                     RCREG           equ	4014	;# 
   542   000FAE                     RCREG1          equ	4014	;# 
   543   000FAF                     SPBRG           equ	4015	;# 
   544   000FAF                     SPBRG1          equ	4015	;# 
   545   000FB0                     SPBRGH          equ	4016	;# 
   546   000FB1                     T3CON           equ	4017	;# 
   547   000FB2                     TMR3            equ	4018	;# 
   548   000FB2                     TMR3L           equ	4018	;# 
   549   000FB3                     TMR3H           equ	4019	;# 
   550   000FB4                     CMCON           equ	4020	;# 
   551   000FB5                     CVRCON          equ	4021	;# 
   552   000FB6                     ECCP1AS         equ	4022	;# 
   553   000FB6                     CCP1AS          equ	4022	;# 
   554   000FB7                     ECCP1DEL        equ	4023	;# 
   555   000FB7                     CCP1DEL         equ	4023	;# 
   556   000FB8                     BAUDCON         equ	4024	;# 
   557   000FB8                     BAUDCTL         equ	4024	;# 
   558   000FBA                     CCP2CON         equ	4026	;# 
   559   000FBB                     CCPR2           equ	4027	;# 
   560   000FBB                     CCPR2L          equ	4027	;# 
   561   000FBC                     CCPR2H          equ	4028	;# 
   562   000FBD                     CCP1CON         equ	4029	;# 
   563   000FBD                     ECCP1CON        equ	4029	;# 
   564   000FBE                     CCPR1           equ	4030	;# 
   565   000FBE                     CCPR1L          equ	4030	;# 
   566   000FBF                     CCPR1H          equ	4031	;# 
   567   000FC0                     ADCON2          equ	4032	;# 
   568   000FC1                     ADCON1          equ	4033	;# 
   569   000FC2                     ADCON0          equ	4034	;# 
   570   000FC3                     ADRES           equ	4035	;# 
   571   000FC3                     ADRESL          equ	4035	;# 
   572   000FC4                     ADRESH          equ	4036	;# 
   573   000FC5                     SSPCON2         equ	4037	;# 
   574   000FC6                     SSPCON1         equ	4038	;# 
   575   000FC7                     SSPSTAT         equ	4039	;# 
   576   000FC8                     SSPADD          equ	4040	;# 
   577   000FC9                     SSPBUF          equ	4041	;# 
   578   000FCA                     T2CON           equ	4042	;# 
   579   000FCB                     PR2             equ	4043	;# 
   580   000FCB                     MEMCON          equ	4043	;# 
   581   000FCC                     TMR2            equ	4044	;# 
   582   000FCD                     T1CON           equ	4045	;# 
   583   000FCE                     TMR1            equ	4046	;# 
   584   000FCE                     TMR1L           equ	4046	;# 
   585   000FCF                     TMR1H           equ	4047	;# 
   586   000FD0                     RCON            equ	4048	;# 
   587   000FD1                     WDTCON          equ	4049	;# 
   588   000FD2                     HLVDCON         equ	4050	;# 
   589   000FD2                     LVDCON          equ	4050	;# 
   590   000FD3                     OSCCON          equ	4051	;# 
   591   000FD5                     T0CON           equ	4053	;# 
   592   000FD6                     TMR0            equ	4054	;# 
   593   000FD6                     TMR0L           equ	4054	;# 
   594   000FD7                     TMR0H           equ	4055	;# 
   595   000FD8                     STATUS          equ	4056	;# 
   596   000FD9                     FSR2            equ	4057	;# 
   597   000FD9                     FSR2L           equ	4057	;# 
   598   000FDA                     FSR2H           equ	4058	;# 
   599   000FDB                     PLUSW2          equ	4059	;# 
   600   000FDC                     PREINC2         equ	4060	;# 
   601   000FDD                     POSTDEC2        equ	4061	;# 
   602   000FDE                     POSTINC2        equ	4062	;# 
   603   000FDF                     INDF2           equ	4063	;# 
   604   000FE0                     BSR             equ	4064	;# 
   605   000FE1                     FSR1            equ	4065	;# 
   606   000FE1                     FSR1L           equ	4065	;# 
   607   000FE2                     FSR1H           equ	4066	;# 
   608   000FE3                     PLUSW1          equ	4067	;# 
   609   000FE4                     PREINC1         equ	4068	;# 
   610   000FE5                     POSTDEC1        equ	4069	;# 
   611   000FE6                     POSTINC1        equ	4070	;# 
   612   000FE7                     INDF1           equ	4071	;# 
   613   000FE8                     WREG            equ	4072	;# 
   614   000FE9                     FSR0            equ	4073	;# 
   615   000FE9                     FSR0L           equ	4073	;# 
   616   000FEA                     FSR0H           equ	4074	;# 
   617   000FEB                     PLUSW0          equ	4075	;# 
   618   000FEC                     PREINC0         equ	4076	;# 
   619   000FED                     POSTDEC0        equ	4077	;# 
   620   000FEE                     POSTINC0        equ	4078	;# 
   621   000FEF                     INDF0           equ	4079	;# 
   622   000FF0                     INTCON3         equ	4080	;# 
   623   000FF1                     INTCON2         equ	4081	;# 
   624   000FF2                     INTCON          equ	4082	;# 
   625   000FF3                     PROD            equ	4083	;# 
   626   000FF3                     PRODL           equ	4083	;# 
   627   000FF4                     PRODH           equ	4084	;# 
   628   000FF5                     TABLAT          equ	4085	;# 
   629   000FF6                     TBLPTR          equ	4086	;# 
   630   000FF6                     TBLPTRL         equ	4086	;# 
   631   000FF7                     TBLPTRH         equ	4087	;# 
   632   000FF8                     TBLPTRU         equ	4088	;# 
   633   000FF9                     PCLAT           equ	4089	;# 
   634   000FF9                     PC              equ	4089	;# 
   635   000FF9                     PCL             equ	4089	;# 
   636   000FFA                     PCLATH          equ	4090	;# 
   637   000FFB                     PCLATU          equ	4091	;# 
   638   000FFC                     STKPTR          equ	4092	;# 
   639   000FFD                     TOS             equ	4093	;# 
   640   000FFD                     TOSL            equ	4093	;# 
   641   000FFE                     TOSH            equ	4094	;# 
   642   000FFF                     TOSU            equ	4095	;# 
   643   000F62                     SPPDATA         equ	3938	;# 
   644   000F63                     SPPCFG          equ	3939	;# 
   645   000F64                     SPPEPS          equ	3940	;# 
   646   000F65                     SPPCON          equ	3941	;# 
   647   000F66                     UFRM            equ	3942	;# 
   648   000F66                     UFRML           equ	3942	;# 
   649   000F67                     UFRMH           equ	3943	;# 
   650   000F68                     UIR             equ	3944	;# 
   651   000F69                     UIE             equ	3945	;# 
   652   000F6A                     UEIR            equ	3946	;# 
   653   000F6B                     UEIE            equ	3947	;# 
   654   000F6C                     USTAT           equ	3948	;# 
   655   000F6D                     UCON            equ	3949	;# 
   656   000F6E                     UADDR           equ	3950	;# 
   657   000F6F                     UCFG            equ	3951	;# 
   658   000F70                     UEP0            equ	3952	;# 
   659   000F71                     UEP1            equ	3953	;# 
   660   000F72                     UEP2            equ	3954	;# 
   661   000F73                     UEP3            equ	3955	;# 
   662   000F74                     UEP4            equ	3956	;# 
   663   000F75                     UEP5            equ	3957	;# 
   664   000F76                     UEP6            equ	3958	;# 
   665   000F77                     UEP7            equ	3959	;# 
   666   000F78                     UEP8            equ	3960	;# 
   667   000F79                     UEP9            equ	3961	;# 
   668   000F7A                     UEP10           equ	3962	;# 
   669   000F7B                     UEP11           equ	3963	;# 
   670   000F7C                     UEP12           equ	3964	;# 
   671   000F7D                     UEP13           equ	3965	;# 
   672   000F7E                     UEP14           equ	3966	;# 
   673   000F7F                     UEP15           equ	3967	;# 
   674   000F80                     PORTA           equ	3968	;# 
   675   000F81                     PORTB           equ	3969	;# 
   676   000F82                     PORTC           equ	3970	;# 
   677   000F83                     PORTD           equ	3971	;# 
   678   000F84                     PORTE           equ	3972	;# 
   679   000F89                     LATA            equ	3977	;# 
   680   000F8A                     LATB            equ	3978	;# 
   681   000F8B                     LATC            equ	3979	;# 
   682   000F8C                     LATD            equ	3980	;# 
   683   000F8D                     LATE            equ	3981	;# 
   684   000F92                     TRISA           equ	3986	;# 
   685   000F92                     DDRA            equ	3986	;# 
   686   000F93                     TRISB           equ	3987	;# 
   687   000F93                     DDRB            equ	3987	;# 
   688   000F94                     TRISC           equ	3988	;# 
   689   000F94                     DDRC            equ	3988	;# 
   690   000F95                     TRISD           equ	3989	;# 
   691   000F95                     DDRD            equ	3989	;# 
   692   000F96                     TRISE           equ	3990	;# 
   693   000F96                     DDRE            equ	3990	;# 
   694   000F9B                     OSCTUNE         equ	3995	;# 
   695   000F9D                     PIE1            equ	3997	;# 
   696   000F9E                     PIR1            equ	3998	;# 
   697   000F9F                     IPR1            equ	3999	;# 
   698   000FA0                     PIE2            equ	4000	;# 
   699   000FA1                     PIR2            equ	4001	;# 
   700   000FA2                     IPR2            equ	4002	;# 
   701   000FA6                     EECON1          equ	4006	;# 
   702   000FA7                     EECON2          equ	4007	;# 
   703   000FA8                     EEDATA          equ	4008	;# 
   704   000FA9                     EEADR           equ	4009	;# 
   705   000FAB                     RCSTA           equ	4011	;# 
   706   000FAB                     RCSTA1          equ	4011	;# 
   707   000FAC                     TXSTA           equ	4012	;# 
   708   000FAC                     TXSTA1          equ	4012	;# 
   709   000FAD                     TXREG           equ	4013	;# 
   710   000FAD                     TXREG1          equ	4013	;# 
   711   000FAE                     RCREG           equ	4014	;# 
   712   000FAE                     RCREG1          equ	4014	;# 
   713   000FAF                     SPBRG           equ	4015	;# 
   714   000FAF                     SPBRG1          equ	4015	;# 
   715   000FB0                     SPBRGH          equ	4016	;# 
   716   000FB1                     T3CON           equ	4017	;# 
   717   000FB2                     TMR3            equ	4018	;# 
   718   000FB2                     TMR3L           equ	4018	;# 
   719   000FB3                     TMR3H           equ	4019	;# 
   720   000FB4                     CMCON           equ	4020	;# 
   721   000FB5                     CVRCON          equ	4021	;# 
   722   000FB6                     ECCP1AS         equ	4022	;# 
   723   000FB6                     CCP1AS          equ	4022	;# 
   724   000FB7                     ECCP1DEL        equ	4023	;# 
   725   000FB7                     CCP1DEL         equ	4023	;# 
   726   000FB8                     BAUDCON         equ	4024	;# 
   727   000FB8                     BAUDCTL         equ	4024	;# 
   728   000FBA                     CCP2CON         equ	4026	;# 
   729   000FBB                     CCPR2           equ	4027	;# 
   730   000FBB                     CCPR2L          equ	4027	;# 
   731   000FBC                     CCPR2H          equ	4028	;# 
   732   000FBD                     CCP1CON         equ	4029	;# 
   733   000FBD                     ECCP1CON        equ	4029	;# 
   734   000FBE                     CCPR1           equ	4030	;# 
   735   000FBE                     CCPR1L          equ	4030	;# 
   736   000FBF                     CCPR1H          equ	4031	;# 
   737   000FC0                     ADCON2          equ	4032	;# 
   738   000FC1                     ADCON1          equ	4033	;# 
   739   000FC2                     ADCON0          equ	4034	;# 
   740   000FC3                     ADRES           equ	4035	;# 
   741   000FC3                     ADRESL          equ	4035	;# 
   742   000FC4                     ADRESH          equ	4036	;# 
   743   000FC5                     SSPCON2         equ	4037	;# 
   744   000FC6                     SSPCON1         equ	4038	;# 
   745   000FC7                     SSPSTAT         equ	4039	;# 
   746   000FC8                     SSPADD          equ	4040	;# 
   747   000FC9                     SSPBUF          equ	4041	;# 
   748   000FCA                     T2CON           equ	4042	;# 
   749   000FCB                     PR2             equ	4043	;# 
   750   000FCB                     MEMCON          equ	4043	;# 
   751   000FCC                     TMR2            equ	4044	;# 
   752   000FCD                     T1CON           equ	4045	;# 
   753   000FCE                     TMR1            equ	4046	;# 
   754   000FCE                     TMR1L           equ	4046	;# 
   755   000FCF                     TMR1H           equ	4047	;# 
   756   000FD0                     RCON            equ	4048	;# 
   757   000FD1                     WDTCON          equ	4049	;# 
   758   000FD2                     HLVDCON         equ	4050	;# 
   759   000FD2                     LVDCON          equ	4050	;# 
   760   000FD3                     OSCCON          equ	4051	;# 
   761   000FD5                     T0CON           equ	4053	;# 
   762   000FD6                     TMR0            equ	4054	;# 
   763   000FD6                     TMR0L           equ	4054	;# 
   764   000FD7                     TMR0H           equ	4055	;# 
   765   000FD8                     STATUS          equ	4056	;# 
   766   000FD9                     FSR2            equ	4057	;# 
   767   000FD9                     FSR2L           equ	4057	;# 
   768   000FDA                     FSR2H           equ	4058	;# 
   769   000FDB                     PLUSW2          equ	4059	;# 
   770   000FDC                     PREINC2         equ	4060	;# 
   771   000FDD                     POSTDEC2        equ	4061	;# 
   772   000FDE                     POSTINC2        equ	4062	;# 
   773   000FDF                     INDF2           equ	4063	;# 
   774   000FE0                     BSR             equ	4064	;# 
   775   000FE1                     FSR1            equ	4065	;# 
   776   000FE1                     FSR1L           equ	4065	;# 
   777   000FE2                     FSR1H           equ	4066	;# 
   778   000FE3                     PLUSW1          equ	4067	;# 
   779   000FE4                     PREINC1         equ	4068	;# 
   780   000FE5                     POSTDEC1        equ	4069	;# 
   781   000FE6                     POSTINC1        equ	4070	;# 
   782   000FE7                     INDF1           equ	4071	;# 
   783   000FE8                     WREG            equ	4072	;# 
   784   000FE9                     FSR0            equ	4073	;# 
   785   000FE9                     FSR0L           equ	4073	;# 
   786   000FEA                     FSR0H           equ	4074	;# 
   787   000FEB                     PLUSW0          equ	4075	;# 
   788   000FEC                     PREINC0         equ	4076	;# 
   789   000FED                     POSTDEC0        equ	4077	;# 
   790   000FEE                     POSTINC0        equ	4078	;# 
   791   000FEF                     INDF0           equ	4079	;# 
   792   000FF0                     INTCON3         equ	4080	;# 
   793   000FF1                     INTCON2         equ	4081	;# 
   794   000FF2                     INTCON          equ	4082	;# 
   795   000FF3                     PROD            equ	4083	;# 
   796   000FF3                     PRODL           equ	4083	;# 
   797   000FF4                     PRODH           equ	4084	;# 
   798   000FF5                     TABLAT          equ	4085	;# 
   799   000FF6                     TBLPTR          equ	4086	;# 
   800   000FF6                     TBLPTRL         equ	4086	;# 
   801   000FF7                     TBLPTRH         equ	4087	;# 
   802   000FF8                     TBLPTRU         equ	4088	;# 
   803   000FF9                     PCLAT           equ	4089	;# 
   804   000FF9                     PC              equ	4089	;# 
   805   000FF9                     PCL             equ	4089	;# 
   806   000FFA                     PCLATH          equ	4090	;# 
   807   000FFB                     PCLATU          equ	4091	;# 
   808   000FFC                     STKPTR          equ	4092	;# 
   809   000FFD                     TOS             equ	4093	;# 
   810   000FFD                     TOSL            equ	4093	;# 
   811   000FFE                     TOSH            equ	4094	;# 
   812   000FFF                     TOSU            equ	4095	;# 
   813   000F62                     SPPDATA         equ	3938	;# 
   814   000F63                     SPPCFG          equ	3939	;# 
   815   000F64                     SPPEPS          equ	3940	;# 
   816   000F65                     SPPCON          equ	3941	;# 
   817   000F66                     UFRM            equ	3942	;# 
   818   000F66                     UFRML           equ	3942	;# 
   819   000F67                     UFRMH           equ	3943	;# 
   820   000F68                     UIR             equ	3944	;# 
   821   000F69                     UIE             equ	3945	;# 
   822   000F6A                     UEIR            equ	3946	;# 
   823   000F6B                     UEIE            equ	3947	;# 
   824   000F6C                     USTAT           equ	3948	;# 
   825   000F6D                     UCON            equ	3949	;# 
   826   000F6E                     UADDR           equ	3950	;# 
   827   000F6F                     UCFG            equ	3951	;# 
   828   000F70                     UEP0            equ	3952	;# 
   829   000F71                     UEP1            equ	3953	;# 
   830   000F72                     UEP2            equ	3954	;# 
   831   000F73                     UEP3            equ	3955	;# 
   832   000F74                     UEP4            equ	3956	;# 
   833   000F75                     UEP5            equ	3957	;# 
   834   000F76                     UEP6            equ	3958	;# 
   835   000F77                     UEP7            equ	3959	;# 
   836   000F78                     UEP8            equ	3960	;# 
   837   000F79                     UEP9            equ	3961	;# 
   838   000F7A                     UEP10           equ	3962	;# 
   839   000F7B                     UEP11           equ	3963	;# 
   840   000F7C                     UEP12           equ	3964	;# 
   841   000F7D                     UEP13           equ	3965	;# 
   842   000F7E                     UEP14           equ	3966	;# 
   843   000F7F                     UEP15           equ	3967	;# 
   844   000F80                     PORTA           equ	3968	;# 
   845   000F81                     PORTB           equ	3969	;# 
   846   000F82                     PORTC           equ	3970	;# 
   847   000F83                     PORTD           equ	3971	;# 
   848   000F84                     PORTE           equ	3972	;# 
   849   000F89                     LATA            equ	3977	;# 
   850   000F8A                     LATB            equ	3978	;# 
   851   000F8B                     LATC            equ	3979	;# 
   852   000F8C                     LATD            equ	3980	;# 
   853   000F8D                     LATE            equ	3981	;# 
   854   000F92                     TRISA           equ	3986	;# 
   855   000F92                     DDRA            equ	3986	;# 
   856   000F93                     TRISB           equ	3987	;# 
   857   000F93                     DDRB            equ	3987	;# 
   858   000F94                     TRISC           equ	3988	;# 
   859   000F94                     DDRC            equ	3988	;# 
   860   000F95                     TRISD           equ	3989	;# 
   861   000F95                     DDRD            equ	3989	;# 
   862   000F96                     TRISE           equ	3990	;# 
   863   000F96                     DDRE            equ	3990	;# 
   864   000F9B                     OSCTUNE         equ	3995	;# 
   865   000F9D                     PIE1            equ	3997	;# 
   866   000F9E                     PIR1            equ	3998	;# 
   867   000F9F                     IPR1            equ	3999	;# 
   868   000FA0                     PIE2            equ	4000	;# 
   869   000FA1                     PIR2            equ	4001	;# 
   870   000FA2                     IPR2            equ	4002	;# 
   871   000FA6                     EECON1          equ	4006	;# 
   872   000FA7                     EECON2          equ	4007	;# 
   873   000FA8                     EEDATA          equ	4008	;# 
   874   000FA9                     EEADR           equ	4009	;# 
   875   000FAB                     RCSTA           equ	4011	;# 
   876   000FAB                     RCSTA1          equ	4011	;# 
   877   000FAC                     TXSTA           equ	4012	;# 
   878   000FAC                     TXSTA1          equ	4012	;# 
   879   000FAD                     TXREG           equ	4013	;# 
   880   000FAD                     TXREG1          equ	4013	;# 
   881   000FAE                     RCREG           equ	4014	;# 
   882   000FAE                     RCREG1          equ	4014	;# 
   883   000FAF                     SPBRG           equ	4015	;# 
   884   000FAF                     SPBRG1          equ	4015	;# 
   885   000FB0                     SPBRGH          equ	4016	;# 
   886   000FB1                     T3CON           equ	4017	;# 
   887   000FB2                     TMR3            equ	4018	;# 
   888   000FB2                     TMR3L           equ	4018	;# 
   889   000FB3                     TMR3H           equ	4019	;# 
   890   000FB4                     CMCON           equ	4020	;# 
   891   000FB5                     CVRCON          equ	4021	;# 
   892   000FB6                     ECCP1AS         equ	4022	;# 
   893   000FB6                     CCP1AS          equ	4022	;# 
   894   000FB7                     ECCP1DEL        equ	4023	;# 
   895   000FB7                     CCP1DEL         equ	4023	;# 
   896   000FB8                     BAUDCON         equ	4024	;# 
   897   000FB8                     BAUDCTL         equ	4024	;# 
   898   000FBA                     CCP2CON         equ	4026	;# 
   899   000FBB                     CCPR2           equ	4027	;# 
   900   000FBB                     CCPR2L          equ	4027	;# 
   901   000FBC                     CCPR2H          equ	4028	;# 
   902   000FBD                     CCP1CON         equ	4029	;# 
   903   000FBD                     ECCP1CON        equ	4029	;# 
   904   000FBE                     CCPR1           equ	4030	;# 
   905   000FBE                     CCPR1L          equ	4030	;# 
   906   000FBF                     CCPR1H          equ	4031	;# 
   907   000FC0                     ADCON2          equ	4032	;# 
   908   000FC1                     ADCON1          equ	4033	;# 
   909   000FC2                     ADCON0          equ	4034	;# 
   910   000FC3                     ADRES           equ	4035	;# 
   911   000FC3                     ADRESL          equ	4035	;# 
   912   000FC4                     ADRESH          equ	4036	;# 
   913   000FC5                     SSPCON2         equ	4037	;# 
   914   000FC6                     SSPCON1         equ	4038	;# 
   915   000FC7                     SSPSTAT         equ	4039	;# 
   916   000FC8                     SSPADD          equ	4040	;# 
   917   000FC9                     SSPBUF          equ	4041	;# 
   918   000FCA                     T2CON           equ	4042	;# 
   919   000FCB                     PR2             equ	4043	;# 
   920   000FCB                     MEMCON          equ	4043	;# 
   921   000FCC                     TMR2            equ	4044	;# 
   922   000FCD                     T1CON           equ	4045	;# 
   923   000FCE                     TMR1            equ	4046	;# 
   924   000FCE                     TMR1L           equ	4046	;# 
   925   000FCF                     TMR1H           equ	4047	;# 
   926   000FD0                     RCON            equ	4048	;# 
   927   000FD1                     WDTCON          equ	4049	;# 
   928   000FD2                     HLVDCON         equ	4050	;# 
   929   000FD2                     LVDCON          equ	4050	;# 
   930   000FD3                     OSCCON          equ	4051	;# 
   931   000FD5                     T0CON           equ	4053	;# 
   932   000FD6                     TMR0            equ	4054	;# 
   933   000FD6                     TMR0L           equ	4054	;# 
   934   000FD7                     TMR0H           equ	4055	;# 
   935   000FD8                     STATUS          equ	4056	;# 
   936   000FD9                     FSR2            equ	4057	;# 
   937   000FD9                     FSR2L           equ	4057	;# 
   938   000FDA                     FSR2H           equ	4058	;# 
   939   000FDB                     PLUSW2          equ	4059	;# 
   940   000FDC                     PREINC2         equ	4060	;# 
   941   000FDD                     POSTDEC2        equ	4061	;# 
   942   000FDE                     POSTINC2        equ	4062	;# 
   943   000FDF                     INDF2           equ	4063	;# 
   944   000FE0                     BSR             equ	4064	;# 
   945   000FE1                     FSR1            equ	4065	;# 
   946   000FE1                     FSR1L           equ	4065	;# 
   947   000FE2                     FSR1H           equ	4066	;# 
   948   000FE3                     PLUSW1          equ	4067	;# 
   949   000FE4                     PREINC1         equ	4068	;# 
   950   000FE5                     POSTDEC1        equ	4069	;# 
   951   000FE6                     POSTINC1        equ	4070	;# 
   952   000FE7                     INDF1           equ	4071	;# 
   953   000FE8                     WREG            equ	4072	;# 
   954   000FE9                     FSR0            equ	4073	;# 
   955   000FE9                     FSR0L           equ	4073	;# 
   956   000FEA                     FSR0H           equ	4074	;# 
   957   000FEB                     PLUSW0          equ	4075	;# 
   958   000FEC                     PREINC0         equ	4076	;# 
   959   000FED                     POSTDEC0        equ	4077	;# 
   960   000FEE                     POSTINC0        equ	4078	;# 
   961   000FEF                     INDF0           equ	4079	;# 
   962   000FF0                     INTCON3         equ	4080	;# 
   963   000FF1                     INTCON2         equ	4081	;# 
   964   000FF2                     INTCON          equ	4082	;# 
   965   000FF3                     PROD            equ	4083	;# 
   966   000FF3                     PRODL           equ	4083	;# 
   967   000FF4                     PRODH           equ	4084	;# 
   968   000FF5                     TABLAT          equ	4085	;# 
   969   000FF6                     TBLPTR          equ	4086	;# 
   970   000FF6                     TBLPTRL         equ	4086	;# 
   971   000FF7                     TBLPTRH         equ	4087	;# 
   972   000FF8                     TBLPTRU         equ	4088	;# 
   973   000FF9                     PCLAT           equ	4089	;# 
   974   000FF9                     PC              equ	4089	;# 
   975   000FF9                     PCL             equ	4089	;# 
   976   000FFA                     PCLATH          equ	4090	;# 
   977   000FFB                     PCLATU          equ	4091	;# 
   978   000FFC                     STKPTR          equ	4092	;# 
   979   000FFD                     TOS             equ	4093	;# 
   980   000FFD                     TOSL            equ	4093	;# 
   981   000FFE                     TOSH            equ	4094	;# 
   982   000FFF                     TOSU            equ	4095	;# 
   983   000F62                     SPPDATA         equ	3938	;# 
   984   000F63                     SPPCFG          equ	3939	;# 
   985   000F64                     SPPEPS          equ	3940	;# 
   986   000F65                     SPPCON          equ	3941	;# 
   987   000F66                     UFRM            equ	3942	;# 
   988   000F66                     UFRML           equ	3942	;# 
   989   000F67                     UFRMH           equ	3943	;# 
   990   000F68                     UIR             equ	3944	;# 
   991   000F69                     UIE             equ	3945	;# 
   992   000F6A                     UEIR            equ	3946	;# 
   993   000F6B                     UEIE            equ	3947	;# 
   994   000F6C                     USTAT           equ	3948	;# 
   995   000F6D                     UCON            equ	3949	;# 
   996   000F6E                     UADDR           equ	3950	;# 
   997   000F6F                     UCFG            equ	3951	;# 
   998   000F70                     UEP0            equ	3952	;# 
   999   000F71                     UEP1            equ	3953	;# 
  1000   000F72                     UEP2            equ	3954	;# 
  1001   000F73                     UEP3            equ	3955	;# 
  1002   000F74                     UEP4            equ	3956	;# 
  1003   000F75                     UEP5            equ	3957	;# 
  1004   000F76                     UEP6            equ	3958	;# 
  1005   000F77                     UEP7            equ	3959	;# 
  1006   000F78                     UEP8            equ	3960	;# 
  1007   000F79                     UEP9            equ	3961	;# 
  1008   000F7A                     UEP10           equ	3962	;# 
  1009   000F7B                     UEP11           equ	3963	;# 
  1010   000F7C                     UEP12           equ	3964	;# 
  1011   000F7D                     UEP13           equ	3965	;# 
  1012   000F7E                     UEP14           equ	3966	;# 
  1013   000F7F                     UEP15           equ	3967	;# 
  1014   000F80                     PORTA           equ	3968	;# 
  1015   000F81                     PORTB           equ	3969	;# 
  1016   000F82                     PORTC           equ	3970	;# 
  1017   000F83                     PORTD           equ	3971	;# 
  1018   000F84                     PORTE           equ	3972	;# 
  1019   000F89                     LATA            equ	3977	;# 
  1020   000F8A                     LATB            equ	3978	;# 
  1021   000F8B                     LATC            equ	3979	;# 
  1022   000F8C                     LATD            equ	3980	;# 
  1023   000F8D                     LATE            equ	3981	;# 
  1024   000F92                     TRISA           equ	3986	;# 
  1025   000F92                     DDRA            equ	3986	;# 
  1026   000F93                     TRISB           equ	3987	;# 
  1027   000F93                     DDRB            equ	3987	;# 
  1028   000F94                     TRISC           equ	3988	;# 
  1029   000F94                     DDRC            equ	3988	;# 
  1030   000F95                     TRISD           equ	3989	;# 
  1031   000F95                     DDRD            equ	3989	;# 
  1032   000F96                     TRISE           equ	3990	;# 
  1033   000F96                     DDRE            equ	3990	;# 
  1034   000F9B                     OSCTUNE         equ	3995	;# 
  1035   000F9D                     PIE1            equ	3997	;# 
  1036   000F9E                     PIR1            equ	3998	;# 
  1037   000F9F                     IPR1            equ	3999	;# 
  1038   000FA0                     PIE2            equ	4000	;# 
  1039   000FA1                     PIR2            equ	4001	;# 
  1040   000FA2                     IPR2            equ	4002	;# 
  1041   000FA6                     EECON1          equ	4006	;# 
  1042   000FA7                     EECON2          equ	4007	;# 
  1043   000FA8                     EEDATA          equ	4008	;# 
  1044   000FA9                     EEADR           equ	4009	;# 
  1045   000FAB                     RCSTA           equ	4011	;# 
  1046   000FAB                     RCSTA1          equ	4011	;# 
  1047   000FAC                     TXSTA           equ	4012	;# 
  1048   000FAC                     TXSTA1          equ	4012	;# 
  1049   000FAD                     TXREG           equ	4013	;# 
  1050   000FAD                     TXREG1          equ	4013	;# 
  1051   000FAE                     RCREG           equ	4014	;# 
  1052   000FAE                     RCREG1          equ	4014	;# 
  1053   000FAF                     SPBRG           equ	4015	;# 
  1054   000FAF                     SPBRG1          equ	4015	;# 
  1055   000FB0                     SPBRGH          equ	4016	;# 
  1056   000FB1                     T3CON           equ	4017	;# 
  1057   000FB2                     TMR3            equ	4018	;# 
  1058   000FB2                     TMR3L           equ	4018	;# 
  1059   000FB3                     TMR3H           equ	4019	;# 
  1060   000FB4                     CMCON           equ	4020	;# 
  1061   000FB5                     CVRCON          equ	4021	;# 
  1062   000FB6                     ECCP1AS         equ	4022	;# 
  1063   000FB6                     CCP1AS          equ	4022	;# 
  1064   000FB7                     ECCP1DEL        equ	4023	;# 
  1065   000FB7                     CCP1DEL         equ	4023	;# 
  1066   000FB8                     BAUDCON         equ	4024	;# 
  1067   000FB8                     BAUDCTL         equ	4024	;# 
  1068   000FBA                     CCP2CON         equ	4026	;# 
  1069   000FBB                     CCPR2           equ	4027	;# 
  1070   000FBB                     CCPR2L          equ	4027	;# 
  1071   000FBC                     CCPR2H          equ	4028	;# 
  1072   000FBD                     CCP1CON         equ	4029	;# 
  1073   000FBD                     ECCP1CON        equ	4029	;# 
  1074   000FBE                     CCPR1           equ	4030	;# 
  1075   000FBE                     CCPR1L          equ	4030	;# 
  1076   000FBF                     CCPR1H          equ	4031	;# 
  1077   000FC0                     ADCON2          equ	4032	;# 
  1078   000FC1                     ADCON1          equ	4033	;# 
  1079   000FC2                     ADCON0          equ	4034	;# 
  1080   000FC3                     ADRES           equ	4035	;# 
  1081   000FC3                     ADRESL          equ	4035	;# 
  1082   000FC4                     ADRESH          equ	4036	;# 
  1083   000FC5                     SSPCON2         equ	4037	;# 
  1084   000FC6                     SSPCON1         equ	4038	;# 
  1085   000FC7                     SSPSTAT         equ	4039	;# 
  1086   000FC8                     SSPADD          equ	4040	;# 
  1087   000FC9                     SSPBUF          equ	4041	;# 
  1088   000FCA                     T2CON           equ	4042	;# 
  1089   000FCB                     PR2             equ	4043	;# 
  1090   000FCB                     MEMCON          equ	4043	;# 
  1091   000FCC                     TMR2            equ	4044	;# 
  1092   000FCD                     T1CON           equ	4045	;# 
  1093   000FCE                     TMR1            equ	4046	;# 
  1094   000FCE                     TMR1L           equ	4046	;# 
  1095   000FCF                     TMR1H           equ	4047	;# 
  1096   000FD0                     RCON            equ	4048	;# 
  1097   000FD1                     WDTCON          equ	4049	;# 
  1098   000FD2                     HLVDCON         equ	4050	;# 
  1099   000FD2                     LVDCON          equ	4050	;# 
  1100   000FD3                     OSCCON          equ	4051	;# 
  1101   000FD5                     T0CON           equ	4053	;# 
  1102   000FD6                     TMR0            equ	4054	;# 
  1103   000FD6                     TMR0L           equ	4054	;# 
  1104   000FD7                     TMR0H           equ	4055	;# 
  1105   000FD8                     STATUS          equ	4056	;# 
  1106   000FD9                     FSR2            equ	4057	;# 
  1107   000FD9                     FSR2L           equ	4057	;# 
  1108   000FDA                     FSR2H           equ	4058	;# 
  1109   000FDB                     PLUSW2          equ	4059	;# 
  1110   000FDC                     PREINC2         equ	4060	;# 
  1111   000FDD                     POSTDEC2        equ	4061	;# 
  1112   000FDE                     POSTINC2        equ	4062	;# 
  1113   000FDF                     INDF2           equ	4063	;# 
  1114   000FE0                     BSR             equ	4064	;# 
  1115   000FE1                     FSR1            equ	4065	;# 
  1116   000FE1                     FSR1L           equ	4065	;# 
  1117   000FE2                     FSR1H           equ	4066	;# 
  1118   000FE3                     PLUSW1          equ	4067	;# 
  1119   000FE4                     PREINC1         equ	4068	;# 
  1120   000FE5                     POSTDEC1        equ	4069	;# 
  1121   000FE6                     POSTINC1        equ	4070	;# 
  1122   000FE7                     INDF1           equ	4071	;# 
  1123   000FE8                     WREG            equ	4072	;# 
  1124   000FE9                     FSR0            equ	4073	;# 
  1125   000FE9                     FSR0L           equ	4073	;# 
  1126   000FEA                     FSR0H           equ	4074	;# 
  1127   000FEB                     PLUSW0          equ	4075	;# 
  1128   000FEC                     PREINC0         equ	4076	;# 
  1129   000FED                     POSTDEC0        equ	4077	;# 
  1130   000FEE                     POSTINC0        equ	4078	;# 
  1131   000FEF                     INDF0           equ	4079	;# 
  1132   000FF0                     INTCON3         equ	4080	;# 
  1133   000FF1                     INTCON2         equ	4081	;# 
  1134   000FF2                     INTCON          equ	4082	;# 
  1135   000FF3                     PROD            equ	4083	;# 
  1136   000FF3                     PRODL           equ	4083	;# 
  1137   000FF4                     PRODH           equ	4084	;# 
  1138   000FF5                     TABLAT          equ	4085	;# 
  1139   000FF6                     TBLPTR          equ	4086	;# 
  1140   000FF6                     TBLPTRL         equ	4086	;# 
  1141   000FF7                     TBLPTRH         equ	4087	;# 
  1142   000FF8                     TBLPTRU         equ	4088	;# 
  1143   000FF9                     PCLAT           equ	4089	;# 
  1144   000FF9                     PC              equ	4089	;# 
  1145   000FF9                     PCL             equ	4089	;# 
  1146   000FFA                     PCLATH          equ	4090	;# 
  1147   000FFB                     PCLATU          equ	4091	;# 
  1148   000FFC                     STKPTR          equ	4092	;# 
  1149   000FFD                     TOS             equ	4093	;# 
  1150   000FFD                     TOSL            equ	4093	;# 
  1151   000FFE                     TOSH            equ	4094	;# 
  1152   000FFF                     TOSU            equ	4095	;# 
  1153   000F62                     SPPDATA         equ	3938	;# 
  1154   000F63                     SPPCFG          equ	3939	;# 
  1155   000F64                     SPPEPS          equ	3940	;# 
  1156   000F65                     SPPCON          equ	3941	;# 
  1157   000F66                     UFRM            equ	3942	;# 
  1158   000F66                     UFRML           equ	3942	;# 
  1159   000F67                     UFRMH           equ	3943	;# 
  1160   000F68                     UIR             equ	3944	;# 
  1161   000F69                     UIE             equ	3945	;# 
  1162   000F6A                     UEIR            equ	3946	;# 
  1163   000F6B                     UEIE            equ	3947	;# 
  1164   000F6C                     USTAT           equ	3948	;# 
  1165   000F6D                     UCON            equ	3949	;# 
  1166   000F6E                     UADDR           equ	3950	;# 
  1167   000F6F                     UCFG            equ	3951	;# 
  1168   000F70                     UEP0            equ	3952	;# 
  1169   000F71                     UEP1            equ	3953	;# 
  1170   000F72                     UEP2            equ	3954	;# 
  1171   000F73                     UEP3            equ	3955	;# 
  1172   000F74                     UEP4            equ	3956	;# 
  1173   000F75                     UEP5            equ	3957	;# 
  1174   000F76                     UEP6            equ	3958	;# 
  1175   000F77                     UEP7            equ	3959	;# 
  1176   000F78                     UEP8            equ	3960	;# 
  1177   000F79                     UEP9            equ	3961	;# 
  1178   000F7A                     UEP10           equ	3962	;# 
  1179   000F7B                     UEP11           equ	3963	;# 
  1180   000F7C                     UEP12           equ	3964	;# 
  1181   000F7D                     UEP13           equ	3965	;# 
  1182   000F7E                     UEP14           equ	3966	;# 
  1183   000F7F                     UEP15           equ	3967	;# 
  1184   000F80                     PORTA           equ	3968	;# 
  1185   000F81                     PORTB           equ	3969	;# 
  1186   000F82                     PORTC           equ	3970	;# 
  1187   000F83                     PORTD           equ	3971	;# 
  1188   000F84                     PORTE           equ	3972	;# 
  1189   000F89                     LATA            equ	3977	;# 
  1190   000F8A                     LATB            equ	3978	;# 
  1191   000F8B                     LATC            equ	3979	;# 
  1192   000F8C                     LATD            equ	3980	;# 
  1193   000F8D                     LATE            equ	3981	;# 
  1194   000F92                     TRISA           equ	3986	;# 
  1195   000F92                     DDRA            equ	3986	;# 
  1196   000F93                     TRISB           equ	3987	;# 
  1197   000F93                     DDRB            equ	3987	;# 
  1198   000F94                     TRISC           equ	3988	;# 
  1199   000F94                     DDRC            equ	3988	;# 
  1200   000F95                     TRISD           equ	3989	;# 
  1201   000F95                     DDRD            equ	3989	;# 
  1202   000F96                     TRISE           equ	3990	;# 
  1203   000F96                     DDRE            equ	3990	;# 
  1204   000F9B                     OSCTUNE         equ	3995	;# 
  1205   000F9D                     PIE1            equ	3997	;# 
  1206   000F9E                     PIR1            equ	3998	;# 
  1207   000F9F                     IPR1            equ	3999	;# 
  1208   000FA0                     PIE2            equ	4000	;# 
  1209   000FA1                     PIR2            equ	4001	;# 
  1210   000FA2                     IPR2            equ	4002	;# 
  1211   000FA6                     EECON1          equ	4006	;# 
  1212   000FA7                     EECON2          equ	4007	;# 
  1213   000FA8                     EEDATA          equ	4008	;# 
  1214   000FA9                     EEADR           equ	4009	;# 
  1215   000FAB                     RCSTA           equ	4011	;# 
  1216   000FAB                     RCSTA1          equ	4011	;# 
  1217   000FAC                     TXSTA           equ	4012	;# 
  1218   000FAC                     TXSTA1          equ	4012	;# 
  1219   000FAD                     TXREG           equ	4013	;# 
  1220   000FAD                     TXREG1          equ	4013	;# 
  1221   000FAE                     RCREG           equ	4014	;# 
  1222   000FAE                     RCREG1          equ	4014	;# 
  1223   000FAF                     SPBRG           equ	4015	;# 
  1224   000FAF                     SPBRG1          equ	4015	;# 
  1225   000FB0                     SPBRGH          equ	4016	;# 
  1226   000FB1                     T3CON           equ	4017	;# 
  1227   000FB2                     TMR3            equ	4018	;# 
  1228   000FB2                     TMR3L           equ	4018	;# 
  1229   000FB3                     TMR3H           equ	4019	;# 
  1230   000FB4                     CMCON           equ	4020	;# 
  1231   000FB5                     CVRCON          equ	4021	;# 
  1232   000FB6                     ECCP1AS         equ	4022	;# 
  1233   000FB6                     CCP1AS          equ	4022	;# 
  1234   000FB7                     ECCP1DEL        equ	4023	;# 
  1235   000FB7                     CCP1DEL         equ	4023	;# 
  1236   000FB8                     BAUDCON         equ	4024	;# 
  1237   000FB8                     BAUDCTL         equ	4024	;# 
  1238   000FBA                     CCP2CON         equ	4026	;# 
  1239   000FBB                     CCPR2           equ	4027	;# 
  1240   000FBB                     CCPR2L          equ	4027	;# 
  1241   000FBC                     CCPR2H          equ	4028	;# 
  1242   000FBD                     CCP1CON         equ	4029	;# 
  1243   000FBD                     ECCP1CON        equ	4029	;# 
  1244   000FBE                     CCPR1           equ	4030	;# 
  1245   000FBE                     CCPR1L          equ	4030	;# 
  1246   000FBF                     CCPR1H          equ	4031	;# 
  1247   000FC0                     ADCON2          equ	4032	;# 
  1248   000FC1                     ADCON1          equ	4033	;# 
  1249   000FC2                     ADCON0          equ	4034	;# 
  1250   000FC3                     ADRES           equ	4035	;# 
  1251   000FC3                     ADRESL          equ	4035	;# 
  1252   000FC4                     ADRESH          equ	4036	;# 
  1253   000FC5                     SSPCON2         equ	4037	;# 
  1254   000FC6                     SSPCON1         equ	4038	;# 
  1255   000FC7                     SSPSTAT         equ	4039	;# 
  1256   000FC8                     SSPADD          equ	4040	;# 
  1257   000FC9                     SSPBUF          equ	4041	;# 
  1258   000FCA                     T2CON           equ	4042	;# 
  1259   000FCB                     PR2             equ	4043	;# 
  1260   000FCB                     MEMCON          equ	4043	;# 
  1261   000FCC                     TMR2            equ	4044	;# 
  1262   000FCD                     T1CON           equ	4045	;# 
  1263   000FCE                     TMR1            equ	4046	;# 
  1264   000FCE                     TMR1L           equ	4046	;# 
  1265   000FCF                     TMR1H           equ	4047	;# 
  1266   000FD0                     RCON            equ	4048	;# 
  1267   000FD1                     WDTCON          equ	4049	;# 
  1268   000FD2                     HLVDCON         equ	4050	;# 
  1269   000FD2                     LVDCON          equ	4050	;# 
  1270   000FD3                     OSCCON          equ	4051	;# 
  1271   000FD5                     T0CON           equ	4053	;# 
  1272   000FD6                     TMR0            equ	4054	;# 
  1273   000FD6                     TMR0L           equ	4054	;# 
  1274   000FD7                     TMR0H           equ	4055	;# 
  1275   000FD8                     STATUS          equ	4056	;# 
  1276   000FD9                     FSR2            equ	4057	;# 
  1277   000FD9                     FSR2L           equ	4057	;# 
  1278   000FDA                     FSR2H           equ	4058	;# 
  1279   000FDB                     PLUSW2          equ	4059	;# 
  1280   000FDC                     PREINC2         equ	4060	;# 
  1281   000FDD                     POSTDEC2        equ	4061	;# 
  1282   000FDE                     POSTINC2        equ	4062	;# 
  1283   000FDF                     INDF2           equ	4063	;# 
  1284   000FE0                     BSR             equ	4064	;# 
  1285   000FE1                     FSR1            equ	4065	;# 
  1286   000FE1                     FSR1L           equ	4065	;# 
  1287   000FE2                     FSR1H           equ	4066	;# 
  1288   000FE3                     PLUSW1          equ	4067	;# 
  1289   000FE4                     PREINC1         equ	4068	;# 
  1290   000FE5                     POSTDEC1        equ	4069	;# 
  1291   000FE6                     POSTINC1        equ	4070	;# 
  1292   000FE7                     INDF1           equ	4071	;# 
  1293   000FE8                     WREG            equ	4072	;# 
  1294   000FE9                     FSR0            equ	4073	;# 
  1295   000FE9                     FSR0L           equ	4073	;# 
  1296   000FEA                     FSR0H           equ	4074	;# 
  1297   000FEB                     PLUSW0          equ	4075	;# 
  1298   000FEC                     PREINC0         equ	4076	;# 
  1299   000FED                     POSTDEC0        equ	4077	;# 
  1300   000FEE                     POSTINC0        equ	4078	;# 
  1301   000FEF                     INDF0           equ	4079	;# 
  1302   000FF0                     INTCON3         equ	4080	;# 
  1303   000FF1                     INTCON2         equ	4081	;# 
  1304   000FF2                     INTCON          equ	4082	;# 
  1305   000FF3                     PROD            equ	4083	;# 
  1306   000FF3                     PRODL           equ	4083	;# 
  1307   000FF4                     PRODH           equ	4084	;# 
  1308   000FF5                     TABLAT          equ	4085	;# 
  1309   000FF6                     TBLPTR          equ	4086	;# 
  1310   000FF6                     TBLPTRL         equ	4086	;# 
  1311   000FF7                     TBLPTRH         equ	4087	;# 
  1312   000FF8                     TBLPTRU         equ	4088	;# 
  1313   000FF9                     PCLAT           equ	4089	;# 
  1314   000FF9                     PC              equ	4089	;# 
  1315   000FF9                     PCL             equ	4089	;# 
  1316   000FFA                     PCLATH          equ	4090	;# 
  1317   000FFB                     PCLATU          equ	4091	;# 
  1318   000FFC                     STKPTR          equ	4092	;# 
  1319   000FFD                     TOS             equ	4093	;# 
  1320   000FFD                     TOSL            equ	4093	;# 
  1321   000FFE                     TOSH            equ	4094	;# 
  1322   000FFF                     TOSU            equ	4095	;# 
  1323   000F62                     SPPDATA         equ	3938	;# 
  1324   000F63                     SPPCFG          equ	3939	;# 
  1325   000F64                     SPPEPS          equ	3940	;# 
  1326   000F65                     SPPCON          equ	3941	;# 
  1327   000F66                     UFRM            equ	3942	;# 
  1328   000F66                     UFRML           equ	3942	;# 
  1329   000F67                     UFRMH           equ	3943	;# 
  1330   000F68                     UIR             equ	3944	;# 
  1331   000F69                     UIE             equ	3945	;# 
  1332   000F6A                     UEIR            equ	3946	;# 
  1333   000F6B                     UEIE            equ	3947	;# 
  1334   000F6C                     USTAT           equ	3948	;# 
  1335   000F6D                     UCON            equ	3949	;# 
  1336   000F6E                     UADDR           equ	3950	;# 
  1337   000F6F                     UCFG            equ	3951	;# 
  1338   000F70                     UEP0            equ	3952	;# 
  1339   000F71                     UEP1            equ	3953	;# 
  1340   000F72                     UEP2            equ	3954	;# 
  1341   000F73                     UEP3            equ	3955	;# 
  1342   000F74                     UEP4            equ	3956	;# 
  1343   000F75                     UEP5            equ	3957	;# 
  1344   000F76                     UEP6            equ	3958	;# 
  1345   000F77                     UEP7            equ	3959	;# 
  1346   000F78                     UEP8            equ	3960	;# 
  1347   000F79                     UEP9            equ	3961	;# 
  1348   000F7A                     UEP10           equ	3962	;# 
  1349   000F7B                     UEP11           equ	3963	;# 
  1350   000F7C                     UEP12           equ	3964	;# 
  1351   000F7D                     UEP13           equ	3965	;# 
  1352   000F7E                     UEP14           equ	3966	;# 
  1353   000F7F                     UEP15           equ	3967	;# 
  1354   000F80                     PORTA           equ	3968	;# 
  1355   000F81                     PORTB           equ	3969	;# 
  1356   000F82                     PORTC           equ	3970	;# 
  1357   000F83                     PORTD           equ	3971	;# 
  1358   000F84                     PORTE           equ	3972	;# 
  1359   000F89                     LATA            equ	3977	;# 
  1360   000F8A                     LATB            equ	3978	;# 
  1361   000F8B                     LATC            equ	3979	;# 
  1362   000F8C                     LATD            equ	3980	;# 
  1363   000F8D                     LATE            equ	3981	;# 
  1364   000F92                     TRISA           equ	3986	;# 
  1365   000F92                     DDRA            equ	3986	;# 
  1366   000F93                     TRISB           equ	3987	;# 
  1367   000F93                     DDRB            equ	3987	;# 
  1368   000F94                     TRISC           equ	3988	;# 
  1369   000F94                     DDRC            equ	3988	;# 
  1370   000F95                     TRISD           equ	3989	;# 
  1371   000F95                     DDRD            equ	3989	;# 
  1372   000F96                     TRISE           equ	3990	;# 
  1373   000F96                     DDRE            equ	3990	;# 
  1374   000F9B                     OSCTUNE         equ	3995	;# 
  1375   000F9D                     PIE1            equ	3997	;# 
  1376   000F9E                     PIR1            equ	3998	;# 
  1377   000F9F                     IPR1            equ	3999	;# 
  1378   000FA0                     PIE2            equ	4000	;# 
  1379   000FA1                     PIR2            equ	4001	;# 
  1380   000FA2                     IPR2            equ	4002	;# 
  1381   000FA6                     EECON1          equ	4006	;# 
  1382   000FA7                     EECON2          equ	4007	;# 
  1383   000FA8                     EEDATA          equ	4008	;# 
  1384   000FA9                     EEADR           equ	4009	;# 
  1385   000FAB                     RCSTA           equ	4011	;# 
  1386   000FAB                     RCSTA1          equ	4011	;# 
  1387   000FAC                     TXSTA           equ	4012	;# 
  1388   000FAC                     TXSTA1          equ	4012	;# 
  1389   000FAD                     TXREG           equ	4013	;# 
  1390   000FAD                     TXREG1          equ	4013	;# 
  1391   000FAE                     RCREG           equ	4014	;# 
  1392   000FAE                     RCREG1          equ	4014	;# 
  1393   000FAF                     SPBRG           equ	4015	;# 
  1394   000FAF                     SPBRG1          equ	4015	;# 
  1395   000FB0                     SPBRGH          equ	4016	;# 
  1396   000FB1                     T3CON           equ	4017	;# 
  1397   000FB2                     TMR3            equ	4018	;# 
  1398   000FB2                     TMR3L           equ	4018	;# 
  1399   000FB3                     TMR3H           equ	4019	;# 
  1400   000FB4                     CMCON           equ	4020	;# 
  1401   000FB5                     CVRCON          equ	4021	;# 
  1402   000FB6                     ECCP1AS         equ	4022	;# 
  1403   000FB6                     CCP1AS          equ	4022	;# 
  1404   000FB7                     ECCP1DEL        equ	4023	;# 
  1405   000FB7                     CCP1DEL         equ	4023	;# 
  1406   000FB8                     BAUDCON         equ	4024	;# 
  1407   000FB8                     BAUDCTL         equ	4024	;# 
  1408   000FBA                     CCP2CON         equ	4026	;# 
  1409   000FBB                     CCPR2           equ	4027	;# 
  1410   000FBB                     CCPR2L          equ	4027	;# 
  1411   000FBC                     CCPR2H          equ	4028	;# 
  1412   000FBD                     CCP1CON         equ	4029	;# 
  1413   000FBD                     ECCP1CON        equ	4029	;# 
  1414   000FBE                     CCPR1           equ	4030	;# 
  1415   000FBE                     CCPR1L          equ	4030	;# 
  1416   000FBF                     CCPR1H          equ	4031	;# 
  1417   000FC0                     ADCON2          equ	4032	;# 
  1418   000FC1                     ADCON1          equ	4033	;# 
  1419   000FC2                     ADCON0          equ	4034	;# 
  1420   000FC3                     ADRES           equ	4035	;# 
  1421   000FC3                     ADRESL          equ	4035	;# 
  1422   000FC4                     ADRESH          equ	4036	;# 
  1423   000FC5                     SSPCON2         equ	4037	;# 
  1424   000FC6                     SSPCON1         equ	4038	;# 
  1425   000FC7                     SSPSTAT         equ	4039	;# 
  1426   000FC8                     SSPADD          equ	4040	;# 
  1427   000FC9                     SSPBUF          equ	4041	;# 
  1428   000FCA                     T2CON           equ	4042	;# 
  1429   000FCB                     PR2             equ	4043	;# 
  1430   000FCB                     MEMCON          equ	4043	;# 
  1431   000FCC                     TMR2            equ	4044	;# 
  1432   000FCD                     T1CON           equ	4045	;# 
  1433   000FCE                     TMR1            equ	4046	;# 
  1434   000FCE                     TMR1L           equ	4046	;# 
  1435   000FCF                     TMR1H           equ	4047	;# 
  1436   000FD0                     RCON            equ	4048	;# 
  1437   000FD1                     WDTCON          equ	4049	;# 
  1438   000FD2                     HLVDCON         equ	4050	;# 
  1439   000FD2                     LVDCON          equ	4050	;# 
  1440   000FD3                     OSCCON          equ	4051	;# 
  1441   000FD5                     T0CON           equ	4053	;# 
  1442   000FD6                     TMR0            equ	4054	;# 
  1443   000FD6                     TMR0L           equ	4054	;# 
  1444   000FD7                     TMR0H           equ	4055	;# 
  1445   000FD8                     STATUS          equ	4056	;# 
  1446   000FD9                     FSR2            equ	4057	;# 
  1447   000FD9                     FSR2L           equ	4057	;# 
  1448   000FDA                     FSR2H           equ	4058	;# 
  1449   000FDB                     PLUSW2          equ	4059	;# 
  1450   000FDC                     PREINC2         equ	4060	;# 
  1451   000FDD                     POSTDEC2        equ	4061	;# 
  1452   000FDE                     POSTINC2        equ	4062	;# 
  1453   000FDF                     INDF2           equ	4063	;# 
  1454   000FE0                     BSR             equ	4064	;# 
  1455   000FE1                     FSR1            equ	4065	;# 
  1456   000FE1                     FSR1L           equ	4065	;# 
  1457   000FE2                     FSR1H           equ	4066	;# 
  1458   000FE3                     PLUSW1          equ	4067	;# 
  1459   000FE4                     PREINC1         equ	4068	;# 
  1460   000FE5                     POSTDEC1        equ	4069	;# 
  1461   000FE6                     POSTINC1        equ	4070	;# 
  1462   000FE7                     INDF1           equ	4071	;# 
  1463   000FE8                     WREG            equ	4072	;# 
  1464   000FE9                     FSR0            equ	4073	;# 
  1465   000FE9                     FSR0L           equ	4073	;# 
  1466   000FEA                     FSR0H           equ	4074	;# 
  1467   000FEB                     PLUSW0          equ	4075	;# 
  1468   000FEC                     PREINC0         equ	4076	;# 
  1469   000FED                     POSTDEC0        equ	4077	;# 
  1470   000FEE                     POSTINC0        equ	4078	;# 
  1471   000FEF                     INDF0           equ	4079	;# 
  1472   000FF0                     INTCON3         equ	4080	;# 
  1473   000FF1                     INTCON2         equ	4081	;# 
  1474   000FF2                     INTCON          equ	4082	;# 
  1475   000FF3                     PROD            equ	4083	;# 
  1476   000FF3                     PRODL           equ	4083	;# 
  1477   000FF4                     PRODH           equ	4084	;# 
  1478   000FF5                     TABLAT          equ	4085	;# 
  1479   000FF6                     TBLPTR          equ	4086	;# 
  1480   000FF6                     TBLPTRL         equ	4086	;# 
  1481   000FF7                     TBLPTRH         equ	4087	;# 
  1482   000FF8                     TBLPTRU         equ	4088	;# 
  1483   000FF9                     PCLAT           equ	4089	;# 
  1484   000FF9                     PC              equ	4089	;# 
  1485   000FF9                     PCL             equ	4089	;# 
  1486   000FFA                     PCLATH          equ	4090	;# 
  1487   000FFB                     PCLATU          equ	4091	;# 
  1488   000FFC                     STKPTR          equ	4092	;# 
  1489   000FFD                     TOS             equ	4093	;# 
  1490   000FFD                     TOSL            equ	4093	;# 
  1491   000FFE                     TOSH            equ	4094	;# 
  1492   000FFF                     TOSU            equ	4095	;# 
  1493                           
  1494 ;;_t	offset	0
  1495 ;;_i	offset	2
  1496 ;;_priority_scheduler$120	offset	3
  1497 ;;_selected	offset	5
  1498 ;;_best_priority	offset	7
  1499 ;;_t	offset	0
  1500 ;;_i	offset	2
  1501 ;;_priority_scheduler$120	offset	3
  1502 ;;_selected	offset	5
  1503 ;;_best_priority	offset	7
  1504                           
  1505                           	psect	idataBANK1
  1506   002434                     __pidataBANK1:
  1507                           	callstack 0
  1508                           
  1509                           ;initializer for tarefa_injecao_eletronica@last_duty
  1510   002434  FF                 	db	255
  1511   000FFD                     _TOS            set	4093
  1512   000FD6                     _TMR0           set	4054
  1513   000FD5                     _T0CONbits      set	4053
  1514   000F8C                     _LATD           set	3980
  1515   000F95                     _TRISDbits      set	3989
  1516   000F8C                     _LATDbits       set	3980
  1517   000FF1                     _INTCON2bits    set	4081
  1518   000F93                     _TRISBbits      set	3987
  1519   000FBD                     _CCP1CONbits    set	4029
  1520   000FBE                     _CCPR1L         set	4030
  1521   000FBD                     _CCP1CON        set	4029
  1522   000FCB                     _PR2            set	4043
  1523   000FCA                     _T2CON          set	4042
  1524   000F94                     _TRISCbits      set	3988
  1525   000FC3                     _ADRESL         set	4035
  1526   000FC4                     _ADRESH         set	4036
  1527   000FC2                     _ADCON0bits     set	4034
  1528   000F92                     _TRISAbits      set	3986
  1529   000FC0                     _ADCON2         set	4032
  1530   000FC1                     _ADCON1         set	4033
  1531   000FC2                     _ADCON0         set	4034
  1532   000FFC                     _STKPTR         set	4092
  1533   000FE8                     _WREG           set	4072
  1534   000FD8                     _STATUS         set	4056
  1535   000FE0                     _BSR            set	4064
  1536   000FF2                     _INTCONbits     set	4082
  1537                           
  1538                           ; #config settings
  1539                           
  1540                           	psect	cinit
  1541   002202                     __pcinit:
  1542                           	callstack 0
  1543   002202                     start_initialization:
  1544                           	callstack 0
  1545   002202                     __initialization:
  1546                           	callstack 0
  1547                           
  1548                           ; Initialize objects allocated to BANK1 (1 bytes)
  1549                           ; load TBLPTR registers with __pidataBANK1
  1550   002202  0E34               	movlw	low __pidataBANK1
  1551   002204  6EF6               	movwf	tblptrl,c
  1552   002206  0E24               	movlw	high __pidataBANK1
  1553   002208  6EF7               	movwf	tblptrh,c
  1554   00220A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1555   00220C  6EF8               	movwf	tblptru,c
  1556   00220E  0009               	tblrd		*+	;fetch initializer
  1557   002210  CFF5 F1C4          	movff	tablat,__pdataBANK1
  1558                           
  1559                           ; Clear objects allocated to BIGRAM (539 bytes)
  1560   002214  EE01  F0C5         	lfsr	0,__pbssBIGRAM
  1561   002218  EE22 F01B          	lfsr	2,539
  1562   00221C                     clear_0:
  1563   00221C  6AEE               	clrf	postinc0,c
  1564   00221E  50DD               	movf	postdec2,w,c
  1565   002220  50D9               	movf	fsr2l,w,c
  1566   002222  E1FC               	bnz	clear_0
  1567   002224  50DA               	movf	fsr2h,w,c
  1568   002226  E1FA               	bnz	clear_0
  1569                           
  1570                           ; Clear objects allocated to BANK1 (88 bytes)
  1571   002228  EE01  F06C         	lfsr	0,__pbssBANK1
  1572   00222C  0E58               	movlw	88
  1573   00222E                     clear_1:
  1574   00222E  6AEE               	clrf	postinc0,c
  1575   002230  06E8               	decf	wreg,f,c
  1576   002232  E1FD               	bnz	clear_1
  1577                           
  1578                           ; Clear objects allocated to COMRAM (24 bytes)
  1579   002234  EE00  F021         	lfsr	0,__pbssCOMRAM
  1580   002238  0E18               	movlw	24
  1581   00223A                     clear_2:
  1582   00223A  6AEE               	clrf	postinc0,c
  1583   00223C  06E8               	decf	wreg,f,c
  1584   00223E  E1FD               	bnz	clear_2
  1585   002240                     end_of_initialization:
  1586                           	callstack 0
  1587   002240                     __end_of__initialization:
  1588                           	callstack 0
  1589   002240  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1590   002242  6EF8               	movwf	tblptru,c
  1591   002244  0100               	movlb	0
  1592   002246  EF25  F011         	goto	_main	;jump to C main() function
  1593                           
  1594                           	psect	bssCOMRAM
  1595   000021                     __pbssCOMRAM:
  1596                           	callstack 0
  1597   000021                     	ds	2
  1598   000023                     _est_created:
  1599                           	callstack 0
  1600   000023                     	ds	1
  1601   000024                     _est_flag:
  1602                           	callstack 0
  1603   000024                     	ds	1
  1604   000025                     _accel_pipe:
  1605                           	callstack 0
  1606   000025                     	ds	20
  1607                           
  1608                           	psect	bssBANK1
  1609   00016C                     __pbssBANK1:
  1610                           	callstack 0
  1611   00016C                     _accel_data:
  1612                           	callstack 0
  1613   00016C                     	ds	1
  1614   00016D                     __uDynamicHeap:
  1615                           	callstack 0
  1616   00016D                     	ds	80
  1617   0001BD                     _buffer_mutex:
  1618                           	callstack 0
  1619   0001BD                     	ds	7
  1620                           
  1621                           	psect	dataBANK1
  1622   0001C4                     __pdataBANK1:
  1623                           	callstack 0
  1624   0001C4                     tarefa_injecao_eletronica@last_duty:
  1625                           	callstack 0
  1626   0001C4                     	ds	1
  1627                           
  1628                           	psect	bssBIGRAM
  1629   0001C5                     __pbssBIGRAM:
  1630                           	callstack 0
  1631   0001C5                     _r_queue:
  1632                           	callstack 0
  1633   0001C5                     	ds	539
  1634                           
  1635                           	psect	cstackBANK1
  1636   000100                     __pcstackBANK1:
  1637                           	callstack 0
  1638   000100                     ?_adc_read:
  1639                           	callstack 0
  1640   000100                     create_task@id:
  1641                           	callstack 0
  1642   000100                     
  1643                           ; 1 bytes @ 0x0
  1644   000100                     	ds	1
  1645   000101                     create_task@new_task:
  1646                           	callstack 0
  1647                           
  1648                           ; 107 bytes @ 0x1
  1649   000101                     	ds	1
  1650   000102                     ??_adc_read:
  1651                           
  1652                           ; 1 bytes @ 0x2
  1653   000102                     	ds	6
  1654   000108                     write_pipe@p:
  1655                           	callstack 0
  1656                           
  1657                           ; 1 bytes @ 0x8
  1658   000108                     	ds	1
  1659   000109                     write_pipe@data:
  1660                           	callstack 0
  1661                           
  1662                           ; 1 bytes @ 0x9
  1663   000109                     	ds	1
  1664   00010A                     ??_write_pipe:
  1665                           
  1666                           ; 1 bytes @ 0xA
  1667   00010A                     	ds	3
  1668   00010D                     ??_tarefa_acelerador:
  1669                           
  1670                           ; 1 bytes @ 0xD
  1671   00010D                     	ds	2
  1672   00010F                     tarefa_acelerador@raw:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0xF
  1676   00010F                     	ds	2
  1677   000111                     tarefa_acelerador@data:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x11
  1681   000111                     	ds	1
  1682   000112                     ?___awmod:
  1683                           	callstack 0
  1684   000112                     sem_wait@sem:
  1685                           	callstack 0
  1686   000112                     sem_post@sem:
  1687                           	callstack 0
  1688   000112                     ___awmod@dividend:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x12
  1692   000112                     	ds	1
  1693   000113                     ??_sem_wait:
  1694   000113                     ??_sem_post:
  1695                           
  1696                           ; 1 bytes @ 0x13
  1697   000113                     	ds	1
  1698   000114                     ___awmod@divisor:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x14
  1702   000114                     	ds	2
  1703   000116                     ___awmod@counter:
  1704                           	callstack 0
  1705   000116                     
  1706                           ; 1 bytes @ 0x16
  1707   000116                     	ds	1
  1708   000117                     ___awmod@sign:
  1709                           	callstack 0
  1710                           
  1711                           ; 1 bytes @ 0x17
  1712   000117                     	ds	3
  1713   00011A                     read_pipe@p:
  1714                           	callstack 0
  1715                           
  1716                           ; 1 bytes @ 0x1A
  1717   00011A                     	ds	1
  1718   00011B                     read_pipe@data:
  1719                           	callstack 0
  1720                           
  1721                           ; 2 bytes @ 0x1B
  1722   00011B                     	ds	2
  1723   00011D                     ??_read_pipe:
  1724                           
  1725                           ; 1 bytes @ 0x1D
  1726   00011D                     	ds	3
  1727   000120                     tarefa_controle_central@duty:
  1728                           	callstack 0
  1729   000120                     
  1730                           ; 1 bytes @ 0x20
  1731   000120                     	ds	1
  1732   000121                     tarefa_controle_central@data:
  1733                           	callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x21
  1736   000121                     	ds	1
  1737   000122                     mutex_lock@m:
  1738                           	callstack 0
  1739   000122                     mutex_unlock@m:
  1740                           	callstack 0
  1741   000122                     ??_yield:
  1742   000122                     ??_pwm_set:
  1743                           
  1744                           ; 1 bytes @ 0x22
  1745   000122                     	ds	2
  1746   000124                     pwm_set@duty_cycle:
  1747                           	callstack 0
  1748   000124                     ??_mutex_lock:
  1749   000124                     ??_mutex_unlock:
  1750                           
  1751                           ; 1 bytes @ 0x24
  1752   000124                     	ds	1
  1753   000125                     pwm_set@duty:
  1754                           	callstack 0
  1755                           
  1756                           ; 2 bytes @ 0x25
  1757   000125                     	ds	2
  1758   000127                     mutex_unlock@tid:
  1759                           	callstack 0
  1760                           
  1761                           ; 1 bytes @ 0x27
  1762   000127                     	ds	4
  1763   00012B                     tarefa_injecao_eletronica@duty:
  1764                           	callstack 0
  1765   00012B                     
  1766                           ; 1 bytes @ 0x2B
  1767   00012B                     	ds	1
  1768   00012C                     delay@time:
  1769                           	callstack 0
  1770   00012C                     ??_change_state:
  1771                           
  1772                           ; 1 bytes @ 0x2C
  1773   00012C                     	ds	2
  1774   00012E                     ??_delay:
  1775                           
  1776                           ; 1 bytes @ 0x2E
  1777   00012E                     	ds	5
  1778   000133                     change_state@new_state:
  1779                           	callstack 0
  1780                           
  1781                           ; 1 bytes @ 0x33
  1782   000133                     	ds	2
  1783   000135                     
  1784                           ; 1 bytes @ 0x35
  1785   000135                     	ds	55
  1786                           
  1787                           	psect	cstackBANK0
  1788   000060                     __pcstackBANK0:
  1789                           	callstack 0
  1790   000060                     i2create_task@id:
  1791                           	callstack 0
  1792   000060                     SRAMalloc@temp:
  1793                           	callstack 0
  1794                           
  1795                           ; 2 bytes @ 0x0
  1796   000060                     	ds	1
  1797   000061                     i2create_task@new_task:
  1798                           	callstack 0
  1799                           
  1800                           ; 107 bytes @ 0x1
  1801   000061                     	ds	1
  1802   000062                     SRAMalloc@segLen:
  1803                           	callstack 0
  1804                           
  1805                           ; 1 bytes @ 0x2
  1806   000062                     	ds	1
  1807   000063                     SRAMalloc@segHeader:
  1808                           	callstack 0
  1809                           
  1810                           ; 1 bytes @ 0x3
  1811   000063                     	ds	1
  1812   000064                     SRAMalloc@nBytes:
  1813                           	callstack 0
  1814                           
  1815                           ; 1 bytes @ 0x4
  1816   000064                     	ds	1
  1817   000065                     SRAMalloc@pHeap:
  1818                           	callstack 0
  1819                           
  1820                           ; 2 bytes @ 0x5
  1821   000065                     	ds	103
  1822                           
  1823                           	psect	cstackCOMRAM
  1824   000039                     __pcstackCOMRAM:
  1825                           	callstack 0
  1826   000039                     sem_init@sem:
  1827                           	callstack 0
  1828   000039                     create_task@priority:
  1829                           	callstack 0
  1830   000039                     i2create_task@priority:
  1831                           	callstack 0
  1832   000039                     mutex_init@m:
  1833                           	callstack 0
  1834   000039                     SRAMInitHeap@pHeap:
  1835                           	callstack 0
  1836   000039                     __SRAMmerge@pSegA:
  1837                           	callstack 0
  1838   000039                     
  1839                           ; 1 bytes @ 0x0
  1840   000039                     	ds	1
  1841   00003A                     sem_init@value:
  1842                           	callstack 0
  1843   00003A                     create_task@task:
  1844                           	callstack 0
  1845   00003A                     i2create_task@task:
  1846                           	callstack 0
  1847                           
  1848                           ; 2 bytes @ 0x1
  1849   00003A                     	ds	1
  1850   00003B                     decrease_time@i:
  1851                           	callstack 0
  1852   00003B                     SRAMInitHeap@count:
  1853                           	callstack 0
  1854   00003B                     ??__SRAMmerge:
  1855   00003B                     
  1856                           ; 1 bytes @ 0x2
  1857   00003B                     	ds	1
  1858   00003C                     __SRAMmerge@uSum:
  1859                           	callstack 0
  1860   00003C                     ??_create_task:
  1861   00003C                     ??i2_create_task:
  1862                           
  1863                           ; 1 bytes @ 0x3
  1864   00003C                     	ds	1
  1865   00003D                     __SRAMmerge@pSegB:
  1866                           	callstack 0
  1867   00003D                     ??_ISR:
  1868                           
  1869                           ; 1 bytes @ 0x4
  1870   00003D                     	ds	2
  1871   00003F                     __SRAMmerge@uSegA:
  1872                           	callstack 0
  1873                           
  1874                           ; 1 bytes @ 0x6
  1875   00003F                     	ds	1
  1876   000040                     __SRAMmerge@uSegB:
  1877                           	callstack 0
  1878                           
  1879                           ; 1 bytes @ 0x7
  1880   000040                     	ds	1
  1881   000041                     ?_SRAMalloc:
  1882                           	callstack 0
  1883                           
  1884                           ; 2 bytes @ 0x8
  1885   000041                     	ds	2
  1886   000043                     ??_SRAMalloc:
  1887                           
  1888                           ; 1 bytes @ 0xA
  1889   000043                     	ds	2
  1890   000045                     create_pipe@p:
  1891                           	callstack 0
  1892                           
  1893                           ; 1 bytes @ 0xC
  1894   000045                     	ds	1
  1895   000046                     
  1896                           ; 1 bytes @ 0xD
  1897   000046                     	ds	9
  1898   00004F                     ISR@i:
  1899                           	callstack 0
  1900                           
  1901                           ; 1 bytes @ 0x16
  1902   00004F                     	ds	1
  1903                           
  1904 ;;
  1905 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1906 ;;
  1907 ;; *************** function _main *****************
  1908 ;; Defined at:
  1909 ;;		line 4 in file "main.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  2   16[None  ] int 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1926 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels required when called: 13
  1929 ;; This function calls:
  1930 ;;		_create_task
  1931 ;;		_os_init
  1932 ;;		_os_start
  1933 ;; This function is called by:
  1934 ;;		Startup code after reset
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text0
  1939   00224A                     __ptext0:
  1940                           	callstack 0
  1941   00224A                     _main:
  1942                           	callstack 18
  1943   00224A                     
  1944                           ;main.c: 6:     os_init();
  1945   00224A  ECC1  F011         	call	_os_init	;wreg free
  1946                           
  1947                           ;main.c: 8:     create_task(1, 4, tarefa_acelerador);
  1948   00224E  0E04               	movlw	4
  1949   002250  6E39               	movwf	create_task@priority^0,c
  1950   002252  0E90               	movlw	low _tarefa_acelerador
  1951   002254  6E3A               	movwf	create_task@task^0,c
  1952   002256  0E22               	movlw	high _tarefa_acelerador
  1953   002258  6E3B               	movwf	(create_task@task+1)^0,c
  1954   00225A  0E01               	movlw	1
  1955   00225C  EC32  F010         	call	_create_task
  1956                           
  1957                           ;main.c: 9:     create_task(2, 3, tarefa_controle_central);
  1958   002260  0E03               	movlw	3
  1959   002262  6E39               	movwf	create_task@priority^0,c
  1960   002264  0E10               	movlw	low _tarefa_controle_central
  1961   002266  6E3A               	movwf	create_task@task^0,c
  1962   002268  0E21               	movlw	high _tarefa_controle_central
  1963   00226A  6E3B               	movwf	(create_task@task+1)^0,c
  1964   00226C  0E02               	movlw	2
  1965   00226E  EC32  F010         	call	_create_task
  1966                           
  1967                           ;main.c: 10:     create_task(3, 3, tarefa_injecao_eletronica);
  1968   002272  0E03               	movlw	3
  1969   002274  6E39               	movwf	create_task@priority^0,c
  1970   002276  0EB6               	movlw	low _tarefa_injecao_eletronica
  1971   002278  6E3A               	movwf	create_task@task^0,c
  1972   00227A  0E21               	movlw	high _tarefa_injecao_eletronica
  1973   00227C  6E3B               	movwf	(create_task@task+1)^0,c
  1974   00227E  0E03               	movlw	3
  1975   002280  EC32  F010         	call	_create_task
  1976   002284                     
  1977                           ;main.c: 13:     os_start();
  1978   002284  EC05  F012         	call	_os_start	;wreg free
  1979   002288                     l17:
  1980   002288  EF44  F011         	goto	l17
  1981   00228C  EF06  F000         	goto	start
  1982   002290                     __end_of_main:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _os_start *****************
  1986 ;; Defined at:
  1987 ;;		line 66 in file "kernel.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 12
  2008 ;; This function calls:
  2009 ;;		_start_timer0
  2010 ;;		_user_config
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text1
  2017   00240A                     __ptext1:
  2018                           	callstack 0
  2019   00240A                     _os_start:
  2020                           	callstack 18
  2021   00240A                     
  2022                           ;kernel.c: 71:     user_config();
  2023   00240A  EC66  F011         	call	_user_config	;wreg free
  2024   00240E                     
  2025                           ;kernel.c: 74:     (INTCONbits.GIE = 1);
  2026   00240E  8EF2               	bsf	242,7,c	;volatile
  2027   002410                     
  2028                           ;kernel.c: 77:     start_timer0();
  2029   002410  EC18  F012         	call	_start_timer0	;wreg free
  2030   002414  0012               	return		;funcret
  2031   002416                     __end_of_os_start:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _user_config *****************
  2035 ;; Defined at:
  2036 ;;		line 84 in file "user_app.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 11
  2057 ;; This function calls:
  2058 ;;		_adc_init
  2059 ;;		_config_timer0
  2060 ;;		_create_pipe
  2061 ;;		_int_ext_init
  2062 ;;		_mutex_init
  2063 ;;		_pwm_init
  2064 ;;		_start_timer0
  2065 ;; This function is called by:
  2066 ;;		_os_start
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text2
  2071   0022CC                     __ptext2:
  2072                           	callstack 0
  2073   0022CC                     _user_config:
  2074                           	callstack 18
  2075   0022CC                     
  2076                           ;user_app.c: 87:     TRISDbits.RD0 = 0;
  2077   0022CC  9095               	bcf	149,0,c	;volatile
  2078                           
  2079                           ;user_app.c: 88:     TRISDbits.RD1 = 0;
  2080   0022CE  9295               	bcf	149,1,c	;volatile
  2081                           
  2082                           ;user_app.c: 89:     TRISDbits.RD2 = 0;
  2083   0022D0  9495               	bcf	149,2,c	;volatile
  2084                           
  2085                           ;user_app.c: 90:     TRISDbits.RD3 = 0;
  2086   0022D2  9695               	bcf	149,3,c	;volatile
  2087                           
  2088                           ;user_app.c: 91:     LATD = 0;
  2089   0022D4  6A8C               	clrf	140,c	;volatile
  2090   0022D6                     
  2091                           ;user_app.c: 94:     create_pipe(&accel_pipe);
  2092   0022D6  0E25               	movlw	low _accel_pipe
  2093   0022D8  6E45               	movwf	create_pipe@p^0,c
  2094   0022DA  ECB2  F010         	call	_create_pipe	;wreg free
  2095   0022DE                     
  2096                           ;user_app.c: 95:     mutex_init(&buffer_mutex);
  2097   0022DE  0EBD               	movlw	low _buffer_mutex
  2098   0022E0  6E39               	movwf	mutex_init@m^0,c
  2099   0022E2  0E01               	movlw	high _buffer_mutex
  2100   0022E4  6E3A               	movwf	(mutex_init@m+1)^0,c
  2101   0022E6  EC98  F011         	call	_mutex_init	;wreg free
  2102   0022EA                     
  2103                           ;user_app.c: 98:     adc_init();
  2104   0022EA  ECFD  F011         	call	_adc_init	;wreg free
  2105   0022EE                     
  2106                           ;user_app.c: 99:     pwm_init();
  2107   0022EE  ECF3  F011         	call	_pwm_init	;wreg free
  2108   0022F2                     
  2109                           ;user_app.c: 100:     int_ext_init();
  2110   0022F2  EC0B  F012         	call	_int_ext_init	;wreg free
  2111   0022F6                     
  2112                           ;user_app.c: 103:     config_timer0();
  2113   0022F6  ECE5  F011         	call	_config_timer0	;wreg free
  2114   0022FA                     
  2115                           ;user_app.c: 104:     start_timer0();
  2116   0022FA  EC18  F012         	call	_start_timer0	;# 
  2117   0022FE  0012               	return		;funcret
  2118   002300                     __end_of_user_config:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _start_timer0 *****************
  2122 ;; Defined at:
  2123 ;;		line 67 in file "timer.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		None
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 8
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_user_config
  2148 ;;		_os_start
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text3
  2153   002430                     __ptext3:
  2154                           	callstack 0
  2155   002430                     _start_timer0:
  2156                           	callstack 20
  2157   002430                     
  2158                           ;timer.c: 69:     T0CONbits.TMR0ON = 1;
  2159   002430  8ED5               	bsf	213,7,c	;volatile
  2160   002432  0012               	return		;funcret
  2161   002434                     __end_of_start_timer0:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _pwm_init *****************
  2165 ;; Defined at:
  2166 ;;		line 25 in file "io.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 8
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_user_config
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text4
  2195   0023E6                     __ptext4:
  2196                           	callstack 0
  2197   0023E6                     _pwm_init:
  2198                           	callstack 20
  2199   0023E6                     
  2200                           ;io.c: 27:     TRISCbits.RC2 = 0;
  2201   0023E6  9494               	bcf	148,2,c	;volatile
  2202   0023E8                     
  2203                           ;io.c: 28:     T2CON = 0b00000111;
  2204   0023E8  0E07               	movlw	7
  2205   0023EA  6ECA               	movwf	202,c	;volatile
  2206   0023EC                     
  2207                           ;io.c: 29:     PR2 = 255;
  2208   0023EC  68CB               	setf	203,c	;volatile
  2209                           
  2210                           ;io.c: 30:     CCP1CON = 0b00001100;
  2211   0023EE  0E0C               	movlw	12
  2212   0023F0  6EBD               	movwf	189,c	;volatile
  2213   0023F2                     
  2214                           ;io.c: 31:     CCPR1L = 0;
  2215   0023F2  6ABE               	clrf	190,c	;volatile
  2216                           
  2217                           ;io.c: 32:     CCP1CONbits.DC1B = 0;
  2218   0023F4  0ECF               	movlw	-49
  2219   0023F6  16BD               	andwf	189,f,c	;volatile
  2220   0023F8  0012               	return		;funcret
  2221   0023FA                     __end_of_pwm_init:
  2222                           	callstack 0
  2223                           
  2224 ;; *************** function _mutex_init *****************
  2225 ;; Defined at:
  2226 ;;		line 48 in file "sync.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  m               2    0[COMRAM] PTR struct mutex
  2229 ;;		 -> buffer_mutex(7), 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2241 ;;      Params:         2       0       0       0       0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2244 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2245 ;;Total ram usage:        2 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 8
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_user_config
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text5
  2256   002330                     __ptext5:
  2257                           	callstack 0
  2258   002330                     _mutex_init:
  2259                           	callstack 20
  2260   002330                     
  2261                           ;sync.c: 48: void mutex_init(mutex_t *m);sync.c: 49: {;sync.c: 50:     m->flag = 1;
  2262   002330  C039  FFD9         	movff	mutex_init@m,fsr2l
  2263   002334  C03A  FFDA         	movff	mutex_init@m+1,fsr2h
  2264   002338  0E01               	movlw	1
  2265   00233A  6EDF               	movwf	indf2,c
  2266   00233C                     
  2267                           ;sync.c: 51:     m->s_size = 0;
  2268   00233C  EE20 F005          	lfsr	2,5
  2269   002340  5039               	movf	mutex_init@m^0,w,c
  2270   002342  26D9               	addwf	fsr2l,f,c
  2271   002344  503A               	movf	(mutex_init@m+1)^0,w,c
  2272   002346  22DA               	addwfc	fsr2h,f,c
  2273   002348  6ADF               	clrf	indf2,c
  2274   00234A                     
  2275                           ;sync.c: 52:     m->s_pos_out = 0;
  2276   00234A  EE20 F006          	lfsr	2,6
  2277   00234E  5039               	movf	mutex_init@m^0,w,c
  2278   002350  26D9               	addwf	fsr2l,f,c
  2279   002352  503A               	movf	(mutex_init@m+1)^0,w,c
  2280   002354  22DA               	addwfc	fsr2h,f,c
  2281   002356  6ADF               	clrf	indf2,c
  2282   002358  0012               	return		;funcret
  2283   00235A                     __end_of_mutex_init:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _int_ext_init *****************
  2287 ;; Defined at:
  2288 ;;		line 47 in file "io.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		None
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 8
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_user_config
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text6
  2317   002416                     __ptext6:
  2318                           	callstack 0
  2319   002416                     _int_ext_init:
  2320                           	callstack 20
  2321   002416                     
  2322                           ;io.c: 49:     TRISBbits.RB0 = 1;
  2323   002416  8093               	bsf	147,0,c	;volatile
  2324                           
  2325                           ;io.c: 50:     INTCON2bits.INTEDG0 = 1;
  2326   002418  8CF1               	bsf	241,6,c	;volatile
  2327                           
  2328                           ;io.c: 51:     INTCONbits.INT0IF = 0;
  2329   00241A  92F2               	bcf	242,1,c	;volatile
  2330                           
  2331                           ;io.c: 52:     INTCONbits.INT0IE = 1;
  2332   00241C  88F2               	bsf	242,4,c	;volatile
  2333                           
  2334                           ;io.c: 53:     INTCONbits.GIE = 1;
  2335   00241E  8EF2               	bsf	242,7,c	;volatile
  2336   002420  0012               	return		;funcret
  2337   002422                     __end_of_int_ext_init:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _create_pipe *****************
  2341 ;; Defined at:
  2342 ;;		line 4 in file "pipe.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  p               1   12[COMRAM] PTR struct pipe
  2345 ;;		 -> accel_pipe(20), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         1       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:        1 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 10
  2364 ;; This function calls:
  2365 ;;		_SRAMalloc
  2366 ;;		_sem_init
  2367 ;; This function is called by:
  2368 ;;		_user_config
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text7
  2373   002164                     __ptext7:
  2374                           	callstack 0
  2375   002164                     _create_pipe:
  2376                           	callstack 18
  2377   002164                     
  2378                           ;pipe.c: 4: void create_pipe(pipe_t *p);pipe.c: 5: {;pipe.c: 6:     p->pipe_msg = (uint8
      +                          _t *)SRAMalloc(4);
  2379   002164  0E04               	movlw	4
  2380   002166  EC2A  F00D         	call	_SRAMalloc
  2381   00216A  5045               	movf	create_pipe@p^0,w,c
  2382   00216C  6ED9               	movwf	fsr2l,c
  2383   00216E  6ADA               	clrf	fsr2h,c
  2384   002170  C041  FFDE         	movff	?_SRAMalloc,postinc2
  2385   002174  C042  FFDD         	movff	?_SRAMalloc+1,postdec2
  2386   002178                     
  2387                           ;pipe.c: 7:     p->pipe_pos_read = 0;
  2388   002178  5045               	movf	create_pipe@p^0,w,c
  2389   00217A  6ED9               	movwf	fsr2l,c
  2390   00217C  6ADA               	clrf	fsr2h,c
  2391   00217E  0E02               	movlw	2
  2392   002180  26D9               	addwf	fsr2l,f,c
  2393   002182  6ADF               	clrf	indf2,c
  2394   002184                     
  2395                           ;pipe.c: 8:     p->pipe_pos_write = 0;
  2396   002184  5045               	movf	create_pipe@p^0,w,c
  2397   002186  6ED9               	movwf	fsr2l,c
  2398   002188  6ADA               	clrf	fsr2h,c
  2399   00218A  0E03               	movlw	3
  2400   00218C  26D9               	addwf	fsr2l,f,c
  2401   00218E  6ADF               	clrf	indf2,c
  2402   002190                     
  2403                           ;pipe.c: 9:     sem_init(&p->pipe_sem_read, 0);
  2404   002190  5045               	movf	create_pipe@p^0,w,c
  2405   002192  0F04               	addlw	4
  2406   002194  6E39               	movwf	sem_init@sem^0,c
  2407   002196  0E00               	movlw	0
  2408   002198  6E3B               	movwf	(sem_init@value+1)^0,c
  2409   00219A  0E00               	movlw	0
  2410   00219C  6E3A               	movwf	sem_init@value^0,c
  2411   00219E  ECAD  F011         	call	_sem_init	;wreg free
  2412   0021A2                     
  2413                           ;pipe.c: 10:     sem_init(&p->pipe_sem_write, 4);
  2414   0021A2  5045               	movf	create_pipe@p^0,w,c
  2415   0021A4  0F0C               	addlw	12
  2416   0021A6  6E39               	movwf	sem_init@sem^0,c
  2417   0021A8  0E00               	movlw	0
  2418   0021AA  6E3B               	movwf	(sem_init@value+1)^0,c
  2419   0021AC  0E04               	movlw	4
  2420   0021AE  6E3A               	movwf	sem_init@value^0,c
  2421   0021B0  ECAD  F011         	call	_sem_init	;wreg free
  2422   0021B4  0012               	return		;funcret
  2423   0021B6                     __end_of_create_pipe:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _sem_init *****************
  2427 ;; Defined at:
  2428 ;;		line 11 in file "sync.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  sem             1    0[COMRAM] PTR struct sem
  2431 ;;		 -> accel_pipe(20), 
  2432 ;;  value           2    1[COMRAM] short 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         3       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2447 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2448 ;;Total ram usage:        3 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; Hardware stack levels required when called: 8
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_create_pipe
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text8
  2459   00235A                     __ptext8:
  2460                           	callstack 0
  2461   00235A                     _sem_init:
  2462                           	callstack 19
  2463   00235A                     
  2464                           ;sync.c: 11: void sem_init(sem_t *sem, int16_t value);sync.c: 12: {;sync.c: 13:     sem-
      +                          >s_value = value;
  2465   00235A  5039               	movf	sem_init@sem^0,w,c
  2466   00235C  6ED9               	movwf	fsr2l,c
  2467   00235E  6ADA               	clrf	fsr2h,c
  2468   002360  C03A  FFDE         	movff	sem_init@value,postinc2
  2469   002364  C03B  FFDD         	movff	sem_init@value+1,postdec2
  2470   002368                     
  2471                           ;sync.c: 14:     sem->s_size = 0;
  2472   002368  5039               	movf	sem_init@sem^0,w,c
  2473   00236A  6ED9               	movwf	fsr2l,c
  2474   00236C  6ADA               	clrf	fsr2h,c
  2475   00236E  0E06               	movlw	6
  2476   002370  26D9               	addwf	fsr2l,f,c
  2477   002372  6ADF               	clrf	indf2,c
  2478   002374                     
  2479                           ;sync.c: 15:     sem->s_pos_out = 0;
  2480   002374  5039               	movf	sem_init@sem^0,w,c
  2481   002376  6ED9               	movwf	fsr2l,c
  2482   002378  6ADA               	clrf	fsr2h,c
  2483   00237A  0E07               	movlw	7
  2484   00237C  26D9               	addwf	fsr2l,f,c
  2485   00237E  6ADF               	clrf	indf2,c
  2486   002380  0012               	return		;funcret
  2487   002382                     __end_of_sem_init:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _SRAMalloc *****************
  2491 ;; Defined at:
  2492 ;;		line 138 in file "mem.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  nBytes          1    wreg     unsigned char 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  nBytes          1    4[BANK0 ] unsigned char 
  2497 ;;  pHeap           2    5[BANK0 ] PTR struct _SALLOC
  2498 ;;		 -> _uDynamicHeap(80), 
  2499 ;;  temp            2    0[BANK0 ] PTR struct _SALLOC
  2500 ;;		 -> _uDynamicHeap(80), 
  2501 ;;  segHeader       1    3[BANK0 ] struct _SALLOC
  2502 ;;  segLen          1    2[BANK0 ] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  2    8[COMRAM] PTR unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2512 ;;      Params:         2       0       0       0       0       0       0       0       0
  2513 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2514 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2515 ;;      Totals:         4       7       0       0       0       0       0       0       0
  2516 ;;Total ram usage:       11 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 9
  2519 ;; This function calls:
  2520 ;;		__SRAMmerge
  2521 ;; This function is called by:
  2522 ;;		_create_pipe
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text9
  2527   001A54                     __ptext9:
  2528                           	callstack 0
  2529   001A54                     _SRAMalloc:
  2530                           	callstack 18
  2531                           
  2532                           ;incstack = 0
  2533                           ;SRAMalloc@nBytes stored from wreg
  2534   001A54  0100               	movlb	0	; () banked
  2535   001A56  6F64               	movwf	SRAMalloc@nBytes& (0+255),b
  2536   001A58                     
  2537                           ;mem.c: 138: unsigned char * SRAMalloc( unsigned char nBytes);mem.c: 139: {;mem.c: 140: 
      +                           SALLOC * pHeap;;mem.c: 141:  SALLOC * temp;;mem.c: 142:       SALLOC segHeader;;mem.c: 
      +                          143:       unsigned char segLen;;mem.c: 146:  if (nBytes > (0x7F - 1))
  2538   001A58  0E7E               	movlw	126
  2539   001A5A  0100               	movlb	0	; () banked
  2540   001A5C  6564               	cpfsgt	SRAMalloc@nBytes& (0+255),b
  2541   001A5E  EF33  F00D         	goto	u1461
  2542   001A62  EF35  F00D         	goto	u1460
  2543   001A66                     u1461:
  2544   001A66  EF3B  F00D         	goto	l2500
  2545   001A6A                     u1460:
  2546   001A6A                     l2496:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;mem.c: 147:   return (0);
  2550   001A6A  0E00               	movlw	0
  2551   001A6C  6E41               	movwf	?_SRAMalloc^0,c
  2552   001A6E  0E00               	movlw	0
  2553   001A70  6E42               	movwf	(?_SRAMalloc+1)^0,c
  2554   001A72  EFBC  F00D         	goto	l141
  2555   001A76                     l2500:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;mem.c: 150:  pHeap = (SALLOC *)_uDynamicHeap;
  2559   001A76  0E6D               	movlw	low __uDynamicHeap
  2560   001A78  6F65               	movwf	SRAMalloc@pHeap& (0+255),b
  2561   001A7A  0E01               	movlw	high __uDynamicHeap
  2562   001A7C  6F66               	movwf	(SRAMalloc@pHeap+1)& (0+255),b
  2563   001A7E                     l2502:
  2564                           
  2565                           ;mem.c: 153:  {;mem.c: 155:   segHeader = *pHeap;
  2566   001A7E  C065  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2567   001A82  C066  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2568   001A86  50DF               	movf	indf2,w,c
  2569   001A88  0100               	movlb	0	; () banked
  2570   001A8A  6F63               	movwf	SRAMalloc@segHeader& (0+255),b
  2571   001A8C                     
  2572                           ; BSR set to: 0
  2573                           ;mem.c: 158:   segLen = segHeader.bits.count - 1;
  2574   001A8C  5163               	movf	SRAMalloc@segHeader& (0+255),w,b
  2575   001A8E  0B7F               	andlw	127
  2576   001A90  6E43               	movwf	??_SRAMalloc^0,c
  2577   001A92  0443               	decf	??_SRAMalloc^0,w,c
  2578   001A94  6F62               	movwf	SRAMalloc@segLen& (0+255),b
  2579   001A96                     
  2580                           ; BSR set to: 0
  2581                           ;mem.c: 161:   if (segHeader.byte == 0)
  2582   001A96  5163               	movf	SRAMalloc@segHeader& (0+255),w,b
  2583   001A98  A4D8               	btfss	status,2,c
  2584   001A9A  EF51  F00D         	goto	u1471
  2585   001A9E  EF53  F00D         	goto	u1470
  2586   001AA2                     u1471:
  2587   001AA2  EF55  F00D         	goto	l143
  2588   001AA6                     u1470:
  2589   001AA6  EF35  F00D         	goto	l2496
  2590   001AAA                     l143:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;mem.c: 165:   if (!(segHeader.bits.alloc))
  2594   001AAA  BF63               	btfsc	SRAMalloc@segHeader& (0+255),7,b
  2595   001AAC  EF5A  F00D         	goto	u1481
  2596   001AB0  EF5C  F00D         	goto	u1480
  2597   001AB4                     u1481:
  2598   001AB4  EF73  F00D         	goto	l2516
  2599   001AB8                     u1480:
  2600   001AB8                     
  2601                           ; BSR set to: 0
  2602                           ;mem.c: 166:   {;mem.c: 168:    if (nBytes > segLen)
  2603   001AB8  5164               	movf	SRAMalloc@nBytes& (0+255),w,b
  2604   001ABA  5D62               	subwf	SRAMalloc@segLen& (0+255),w,b
  2605   001ABC  B0D8               	btfsc	status,0,c
  2606   001ABE  EF63  F00D         	goto	u1491
  2607   001AC2  EF65  F00D         	goto	u1490
  2608   001AC6                     u1491:
  2609   001AC6  EF7F  F00D         	goto	l2518
  2610   001ACA                     u1490:
  2611   001ACA                     
  2612                           ; BSR set to: 0
  2613                           ;mem.c: 169:    {;mem.c: 171:     if (!(_SRAMmerge(pHeap)))
  2614   001ACA  C065  F039         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  2615   001ACE  C066  F03A         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  2616   001AD2  ECBD  F00D         	call	__SRAMmerge	;wreg free
  2617   001AD6  0900               	iorlw	0
  2618   001AD8  A4D8               	btfss	status,2,c
  2619   001ADA  EF71  F00D         	goto	u1501
  2620   001ADE  EF73  F00D         	goto	u1500
  2621   001AE2                     u1501:
  2622   001AE2  EFBA  F00D         	goto	l150
  2623   001AE6                     u1500:
  2624   001AE6                     l2516:
  2625                           
  2626                           ;mem.c: 172:      pHeap += segHeader.bits.count;
  2627   001AE6  0100               	movlb	0	; () banked
  2628   001AE8  5163               	movf	SRAMalloc@segHeader& (0+255),w,b
  2629   001AEA  0B7F               	andlw	127
  2630   001AEC  6E43               	movwf	??_SRAMalloc^0,c
  2631   001AEE  5043               	movf	??_SRAMalloc^0,w,c
  2632   001AF0  0D01               	mullw	1
  2633   001AF2  50F3               	movf	243,w,c
  2634   001AF4  2765               	addwf	SRAMalloc@pHeap& (0+255),f,b
  2635   001AF6  50F4               	movf	244,w,c
  2636   001AF8  2366               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  2637   001AFA  EF3F  F00D         	goto	l2502
  2638   001AFE                     l2518:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;mem.c: 178:     if (nBytes == segLen)
  2642   001AFE  5162               	movf	SRAMalloc@segLen& (0+255),w,b
  2643   001B00  1964               	xorwf	SRAMalloc@nBytes& (0+255),w,b
  2644   001B02  A4D8               	btfss	status,2,c
  2645   001B04  EF86  F00D         	goto	u1511
  2646   001B08  EF88  F00D         	goto	u1510
  2647   001B0C                     u1511:
  2648   001B0C  EF95  F00D         	goto	l2528
  2649   001B10                     u1510:
  2650   001B10                     
  2651                           ; BSR set to: 0
  2652                           ;mem.c: 179:     {;mem.c: 181:      (*pHeap).bits.alloc = 1;
  2653   001B10  C065  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2654   001B14  C066  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2655   001B18  8EDF               	bsf	indf2,7,c
  2656   001B1A                     
  2657                           ; BSR set to: 0
  2658                           ;mem.c: 184:      return ((unsigned char *)(pHeap + 1));
  2659   001B1A  0E01               	movlw	1
  2660   001B1C  2565               	addwf	SRAMalloc@pHeap& (0+255),w,b
  2661   001B1E  6E41               	movwf	?_SRAMalloc^0,c
  2662   001B20  0E00               	movlw	0
  2663   001B22  2166               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  2664   001B24  6E42               	movwf	(?_SRAMalloc+1)^0,c
  2665   001B26  EFBC  F00D         	goto	l141
  2666   001B2A                     l2528:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;mem.c: 189:     {;mem.c: 191:      (*pHeap).byte = nBytes + 0x81;
  2670   001B2A  5164               	movf	SRAMalloc@nBytes& (0+255),w,b
  2671   001B2C  0F81               	addlw	129
  2672   001B2E  C065  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2673   001B32  C066  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2674   001B36  6EDF               	movwf	indf2,c
  2675   001B38                     
  2676                           ; BSR set to: 0
  2677                           ;mem.c: 194:      temp = pHeap + 1;
  2678   001B38  0E01               	movlw	1
  2679   001B3A  2565               	addwf	SRAMalloc@pHeap& (0+255),w,b
  2680   001B3C  6F60               	movwf	SRAMalloc@temp& (0+255),b
  2681   001B3E  0E00               	movlw	0
  2682   001B40  2166               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  2683   001B42  6F61               	movwf	(SRAMalloc@temp+1)& (0+255),b
  2684   001B44                     
  2685                           ; BSR set to: 0
  2686                           ;mem.c: 197:      pHeap += (nBytes + 1);
  2687   001B44  5164               	movf	SRAMalloc@nBytes& (0+255),w,b
  2688   001B46  6E43               	movwf	??_SRAMalloc^0,c
  2689   001B48  6A44               	clrf	(??_SRAMalloc+1)^0,c
  2690   001B4A  0E01               	movlw	1
  2691   001B4C  2643               	addwf	??_SRAMalloc^0,f,c
  2692   001B4E  0E00               	movlw	0
  2693   001B50  2244               	addwfc	(??_SRAMalloc+1)^0,f,c
  2694   001B52  5043               	movf	??_SRAMalloc^0,w,c
  2695   001B54  2765               	addwf	SRAMalloc@pHeap& (0+255),f,b
  2696   001B56  5044               	movf	(??_SRAMalloc+1)^0,w,c
  2697   001B58  2366               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  2698                           
  2699                           ;mem.c: 200:      (*pHeap).byte = segLen - nBytes;
  2700   001B5A  5164               	movf	SRAMalloc@nBytes& (0+255),w,b
  2701   001B5C  5D62               	subwf	SRAMalloc@segLen& (0+255),w,b
  2702   001B5E  C065  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  2703   001B62  C066  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  2704   001B66  6EDF               	movwf	indf2,c
  2705   001B68                     
  2706                           ; BSR set to: 0
  2707                           ;mem.c: 203:      return ((unsigned char *)temp);
  2708   001B68  C060  F041         	movff	SRAMalloc@temp,?_SRAMalloc
  2709   001B6C  C061  F042         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  2710   001B70  EFBC  F00D         	goto	l141
  2711   001B74                     l150:
  2712   001B74  EF3F  F00D         	goto	l2502
  2713   001B78                     l141:
  2714                           
  2715                           ; BSR set to: 0
  2716   001B78  0012               	return		;funcret
  2717   001B7A                     __end_of_SRAMalloc:
  2718                           	callstack 0
  2719                           
  2720 ;; *************** function __SRAMmerge *****************
  2721 ;; Defined at:
  2722 ;;		line 302 in file "mem.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  pSegA           2    0[COMRAM] PTR struct _SALLOC
  2725 ;;		 -> _uDynamicHeap(80), 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  pSegB           2    4[COMRAM] PTR struct _SALLOC
  2728 ;;		 -> _uDynamicHeap(80), 
  2729 ;;  uSegB           1    7[COMRAM] struct _SALLOC
  2730 ;;  uSegA           1    6[COMRAM] struct _SALLOC
  2731 ;;  uSum            1    3[COMRAM] struct _SALLOC
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      unsigned char 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2741 ;;      Params:         2       0       0       0       0       0       0       0       0
  2742 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2743 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2744 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:        8 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 8
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_SRAMalloc
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text10
  2756   001B7A                     __ptext10:
  2757                           	callstack 0
  2758   001B7A                     __SRAMmerge:
  2759                           	callstack 18
  2760   001B7A                     
  2761                           ;mem.c: 302:      unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 303: {;mem.c: 304:  SA
      +                          LLOC * pSegB;;mem.c: 305:       SALLOC uSegA, uSegB, uSum;;mem.c: 308:  pSegB = pSegA + 
      +                          (*pSegA).byte;
  2762   001B7A  C039  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2763   001B7E  C03A  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2764   001B82  50DF               	movf	indf2,w,c
  2765   001B84  6E3B               	movwf	??__SRAMmerge^0,c
  2766   001B86  503B               	movf	??__SRAMmerge^0,w,c
  2767   001B88  2439               	addwf	__SRAMmerge@pSegA^0,w,c
  2768   001B8A  6E3D               	movwf	__SRAMmerge@pSegB^0,c
  2769   001B8C  0E00               	movlw	0
  2770   001B8E  203A               	addwfc	(__SRAMmerge@pSegA+1)^0,w,c
  2771   001B90  6E3E               	movwf	(__SRAMmerge@pSegB+1)^0,c
  2772   001B92                     
  2773                           ;mem.c: 311:  uSegA = *pSegA;
  2774   001B92  C039  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2775   001B96  C03A  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2776   001B9A  50DF               	movf	indf2,w,c
  2777   001B9C  6E3F               	movwf	__SRAMmerge@uSegA^0,c
  2778   001B9E                     
  2779                           ;mem.c: 312:  uSegB = *pSegB;
  2780   001B9E  C03D  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  2781   001BA2  C03E  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  2782   001BA6  50DF               	movf	indf2,w,c
  2783   001BA8  6E40               	movwf	__SRAMmerge@uSegB^0,c
  2784   001BAA                     
  2785                           ;mem.c: 315:  if (uSegB.byte == 0)
  2786   001BAA  5040               	movf	__SRAMmerge@uSegB^0,w,c
  2787   001BAC  A4D8               	btfss	status,2,c
  2788   001BAE  EFDB  F00D         	goto	u1411
  2789   001BB2  EFDD  F00D         	goto	u1410
  2790   001BB6                     u1411:
  2791   001BB6  EFE0  F00D         	goto	l166
  2792   001BBA                     u1410:
  2793   001BBA                     l2458:
  2794                           
  2795                           ;mem.c: 316:   return (0);
  2796   001BBA  0E00               	movlw	0
  2797   001BBC  EF28  F00E         	goto	l167
  2798   001BC0                     l166:
  2799                           
  2800                           ;mem.c: 319:  if (uSegA.bits.alloc || uSegB.bits.alloc)
  2801   001BC0  BE3F               	btfsc	__SRAMmerge@uSegA^0,7,c
  2802   001BC2  EFE5  F00D         	goto	u1421
  2803   001BC6  EFE7  F00D         	goto	u1420
  2804   001BCA                     u1421:
  2805   001BCA  EFDD  F00D         	goto	l2458
  2806   001BCE                     u1420:
  2807   001BCE  AE40               	btfss	__SRAMmerge@uSegB^0,7,c
  2808   001BD0  EFEC  F00D         	goto	u1431
  2809   001BD4  EFEE  F00D         	goto	u1430
  2810   001BD8                     u1431:
  2811   001BD8  EFF0  F00D         	goto	l2468
  2812   001BDC                     u1430:
  2813   001BDC  EFDD  F00D         	goto	l2458
  2814   001BE0                     l2468:
  2815                           
  2816                           ;mem.c: 323:  if (uSegA.bits.count == 0x7F)
  2817   001BE0  503F               	movf	__SRAMmerge@uSegA^0,w,c
  2818   001BE2  0B7F               	andlw	127
  2819   001BE4  0A7F               	xorlw	127
  2820   001BE6  A4D8               	btfss	status,2,c
  2821   001BE8  EFF8  F00D         	goto	u1441
  2822   001BEC  EFFA  F00D         	goto	u1440
  2823   001BF0                     u1441:
  2824   001BF0  EFFC  F00D         	goto	l2474
  2825   001BF4                     u1440:
  2826   001BF4  EFDD  F00D         	goto	l2458
  2827   001BF8                     l2474:
  2828                           
  2829                           ;mem.c: 327:  uSum.byte = uSegA.byte + uSegB.byte;
  2830   001BF8  503F               	movf	__SRAMmerge@uSegA^0,w,c
  2831   001BFA  2440               	addwf	__SRAMmerge@uSegB^0,w,c
  2832   001BFC  6E3C               	movwf	__SRAMmerge@uSum^0,c
  2833                           
  2834                           ;mem.c: 332:  if ((uSum.byte) > 0x7F)
  2835   001BFE  0E7F               	movlw	127
  2836   001C00  643C               	cpfsgt	__SRAMmerge@uSum^0,c
  2837   001C02  EF05  F00E         	goto	u1451
  2838   001C06  EF07  F00E         	goto	u1450
  2839   001C0A                     u1451:
  2840   001C0A  EF21  F00E         	goto	l2490
  2841   001C0E                     u1450:
  2842   001C0E                     
  2843                           ;mem.c: 333:  {;mem.c: 334:   (*pSegA).byte = 0x7F;
  2844   001C0E  C039  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2845   001C12  C03A  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2846   001C16  0E7F               	movlw	127
  2847   001C18  6EDF               	movwf	indf2,c
  2848   001C1A                     
  2849                           ;mem.c: 335:   pSegA += 0x7F;
  2850   001C1A  0E7F               	movlw	127
  2851   001C1C  2639               	addwf	__SRAMmerge@pSegA^0,f,c
  2852   001C1E  0E00               	movlw	0
  2853   001C20  223A               	addwfc	(__SRAMmerge@pSegA+1)^0,f,c
  2854   001C22                     
  2855                           ;mem.c: 336:   pSegB += uSegB.byte;
  2856   001C22  5040               	movf	__SRAMmerge@uSegB^0,w,c
  2857   001C24  0D01               	mullw	1
  2858   001C26  50F3               	movf	243,w,c
  2859   001C28  263D               	addwf	__SRAMmerge@pSegB^0,f,c
  2860   001C2A  50F4               	movf	244,w,c
  2861   001C2C  223E               	addwfc	(__SRAMmerge@pSegB+1)^0,f,c
  2862   001C2E                     
  2863                           ;mem.c: 337:   (*pSegA).byte = (unsigned char)(pSegB - pSegA);
  2864   001C2E  5039               	movf	__SRAMmerge@pSegA^0,w,c
  2865   001C30  5C3D               	subwf	__SRAMmerge@pSegB^0,w,c
  2866   001C32  C039  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2867   001C36  C03A  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2868   001C3A  6EDF               	movwf	indf2,c
  2869   001C3C                     
  2870                           ;mem.c: 339:   return (0x7F);
  2871   001C3C  0E7F               	movlw	127
  2872   001C3E  EF28  F00E         	goto	l167
  2873   001C42                     l2490:
  2874                           
  2875                           ;mem.c: 344:  {;mem.c: 345:   return ((*pSegA).byte = uSum.byte);
  2876   001C42  C039  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  2877   001C46  C03A  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  2878   001C4A  C03C  FFDF         	movff	__SRAMmerge@uSum,indf2
  2879   001C4E  50DF               	movf	223,w,c
  2880   001C50                     l167:
  2881   001C50  0012               	return		;funcret
  2882   001C52                     __end_of__SRAMmerge:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _adc_init *****************
  2886 ;; Defined at:
  2887 ;;		line 9 in file "io.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2904 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2905 ;;Total ram usage:        0 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 8
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_user_config
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text11
  2916   0023FA                     __ptext11:
  2917                           	callstack 0
  2918   0023FA                     _adc_init:
  2919                           	callstack 20
  2920   0023FA                     
  2921                           ;io.c: 11:     ADCON0 = 0x01;
  2922   0023FA  0E01               	movlw	1
  2923   0023FC  6EC2               	movwf	194,c	;volatile
  2924                           
  2925                           ;io.c: 12:     ADCON1 = 0x0E;
  2926   0023FE  0E0E               	movlw	14
  2927   002400  6EC1               	movwf	193,c	;volatile
  2928                           
  2929                           ;io.c: 13:     ADCON2 = 0b10101010;
  2930   002402  0EAA               	movlw	170
  2931   002404  6EC0               	movwf	192,c	;volatile
  2932   002406                     
  2933                           ;io.c: 14:     TRISAbits.RA0 = 1;
  2934   002406  8092               	bsf	146,0,c	;volatile
  2935   002408  0012               	return		;funcret
  2936   00240A                     __end_of_adc_init:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function _os_init *****************
  2940 ;; Defined at:
  2941 ;;		line 50 in file "kernel.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2958 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 9
  2962 ;; This function calls:
  2963 ;;		_SRAMInitHeap
  2964 ;;		_config_timer0
  2965 ;;		_create_task
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text12
  2972   002382                     __ptext12:
  2973                           	callstack 0
  2974   002382                     _os_init:
  2975                           	callstack 21
  2976   002382                     
  2977                           ;kernel.c: 52:     r_queue.ready_queue_size = 0;
  2978   002382  0E00               	movlw	0
  2979   002384  CFE8 F3DD          	movff	wreg,_r_queue+536
  2980                           
  2981                           ;kernel.c: 53:     r_queue.task_running = 0;
  2982   002388  0E00               	movlw	0
  2983   00238A  CFE8 F3DC          	movff	wreg,_r_queue+535
  2984   00238E                     
  2985                           ;kernel.c: 56:     create_task(0, 0, idle);
  2986   00238E  0E00               	movlw	0
  2987   002390  6E39               	movwf	create_task@priority^0,c
  2988   002392  0E22               	movlw	low _idle
  2989   002394  6E3A               	movwf	create_task@task^0,c
  2990   002396  0E24               	movlw	high _idle
  2991   002398  6E3B               	movwf	(create_task@task+1)^0,c
  2992   00239A  0E00               	movlw	0
  2993   00239C  EC32  F010         	call	_create_task	;# 
  2994   0023A0                     
  2995                           ;kernel.c: 59:     config_timer0();
  2996   0023A0  ECE5  F011         	call	_config_timer0	;wreg free
  2997   0023A4                     
  2998                           ;kernel.c: 62:     SRAMInitHeap();
  2999   0023A4  ECFF  F00F         	call	_SRAMInitHeap	;wreg free
  3000   0023A8  0012               	return		;funcret
  3001   0023AA                     __end_of_os_init:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _create_task *****************
  3005 ;; Defined at:
  3006 ;;		line 11 in file "kernel.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  id              1    wreg     unsigned char 
  3009 ;;  priority        1    0[COMRAM] unsigned char 
  3010 ;;  task            2    1[COMRAM] PTR FTN()void 
  3011 ;;		 -> idle(1), tarefa_estabilidade(1), tarefa_injecao_eletronica(1), tarefa_controle_central(1), 
  3012 ;;		 -> tarefa_acelerador(1), 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  id              1    0[BANK1 ] unsigned char 
  3015 ;;  new_task      107    1[BANK1 ] struct tcb
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3025 ;;      Params:         3       0       0       0       0       0       0       0       0
  3026 ;;      Locals:         0       0     108       0       0       0       0       0       0
  3027 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3028 ;;      Totals:         4       0     108       0       0       0       0       0       0
  3029 ;;Total ram usage:      112 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 8
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;;		_os_init
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text13
  3041   002064                     __ptext13:
  3042                           	callstack 0
  3043   002064                     _create_task:
  3044                           	callstack 21
  3045                           
  3046                           ;incstack = 0
  3047                           ;create_task@id stored from wreg
  3048   002064  0101               	movlb	1	; () banked
  3049   002066  6F00               	movwf	create_task@id& (0+255),b
  3050   002068                     
  3051                           ;kernel.c: 11: void create_task(uint8_t id, uint8_t priority, f_ptr task);kernel.c: 12: 
      +                          {;kernel.c: 13:     tcb_t new_task;;kernel.c: 15:     new_task.task_id = id;
  3052   002068  C100  F101         	movff	create_task@id,create_task@new_task
  3053   00206C                     
  3054                           ;kernel.c: 16:     new_task.task_priority = priority;
  3055   00206C  C039  F102         	movff	create_task@priority,create_task@new_task+1
  3056   002070                     
  3057                           ;kernel.c: 17:     new_task.task_f = task;
  3058   002070  C03A  F104         	movff	create_task@task,create_task@new_task+3
  3059   002074  C03B  F105         	movff	create_task@task+1,create_task@new_task+4
  3060   002078                     
  3061                           ;kernel.c: 19:     new_task.task_sp = 0;
  3062   002078  0101               	movlb	1	; () banked
  3063   00207A  6B6B               	clrf	(create_task@new_task+106)& (0+255),b
  3064   00207C                     
  3065                           ; BSR set to: 1
  3066                           ;kernel.c: 20:     new_task.time_sleeping = 0;
  3067   00207C  0E00               	movlw	0
  3068   00207E  6F07               	movwf	(create_task@new_task+6)& (0+255),b
  3069   002080  0E00               	movlw	0
  3070   002082  6F06               	movwf	(create_task@new_task+5)& (0+255),b
  3071   002084                     
  3072                           ; BSR set to: 1
  3073                           ;kernel.c: 21:     new_task.task_state = READY;
  3074   002084  6B03               	clrf	(create_task@new_task+2)& (0+255),b
  3075   002086                     
  3076                           ; BSR set to: 1
  3077                           ;kernel.c: 23:     new_task.BSR_REG = 0x000;
  3078   002086  6B0A               	clrf	(create_task@new_task+9)& (0+255),b
  3079   002088                     
  3080                           ; BSR set to: 1
  3081                           ;kernel.c: 24:     new_task.W_REG = 0x000;
  3082   002088  6B08               	clrf	(create_task@new_task+7)& (0+255),b
  3083   00208A                     
  3084                           ; BSR set to: 1
  3085                           ;kernel.c: 25:     new_task.STATUS_REG = 0x000;
  3086   00208A  6B09               	clrf	(create_task@new_task+8)& (0+255),b
  3087   00208C                     
  3088                           ; BSR set to: 1
  3089                           ;kernel.c: 27:     r_queue.ready_queue[r_queue.ready_queue_size] = new_task;
  3090   00208C  EE21  F001         	lfsr	2,create_task@new_task
  3091   002090  C3DD  F03C         	movff	_r_queue+536,??_create_task
  3092   002094  503C               	movf	??_create_task^0,w,c
  3093   002096  0D6B               	mullw	107
  3094   002098  0EC5               	movlw	low _r_queue
  3095   00209A  24F3               	addwf	243,w,c
  3096   00209C  6EE9               	movwf	fsr0l,c
  3097   00209E  0E01               	movlw	high _r_queue
  3098   0020A0  20F4               	addwfc	prodh,w,c
  3099   0020A2  6EEA               	movwf	fsr0h,c
  3100   0020A4  0E6A               	movlw	106
  3101   0020A6                     u821:
  3102   0020A6  CFDB FFEB          	movff	plusw2,plusw0
  3103   0020AA  06E8               	decf	wreg,f,c
  3104   0020AC  E2FC               	bc	u821
  3105   0020AE                     
  3106                           ; BSR set to: 1
  3107                           ;kernel.c: 28:     r_queue.ready_queue_size += 1;
  3108   0020AE  C3DD  FFE8         	movff	_r_queue+536,wreg
  3109   0020B2  0F01               	addlw	1
  3110   0020B4  CFE8 F3DD          	movff	wreg,_r_queue+536
  3111   0020B8                     
  3112                           ; BSR set to: 1
  3113   0020B8  0012               	return		;funcret
  3114   0020BA                     __end_of_create_task:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _config_timer0 *****************
  3118 ;; Defined at:
  3119 ;;		line 53 in file "timer.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 8
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_user_config
  3144 ;;		_os_init
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text14
  3149   0023CA                     __ptext14:
  3150                           	callstack 0
  3151   0023CA                     _config_timer0:
  3152                           	callstack 20
  3153   0023CA                     
  3154                           ;timer.c: 55:     INTCONbits.PEIE = 1;
  3155   0023CA  8CF2               	bsf	242,6,c	;volatile
  3156                           
  3157                           ;timer.c: 56:     INTCONbits.TMR0IE = 1;
  3158   0023CC  8AF2               	bsf	242,5,c	;volatile
  3159                           
  3160                           ;timer.c: 57:     INTCONbits.TMR0IF = 0;
  3161   0023CE  94F2               	bcf	242,2,c	;volatile
  3162                           
  3163                           ;timer.c: 59:     T0CONbits.T0CS = 0;
  3164   0023D0  9AD5               	bcf	213,5,c	;volatile
  3165                           
  3166                           ;timer.c: 60:     T0CONbits.PSA = 0;
  3167   0023D2  96D5               	bcf	213,3,c	;volatile
  3168   0023D4                     
  3169                           ;timer.c: 61:     T0CONbits.T0PS = 0b101;
  3170   0023D4  50D5               	movf	213,w,c	;volatile
  3171   0023D6  0BF8               	andlw	-8
  3172   0023D8  0905               	iorlw	5
  3173   0023DA  6ED5               	movwf	213,c	;volatile
  3174                           
  3175                           ;timer.c: 63:     TMR0 = 0;
  3176   0023DC  0E00               	movlw	0
  3177   0023DE  6ED7               	movwf	215,c	;volatile
  3178   0023E0  0E00               	movlw	0
  3179   0023E2  6ED6               	movwf	214,c	;volatile
  3180   0023E4  0012               	return		;funcret
  3181   0023E6                     __end_of_config_timer0:
  3182                           	callstack 0
  3183                           
  3184 ;; *************** function _SRAMInitHeap *****************
  3185 ;; Defined at:
  3186 ;;		line 259 in file "mem.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  count           2    2[COMRAM] unsigned int 
  3191 ;;  pHeap           2    0[COMRAM] PTR unsigned char 
  3192 ;;		 -> _uDynamicHeap(80), 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3202 ;;      Params:         0       0       0       0       0       0       0       0       0
  3203 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3205 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3206 ;;Total ram usage:        4 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 8
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_os_init
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text15
  3217   001FFE                     __ptext15:
  3218                           	callstack 0
  3219   001FFE                     _SRAMInitHeap:
  3220                           	callstack 21
  3221   001FFE                     
  3222                           ;mem.c: 261:  unsigned char * pHeap;;mem.c: 262:       unsigned int count;;mem.c: 264:  
      +                          pHeap = _uDynamicHeap;
  3223   001FFE  0E6D               	movlw	low __uDynamicHeap
  3224   002000  6E39               	movwf	SRAMInitHeap@pHeap^0,c
  3225   002002  0E01               	movlw	high __uDynamicHeap
  3226   002004  6E3A               	movwf	(SRAMInitHeap@pHeap+1)^0,c
  3227   002006                     
  3228                           ;mem.c: 265:  count = 0x50 - 1;
  3229   002006  0E00               	movlw	0
  3230   002008  6E3C               	movwf	(SRAMInitHeap@count+1)^0,c
  3231   00200A  0E4F               	movlw	79
  3232   00200C  6E3B               	movwf	SRAMInitHeap@count^0,c
  3233   00200E                     l2030:
  3234                           
  3235                           ;mem.c: 268:  {;mem.c: 269:   if (count > 0x7F)
  3236   00200E  503C               	movf	(SRAMInitHeap@count+1)^0,w,c
  3237   002010  E109               	bnz	u940
  3238   002012  0E80               	movlw	128
  3239   002014  5C3B               	subwf	SRAMInitHeap@count^0,w,c
  3240   002016  A0D8               	btfss	status,0,c
  3241   002018  EF10  F010         	goto	u941
  3242   00201C  EF12  F010         	goto	u940
  3243   002020                     u941:
  3244   002020  EF24  F010         	goto	l2038
  3245   002024                     u940:
  3246   002024                     
  3247                           ;mem.c: 270:   {;mem.c: 271:    *pHeap = 0x7F;
  3248   002024  C039  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  3249   002028  C03A  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  3250   00202C  0E7F               	movlw	127
  3251   00202E  6EDF               	movwf	indf2,c
  3252   002030                     
  3253                           ;mem.c: 272:    pHeap += 0x7F;
  3254   002030  0E7F               	movlw	127
  3255   002032  2639               	addwf	SRAMInitHeap@pHeap^0,f,c
  3256   002034  0E00               	movlw	0
  3257   002036  223A               	addwfc	(SRAMInitHeap@pHeap+1)^0,f,c
  3258   002038                     
  3259                           ;mem.c: 273:    count = count - 0x7F;
  3260   002038  0E81               	movlw	129
  3261   00203A  243B               	addwf	SRAMInitHeap@count^0,w,c
  3262   00203C  6E3B               	movwf	SRAMInitHeap@count^0,c
  3263   00203E  0EFF               	movlw	255
  3264   002040  203C               	addwfc	(SRAMInitHeap@count+1)^0,w,c
  3265   002042  6E3C               	movwf	(SRAMInitHeap@count+1)^0,c
  3266                           
  3267                           ;mem.c: 274:   }
  3268   002044  EF07  F010         	goto	l2030
  3269   002048                     l2038:
  3270                           
  3271                           ;mem.c: 276:   {;mem.c: 277:    *pHeap = (unsigned char)count;
  3272   002048  C039  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  3273   00204C  C03A  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  3274   002050  C03B  FFDF         	movff	SRAMInitHeap@count,indf2
  3275   002054                     
  3276                           ;mem.c: 278:    *(pHeap + count) = 0;
  3277   002054  503B               	movf	SRAMInitHeap@count^0,w,c
  3278   002056  2439               	addwf	SRAMInitHeap@pHeap^0,w,c
  3279   002058  6ED9               	movwf	fsr2l,c
  3280   00205A  503C               	movf	(SRAMInitHeap@count+1)^0,w,c
  3281   00205C  203A               	addwfc	(SRAMInitHeap@pHeap+1)^0,w,c
  3282   00205E  6EDA               	movwf	fsr2h,c
  3283   002060  6ADF               	clrf	indf2,c
  3284   002062  0012               	return		;funcret
  3285   002064                     __end_of_SRAMInitHeap:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _tarefa_acelerador *****************
  3289 ;; Defined at:
  3290 ;;		line 17 in file "user_app.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  raw             2   15[BANK1 ] unsigned short 
  3295 ;;  data            1   17[BANK1 ] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0
  3306 ;;      Locals:         0       0       3       0       0       0       0       0       0
  3307 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3308 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3309 ;;Total ram usage:        5 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 7
  3312 ;; This function calls:
  3313 ;;		_adc_read
  3314 ;;		_write_pipe
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text16
  3321   002290                     __ptext16:
  3322                           	callstack 0
  3323   002290                     _tarefa_acelerador:
  3324                           	callstack 18
  3325   002290                     l275:
  3326                           
  3327                           ;user_app.c: 20:     {;user_app.c: 21:         LATDbits.LATD1 = 1;
  3328   002290  828C               	bsf	140,1,c	;volatile
  3329   002292                     
  3330                           ;user_app.c: 22:         uint16_t raw = adc_read();
  3331   002292  ECD5  F011         	call	_adc_read	;wreg free
  3332   002296  C100  F10F         	movff	?_adc_read,tarefa_acelerador@raw
  3333   00229A  C101  F110         	movff	?_adc_read+1,tarefa_acelerador@raw+1
  3334   00229E                     
  3335                           ;user_app.c: 23:         uint8_t data = raw >> 2;
  3336   00229E  C10F  F10D         	movff	tarefa_acelerador@raw,??_tarefa_acelerador
  3337   0022A2  C110  F10E         	movff	tarefa_acelerador@raw+1,??_tarefa_acelerador+1
  3338   0022A6  0101               	movlb	1	; () banked
  3339   0022A8  90D8               	bcf	status,0,c
  3340   0022AA  330E               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3341   0022AC  330D               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3342   0022AE  90D8               	bcf	status,0,c
  3343   0022B0  330E               	rrcf	(??_tarefa_acelerador+1)& (0+255),f,b
  3344   0022B2  330D               	rrcf	??_tarefa_acelerador& (0+255),f,b
  3345   0022B4  510D               	movf	??_tarefa_acelerador& (0+255),w,b
  3346   0022B6  6F11               	movwf	tarefa_acelerador@data& (0+255),b
  3347   0022B8                     
  3348                           ; BSR set to: 1
  3349                           ;user_app.c: 24:         write_pipe(&accel_pipe, data);
  3350   0022B8  0E25               	movlw	low _accel_pipe
  3351   0022BA  6F08               	movwf	write_pipe@p& (0+255),b
  3352   0022BC  C111  F109         	movff	tarefa_acelerador@data,write_pipe@data
  3353   0022C0  ECCB  F00F         	call	_write_pipe	;wreg free
  3354   0022C4                     
  3355                           ;user_app.c: 25:         LATDbits.LATD1 = 0;
  3356   0022C4  928C               	bcf	140,1,c	;volatile
  3357   0022C6  EF48  F011         	goto	l275
  3358   0022CA  0012               	return		;funcret
  3359   0022CC                     __end_of_tarefa_acelerador:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function _write_pipe *****************
  3363 ;; Defined at:
  3364 ;;		line 13 in file "pipe.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  p               1    8[BANK1 ] PTR struct pipe
  3367 ;;		 -> accel_pipe(20), 
  3368 ;;  data            1    9[BANK1 ] unsigned char 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3380 ;;      Params:         0       0       2       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3382 ;;      Temps:          0       0       3       0       0       0       0       0       0
  3383 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3384 ;;Total ram usage:        5 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 6
  3387 ;; This function calls:
  3388 ;;		_sem_post
  3389 ;;		_sem_wait
  3390 ;; This function is called by:
  3391 ;;		_tarefa_acelerador
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text17
  3396   001F96                     __ptext17:
  3397                           	callstack 0
  3398   001F96                     _write_pipe:
  3399                           	callstack 18
  3400   001F96                     
  3401                           ;pipe.c: 13: void write_pipe(pipe_t *p, uint8_t data);pipe.c: 14: {;pipe.c: 15:     (INT
      +                          CONbits.GIE = 0);
  3402   001F96  9EF2               	bcf	242,7,c	;volatile
  3403   001F98                     
  3404                           ;pipe.c: 16:     sem_wait(&p->pipe_sem_write);
  3405   001F98  0101               	movlb	1	; () banked
  3406   001F9A  5108               	movf	write_pipe@p& (0+255),w,b
  3407   001F9C  0F0C               	addlw	12
  3408   001F9E  6F12               	movwf	sem_wait@sem& (0+255),b
  3409   001FA0  EC42  F007         	call	_sem_wait	;wreg free
  3410   001FA4                     
  3411                           ;pipe.c: 17:     p->pipe_msg[p->pipe_pos_write] = data;
  3412   001FA4  0101               	movlb	1	; () banked
  3413   001FA6  5108               	movf	write_pipe@p& (0+255),w,b
  3414   001FA8  6ED9               	movwf	fsr2l,c
  3415   001FAA  6ADA               	clrf	fsr2h,c
  3416   001FAC  0E03               	movlw	3
  3417   001FAE  26D9               	addwf	fsr2l,f,c
  3418   001FB0  50DF               	movf	indf2,w,c
  3419   001FB2  6F0A               	movwf	??_write_pipe& (0+255),b
  3420   001FB4  5108               	movf	write_pipe@p& (0+255),w,b
  3421   001FB6  6ED9               	movwf	fsr2l,c
  3422   001FB8  6ADA               	clrf	fsr2h,c
  3423   001FBA  CFDE F10B          	movff	postinc2,??_write_pipe+1
  3424   001FBE  CFDD F10C          	movff	postdec2,??_write_pipe+2
  3425   001FC2  510A               	movf	??_write_pipe& (0+255),w,b
  3426   001FC4  250B               	addwf	(??_write_pipe+1)& (0+255),w,b
  3427   001FC6  6ED9               	movwf	fsr2l,c
  3428   001FC8  0E00               	movlw	0
  3429   001FCA  210C               	addwfc	(??_write_pipe+2)& (0+255),w,b
  3430   001FCC  6EDA               	movwf	fsr2h,c
  3431   001FCE  C109  FFDF         	movff	write_pipe@data,indf2
  3432   001FD2                     
  3433                           ; BSR set to: 1
  3434                           ;pipe.c: 18:     p->pipe_pos_write = (p->pipe_pos_write + 1) % 4;
  3435   001FD2  5108               	movf	write_pipe@p& (0+255),w,b
  3436   001FD4  6ED9               	movwf	fsr2l,c
  3437   001FD6  6ADA               	clrf	fsr2h,c
  3438   001FD8  0E03               	movlw	3
  3439   001FDA  26D9               	addwf	fsr2l,f,c
  3440   001FDC  5108               	movf	write_pipe@p& (0+255),w,b
  3441   001FDE  6EE9               	movwf	fsr0l,c
  3442   001FE0  6AEA               	clrf	fsr0h,c
  3443   001FE2  0E03               	movlw	3
  3444   001FE4  26E9               	addwf	fsr0l,f,c
  3445   001FE6  50EF               	movf	indf0,w,c
  3446   001FE8  6F0A               	movwf	??_write_pipe& (0+255),b
  3447   001FEA  290A               	incf	??_write_pipe& (0+255),w,b
  3448   001FEC  0B03               	andlw	3
  3449   001FEE  6EDF               	movwf	indf2,c
  3450   001FF0                     
  3451                           ; BSR set to: 1
  3452                           ;pipe.c: 19:     sem_post(&p->pipe_sem_read);
  3453   001FF0  5108               	movf	write_pipe@p& (0+255),w,b
  3454   001FF2  0F04               	addlw	4
  3455   001FF4  6F12               	movwf	sem_post@sem& (0+255),b
  3456   001FF6  EC19  F00F         	call	_sem_post	;wreg free
  3457   001FFA                     
  3458                           ;pipe.c: 20:     (INTCONbits.GIE = 1);
  3459   001FFA  8EF2               	bsf	242,7,c	;volatile
  3460   001FFC  0012               	return		;funcret
  3461   001FFE                     __end_of_write_pipe:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _sem_wait *****************
  3465 ;; Defined at:
  3466 ;;		line 18 in file "sync.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  sem             1   18[BANK1 ] PTR struct sem
  3469 ;;		 -> accel_pipe(20), 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3481 ;;      Params:         0       0       1       0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       7       0       0       0       0       0       0
  3484 ;;      Totals:         0       0       8       0       0       0       0       0       0
  3485 ;;Total ram usage:        8 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 5
  3488 ;; This function calls:
  3489 ;;		_scheduler
  3490 ;; This function is called by:
  3491 ;;		_write_pipe
  3492 ;;		_read_pipe
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text18
  3497   000E84                     __ptext18:
  3498                           	callstack 0
  3499   000E84                     _sem_wait:
  3500                           	callstack 18
  3501   000E84                     
  3502                           ;sync.c: 18: void sem_wait(sem_t *sem);sync.c: 19: {;sync.c: 20:     (INTCONbits.GIE = 0
      +                          );
  3503   000E84  9EF2               	bcf	242,7,c	;volatile
  3504   000E86                     
  3505                           ;sync.c: 21:     sem->s_value--;
  3506   000E86  0101               	movlb	1	; () banked
  3507   000E88  5112               	movf	sem_wait@sem& (0+255),w,b
  3508   000E8A  6ED9               	movwf	fsr2l,c
  3509   000E8C  6ADA               	clrf	fsr2h,c
  3510   000E8E  06DE               	decf	postinc2,f,c
  3511   000E90  0E00               	movlw	0
  3512   000E92  5ADD               	subwfb	postdec2,f,c
  3513                           
  3514                           ;sync.c: 22:     if (sem->s_value < 0)
  3515   000E94  5112               	movf	sem_wait@sem& (0+255),w,b
  3516   000E96  6ED9               	movwf	fsr2l,c
  3517   000E98  6ADA               	clrf	fsr2h,c
  3518   000E9A  0E01               	movlw	1
  3519   000E9C  BEDB               	btfsc	plusw2,7,c
  3520   000E9E  EF55  F007         	goto	i1u156_20
  3521   000EA2  EF53  F007         	goto	i1u156_21
  3522   000EA6                     i1u156_21:
  3523   000EA6  EFB3  F008         	goto	i1l2614
  3524   000EAA                     i1u156_20:
  3525   000EAA                     
  3526                           ; BSR set to: 1
  3527                           ;sync.c: 23:     {;sync.c: 25:         sem->s_queue[sem->s_size] = r_queue.task_running;
  3528   000EAA  EE23  F0DC         	lfsr	2,_r_queue+535
  3529   000EAE  5112               	movf	sem_wait@sem& (0+255),w,b
  3530   000EB0  6EE9               	movwf	fsr0l,c
  3531   000EB2  6AEA               	clrf	fsr0h,c
  3532   000EB4  0E06               	movlw	6
  3533   000EB6  26E9               	addwf	fsr0l,f,c
  3534   000EB8  50EF               	movf	indf0,w,c
  3535   000EBA  6F13               	movwf	??_sem_wait& (0+255),b
  3536   000EBC  5112               	movf	sem_wait@sem& (0+255),w,b
  3537   000EBE  2513               	addwf	??_sem_wait& (0+255),w,b
  3538   000EC0  6EE9               	movwf	fsr0l,c
  3539   000EC2  6AEA               	clrf	fsr0h,c
  3540   000EC4  0E02               	movlw	2
  3541   000EC6  26E9               	addwf	fsr0l,f,c
  3542   000EC8  CFDF FFEF          	movff	indf2,indf0
  3543                           
  3544                           ;sync.c: 26:         sem->s_size = (sem->s_size + 1) % 4;
  3545   000ECC  5112               	movf	sem_wait@sem& (0+255),w,b
  3546   000ECE  6ED9               	movwf	fsr2l,c
  3547   000ED0  6ADA               	clrf	fsr2h,c
  3548   000ED2  0E06               	movlw	6
  3549   000ED4  26D9               	addwf	fsr2l,f,c
  3550   000ED6  5112               	movf	sem_wait@sem& (0+255),w,b
  3551   000ED8  6EE9               	movwf	fsr0l,c
  3552   000EDA  6AEA               	clrf	fsr0h,c
  3553   000EDC  0E06               	movlw	6
  3554   000EDE  26E9               	addwf	fsr0l,f,c
  3555   000EE0  50EF               	movf	indf0,w,c
  3556   000EE2  6F13               	movwf	??_sem_wait& (0+255),b
  3557   000EE4  2913               	incf	??_sem_wait& (0+255),w,b
  3558   000EE6  0B03               	andlw	3
  3559   000EE8  6EDF               	movwf	indf2,c
  3560   000EEA                     
  3561                           ; BSR set to: 1
  3562   000EEA  C3DC  F113         	movff	_r_queue+535,??_sem_wait
  3563   000EEE  5113               	movf	??_sem_wait& (0+255),w,b
  3564   000EF0  0D6B               	mullw	107
  3565   000EF2  0EC5               	movlw	low _r_queue
  3566   000EF4  24F3               	addwf	243,w,c
  3567   000EF6  6F14               	movwf	(??_sem_wait+1)& (0+255),b
  3568   000EF8  0E01               	movlw	high _r_queue
  3569   000EFA  20F4               	addwfc	prodh,w,c
  3570   000EFC  6F15               	movwf	(??_sem_wait+2)& (0+255),b
  3571   000EFE  C114  F3DE         	movff	??_sem_wait+1,_r_queue+537
  3572   000F02  C115  F3DF         	movff	??_sem_wait+2,_r_queue+538
  3573   000F06                     
  3574                           ; BSR set to: 1
  3575   000F06  EE23  F0DE         	lfsr	2,_r_queue+537
  3576   000F0A  EE00 F002          	lfsr	0,2
  3577   000F0E  50DE               	movf	postinc2,w,c
  3578   000F10  26E9               	addwf	fsr0l,f,c
  3579   000F12  50DD               	movf	postdec2,w,c
  3580   000F14  22EA               	addwfc	fsr0h,f,c
  3581   000F16  04EE               	decf	postinc0,w,c
  3582   000F18  A4D8               	btfss	status,2,c
  3583   000F1A  EF91  F007         	goto	i1u157_21
  3584   000F1E  EF93  F007         	goto	i1u157_20
  3585   000F22                     i1u157_21:
  3586   000F22  EF01  F008         	goto	i1l2596
  3587   000F26                     i1u157_20:
  3588   000F26                     
  3589                           ; BSR set to: 1
  3590   000F26  EE23  F0DE         	lfsr	2,_r_queue+537
  3591   000F2A  EE00 F009          	lfsr	0,9
  3592   000F2E  50DE               	movf	postinc2,w,c
  3593   000F30  26E9               	addwf	fsr0l,f,c
  3594   000F32  50DD               	movf	postdec2,w,c
  3595   000F34  22EA               	addwfc	fsr0h,f,c
  3596   000F36  CFE0 FFEF          	movff	bsr,indf0	;volatile
  3597   000F3A  EE23  F0DE         	lfsr	2,_r_queue+537
  3598   000F3E  EE00 F008          	lfsr	0,8
  3599   000F42  50DE               	movf	postinc2,w,c
  3600   000F44  26E9               	addwf	fsr0l,f,c
  3601   000F46  50DD               	movf	postdec2,w,c
  3602   000F48  22EA               	addwfc	fsr0h,f,c
  3603   000F4A  CFD8 FFEF          	movff	status,indf0	;volatile
  3604   000F4E  EE23  F0DE         	lfsr	2,_r_queue+537
  3605   000F52  EE00 F007          	lfsr	0,7
  3606   000F56  50DE               	movf	postinc2,w,c
  3607   000F58  26E9               	addwf	fsr0l,f,c
  3608   000F5A  50DD               	movf	postdec2,w,c
  3609   000F5C  22EA               	addwfc	fsr0h,f,c
  3610   000F5E  CFE8 FFEF          	movff	wreg,indf0	;volatile
  3611   000F62  EE23  F0DE         	lfsr	2,_r_queue+537
  3612   000F66  EE00 F06A          	lfsr	0,106
  3613   000F6A  50DE               	movf	postinc2,w,c
  3614   000F6C  26E9               	addwf	fsr0l,f,c
  3615   000F6E  50DD               	movf	postdec2,w,c
  3616   000F70  22EA               	addwfc	fsr0h,f,c
  3617   000F72  6AEF               	clrf	indf0,c
  3618   000F74  EE23  F0DE         	lfsr	2,_r_queue+537
  3619   000F78  EE00 F002          	lfsr	0,2
  3620   000F7C  50DE               	movf	postinc2,w,c
  3621   000F7E  26E9               	addwf	fsr0l,f,c
  3622   000F80  50DD               	movf	postdec2,w,c
  3623   000F82  22EA               	addwfc	fsr0h,f,c
  3624   000F84  0E03               	movlw	3
  3625   000F86  6EEF               	movwf	indf0,c
  3626   000F88  EFF9  F007         	goto	i1l2594
  3627   000F8C                     i1l2590:
  3628   000F8C  EE23  F0DE         	lfsr	2,_r_queue+537
  3629   000F90  EE00 F06A          	lfsr	0,106
  3630   000F94  50DE               	movf	postinc2,w,c
  3631   000F96  26E9               	addwf	fsr0l,f,c
  3632   000F98  50DD               	movf	postdec2,w,c
  3633   000F9A  22EA               	addwfc	fsr0h,f,c
  3634   000F9C  50EF               	movf	indf0,w,c
  3635   000F9E  0101               	movlb	1	; () banked
  3636   000FA0  6F13               	movwf	??_sem_wait& (0+255),b
  3637   000FA2  5113               	movf	??_sem_wait& (0+255),w,b
  3638   000FA4  0D03               	mullw	3
  3639   000FA6  CFF3 F114          	movff	prodl,??_sem_wait+1
  3640   000FAA  CFF4 F115          	movff	prodh,??_sem_wait+2
  3641   000FAE  EE23  F0DE         	lfsr	2,_r_queue+537
  3642   000FB2  CFDE F116          	movff	postinc2,??_sem_wait+3
  3643   000FB6  CFDD F117          	movff	postdec2,??_sem_wait+4
  3644   000FBA  5114               	movf	(??_sem_wait+1)& (0+255),w,b
  3645   000FBC  2516               	addwf	(??_sem_wait+3)& (0+255),w,b
  3646   000FBE  6F18               	movwf	(??_sem_wait+5)& (0+255),b
  3647   000FC0  5115               	movf	(??_sem_wait+2)& (0+255),w,b
  3648   000FC2  2117               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3649   000FC4  6F19               	movwf	(??_sem_wait+6)& (0+255),b
  3650   000FC6  0E0A               	movlw	10
  3651   000FC8  2518               	addwf	(??_sem_wait+5)& (0+255),w,b
  3652   000FCA  6ED9               	movwf	fsr2l,c
  3653   000FCC  0E00               	movlw	0
  3654   000FCE  2119               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3655   000FD0  6EDA               	movwf	fsr2h,c
  3656   000FD2  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3657   000FD6  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3658   000FDA  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3659   000FDE                     
  3660                           ; BSR set to: 1
  3661   000FDE  EE23  F0DE         	lfsr	2,_r_queue+537
  3662   000FE2  EE00 F06A          	lfsr	0,106
  3663   000FE6  50DE               	movf	postinc2,w,c
  3664   000FE8  26E9               	addwf	fsr0l,f,c
  3665   000FEA  50DD               	movf	postdec2,w,c
  3666   000FEC  22EA               	addwfc	fsr0h,f,c
  3667   000FEE  2AEF               	incf	indf0,f,c
  3668   000FF0  0006               	pop		;# 
  3669   000FF2                     i1l2594:
  3670   000FF2  50FC               	movf	252,w,c	;volatile
  3671   000FF4  A4D8               	btfss	status,2,c
  3672   000FF6  EFFF  F007         	goto	i1u158_21
  3673   000FFA  EF01  F008         	goto	i1u158_20
  3674   000FFE                     i1u158_21:
  3675   000FFE  EFC6  F007         	goto	i1l2590
  3676   001002                     i1u158_20:
  3677   001002                     i1l2596:
  3678                           
  3679                           ;sync.c: 28:         scheduler();
  3680   001002  EC15  F012         	call	_scheduler	;wreg free
  3681   001006  C3DC  F113         	movff	_r_queue+535,??_sem_wait
  3682   00100A  0101               	movlb	1	; () banked
  3683   00100C  5113               	movf	??_sem_wait& (0+255),w,b
  3684   00100E  0D6B               	mullw	107
  3685   001010  0EC5               	movlw	low _r_queue
  3686   001012  24F3               	addwf	243,w,c
  3687   001014  6F14               	movwf	(??_sem_wait+1)& (0+255),b
  3688   001016  0E01               	movlw	high _r_queue
  3689   001018  20F4               	addwfc	prodh,w,c
  3690   00101A  6F15               	movwf	(??_sem_wait+2)& (0+255),b
  3691   00101C  C114  F3DE         	movff	??_sem_wait+1,_r_queue+537
  3692   001020  C115  F3DF         	movff	??_sem_wait+2,_r_queue+538
  3693   001024                     
  3694                           ; BSR set to: 1
  3695   001024  EE23  F0DE         	lfsr	2,_r_queue+537
  3696   001028  EE00 F002          	lfsr	0,2
  3697   00102C  50DE               	movf	postinc2,w,c
  3698   00102E  26E9               	addwf	fsr0l,f,c
  3699   001030  50DD               	movf	postdec2,w,c
  3700   001032  22EA               	addwfc	fsr0h,f,c
  3701   001034  50EF               	movf	indf0,w,c
  3702   001036  A4D8               	btfss	status,2,c
  3703   001038  EF20  F008         	goto	i1u159_21
  3704   00103C  EF22  F008         	goto	i1u159_20
  3705   001040                     i1u159_21:
  3706   001040  EFB3  F008         	goto	i1l2614
  3707   001044                     i1u159_20:
  3708   001044                     
  3709                           ; BSR set to: 1
  3710   001044  6AFC               	clrf	252,c	;volatile
  3711   001046                     
  3712                           ; BSR set to: 1
  3713   001046  EE23  F0DE         	lfsr	2,_r_queue+537
  3714   00104A  EE00 F06A          	lfsr	0,106
  3715   00104E  50DE               	movf	postinc2,w,c
  3716   001050  26E9               	addwf	fsr0l,f,c
  3717   001052  50DD               	movf	postdec2,w,c
  3718   001054  22EA               	addwfc	fsr0h,f,c
  3719   001056  50EF               	movf	indf0,w,c
  3720   001058  B4D8               	btfsc	status,2,c
  3721   00105A  EF31  F008         	goto	i1u160_21
  3722   00105E  EF33  F008         	goto	i1u160_20
  3723   001062                     i1u160_21:
  3724   001062  EF97  F008         	goto	i1l77
  3725   001066                     i1u160_20:
  3726   001066                     
  3727                           ; BSR set to: 1
  3728   001066  EE23  F0DE         	lfsr	2,_r_queue+537
  3729   00106A  EE00 F009          	lfsr	0,9
  3730   00106E  50DE               	movf	postinc2,w,c
  3731   001070  26E9               	addwf	fsr0l,f,c
  3732   001072  50DD               	movf	postdec2,w,c
  3733   001074  22EA               	addwfc	fsr0h,f,c
  3734   001076  50EF               	movf	indf0,w,c
  3735   001078  6EE0               	movwf	224,c	;volatile
  3736   00107A  EE23  F0DE         	lfsr	2,_r_queue+537
  3737   00107E  EE00 F008          	lfsr	0,8
  3738   001082  50DE               	movf	postinc2,w,c
  3739   001084  26E9               	addwf	fsr0l,f,c
  3740   001086  50DD               	movf	postdec2,w,c
  3741   001088  22EA               	addwfc	fsr0h,f,c
  3742   00108A  50EF               	movf	indf0,w,c
  3743   00108C  6ED8               	movwf	216,c	;volatile
  3744   00108E  EE23  F0DE         	lfsr	2,_r_queue+537
  3745   001092  EE00 F007          	lfsr	0,7
  3746   001096  50DE               	movf	postinc2,w,c
  3747   001098  26E9               	addwf	fsr0l,f,c
  3748   00109A  50DD               	movf	postdec2,w,c
  3749   00109C  22EA               	addwfc	fsr0h,f,c
  3750   00109E  50EF               	movf	indf0,w,c
  3751   0010A0  6F13               	movwf	??_sem_wait& (0+255),b
  3752   0010A2  5113               	movf	??_sem_wait& (0+255),w,b
  3753   0010A4                     i1l78:
  3754                           
  3755                           ; BSR set to: 1
  3756   0010A4  0005               	push		;# 
  3757   0010A6  EE23  F0DE         	lfsr	2,_r_queue+537
  3758   0010AA  EE00 F06A          	lfsr	0,106
  3759   0010AE  50DE               	movf	postinc2,w,c
  3760   0010B0  26E9               	addwf	fsr0l,f,c
  3761   0010B2  50DD               	movf	postdec2,w,c
  3762   0010B4  22EA               	addwfc	fsr0h,f,c
  3763   0010B6  06EF               	decf	indf0,f,c
  3764   0010B8  EE23  F0DE         	lfsr	2,_r_queue+537
  3765   0010BC  EE00 F06A          	lfsr	0,106
  3766   0010C0  50DE               	movf	postinc2,w,c
  3767   0010C2  26E9               	addwf	fsr0l,f,c
  3768   0010C4  50DD               	movf	postdec2,w,c
  3769   0010C6  22EA               	addwfc	fsr0h,f,c
  3770   0010C8  50EF               	movf	indf0,w,c
  3771   0010CA  0101               	movlb	1	; () banked
  3772   0010CC  6F13               	movwf	??_sem_wait& (0+255),b
  3773   0010CE  5113               	movf	??_sem_wait& (0+255),w,b
  3774   0010D0  0D03               	mullw	3
  3775   0010D2  CFF3 F114          	movff	prodl,??_sem_wait+1
  3776   0010D6  CFF4 F115          	movff	prodh,??_sem_wait+2
  3777   0010DA  EE23  F0DE         	lfsr	2,_r_queue+537
  3778   0010DE  CFDE F116          	movff	postinc2,??_sem_wait+3
  3779   0010E2  CFDD F117          	movff	postdec2,??_sem_wait+4
  3780   0010E6  5114               	movf	(??_sem_wait+1)& (0+255),w,b
  3781   0010E8  2516               	addwf	(??_sem_wait+3)& (0+255),w,b
  3782   0010EA  6F18               	movwf	(??_sem_wait+5)& (0+255),b
  3783   0010EC  5115               	movf	(??_sem_wait+2)& (0+255),w,b
  3784   0010EE  2117               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3785   0010F0  6F19               	movwf	(??_sem_wait+6)& (0+255),b
  3786   0010F2  0E0A               	movlw	10
  3787   0010F4  2518               	addwf	(??_sem_wait+5)& (0+255),w,b
  3788   0010F6  6ED9               	movwf	fsr2l,c
  3789   0010F8  0E00               	movlw	0
  3790   0010FA  2119               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3791   0010FC  6EDA               	movwf	fsr2h,c
  3792   0010FE  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3793   001102  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3794   001106  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3795   00110A                     
  3796                           ; BSR set to: 1
  3797   00110A  EE23  F0DE         	lfsr	2,_r_queue+537
  3798   00110E  EE00 F06A          	lfsr	0,106
  3799   001112  50DE               	movf	postinc2,w,c
  3800   001114  26E9               	addwf	fsr0l,f,c
  3801   001116  50DD               	movf	postdec2,w,c
  3802   001118  22EA               	addwfc	fsr0h,f,c
  3803   00111A  50EF               	movf	indf0,w,c
  3804   00111C  A4D8               	btfss	status,2,c
  3805   00111E  EF93  F008         	goto	i1u161_21
  3806   001122  EF95  F008         	goto	i1u161_20
  3807   001126                     i1u161_21:
  3808   001126  EF52  F008         	goto	i1l78
  3809   00112A                     i1u161_20:
  3810   00112A  EFA9  F008         	goto	i1l80
  3811   00112E                     i1l77:
  3812                           
  3813                           ; BSR set to: 1
  3814   00112E  0005               	push		;# 
  3815   001130  EE23  F0DE         	lfsr	2,_r_queue+537
  3816   001134  EE00 F003          	lfsr	0,3
  3817   001138  50DE               	movf	postinc2,w,c
  3818   00113A  26E9               	addwf	fsr0l,f,c
  3819   00113C  50DD               	movf	postdec2,w,c
  3820   00113E  22EA               	addwfc	fsr0h,f,c
  3821   001140  CFEE F113          	movff	postinc0,??_sem_wait
  3822   001144  CFED F114          	movff	postdec0,??_sem_wait+1
  3823   001148  C113  FFFD         	movff	??_sem_wait,tosl	;volatile
  3824   00114C  C114  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  3825   001150  6AFF               	clrf	255,c	;volatile
  3826   001152                     i1l80:
  3827   001152  EE23  F0DE         	lfsr	2,_r_queue+537
  3828   001156  EE00 F002          	lfsr	0,2
  3829   00115A  50DE               	movf	postinc2,w,c
  3830   00115C  26E9               	addwf	fsr0l,f,c
  3831   00115E  50DD               	movf	postdec2,w,c
  3832   001160  22EA               	addwfc	fsr0h,f,c
  3833   001162  0E01               	movlw	1
  3834   001164  6EEF               	movwf	indf0,c
  3835   001166                     i1l2614:
  3836                           
  3837                           ;sync.c: 31:     (INTCONbits.GIE = 1);
  3838   001166  8EF2               	bsf	242,7,c	;volatile
  3839   001168  0012               	return		;funcret
  3840   00116A                     __end_of_sem_wait:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _scheduler *****************
  3844 ;; Defined at:
  3845 ;;		line 7 in file "scheduler.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1  [STACK] void 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/1
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 4
  3866 ;; This function calls:
  3867 ;;		_priority_scheduler
  3868 ;; This function is called by:
  3869 ;;		_sem_wait
  3870 ;;		_mutex_lock
  3871 ;;		_delay
  3872 ;;		_yield
  3873 ;;		_change_state
  3874 ;;		_ISR
  3875 ;; This function uses a reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text19
  3879   00242A                     __ptext19:
  3880                           	callstack 0
  3881   00242A                     _scheduler:
  3882                           	callstack 15
  3883   00242A                     
  3884                           ;scheduler.c: 12:     priority_scheduler();
  3885   00242A  EC8B  F00C         	call	_priority_scheduler	;wreg free
  3886   00242E                     
  3887                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3888   00242E  0012               	return		;funcret
  3889   002430                     __end_of_scheduler:
  3890                           	callstack 0
  3891                           
  3892 ;; *************** function _priority_scheduler *****************
  3893 ;; Defined at:
  3894 ;;		line 32 in file "scheduler.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  t               2  [STACK] PTR struct tcb
  3899 ;;		 -> r_queue$ready_queue(535), r_queue(539), 
  3900 ;;  i               1  [STACK] unsigned char 
  3901 ;;  selected        2  [STACK] int 
  3902 ;;  best_priorit    1  [STACK] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1  [STACK] void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/1
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 3
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_scheduler
  3923 ;; This function uses a reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text20
  3927   001916                     __ptext20:
  3928                           	callstack 0
  3929   001916                     _priority_scheduler:
  3930                           	callstack 0
  3931                           
  3932                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3933   001916  0E08               	movlw	8
  3934   001918  26E1               	addwf	fsr1l,f,c
  3935   00191A  0E00               	movlw	0
  3936   00191C  22E2               	addwfc	fsr1h,f,c
  3937   00191E                     
  3938                           ;scheduler.c: 35:     uint8_t best_priority = 0xFF;
  3939   00191E  0EFF               	movlw	255
  3940   001920  6E0C               	movwf	(btemp+11)^0,c
  3941                           
  3942                           ;stkvar	_best_priority @ sp[(-8)+7]
  3943   001922  0EFF               	movlw	-1
  3944   001924  C00C  FFE3         	movff	btemp+11,plusw1
  3945   001928                     
  3946                           ;scheduler.c: 36:     int selected = -1;
  3947   001928  0EFF               	movlw	255
  3948   00192A  6E0B               	movwf	(btemp+10)^0,c
  3949   00192C  0EFF               	movlw	255
  3950   00192E  6E0C               	movwf	(btemp+11)^0,c
  3951                           
  3952                           ;stkvar	_selected @ sp[(-8)+5]
  3953   001930  0EFD               	movlw	-3
  3954   001932  C00B  FFE3         	movff	btemp+10,plusw1
  3955   001936  0EFE               	movlw	-2
  3956   001938  C00C  FFE3         	movff	btemp+11,plusw1
  3957   00193C                     
  3958                           ;scheduler.c: 37:     for (uint8_t i = 0; i < r_queue.ready_queue_size; i++) {
  3959                           ;stkvar	_i @ sp[(-8)+2]
  3960   00193C  0EFA               	movlw	-6
  3961   00193E  6AE3               	clrf	plusw1,c
  3962   001940  EFF8  F00C         	goto	l2568
  3963   001944                     l2556:
  3964                           
  3965                           ;scheduler.c: 38:         tcb_t *t = &r_queue.ready_queue[i];
  3966                           ;stkvar	_i @ sp[(-8)+2]
  3967   001944  0EFA               	movlw	-6
  3968   001946  50E3               	movf	plusw1,w,c
  3969   001948  0D6B               	mullw	107
  3970   00194A  0EC5               	movlw	low _r_queue
  3971   00194C  24F3               	addwf	243,w,c
  3972   00194E  6E0B               	movwf	(btemp+10)^0,c
  3973   001950  0E01               	movlw	high _r_queue
  3974   001952  20F4               	addwfc	prodh,w,c
  3975   001954  6E0C               	movwf	(btemp+11)^0,c
  3976                           
  3977                           ;stkvar	_t @ sp[(-8)+0]
  3978   001956  0EF9               	movlw	-7
  3979   001958  C00C  FFE3         	movff	btemp+11,plusw1
  3980   00195C  0EF8               	movlw	-8
  3981   00195E  C00B  FFE3         	movff	btemp+10,plusw1
  3982   001962                     
  3983                           ;scheduler.c: 39:         if (t->task_state == READY) {
  3984                           ;stkvar	_t @ sp[(-8)+0]
  3985   001962  0EF8               	movlw	-8
  3986   001964  CFE3 F00B          	movff	plusw1,btemp+10
  3987   001968  0EF9               	movlw	-7
  3988   00196A  CFE3 F00C          	movff	plusw1,btemp+11
  3989   00196E  0E02               	movlw	2
  3990   001970  240B               	addwf	(btemp+10)^0,w,c
  3991   001972  6ED9               	movwf	fsr2l,c
  3992   001974  0E00               	movlw	0
  3993   001976  200C               	addwfc	(btemp+11)^0,w,c
  3994   001978  6EDA               	movwf	fsr2h,c
  3995   00197A  50DF               	movf	indf2,w,c
  3996   00197C  A4D8               	btfss	status,2,c
  3997   00197E  EFC3  F00C         	goto	u152_21
  3998   001982  EFC5  F00C         	goto	u152_20
  3999   001986                     u152_21:
  4000   001986  EFF6  F00C         	goto	l2566
  4001   00198A                     u152_20:
  4002   00198A                     
  4003                           ;scheduler.c: 40:             if ((uint8_t)t->task_priority < best_priority) {
  4004                           ;stkvar	_best_priority @ sp[(-8)+7]
  4005                           ;stkvar	_t @ sp[(-8)+0]
  4006   00198A  0EF8               	movlw	-8
  4007   00198C  CFE3 F00B          	movff	plusw1,btemp+10
  4008   001990  0EF9               	movlw	-7
  4009   001992  CFE3 F00C          	movff	plusw1,btemp+11
  4010   001996  0E01               	movlw	1
  4011   001998  240B               	addwf	(btemp+10)^0,w,c
  4012   00199A  6ED9               	movwf	fsr2l,c
  4013   00199C  0E00               	movlw	0
  4014   00199E  200C               	addwfc	(btemp+11)^0,w,c
  4015   0019A0  6EDA               	movwf	fsr2h,c
  4016   0019A2  0EFF               	movlw	-1
  4017   0019A4  50E3               	movf	plusw1,w,c
  4018   0019A6  5CDE               	subwf	postinc2,w,c
  4019   0019A8  B0D8               	btfsc	status,0,c
  4020   0019AA  EFD9  F00C         	goto	u153_21
  4021   0019AE  EFDB  F00C         	goto	u153_20
  4022   0019B2                     u153_21:
  4023   0019B2  EFF6  F00C         	goto	l2566
  4024   0019B6                     u153_20:
  4025   0019B6                     
  4026                           ;scheduler.c: 41:                 best_priority = t->task_priority;
  4027                           ;stkvar	_t @ sp[(-8)+0]
  4028   0019B6  0EF8               	movlw	-8
  4029   0019B8  CFE3 F00B          	movff	plusw1,btemp+10
  4030   0019BC  0EF9               	movlw	-7
  4031   0019BE  CFE3 F00C          	movff	plusw1,btemp+11
  4032   0019C2  0E01               	movlw	1
  4033   0019C4  240B               	addwf	(btemp+10)^0,w,c
  4034   0019C6  6ED9               	movwf	fsr2l,c
  4035   0019C8  0E00               	movlw	0
  4036   0019CA  200C               	addwfc	(btemp+11)^0,w,c
  4037   0019CC  6EDA               	movwf	fsr2h,c
  4038   0019CE  50DF               	movf	indf2,w,c
  4039   0019D0  6E0C               	movwf	(btemp+11)^0,c
  4040                           
  4041                           ;stkvar	_best_priority @ sp[(-8)+7]
  4042   0019D2  0EFF               	movlw	-1
  4043   0019D4  C00C  FFE3         	movff	btemp+11,plusw1
  4044   0019D8                     
  4045                           ;scheduler.c: 42:                 selected = i;
  4046                           ;stkvar	_i @ sp[(-8)+2]
  4047   0019D8  0EFA               	movlw	-6
  4048   0019DA  50E3               	movf	plusw1,w,c
  4049   0019DC  6E0B               	movwf	(btemp+10)^0,c
  4050   0019DE  6A0C               	clrf	(btemp+11)^0,c
  4051                           
  4052                           ;stkvar	_selected @ sp[(-8)+5]
  4053   0019E0  0EFD               	movlw	-3
  4054   0019E2  C00B  FFE3         	movff	btemp+10,plusw1
  4055   0019E6  0EFE               	movlw	-2
  4056   0019E8  C00C  FFE3         	movff	btemp+11,plusw1
  4057   0019EC                     l2566:
  4058                           
  4059                           ;scheduler.c: 45:     }
  4060                           ;stkvar	_i @ sp[(-8)+2]
  4061   0019EC  0EFA               	movlw	-6
  4062   0019EE  2AE3               	incf	plusw1,f,c
  4063   0019F0                     l2568:
  4064   0019F0  EE23  F0DD         	lfsr	2,_r_queue+536
  4065                           
  4066                           ;stkvar	_i @ sp[(-8)+2]
  4067   0019F4  0EFA               	movlw	-6
  4068   0019F6  CFE3 F001          	movff	plusw1,btemp
  4069   0019FA  50DE               	movf	postinc2,w,c
  4070   0019FC  5C01               	subwf	btemp^0,w,c
  4071   0019FE  A0D8               	btfss	status,0,c
  4072   001A00  EF04  F00D         	goto	u154_21
  4073   001A04  EF06  F00D         	goto	u154_20
  4074   001A08                     u154_21:
  4075   001A08  EFA2  F00C         	goto	l2556
  4076   001A0C                     u154_20:
  4077   001A0C                     
  4078                           ;scheduler.c: 47:     r_queue.task_running = (selected >= 0) ? selected : 0;
  4079                           ;stkvar	_selected @ sp[(-8)+5]
  4080   001A0C  0EFE               	movlw	-2
  4081   001A0E  BEE3               	btfsc	plusw1,7,c
  4082   001A10  EF0E  F00D         	goto	u155_20
  4083   001A14  EF0C  F00D         	goto	u155_21
  4084   001A18                     u155_21:
  4085   001A18  EF14  F00D         	goto	l2574
  4086   001A1C                     u155_20:
  4087   001A1C                     
  4088                           ;stkvar	_priority_scheduler$120 @ sp[(-8)+3]
  4089   001A1C  0EFB               	movlw	-5
  4090   001A1E  6AE3               	clrf	plusw1,c
  4091   001A20  0EFC               	movlw	-4
  4092   001A22  6AE3               	clrf	plusw1,c
  4093   001A24  EF20  F00D         	goto	l2576
  4094   001A28                     l2574:
  4095                           
  4096                           ;stkvar	_selected @ sp[(-8)+5]
  4097                           ;stkvar	_priority_scheduler$120 @ sp[(-8)+3]
  4098   001A28  0EFD               	movlw	-3
  4099   001A2A  CFE3 F001          	movff	plusw1,btemp
  4100   001A2E  0EFB               	movlw	-5
  4101   001A30  C001  FFE3         	movff	btemp,plusw1
  4102   001A34  0EFE               	movlw	-2
  4103   001A36  CFE3 F001          	movff	plusw1,btemp
  4104   001A3A  0EFC               	movlw	-4
  4105   001A3C  C001  FFE3         	movff	btemp,plusw1
  4106   001A40                     l2576:
  4107                           
  4108                           ;stkvar	_priority_scheduler$120 @ sp[(-8)+3]
  4109   001A40  0EFB               	movlw	-5
  4110   001A42  CFE3 F00C          	movff	plusw1,btemp+11
  4111   001A46  C00C  F3DC         	movff	btemp+11,_r_queue+535
  4112   001A4A                     
  4113                           ; _priority_scheduler: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  4114   001A4A  0EF8               	movlw	248
  4115   001A4C  26E1               	addwf	fsr1l,f,c
  4116   001A4E  0EFF               	movlw	255
  4117   001A50  22E2               	addwfc	fsr1h,f,c
  4118   001A52  0012               	return		;funcret
  4119   001A54                     __end_of_priority_scheduler:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _sem_post *****************
  4123 ;; Defined at:
  4124 ;;		line 34 in file "sync.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  sem             1   18[BANK1 ] PTR struct sem
  4127 ;;		 -> accel_pipe(20), 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4139 ;;      Params:         0       0       1       0       0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4141 ;;      Temps:          0       0       2       0       0       0       0       0       0
  4142 ;;      Totals:         0       0       3       0       0       0       0       0       0
  4143 ;;Total ram usage:        3 bytes
  4144 ;; Hardware stack levels used: 1
  4145 ;; Hardware stack levels required when called: 3
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_write_pipe
  4150 ;;		_read_pipe
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text21
  4155   001E32                     __ptext21:
  4156                           	callstack 0
  4157   001E32                     _sem_post:
  4158                           	callstack 20
  4159   001E32                     
  4160                           ;sync.c: 34: void sem_post(sem_t *sem);sync.c: 35: {;sync.c: 36:     (INTCONbits.GIE = 0
      +                          );
  4161   001E32  9EF2               	bcf	242,7,c	;volatile
  4162   001E34                     
  4163                           ;sync.c: 37:     sem->s_value++;
  4164   001E34  0101               	movlb	1	; () banked
  4165   001E36  5112               	movf	sem_post@sem& (0+255),w,b
  4166   001E38  6ED9               	movwf	fsr2l,c
  4167   001E3A  6ADA               	clrf	fsr2h,c
  4168   001E3C  2ADE               	incf	postinc2,f,c
  4169   001E3E  0E00               	movlw	0
  4170   001E40  22DD               	addwfc	postdec2,f,c
  4171                           
  4172                           ;sync.c: 38:     if (sem->s_value <= 0)
  4173   001E42  5112               	movf	sem_post@sem& (0+255),w,b
  4174   001E44  6ED9               	movwf	fsr2l,c
  4175   001E46  6ADA               	clrf	fsr2h,c
  4176   001E48  0E01               	movlw	1
  4177   001E4A  BEDB               	btfsc	plusw2,7,c
  4178   001E4C  EF33  F00F         	goto	i1u162_20
  4179   001E50  0E01               	movlw	1
  4180   001E52  50DB               	movf	plusw2,w,c
  4181   001E54  E106               	bnz	i1u162_21
  4182   001E56  04DE               	decf	postinc2,w,c
  4183   001E58  B0D8               	btfsc	status,0,c
  4184   001E5A  EF31  F00F         	goto	i1u162_21
  4185   001E5E  EF33  F00F         	goto	i1u162_20
  4186   001E62                     i1u162_21:
  4187   001E62  EF5A  F00F         	goto	i1l2624
  4188   001E66                     i1u162_20:
  4189   001E66                     
  4190                           ; BSR set to: 1
  4191                           ;sync.c: 39:     {;sync.c: 41:         r_queue.ready_queue[sem->s_queue[sem->s_pos_out]]
      +                          .task_state = READY;
  4192   001E66  5112               	movf	sem_post@sem& (0+255),w,b
  4193   001E68  6ED9               	movwf	fsr2l,c
  4194   001E6A  6ADA               	clrf	fsr2h,c
  4195   001E6C  0E07               	movlw	7
  4196   001E6E  26D9               	addwf	fsr2l,f,c
  4197   001E70  50DF               	movf	indf2,w,c
  4198   001E72  6F13               	movwf	??_sem_post& (0+255),b
  4199   001E74  5112               	movf	sem_post@sem& (0+255),w,b
  4200   001E76  2513               	addwf	??_sem_post& (0+255),w,b
  4201   001E78  6ED9               	movwf	fsr2l,c
  4202   001E7A  6ADA               	clrf	fsr2h,c
  4203   001E7C  0E02               	movlw	2
  4204   001E7E  26D9               	addwf	fsr2l,f,c
  4205   001E80  50DF               	movf	indf2,w,c
  4206   001E82  6F14               	movwf	(??_sem_post+1)& (0+255),b
  4207   001E84  5114               	movf	(??_sem_post+1)& (0+255),w,b
  4208   001E86  0D6B               	mullw	107
  4209   001E88  0EC7               	movlw	low (_r_queue+2)
  4210   001E8A  24F3               	addwf	243,w,c
  4211   001E8C  6ED9               	movwf	fsr2l,c
  4212   001E8E  0E01               	movlw	high (_r_queue+2)
  4213   001E90  20F4               	addwfc	prodh,w,c
  4214   001E92  6EDA               	movwf	fsr2h,c
  4215   001E94  6ADF               	clrf	indf2,c
  4216   001E96                     
  4217                           ; BSR set to: 1
  4218                           ;sync.c: 42:         sem->s_pos_out = (sem->s_pos_out + 1) % 4;
  4219   001E96  5112               	movf	sem_post@sem& (0+255),w,b
  4220   001E98  6ED9               	movwf	fsr2l,c
  4221   001E9A  6ADA               	clrf	fsr2h,c
  4222   001E9C  0E07               	movlw	7
  4223   001E9E  26D9               	addwf	fsr2l,f,c
  4224   001EA0  5112               	movf	sem_post@sem& (0+255),w,b
  4225   001EA2  6EE9               	movwf	fsr0l,c
  4226   001EA4  6AEA               	clrf	fsr0h,c
  4227   001EA6  0E07               	movlw	7
  4228   001EA8  26E9               	addwf	fsr0l,f,c
  4229   001EAA  50EF               	movf	indf0,w,c
  4230   001EAC  6F13               	movwf	??_sem_post& (0+255),b
  4231   001EAE  2913               	incf	??_sem_post& (0+255),w,b
  4232   001EB0  0B03               	andlw	3
  4233   001EB2  6EDF               	movwf	indf2,c
  4234   001EB4                     i1l2624:
  4235                           
  4236                           ; BSR set to: 1
  4237                           ;sync.c: 44:     (INTCONbits.GIE = 1);
  4238   001EB4  8EF2               	bsf	242,7,c	;volatile
  4239   001EB6                     
  4240                           ; BSR set to: 1
  4241   001EB6  0012               	return		;funcret
  4242   001EB8                     __end_of_sem_post:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _adc_read *****************
  4246 ;; Defined at:
  4247 ;;		line 17 in file "io.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  2    0[BANK1 ] unsigned short 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4261 ;;      Params:         0       0       2       0       0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4263 ;;      Temps:          0       0       2       0       0       0       0       0       0
  4264 ;;      Totals:         0       0       4       0       0       0       0       0       0
  4265 ;;Total ram usage:        4 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; Hardware stack levels required when called: 3
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_tarefa_acelerador
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text22
  4276   0023AA                     __ptext22:
  4277                           	callstack 0
  4278   0023AA                     _adc_read:
  4279                           	callstack 21
  4280   0023AA                     
  4281                           ;io.c: 19:     ADCON0bits.GO = 1;
  4282   0023AA  82C2               	bsf	194,1,c	;volatile
  4283   0023AC                     i1l213:
  4284   0023AC  B2C2               	btfsc	194,1,c	;volatile
  4285   0023AE  EFDB  F011         	goto	i1u169_21
  4286   0023B2  EFDD  F011         	goto	i1u169_20
  4287   0023B6                     i1u169_21:
  4288   0023B6  EFD6  F011         	goto	i1l213
  4289   0023BA                     i1u169_20:
  4290   0023BA                     
  4291                           ;io.c: 21:     return ((uint16_t)ADRESH << 8) | ADRESL;
  4292   0023BA  50C4               	movf	196,w,c	;volatile
  4293   0023BC  0101               	movlb	1	; () banked
  4294   0023BE  6F02               	movwf	??_adc_read& (0+255),b
  4295   0023C0  50C3               	movf	195,w,c	;volatile
  4296   0023C2  6F00               	movwf	?_adc_read& (0+255),b
  4297   0023C4  C102  F101         	movff	??_adc_read,?_adc_read+1
  4298   0023C8                     
  4299                           ; BSR set to: 1
  4300   0023C8  0012               	return		;funcret
  4301   0023CA                     __end_of_adc_read:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _tarefa_controle_central *****************
  4305 ;; Defined at:
  4306 ;;		line 30 in file "user_app.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  data            1   33[BANK1 ] unsigned char 
  4311 ;;  duty            1   32[BANK1 ] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0
  4322 ;;      Locals:         0       0       2       0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4324 ;;      Totals:         0       0       2       0       0       0       0       0       0
  4325 ;;Total ram usage:        2 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 7
  4328 ;; This function calls:
  4329 ;;		___awmod
  4330 ;;		_mutex_lock
  4331 ;;		_mutex_unlock
  4332 ;;		_read_pipe
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text23
  4339   002110                     __ptext23:
  4340                           	callstack 0
  4341   002110                     _tarefa_controle_central:
  4342                           	callstack 18
  4343   002110                     l281:
  4344                           
  4345                           ;user_app.c: 33:     {;user_app.c: 34:         LATDbits.LATD2 = 1;
  4346   002110  848C               	bsf	140,2,c	;volatile
  4347   002112                     
  4348                           ;user_app.c: 35:         uint8_t data;;user_app.c: 36:         read_pipe(&accel_pipe, &d
      +                          ata);
  4349   002112  0E25               	movlw	low _accel_pipe
  4350   002114  0101               	movlb	1	; () banked
  4351   002116  6F1A               	movwf	read_pipe@p& (0+255),b
  4352   002118  0E21               	movlw	low tarefa_controle_central@data
  4353   00211A  6F1B               	movwf	read_pipe@data& (0+255),b
  4354   00211C  0E01               	movlw	high tarefa_controle_central@data
  4355   00211E  6F1C               	movwf	(read_pipe@data+1)& (0+255),b
  4356   002120  EC5C  F00F         	call	_read_pipe	;wreg free
  4357   002124                     
  4358                           ;user_app.c: 37:         uint8_t duty = data % 100;
  4359   002124  C121  F112         	movff	tarefa_controle_central@data,___awmod@dividend
  4360   002128  0101               	movlb	1	; () banked
  4361   00212A  6B13               	clrf	(___awmod@dividend+1)& (0+255),b
  4362   00212C  0E00               	movlw	0
  4363   00212E  6F15               	movwf	(___awmod@divisor+1)& (0+255),b
  4364   002130  0E64               	movlw	100
  4365   002132  6F14               	movwf	___awmod@divisor& (0+255),b
  4366   002134  EC29  F00E         	call	___awmod	;wreg free
  4367   002138  0101               	movlb	1	; () banked
  4368   00213A  5112               	movf	?___awmod& (0+255),w,b
  4369   00213C  6F20               	movwf	tarefa_controle_central@duty& (0+255),b
  4370   00213E                     
  4371                           ; BSR set to: 1
  4372                           ;user_app.c: 38:         mutex_lock(&buffer_mutex);
  4373   00213E  0EBD               	movlw	low _buffer_mutex
  4374   002140  6F22               	movwf	mutex_lock@m& (0+255),b
  4375   002142  0E01               	movlw	high _buffer_mutex
  4376   002144  6F23               	movwf	(mutex_lock@m+1)& (0+255),b
  4377   002146  ECC3  F005         	call	_mutex_lock	;wreg free
  4378   00214A                     
  4379                           ;user_app.c: 39:         accel_data = duty;
  4380   00214A  C120  F16C         	movff	tarefa_controle_central@duty,_accel_data	;volatile
  4381   00214E                     
  4382                           ;user_app.c: 40:         mutex_unlock(&buffer_mutex);
  4383   00214E  0EBD               	movlw	low _buffer_mutex
  4384   002150  0101               	movlb	1	; () banked
  4385   002152  6F22               	movwf	mutex_unlock@m& (0+255),b
  4386   002154  0E01               	movlw	high _buffer_mutex
  4387   002156  6F23               	movwf	(mutex_unlock@m+1)& (0+255),b
  4388   002158  EC81  F00E         	call	_mutex_unlock	;wreg free
  4389   00215C                     
  4390                           ;user_app.c: 41:         LATDbits.LATD2 = 0;
  4391   00215C  948C               	bcf	140,2,c	;volatile
  4392   00215E  EF88  F010         	goto	l281
  4393   002162  0012               	return		;funcret
  4394   002164                     __end_of_tarefa_controle_central:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function _read_pipe *****************
  4398 ;; Defined at:
  4399 ;;		line 23 in file "pipe.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  p               1   26[BANK1 ] PTR struct pipe
  4402 ;;		 -> accel_pipe(20), 
  4403 ;;  data            2   27[BANK1 ] PTR unsigned char 
  4404 ;;		 -> tarefa_controle_central@data(1), 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4416 ;;      Params:         0       0       3       0       0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4418 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4419 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4420 ;;Total ram usage:        6 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; Hardware stack levels required when called: 6
  4423 ;; This function calls:
  4424 ;;		_sem_post
  4425 ;;		_sem_wait
  4426 ;; This function is called by:
  4427 ;;		_tarefa_controle_central
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text24
  4432   001EB8                     __ptext24:
  4433                           	callstack 0
  4434   001EB8                     _read_pipe:
  4435                           	callstack 18
  4436   001EB8                     
  4437                           ;pipe.c: 23: void read_pipe(pipe_t *p, uint8_t *data);pipe.c: 24: {;pipe.c: 25:     (INT
      +                          CONbits.GIE = 0);
  4438   001EB8  9EF2               	bcf	242,7,c	;volatile
  4439   001EBA                     
  4440                           ;pipe.c: 26:     sem_wait(&p->pipe_sem_read);
  4441   001EBA  0101               	movlb	1	; () banked
  4442   001EBC  511A               	movf	read_pipe@p& (0+255),w,b
  4443   001EBE  0F04               	addlw	4
  4444   001EC0  6F12               	movwf	sem_wait@sem& (0+255),b
  4445   001EC2  EC42  F007         	call	_sem_wait	;wreg free
  4446   001EC6                     
  4447                           ;pipe.c: 27:     *data = p->pipe_msg[p->pipe_pos_read];
  4448   001EC6  0101               	movlb	1	; () banked
  4449   001EC8  511A               	movf	read_pipe@p& (0+255),w,b
  4450   001ECA  6ED9               	movwf	fsr2l,c
  4451   001ECC  6ADA               	clrf	fsr2h,c
  4452   001ECE  0E02               	movlw	2
  4453   001ED0  26D9               	addwf	fsr2l,f,c
  4454   001ED2  50DF               	movf	indf2,w,c
  4455   001ED4  6F1D               	movwf	??_read_pipe& (0+255),b
  4456   001ED6  511A               	movf	read_pipe@p& (0+255),w,b
  4457   001ED8  6ED9               	movwf	fsr2l,c
  4458   001EDA  6ADA               	clrf	fsr2h,c
  4459   001EDC  CFDE F11E          	movff	postinc2,??_read_pipe+1
  4460   001EE0  CFDD F11F          	movff	postdec2,??_read_pipe+2
  4461   001EE4  511D               	movf	??_read_pipe& (0+255),w,b
  4462   001EE6  251E               	addwf	(??_read_pipe+1)& (0+255),w,b
  4463   001EE8  6ED9               	movwf	fsr2l,c
  4464   001EEA  0E00               	movlw	0
  4465   001EEC  211F               	addwfc	(??_read_pipe+2)& (0+255),w,b
  4466   001EEE  6EDA               	movwf	fsr2h,c
  4467   001EF0  C11B  FFE9         	movff	read_pipe@data,fsr0l
  4468   001EF4  C11C  FFEA         	movff	read_pipe@data+1,fsr0h
  4469   001EF8  CFDF FFEF          	movff	indf2,indf0
  4470   001EFC                     
  4471                           ; BSR set to: 1
  4472                           ;pipe.c: 28:     p->pipe_pos_read = (p->pipe_pos_read + 1) % 4;
  4473   001EFC  511A               	movf	read_pipe@p& (0+255),w,b
  4474   001EFE  6ED9               	movwf	fsr2l,c
  4475   001F00  6ADA               	clrf	fsr2h,c
  4476   001F02  0E02               	movlw	2
  4477   001F04  26D9               	addwf	fsr2l,f,c
  4478   001F06  511A               	movf	read_pipe@p& (0+255),w,b
  4479   001F08  6EE9               	movwf	fsr0l,c
  4480   001F0A  6AEA               	clrf	fsr0h,c
  4481   001F0C  0E02               	movlw	2
  4482   001F0E  26E9               	addwf	fsr0l,f,c
  4483   001F10  50EF               	movf	indf0,w,c
  4484   001F12  6F1D               	movwf	??_read_pipe& (0+255),b
  4485   001F14  291D               	incf	??_read_pipe& (0+255),w,b
  4486   001F16  0B03               	andlw	3
  4487   001F18  6EDF               	movwf	indf2,c
  4488   001F1A                     
  4489                           ; BSR set to: 1
  4490                           ;pipe.c: 29:     sem_post(&p->pipe_sem_write);
  4491   001F1A  511A               	movf	read_pipe@p& (0+255),w,b
  4492   001F1C  0F0C               	addlw	12
  4493   001F1E  6F12               	movwf	sem_post@sem& (0+255),b
  4494   001F20  EC19  F00F         	call	_sem_post	;wreg free
  4495   001F24                     
  4496                           ;pipe.c: 30:     (INTCONbits.GIE = 1);
  4497   001F24  8EF2               	bsf	242,7,c	;volatile
  4498   001F26  0012               	return		;funcret
  4499   001F28                     __end_of_read_pipe:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _mutex_unlock *****************
  4503 ;; Defined at:
  4504 ;;		line 75 in file "sync.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  m               2   34[BANK1 ] PTR struct mutex
  4507 ;;		 -> buffer_mutex(7), 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  tid             1   39[BANK1 ] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4519 ;;      Params:         0       0       2       0       0       0       0       0       0
  4520 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4521 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4522 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4523 ;;Total ram usage:        6 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 3
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_tarefa_controle_central
  4530 ;;		_tarefa_injecao_eletronica
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text25
  4535   001D02                     __ptext25:
  4536                           	callstack 0
  4537   001D02                     _mutex_unlock:
  4538                           	callstack 21
  4539   001D02                     
  4540                           ;sync.c: 75: void mutex_unlock(mutex_t *m);sync.c: 76: {;sync.c: 77:     (INTCONbits.GIE
      +                           = 0);
  4541   001D02  9EF2               	bcf	242,7,c	;volatile
  4542   001D04                     
  4543                           ;sync.c: 78:     if (m->s_pos_out != m->s_size)
  4544   001D04  0101               	movlb	1	; () banked
  4545   001D06  EE20 F005          	lfsr	2,5
  4546   001D0A  5122               	movf	mutex_unlock@m& (0+255),w,b
  4547   001D0C  26D9               	addwf	fsr2l,f,c
  4548   001D0E  5123               	movf	(mutex_unlock@m+1)& (0+255),w,b
  4549   001D10  22DA               	addwfc	fsr2h,f,c
  4550   001D12  EE00 F006          	lfsr	0,6
  4551   001D16  5122               	movf	mutex_unlock@m& (0+255),w,b
  4552   001D18  26E9               	addwf	fsr0l,f,c
  4553   001D1A  5123               	movf	(mutex_unlock@m+1)& (0+255),w,b
  4554   001D1C  22EA               	addwfc	fsr0h,f,c
  4555   001D1E  50DE               	movf	postinc2,w,c
  4556   001D20  18EE               	xorwf	postinc0,w,c
  4557   001D22  B4D8               	btfsc	status,2,c
  4558   001D24  EF96  F00E         	goto	i1u101_21
  4559   001D28  EF98  F00E         	goto	i1u101_20
  4560   001D2C                     i1u101_21:
  4561   001D2C  EFCA  F00E         	goto	i1l2128
  4562   001D30                     i1u101_20:
  4563   001D30                     
  4564                           ; BSR set to: 1
  4565                           ;sync.c: 79:     {;sync.c: 81:         uint8_t tid = m->s_queue[m->s_pos_out];
  4566   001D30  EE20 F006          	lfsr	2,6
  4567   001D34  5122               	movf	mutex_unlock@m& (0+255),w,b
  4568   001D36  26D9               	addwf	fsr2l,f,c
  4569   001D38  5123               	movf	(mutex_unlock@m+1)& (0+255),w,b
  4570   001D3A  22DA               	addwfc	fsr2h,f,c
  4571   001D3C  50DF               	movf	indf2,w,c
  4572   001D3E  6F24               	movwf	??_mutex_unlock& (0+255),b
  4573   001D40  5124               	movf	??_mutex_unlock& (0+255),w,b
  4574   001D42  2522               	addwf	mutex_unlock@m& (0+255),w,b
  4575   001D44  6F25               	movwf	(??_mutex_unlock+1)& (0+255),b
  4576   001D46  0E00               	movlw	0
  4577   001D48  2123               	addwfc	(mutex_unlock@m+1)& (0+255),w,b
  4578   001D4A  6F26               	movwf	(??_mutex_unlock+2)& (0+255),b
  4579   001D4C  0E01               	movlw	1
  4580   001D4E  2525               	addwf	(??_mutex_unlock+1)& (0+255),w,b
  4581   001D50  6ED9               	movwf	fsr2l,c
  4582   001D52  0E00               	movlw	0
  4583   001D54  2126               	addwfc	(??_mutex_unlock+2)& (0+255),w,b
  4584   001D56  6EDA               	movwf	fsr2h,c
  4585   001D58  50DF               	movf	indf2,w,c
  4586   001D5A  6F27               	movwf	mutex_unlock@tid& (0+255),b
  4587   001D5C                     
  4588                           ; BSR set to: 1
  4589                           ;sync.c: 82:         r_queue.ready_queue[tid].task_state = READY;
  4590   001D5C  5127               	movf	mutex_unlock@tid& (0+255),w,b
  4591   001D5E  0D6B               	mullw	107
  4592   001D60  0EC7               	movlw	low (_r_queue+2)
  4593   001D62  24F3               	addwf	243,w,c
  4594   001D64  6ED9               	movwf	fsr2l,c
  4595   001D66  0E01               	movlw	high (_r_queue+2)
  4596   001D68  20F4               	addwfc	prodh,w,c
  4597   001D6A  6EDA               	movwf	fsr2h,c
  4598   001D6C  6ADF               	clrf	indf2,c
  4599   001D6E                     
  4600                           ; BSR set to: 1
  4601                           ;sync.c: 83:         m->s_pos_out = (m->s_pos_out + 1) % 4;
  4602   001D6E  EE20 F006          	lfsr	2,6
  4603   001D72  5122               	movf	mutex_unlock@m& (0+255),w,b
  4604   001D74  26D9               	addwf	fsr2l,f,c
  4605   001D76  5123               	movf	(mutex_unlock@m+1)& (0+255),w,b
  4606   001D78  22DA               	addwfc	fsr2h,f,c
  4607   001D7A  EE00 F006          	lfsr	0,6
  4608   001D7E  5122               	movf	mutex_unlock@m& (0+255),w,b
  4609   001D80  26E9               	addwf	fsr0l,f,c
  4610   001D82  5123               	movf	(mutex_unlock@m+1)& (0+255),w,b
  4611   001D84  22EA               	addwfc	fsr0h,f,c
  4612   001D86  50EF               	movf	indf0,w,c
  4613   001D88  6F24               	movwf	??_mutex_unlock& (0+255),b
  4614   001D8A  2924               	incf	??_mutex_unlock& (0+255),w,b
  4615   001D8C  0B03               	andlw	3
  4616   001D8E  6EDF               	movwf	indf2,c
  4617                           
  4618                           ;sync.c: 84:     }
  4619   001D90  EFD0  F00E         	goto	i1l2130
  4620   001D94                     i1l2128:
  4621                           
  4622                           ; BSR set to: 1
  4623                           ;sync.c: 86:     {;sync.c: 88:         m->flag = 1;
  4624   001D94  C122  FFD9         	movff	mutex_unlock@m,fsr2l
  4625   001D98  C123  FFDA         	movff	mutex_unlock@m+1,fsr2h
  4626   001D9C  0E01               	movlw	1
  4627   001D9E  6EDF               	movwf	indf2,c
  4628   001DA0                     i1l2130:
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;sync.c: 90:     (INTCONbits.GIE = 1);
  4632   001DA0  8EF2               	bsf	242,7,c	;volatile
  4633   001DA2                     
  4634                           ; BSR set to: 1
  4635   001DA2  0012               	return		;funcret
  4636   001DA4                     __end_of_mutex_unlock:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _mutex_lock *****************
  4640 ;; Defined at:
  4641 ;;		line 55 in file "sync.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  m               2   34[BANK1 ] PTR struct mutex
  4644 ;;		 -> buffer_mutex(7), 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4656 ;;      Params:         0       0       2       0       0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4658 ;;      Temps:          0       0       7       0       0       0       0       0       0
  4659 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4660 ;;Total ram usage:        9 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; Hardware stack levels required when called: 5
  4663 ;; This function calls:
  4664 ;;		_scheduler
  4665 ;; This function is called by:
  4666 ;;		_tarefa_controle_central
  4667 ;;		_tarefa_injecao_eletronica
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text26
  4672   000B86                     __ptext26:
  4673                           	callstack 0
  4674   000B86                     _mutex_lock:
  4675                           	callstack 19
  4676   000B86                     
  4677                           ;sync.c: 55: void mutex_lock(mutex_t *m);sync.c: 56: {;sync.c: 57:     (INTCONbits.GIE =
      +                           0);
  4678   000B86  9EF2               	bcf	242,7,c	;volatile
  4679   000B88                     
  4680                           ;sync.c: 58:     if (m->flag)
  4681   000B88  C122  FFD9         	movff	mutex_lock@m,fsr2l
  4682   000B8C  C123  FFDA         	movff	mutex_lock@m+1,fsr2h
  4683   000B90  50DF               	movf	indf2,w,c
  4684   000B92  B4D8               	btfsc	status,2,c
  4685   000B94  EFCE  F005         	goto	i1u163_21
  4686   000B98  EFD0  F005         	goto	i1u163_20
  4687   000B9C                     i1u163_21:
  4688   000B9C  EFD8  F005         	goto	i1l2666
  4689   000BA0                     i1u163_20:
  4690   000BA0                     
  4691                           ;sync.c: 59:     {;sync.c: 60:         m->flag = 0;
  4692   000BA0  C122  FFD9         	movff	mutex_lock@m,fsr2l
  4693   000BA4  C123  FFDA         	movff	mutex_lock@m+1,fsr2h
  4694   000BA8  6ADF               	clrf	indf2,c
  4695   000BAA                     
  4696                           ;sync.c: 61:         (INTCONbits.GIE = 1);
  4697   000BAA  8EF2               	bsf	242,7,c	;volatile
  4698                           
  4699                           ;sync.c: 62:     }
  4700   000BAC  EF41  F007         	goto	i1l107
  4701   000BB0                     i1l2666:
  4702                           
  4703                           ;sync.c: 64:     {;sync.c: 66:         m->s_queue[m->s_size] = r_queue.task_running;
  4704   000BB0  EE23  F0DC         	lfsr	2,_r_queue+535
  4705   000BB4  0101               	movlb	1	; () banked
  4706   000BB6  EE00 F005          	lfsr	0,5
  4707   000BBA  5122               	movf	mutex_lock@m& (0+255),w,b
  4708   000BBC  26E9               	addwf	fsr0l,f,c
  4709   000BBE  5123               	movf	(mutex_lock@m+1)& (0+255),w,b
  4710   000BC0  22EA               	addwfc	fsr0h,f,c
  4711   000BC2  50EF               	movf	indf0,w,c
  4712   000BC4  6F24               	movwf	??_mutex_lock& (0+255),b
  4713   000BC6  5124               	movf	??_mutex_lock& (0+255),w,b
  4714   000BC8  2522               	addwf	mutex_lock@m& (0+255),w,b
  4715   000BCA  6F25               	movwf	(??_mutex_lock+1)& (0+255),b
  4716   000BCC  0E00               	movlw	0
  4717   000BCE  2123               	addwfc	(mutex_lock@m+1)& (0+255),w,b
  4718   000BD0  6F26               	movwf	(??_mutex_lock+2)& (0+255),b
  4719   000BD2  0E01               	movlw	1
  4720   000BD4  2525               	addwf	(??_mutex_lock+1)& (0+255),w,b
  4721   000BD6  6EE9               	movwf	fsr0l,c
  4722   000BD8  0E00               	movlw	0
  4723   000BDA  2126               	addwfc	(??_mutex_lock+2)& (0+255),w,b
  4724   000BDC  6EEA               	movwf	fsr0h,c
  4725   000BDE  CFDF FFEF          	movff	indf2,indf0
  4726                           
  4727                           ;sync.c: 67:         m->s_size = (m->s_size + 1) % 4;
  4728   000BE2  EE20 F005          	lfsr	2,5
  4729   000BE6  5122               	movf	mutex_lock@m& (0+255),w,b
  4730   000BE8  26D9               	addwf	fsr2l,f,c
  4731   000BEA  5123               	movf	(mutex_lock@m+1)& (0+255),w,b
  4732   000BEC  22DA               	addwfc	fsr2h,f,c
  4733   000BEE  EE00 F005          	lfsr	0,5
  4734   000BF2  5122               	movf	mutex_lock@m& (0+255),w,b
  4735   000BF4  26E9               	addwf	fsr0l,f,c
  4736   000BF6  5123               	movf	(mutex_lock@m+1)& (0+255),w,b
  4737   000BF8  22EA               	addwfc	fsr0h,f,c
  4738   000BFA  50EF               	movf	indf0,w,c
  4739   000BFC  6F24               	movwf	??_mutex_lock& (0+255),b
  4740   000BFE  2924               	incf	??_mutex_lock& (0+255),w,b
  4741   000C00  0B03               	andlw	3
  4742   000C02  6EDF               	movwf	indf2,c
  4743   000C04                     
  4744                           ; BSR set to: 1
  4745   000C04  C3DC  F124         	movff	_r_queue+535,??_mutex_lock
  4746   000C08  5124               	movf	??_mutex_lock& (0+255),w,b
  4747   000C0A  0D6B               	mullw	107
  4748   000C0C  0EC5               	movlw	low _r_queue
  4749   000C0E  24F3               	addwf	243,w,c
  4750   000C10  6F25               	movwf	(??_mutex_lock+1)& (0+255),b
  4751   000C12  0E01               	movlw	high _r_queue
  4752   000C14  20F4               	addwfc	prodh,w,c
  4753   000C16  6F26               	movwf	(??_mutex_lock+2)& (0+255),b
  4754   000C18  C125  F3DE         	movff	??_mutex_lock+1,_r_queue+537
  4755   000C1C  C126  F3DF         	movff	??_mutex_lock+2,_r_queue+538
  4756   000C20                     
  4757                           ; BSR set to: 1
  4758   000C20  EE23  F0DE         	lfsr	2,_r_queue+537
  4759   000C24  EE00 F002          	lfsr	0,2
  4760   000C28  50DE               	movf	postinc2,w,c
  4761   000C2A  26E9               	addwf	fsr0l,f,c
  4762   000C2C  50DD               	movf	postdec2,w,c
  4763   000C2E  22EA               	addwfc	fsr0h,f,c
  4764   000C30  04EE               	decf	postinc0,w,c
  4765   000C32  A4D8               	btfss	status,2,c
  4766   000C34  EF1E  F006         	goto	i1u164_21
  4767   000C38  EF20  F006         	goto	i1u164_20
  4768   000C3C                     i1u164_21:
  4769   000C3C  EF8E  F006         	goto	i1l2680
  4770   000C40                     i1u164_20:
  4771   000C40                     
  4772                           ; BSR set to: 1
  4773   000C40  EE23  F0DE         	lfsr	2,_r_queue+537
  4774   000C44  EE00 F009          	lfsr	0,9
  4775   000C48  50DE               	movf	postinc2,w,c
  4776   000C4A  26E9               	addwf	fsr0l,f,c
  4777   000C4C  50DD               	movf	postdec2,w,c
  4778   000C4E  22EA               	addwfc	fsr0h,f,c
  4779   000C50  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4780   000C54  EE23  F0DE         	lfsr	2,_r_queue+537
  4781   000C58  EE00 F008          	lfsr	0,8
  4782   000C5C  50DE               	movf	postinc2,w,c
  4783   000C5E  26E9               	addwf	fsr0l,f,c
  4784   000C60  50DD               	movf	postdec2,w,c
  4785   000C62  22EA               	addwfc	fsr0h,f,c
  4786   000C64  CFD8 FFEF          	movff	status,indf0	;volatile
  4787   000C68  EE23  F0DE         	lfsr	2,_r_queue+537
  4788   000C6C  EE00 F007          	lfsr	0,7
  4789   000C70  50DE               	movf	postinc2,w,c
  4790   000C72  26E9               	addwf	fsr0l,f,c
  4791   000C74  50DD               	movf	postdec2,w,c
  4792   000C76  22EA               	addwfc	fsr0h,f,c
  4793   000C78  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4794   000C7C  EE23  F0DE         	lfsr	2,_r_queue+537
  4795   000C80  EE00 F06A          	lfsr	0,106
  4796   000C84  50DE               	movf	postinc2,w,c
  4797   000C86  26E9               	addwf	fsr0l,f,c
  4798   000C88  50DD               	movf	postdec2,w,c
  4799   000C8A  22EA               	addwfc	fsr0h,f,c
  4800   000C8C  6AEF               	clrf	indf0,c
  4801   000C8E  EE23  F0DE         	lfsr	2,_r_queue+537
  4802   000C92  EE00 F002          	lfsr	0,2
  4803   000C96  50DE               	movf	postinc2,w,c
  4804   000C98  26E9               	addwf	fsr0l,f,c
  4805   000C9A  50DD               	movf	postdec2,w,c
  4806   000C9C  22EA               	addwfc	fsr0h,f,c
  4807   000C9E  0E03               	movlw	3
  4808   000CA0  6EEF               	movwf	indf0,c
  4809   000CA2  EF86  F006         	goto	i1l2678
  4810   000CA6                     i1l2674:
  4811   000CA6  EE23  F0DE         	lfsr	2,_r_queue+537
  4812   000CAA  EE00 F06A          	lfsr	0,106
  4813   000CAE  50DE               	movf	postinc2,w,c
  4814   000CB0  26E9               	addwf	fsr0l,f,c
  4815   000CB2  50DD               	movf	postdec2,w,c
  4816   000CB4  22EA               	addwfc	fsr0h,f,c
  4817   000CB6  50EF               	movf	indf0,w,c
  4818   000CB8  0101               	movlb	1	; () banked
  4819   000CBA  6F24               	movwf	??_mutex_lock& (0+255),b
  4820   000CBC  5124               	movf	??_mutex_lock& (0+255),w,b
  4821   000CBE  0D03               	mullw	3
  4822   000CC0  CFF3 F125          	movff	prodl,??_mutex_lock+1
  4823   000CC4  CFF4 F126          	movff	prodh,??_mutex_lock+2
  4824   000CC8  EE23  F0DE         	lfsr	2,_r_queue+537
  4825   000CCC  CFDE F127          	movff	postinc2,??_mutex_lock+3
  4826   000CD0  CFDD F128          	movff	postdec2,??_mutex_lock+4
  4827   000CD4  5125               	movf	(??_mutex_lock+1)& (0+255),w,b
  4828   000CD6  2527               	addwf	(??_mutex_lock+3)& (0+255),w,b
  4829   000CD8  6F29               	movwf	(??_mutex_lock+5)& (0+255),b
  4830   000CDA  5126               	movf	(??_mutex_lock+2)& (0+255),w,b
  4831   000CDC  2128               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  4832   000CDE  6F2A               	movwf	(??_mutex_lock+6)& (0+255),b
  4833   000CE0  0E0A               	movlw	10
  4834   000CE2  2529               	addwf	(??_mutex_lock+5)& (0+255),w,b
  4835   000CE4  6ED9               	movwf	fsr2l,c
  4836   000CE6  0E00               	movlw	0
  4837   000CE8  212A               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  4838   000CEA  6EDA               	movwf	fsr2h,c
  4839   000CEC  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4840   000CF0  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4841   000CF4  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4842   000CF8                     
  4843                           ; BSR set to: 1
  4844   000CF8  EE23  F0DE         	lfsr	2,_r_queue+537
  4845   000CFC  EE00 F06A          	lfsr	0,106
  4846   000D00  50DE               	movf	postinc2,w,c
  4847   000D02  26E9               	addwf	fsr0l,f,c
  4848   000D04  50DD               	movf	postdec2,w,c
  4849   000D06  22EA               	addwfc	fsr0h,f,c
  4850   000D08  2AEF               	incf	indf0,f,c
  4851   000D0A  0006               	pop		;# 
  4852   000D0C                     i1l2678:
  4853   000D0C  50FC               	movf	252,w,c	;volatile
  4854   000D0E  A4D8               	btfss	status,2,c
  4855   000D10  EF8C  F006         	goto	i1u165_21
  4856   000D14  EF8E  F006         	goto	i1u165_20
  4857   000D18                     i1u165_21:
  4858   000D18  EF53  F006         	goto	i1l2674
  4859   000D1C                     i1u165_20:
  4860   000D1C                     i1l2680:
  4861                           
  4862                           ;sync.c: 69:         scheduler();
  4863   000D1C  EC15  F012         	call	_scheduler	;wreg free
  4864   000D20  C3DC  F124         	movff	_r_queue+535,??_mutex_lock
  4865   000D24  0101               	movlb	1	; () banked
  4866   000D26  5124               	movf	??_mutex_lock& (0+255),w,b
  4867   000D28  0D6B               	mullw	107
  4868   000D2A  0EC5               	movlw	low _r_queue
  4869   000D2C  24F3               	addwf	243,w,c
  4870   000D2E  6F25               	movwf	(??_mutex_lock+1)& (0+255),b
  4871   000D30  0E01               	movlw	high _r_queue
  4872   000D32  20F4               	addwfc	prodh,w,c
  4873   000D34  6F26               	movwf	(??_mutex_lock+2)& (0+255),b
  4874   000D36  C125  F3DE         	movff	??_mutex_lock+1,_r_queue+537
  4875   000D3A  C126  F3DF         	movff	??_mutex_lock+2,_r_queue+538
  4876   000D3E                     
  4877                           ; BSR set to: 1
  4878   000D3E  EE23  F0DE         	lfsr	2,_r_queue+537
  4879   000D42  EE00 F002          	lfsr	0,2
  4880   000D46  50DE               	movf	postinc2,w,c
  4881   000D48  26E9               	addwf	fsr0l,f,c
  4882   000D4A  50DD               	movf	postdec2,w,c
  4883   000D4C  22EA               	addwfc	fsr0h,f,c
  4884   000D4E  50EF               	movf	indf0,w,c
  4885   000D50  A4D8               	btfss	status,2,c
  4886   000D52  EFAD  F006         	goto	i1u166_21
  4887   000D56  EFAF  F006         	goto	i1u166_20
  4888   000D5A                     i1u166_21:
  4889   000D5A  EF40  F007         	goto	i1l2698
  4890   000D5E                     i1u166_20:
  4891   000D5E                     
  4892                           ; BSR set to: 1
  4893   000D5E  6AFC               	clrf	252,c	;volatile
  4894   000D60                     
  4895                           ; BSR set to: 1
  4896   000D60  EE23  F0DE         	lfsr	2,_r_queue+537
  4897   000D64  EE00 F06A          	lfsr	0,106
  4898   000D68  50DE               	movf	postinc2,w,c
  4899   000D6A  26E9               	addwf	fsr0l,f,c
  4900   000D6C  50DD               	movf	postdec2,w,c
  4901   000D6E  22EA               	addwfc	fsr0h,f,c
  4902   000D70  50EF               	movf	indf0,w,c
  4903   000D72  B4D8               	btfsc	status,2,c
  4904   000D74  EFBE  F006         	goto	i1u167_21
  4905   000D78  EFC0  F006         	goto	i1u167_20
  4906   000D7C                     i1u167_21:
  4907   000D7C  EF24  F007         	goto	i1l102
  4908   000D80                     i1u167_20:
  4909   000D80                     
  4910                           ; BSR set to: 1
  4911   000D80  EE23  F0DE         	lfsr	2,_r_queue+537
  4912   000D84  EE00 F009          	lfsr	0,9
  4913   000D88  50DE               	movf	postinc2,w,c
  4914   000D8A  26E9               	addwf	fsr0l,f,c
  4915   000D8C  50DD               	movf	postdec2,w,c
  4916   000D8E  22EA               	addwfc	fsr0h,f,c
  4917   000D90  50EF               	movf	indf0,w,c
  4918   000D92  6EE0               	movwf	224,c	;volatile
  4919   000D94  EE23  F0DE         	lfsr	2,_r_queue+537
  4920   000D98  EE00 F008          	lfsr	0,8
  4921   000D9C  50DE               	movf	postinc2,w,c
  4922   000D9E  26E9               	addwf	fsr0l,f,c
  4923   000DA0  50DD               	movf	postdec2,w,c
  4924   000DA2  22EA               	addwfc	fsr0h,f,c
  4925   000DA4  50EF               	movf	indf0,w,c
  4926   000DA6  6ED8               	movwf	216,c	;volatile
  4927   000DA8  EE23  F0DE         	lfsr	2,_r_queue+537
  4928   000DAC  EE00 F007          	lfsr	0,7
  4929   000DB0  50DE               	movf	postinc2,w,c
  4930   000DB2  26E9               	addwf	fsr0l,f,c
  4931   000DB4  50DD               	movf	postdec2,w,c
  4932   000DB6  22EA               	addwfc	fsr0h,f,c
  4933   000DB8  50EF               	movf	indf0,w,c
  4934   000DBA  6F24               	movwf	??_mutex_lock& (0+255),b
  4935   000DBC  5124               	movf	??_mutex_lock& (0+255),w,b
  4936   000DBE                     i1l103:
  4937                           
  4938                           ; BSR set to: 1
  4939   000DBE  0005               	push		;# 
  4940   000DC0  EE23  F0DE         	lfsr	2,_r_queue+537
  4941   000DC4  EE00 F06A          	lfsr	0,106
  4942   000DC8  50DE               	movf	postinc2,w,c
  4943   000DCA  26E9               	addwf	fsr0l,f,c
  4944   000DCC  50DD               	movf	postdec2,w,c
  4945   000DCE  22EA               	addwfc	fsr0h,f,c
  4946   000DD0  06EF               	decf	indf0,f,c
  4947   000DD2  EE23  F0DE         	lfsr	2,_r_queue+537
  4948   000DD6  EE00 F06A          	lfsr	0,106
  4949   000DDA  50DE               	movf	postinc2,w,c
  4950   000DDC  26E9               	addwf	fsr0l,f,c
  4951   000DDE  50DD               	movf	postdec2,w,c
  4952   000DE0  22EA               	addwfc	fsr0h,f,c
  4953   000DE2  50EF               	movf	indf0,w,c
  4954   000DE4  0101               	movlb	1	; () banked
  4955   000DE6  6F24               	movwf	??_mutex_lock& (0+255),b
  4956   000DE8  5124               	movf	??_mutex_lock& (0+255),w,b
  4957   000DEA  0D03               	mullw	3
  4958   000DEC  CFF3 F125          	movff	prodl,??_mutex_lock+1
  4959   000DF0  CFF4 F126          	movff	prodh,??_mutex_lock+2
  4960   000DF4  EE23  F0DE         	lfsr	2,_r_queue+537
  4961   000DF8  CFDE F127          	movff	postinc2,??_mutex_lock+3
  4962   000DFC  CFDD F128          	movff	postdec2,??_mutex_lock+4
  4963   000E00  5125               	movf	(??_mutex_lock+1)& (0+255),w,b
  4964   000E02  2527               	addwf	(??_mutex_lock+3)& (0+255),w,b
  4965   000E04  6F29               	movwf	(??_mutex_lock+5)& (0+255),b
  4966   000E06  5126               	movf	(??_mutex_lock+2)& (0+255),w,b
  4967   000E08  2128               	addwfc	(??_mutex_lock+4)& (0+255),w,b
  4968   000E0A  6F2A               	movwf	(??_mutex_lock+6)& (0+255),b
  4969   000E0C  0E0A               	movlw	10
  4970   000E0E  2529               	addwf	(??_mutex_lock+5)& (0+255),w,b
  4971   000E10  6ED9               	movwf	fsr2l,c
  4972   000E12  0E00               	movlw	0
  4973   000E14  212A               	addwfc	(??_mutex_lock+6)& (0+255),w,b
  4974   000E16  6EDA               	movwf	fsr2h,c
  4975   000E18  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4976   000E1C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4977   000E20  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4978   000E24                     
  4979                           ; BSR set to: 1
  4980   000E24  EE23  F0DE         	lfsr	2,_r_queue+537
  4981   000E28  EE00 F06A          	lfsr	0,106
  4982   000E2C  50DE               	movf	postinc2,w,c
  4983   000E2E  26E9               	addwf	fsr0l,f,c
  4984   000E30  50DD               	movf	postdec2,w,c
  4985   000E32  22EA               	addwfc	fsr0h,f,c
  4986   000E34  50EF               	movf	indf0,w,c
  4987   000E36  A4D8               	btfss	status,2,c
  4988   000E38  EF20  F007         	goto	i1u168_21
  4989   000E3C  EF22  F007         	goto	i1u168_20
  4990   000E40                     i1u168_21:
  4991   000E40  EFDF  F006         	goto	i1l103
  4992   000E44                     i1u168_20:
  4993   000E44  EF36  F007         	goto	i1l105
  4994   000E48                     i1l102:
  4995                           
  4996                           ; BSR set to: 1
  4997   000E48  0005               	push		;# 
  4998   000E4A  EE23  F0DE         	lfsr	2,_r_queue+537
  4999   000E4E  EE00 F003          	lfsr	0,3
  5000   000E52  50DE               	movf	postinc2,w,c
  5001   000E54  26E9               	addwf	fsr0l,f,c
  5002   000E56  50DD               	movf	postdec2,w,c
  5003   000E58  22EA               	addwfc	fsr0h,f,c
  5004   000E5A  CFEE F124          	movff	postinc0,??_mutex_lock
  5005   000E5E  CFED F125          	movff	postdec0,??_mutex_lock+1
  5006   000E62  C124  FFFD         	movff	??_mutex_lock,tosl	;volatile
  5007   000E66  C125  FFFE         	movff	??_mutex_lock+1,tosh	;volatile
  5008   000E6A  6AFF               	clrf	255,c	;volatile
  5009   000E6C                     i1l105:
  5010   000E6C  EE23  F0DE         	lfsr	2,_r_queue+537
  5011   000E70  EE00 F002          	lfsr	0,2
  5012   000E74  50DE               	movf	postinc2,w,c
  5013   000E76  26E9               	addwf	fsr0l,f,c
  5014   000E78  50DD               	movf	postdec2,w,c
  5015   000E7A  22EA               	addwfc	fsr0h,f,c
  5016   000E7C  0E01               	movlw	1
  5017   000E7E  6EEF               	movwf	indf0,c
  5018   000E80                     i1l2698:
  5019                           
  5020                           ;sync.c: 71:         (INTCONbits.GIE = 1);
  5021   000E80  8EF2               	bsf	242,7,c	;volatile
  5022   000E82                     i1l107:
  5023   000E82  0012               	return		;funcret
  5024   000E84                     __end_of_mutex_lock:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function ___awmod *****************
  5028 ;; Defined at:
  5029 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  dividend        2   18[BANK1 ] int 
  5032 ;;  divisor         2   20[BANK1 ] int 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  sign            1   23[BANK1 ] unsigned char 
  5035 ;;  counter         1   22[BANK1 ] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  2   18[BANK1 ] int 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5045 ;;      Params:         0       0       4       0       0       0       0       0       0
  5046 ;;      Locals:         0       0       2       0       0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5048 ;;      Totals:         0       0       6       0       0       0       0       0       0
  5049 ;;Total ram usage:        6 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; Hardware stack levels required when called: 3
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_tarefa_controle_central
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text27
  5060   001C52                     __ptext27:
  5061                           	callstack 0
  5062   001C52                     ___awmod:
  5063                           	callstack 21
  5064   001C52  0101               	movlb	1	; () banked
  5065   001C54  6B17               	clrf	___awmod@sign& (0+255),b
  5066   001C56                     
  5067                           ; BSR set to: 1
  5068   001C56  BF13               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  5069   001C58  EF32  F00E         	goto	i1u122_20
  5070   001C5C  EF30  F00E         	goto	i1u122_21
  5071   001C60                     i1u122_21:
  5072   001C60  EF38  F00E         	goto	i1l2296
  5073   001C64                     i1u122_20:
  5074   001C64                     
  5075                           ; BSR set to: 1
  5076   001C64  6D12               	negf	___awmod@dividend& (0+255),b
  5077   001C66  1F13               	comf	(___awmod@dividend+1)& (0+255),f,b
  5078   001C68  B0D8               	btfsc	status,0,c
  5079   001C6A  2B13               	incf	(___awmod@dividend+1)& (0+255),f,b
  5080   001C6C                     
  5081                           ; BSR set to: 1
  5082   001C6C  0E01               	movlw	1
  5083   001C6E  6F17               	movwf	___awmod@sign& (0+255),b
  5084   001C70                     i1l2296:
  5085                           
  5086                           ; BSR set to: 1
  5087   001C70  BF15               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  5088   001C72  EF3F  F00E         	goto	i1u123_20
  5089   001C76  EF3D  F00E         	goto	i1u123_21
  5090   001C7A                     i1u123_21:
  5091   001C7A  EF43  F00E         	goto	i1l2300
  5092   001C7E                     i1u123_20:
  5093   001C7E                     
  5094                           ; BSR set to: 1
  5095   001C7E  6D14               	negf	___awmod@divisor& (0+255),b
  5096   001C80  1F15               	comf	(___awmod@divisor+1)& (0+255),f,b
  5097   001C82  B0D8               	btfsc	status,0,c
  5098   001C84  2B15               	incf	(___awmod@divisor+1)& (0+255),f,b
  5099   001C86                     i1l2300:
  5100                           
  5101                           ; BSR set to: 1
  5102   001C86  5114               	movf	___awmod@divisor& (0+255),w,b
  5103   001C88  1115               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5104   001C8A  B4D8               	btfsc	status,2,c
  5105   001C8C  EF4A  F00E         	goto	i1u124_21
  5106   001C90  EF4C  F00E         	goto	i1u124_20
  5107   001C94                     i1u124_21:
  5108   001C94  EF70  F00E         	goto	i1l2316
  5109   001C98                     i1u124_20:
  5110   001C98                     
  5111                           ; BSR set to: 1
  5112   001C98  0E01               	movlw	1
  5113   001C9A  6F16               	movwf	___awmod@counter& (0+255),b
  5114   001C9C  EF54  F00E         	goto	i1l2306
  5115   001CA0                     i1l2304:
  5116                           
  5117                           ; BSR set to: 1
  5118   001CA0  90D8               	bcf	status,0,c
  5119   001CA2  3714               	rlcf	___awmod@divisor& (0+255),f,b
  5120   001CA4  3715               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5121   001CA6  2B16               	incf	___awmod@counter& (0+255),f,b
  5122   001CA8                     i1l2306:
  5123                           
  5124                           ; BSR set to: 1
  5125   001CA8  AF15               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5126   001CAA  EF59  F00E         	goto	i1u125_21
  5127   001CAE  EF5B  F00E         	goto	i1u125_20
  5128   001CB2                     i1u125_21:
  5129   001CB2  EF50  F00E         	goto	i1l2304
  5130   001CB6                     i1u125_20:
  5131   001CB6                     i1l2308:
  5132                           
  5133                           ; BSR set to: 1
  5134   001CB6  5114               	movf	___awmod@divisor& (0+255),w,b
  5135   001CB8  5D12               	subwf	___awmod@dividend& (0+255),w,b
  5136   001CBA  5115               	movf	(___awmod@divisor+1)& (0+255),w,b
  5137   001CBC  5913               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5138   001CBE  A0D8               	btfss	status,0,c
  5139   001CC0  EF64  F00E         	goto	i1u126_21
  5140   001CC4  EF66  F00E         	goto	i1u126_20
  5141   001CC8                     i1u126_21:
  5142   001CC8  EF6A  F00E         	goto	i1l2312
  5143   001CCC                     i1u126_20:
  5144   001CCC                     
  5145                           ; BSR set to: 1
  5146   001CCC  5114               	movf	___awmod@divisor& (0+255),w,b
  5147   001CCE  5F12               	subwf	___awmod@dividend& (0+255),f,b
  5148   001CD0  5115               	movf	(___awmod@divisor+1)& (0+255),w,b
  5149   001CD2  5B13               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5150   001CD4                     i1l2312:
  5151                           
  5152                           ; BSR set to: 1
  5153   001CD4  90D8               	bcf	status,0,c
  5154   001CD6  3315               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5155   001CD8  3314               	rrcf	___awmod@divisor& (0+255),f,b
  5156   001CDA                     
  5157                           ; BSR set to: 1
  5158   001CDA  2F16               	decfsz	___awmod@counter& (0+255),f,b
  5159   001CDC  EF5B  F00E         	goto	i1l2308
  5160   001CE0                     i1l2316:
  5161                           
  5162                           ; BSR set to: 1
  5163   001CE0  5117               	movf	___awmod@sign& (0+255),w,b
  5164   001CE2  B4D8               	btfsc	status,2,c
  5165   001CE4  EF76  F00E         	goto	i1u127_21
  5166   001CE8  EF78  F00E         	goto	i1u127_20
  5167   001CEC                     i1u127_21:
  5168   001CEC  EF7C  F00E         	goto	i1l2320
  5169   001CF0                     i1u127_20:
  5170   001CF0                     
  5171                           ; BSR set to: 1
  5172   001CF0  6D12               	negf	___awmod@dividend& (0+255),b
  5173   001CF2  1F13               	comf	(___awmod@dividend+1)& (0+255),f,b
  5174   001CF4  B0D8               	btfsc	status,0,c
  5175   001CF6  2B13               	incf	(___awmod@dividend+1)& (0+255),f,b
  5176   001CF8                     i1l2320:
  5177                           
  5178                           ; BSR set to: 1
  5179   001CF8  C112  F112         	movff	___awmod@dividend,?___awmod
  5180   001CFC  C113  F113         	movff	___awmod@dividend+1,?___awmod+1
  5181   001D00                     
  5182                           ; BSR set to: 1
  5183   001D00  0012               	return		;funcret
  5184   001D02                     __end_of___awmod:
  5185                           	callstack 0
  5186                           
  5187 ;; *************** function _tarefa_injecao_eletronica *****************
  5188 ;; Defined at:
  5189 ;;		line 45 in file "user_app.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  duty            1   43[BANK1 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0
  5204 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5206 ;;      Totals:         0       0       1       0       0       0       0       0       0
  5207 ;;Total ram usage:        1 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 6
  5210 ;; This function calls:
  5211 ;;		_mutex_lock
  5212 ;;		_mutex_unlock
  5213 ;;		_pwm_set
  5214 ;;		_yield
  5215 ;; This function is called by:
  5216 ;;		_main
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text28
  5221   0021B6                     __ptext28:
  5222                           	callstack 0
  5223   0021B6                     _tarefa_injecao_eletronica:
  5224                           	callstack 19
  5225   0021B6                     l287:
  5226                           
  5227                           ;user_app.c: 48:     {;user_app.c: 49:         LATDbits.LATD0 = 1;
  5228   0021B6  808C               	bsf	140,0,c	;volatile
  5229   0021B8                     
  5230                           ;user_app.c: 50:         static uint8_t last_duty = 255;;user_app.c: 51:         uint8_t
      +                           duty;;user_app.c: 53:         mutex_lock(&buffer_mutex);
  5231   0021B8  0EBD               	movlw	low _buffer_mutex
  5232   0021BA  0101               	movlb	1	; () banked
  5233   0021BC  6F22               	movwf	mutex_lock@m& (0+255),b
  5234   0021BE  0E01               	movlw	high _buffer_mutex
  5235   0021C0  6F23               	movwf	(mutex_lock@m+1)& (0+255),b
  5236   0021C2  ECC3  F005         	call	_mutex_lock	;wreg free
  5237   0021C6                     
  5238                           ;user_app.c: 54:         duty = accel_data;
  5239   0021C6  C16C  F12B         	movff	_accel_data,tarefa_injecao_eletronica@duty	;volatile
  5240   0021CA                     
  5241                           ;user_app.c: 55:         mutex_unlock(&buffer_mutex);
  5242   0021CA  0EBD               	movlw	low _buffer_mutex
  5243   0021CC  0101               	movlb	1	; () banked
  5244   0021CE  6F22               	movwf	mutex_unlock@m& (0+255),b
  5245   0021D0  0E01               	movlw	high _buffer_mutex
  5246   0021D2  6F23               	movwf	(mutex_unlock@m+1)& (0+255),b
  5247   0021D4  EC81  F00E         	call	_mutex_unlock	;wreg free
  5248   0021D8                     
  5249                           ;user_app.c: 57:         if (duty != last_duty)
  5250   0021D8  0101               	movlb	1	; () banked
  5251   0021DA  51C4               	movf	tarefa_injecao_eletronica@last_duty& (0+255),w,b
  5252   0021DC  192B               	xorwf	tarefa_injecao_eletronica@duty& (0+255),w,b
  5253   0021DE  B4D8               	btfsc	status,2,c
  5254   0021E0  EFF4  F010         	goto	u185_21
  5255   0021E4  EFF6  F010         	goto	u185_20
  5256   0021E8                     u185_21:
  5257   0021E8  EFFB  F010         	goto	l2870
  5258   0021EC                     u185_20:
  5259   0021EC                     
  5260                           ; BSR set to: 1
  5261                           ;user_app.c: 58:         {;user_app.c: 59:             pwm_set(duty);
  5262   0021EC  512B               	movf	tarefa_injecao_eletronica@duty& (0+255),w,b
  5263   0021EE  EC94  F00F         	call	_pwm_set
  5264   0021F2                     
  5265                           ;user_app.c: 60:             last_duty = duty;
  5266   0021F2  C12B  F1C4         	movff	tarefa_injecao_eletronica@duty,tarefa_injecao_eletronica@last_duty
  5267   0021F6                     l2870:
  5268                           
  5269                           ;user_app.c: 63:         yield();
  5270   0021F6  EC4A  F00B         	call	_yield	;wreg free
  5271   0021FA                     
  5272                           ;user_app.c: 64:         LATDbits.LATD0 = 0;
  5273   0021FA  908C               	bcf	140,0,c	;volatile
  5274   0021FC  EFDB  F010         	goto	l287
  5275   002200  0012               	return		;funcret
  5276   002202                     __end_of_tarefa_injecao_eletronica:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _yield *****************
  5280 ;; Defined at:
  5281 ;;		line 41 in file "kernel.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5297 ;;      Temps:          0       0       7       0       0       0       0       0       0
  5298 ;;      Totals:         0       0       7       0       0       0       0       0       0
  5299 ;;Total ram usage:        7 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 5
  5302 ;; This function calls:
  5303 ;;		_scheduler
  5304 ;; This function is called by:
  5305 ;;		_tarefa_injecao_eletronica
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text29
  5310   001694                     __ptext29:
  5311                           	callstack 0
  5312   001694                     _yield:
  5313                           	callstack 19
  5314   001694                     
  5315                           ;kernel.c: 43:     (INTCONbits.GIE = 0);
  5316   001694  9EF2               	bcf	242,7,c	;volatile
  5317   001696  C3DC  F122         	movff	_r_queue+535,??_yield
  5318   00169A  0101               	movlb	1	; () banked
  5319   00169C  5122               	movf	??_yield& (0+255),w,b
  5320   00169E  0D6B               	mullw	107
  5321   0016A0  0EC5               	movlw	low _r_queue
  5322   0016A2  24F3               	addwf	243,w,c
  5323   0016A4  6F23               	movwf	(??_yield+1)& (0+255),b
  5324   0016A6  0E01               	movlw	high _r_queue
  5325   0016A8  20F4               	addwfc	prodh,w,c
  5326   0016AA  6F24               	movwf	(??_yield+2)& (0+255),b
  5327   0016AC  C123  F3DE         	movff	??_yield+1,_r_queue+537
  5328   0016B0  C124  F3DF         	movff	??_yield+2,_r_queue+538
  5329   0016B4                     
  5330                           ; BSR set to: 1
  5331   0016B4  EE23  F0DE         	lfsr	2,_r_queue+537
  5332   0016B8  EE00 F002          	lfsr	0,2
  5333   0016BC  50DE               	movf	postinc2,w,c
  5334   0016BE  26E9               	addwf	fsr0l,f,c
  5335   0016C0  50DD               	movf	postdec2,w,c
  5336   0016C2  22EA               	addwfc	fsr0h,f,c
  5337   0016C4  04EE               	decf	postinc0,w,c
  5338   0016C6  A4D8               	btfss	status,2,c
  5339   0016C8  EF68  F00B         	goto	i1u170_21
  5340   0016CC  EF6A  F00B         	goto	i1u170_20
  5341   0016D0                     i1u170_21:
  5342   0016D0  EFD7  F00B         	goto	i1l2744
  5343   0016D4                     i1u170_20:
  5344   0016D4                     
  5345                           ; BSR set to: 1
  5346   0016D4  EE23  F0DE         	lfsr	2,_r_queue+537
  5347   0016D8  EE00 F009          	lfsr	0,9
  5348   0016DC  50DE               	movf	postinc2,w,c
  5349   0016DE  26E9               	addwf	fsr0l,f,c
  5350   0016E0  50DD               	movf	postdec2,w,c
  5351   0016E2  22EA               	addwfc	fsr0h,f,c
  5352   0016E4  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5353   0016E8  EE23  F0DE         	lfsr	2,_r_queue+537
  5354   0016EC  EE00 F008          	lfsr	0,8
  5355   0016F0  50DE               	movf	postinc2,w,c
  5356   0016F2  26E9               	addwf	fsr0l,f,c
  5357   0016F4  50DD               	movf	postdec2,w,c
  5358   0016F6  22EA               	addwfc	fsr0h,f,c
  5359   0016F8  CFD8 FFEF          	movff	status,indf0	;volatile
  5360   0016FC  EE23  F0DE         	lfsr	2,_r_queue+537
  5361   001700  EE00 F007          	lfsr	0,7
  5362   001704  50DE               	movf	postinc2,w,c
  5363   001706  26E9               	addwf	fsr0l,f,c
  5364   001708  50DD               	movf	postdec2,w,c
  5365   00170A  22EA               	addwfc	fsr0h,f,c
  5366   00170C  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5367   001710  EE23  F0DE         	lfsr	2,_r_queue+537
  5368   001714  EE00 F06A          	lfsr	0,106
  5369   001718  50DE               	movf	postinc2,w,c
  5370   00171A  26E9               	addwf	fsr0l,f,c
  5371   00171C  50DD               	movf	postdec2,w,c
  5372   00171E  22EA               	addwfc	fsr0h,f,c
  5373   001720  6AEF               	clrf	indf0,c
  5374   001722  EE23  F0DE         	lfsr	2,_r_queue+537
  5375   001726  EE00 F002          	lfsr	0,2
  5376   00172A  50DE               	movf	postinc2,w,c
  5377   00172C  26E9               	addwf	fsr0l,f,c
  5378   00172E  50DD               	movf	postdec2,w,c
  5379   001730  22EA               	addwfc	fsr0h,f,c
  5380   001732  6AEF               	clrf	indf0,c
  5381   001734  EFCF  F00B         	goto	i1l2742
  5382   001738                     i1l2738:
  5383   001738  EE23  F0DE         	lfsr	2,_r_queue+537
  5384   00173C  EE00 F06A          	lfsr	0,106
  5385   001740  50DE               	movf	postinc2,w,c
  5386   001742  26E9               	addwf	fsr0l,f,c
  5387   001744  50DD               	movf	postdec2,w,c
  5388   001746  22EA               	addwfc	fsr0h,f,c
  5389   001748  50EF               	movf	indf0,w,c
  5390   00174A  0101               	movlb	1	; () banked
  5391   00174C  6F22               	movwf	??_yield& (0+255),b
  5392   00174E  5122               	movf	??_yield& (0+255),w,b
  5393   001750  0D03               	mullw	3
  5394   001752  CFF3 F123          	movff	prodl,??_yield+1
  5395   001756  CFF4 F124          	movff	prodh,??_yield+2
  5396   00175A  EE23  F0DE         	lfsr	2,_r_queue+537
  5397   00175E  CFDE F125          	movff	postinc2,??_yield+3
  5398   001762  CFDD F126          	movff	postdec2,??_yield+4
  5399   001766  5123               	movf	(??_yield+1)& (0+255),w,b
  5400   001768  2525               	addwf	(??_yield+3)& (0+255),w,b
  5401   00176A  6F27               	movwf	(??_yield+5)& (0+255),b
  5402   00176C  5124               	movf	(??_yield+2)& (0+255),w,b
  5403   00176E  2126               	addwfc	(??_yield+4)& (0+255),w,b
  5404   001770  6F28               	movwf	(??_yield+6)& (0+255),b
  5405   001772  0E0A               	movlw	10
  5406   001774  2527               	addwf	(??_yield+5)& (0+255),w,b
  5407   001776  6ED9               	movwf	fsr2l,c
  5408   001778  0E00               	movlw	0
  5409   00177A  2128               	addwfc	(??_yield+6)& (0+255),w,b
  5410   00177C  6EDA               	movwf	fsr2h,c
  5411   00177E  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5412   001782  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5413   001786  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5414   00178A                     
  5415                           ; BSR set to: 1
  5416   00178A  EE23  F0DE         	lfsr	2,_r_queue+537
  5417   00178E  EE00 F06A          	lfsr	0,106
  5418   001792  50DE               	movf	postinc2,w,c
  5419   001794  26E9               	addwf	fsr0l,f,c
  5420   001796  50DD               	movf	postdec2,w,c
  5421   001798  22EA               	addwfc	fsr0h,f,c
  5422   00179A  2AEF               	incf	indf0,f,c
  5423   00179C  0006               	pop		;# 
  5424   00179E                     i1l2742:
  5425   00179E  50FC               	movf	252,w,c	;volatile
  5426   0017A0  A4D8               	btfss	status,2,c
  5427   0017A2  EFD5  F00B         	goto	i1u171_21
  5428   0017A6  EFD7  F00B         	goto	i1u171_20
  5429   0017AA                     i1u171_21:
  5430   0017AA  EF9C  F00B         	goto	i1l2738
  5431   0017AE                     i1u171_20:
  5432   0017AE                     i1l2744:
  5433                           
  5434                           ;kernel.c: 45:     scheduler();
  5435   0017AE  EC15  F012         	call	_scheduler	;wreg free
  5436   0017B2  C3DC  F122         	movff	_r_queue+535,??_yield
  5437   0017B6  0101               	movlb	1	; () banked
  5438   0017B8  5122               	movf	??_yield& (0+255),w,b
  5439   0017BA  0D6B               	mullw	107
  5440   0017BC  0EC5               	movlw	low _r_queue
  5441   0017BE  24F3               	addwf	243,w,c
  5442   0017C0  6F23               	movwf	(??_yield+1)& (0+255),b
  5443   0017C2  0E01               	movlw	high _r_queue
  5444   0017C4  20F4               	addwfc	prodh,w,c
  5445   0017C6  6F24               	movwf	(??_yield+2)& (0+255),b
  5446   0017C8  C123  F3DE         	movff	??_yield+1,_r_queue+537
  5447   0017CC  C124  F3DF         	movff	??_yield+2,_r_queue+538
  5448   0017D0                     
  5449                           ; BSR set to: 1
  5450   0017D0  EE23  F0DE         	lfsr	2,_r_queue+537
  5451   0017D4  EE00 F002          	lfsr	0,2
  5452   0017D8  50DE               	movf	postinc2,w,c
  5453   0017DA  26E9               	addwf	fsr0l,f,c
  5454   0017DC  50DD               	movf	postdec2,w,c
  5455   0017DE  22EA               	addwfc	fsr0h,f,c
  5456   0017E0  50EF               	movf	indf0,w,c
  5457   0017E2  A4D8               	btfss	status,2,c
  5458   0017E4  EFF6  F00B         	goto	i1u172_21
  5459   0017E8  EFF8  F00B         	goto	i1u172_20
  5460   0017EC                     i1u172_21:
  5461   0017EC  EF89  F00C         	goto	i1l2762
  5462   0017F0                     i1u172_20:
  5463   0017F0                     
  5464                           ; BSR set to: 1
  5465   0017F0  6AFC               	clrf	252,c	;volatile
  5466   0017F2                     
  5467                           ; BSR set to: 1
  5468   0017F2  EE23  F0DE         	lfsr	2,_r_queue+537
  5469   0017F6  EE00 F06A          	lfsr	0,106
  5470   0017FA  50DE               	movf	postinc2,w,c
  5471   0017FC  26E9               	addwf	fsr0l,f,c
  5472   0017FE  50DD               	movf	postdec2,w,c
  5473   001800  22EA               	addwfc	fsr0h,f,c
  5474   001802  50EF               	movf	indf0,w,c
  5475   001804  B4D8               	btfsc	status,2,c
  5476   001806  EF07  F00C         	goto	i1u173_21
  5477   00180A  EF09  F00C         	goto	i1u173_20
  5478   00180E                     i1u173_21:
  5479   00180E  EF6D  F00C         	goto	i1l363
  5480   001812                     i1u173_20:
  5481   001812                     
  5482                           ; BSR set to: 1
  5483   001812  EE23  F0DE         	lfsr	2,_r_queue+537
  5484   001816  EE00 F009          	lfsr	0,9
  5485   00181A  50DE               	movf	postinc2,w,c
  5486   00181C  26E9               	addwf	fsr0l,f,c
  5487   00181E  50DD               	movf	postdec2,w,c
  5488   001820  22EA               	addwfc	fsr0h,f,c
  5489   001822  50EF               	movf	indf0,w,c
  5490   001824  6EE0               	movwf	224,c	;volatile
  5491   001826  EE23  F0DE         	lfsr	2,_r_queue+537
  5492   00182A  EE00 F008          	lfsr	0,8
  5493   00182E  50DE               	movf	postinc2,w,c
  5494   001830  26E9               	addwf	fsr0l,f,c
  5495   001832  50DD               	movf	postdec2,w,c
  5496   001834  22EA               	addwfc	fsr0h,f,c
  5497   001836  50EF               	movf	indf0,w,c
  5498   001838  6ED8               	movwf	216,c	;volatile
  5499   00183A  EE23  F0DE         	lfsr	2,_r_queue+537
  5500   00183E  EE00 F007          	lfsr	0,7
  5501   001842  50DE               	movf	postinc2,w,c
  5502   001844  26E9               	addwf	fsr0l,f,c
  5503   001846  50DD               	movf	postdec2,w,c
  5504   001848  22EA               	addwfc	fsr0h,f,c
  5505   00184A  50EF               	movf	indf0,w,c
  5506   00184C  6F22               	movwf	??_yield& (0+255),b
  5507   00184E  5122               	movf	??_yield& (0+255),w,b
  5508   001850                     i1l364:
  5509                           
  5510                           ; BSR set to: 1
  5511   001850  0005               	push		;# 
  5512   001852  EE23  F0DE         	lfsr	2,_r_queue+537
  5513   001856  EE00 F06A          	lfsr	0,106
  5514   00185A  50DE               	movf	postinc2,w,c
  5515   00185C  26E9               	addwf	fsr0l,f,c
  5516   00185E  50DD               	movf	postdec2,w,c
  5517   001860  22EA               	addwfc	fsr0h,f,c
  5518   001862  06EF               	decf	indf0,f,c
  5519   001864  EE23  F0DE         	lfsr	2,_r_queue+537
  5520   001868  EE00 F06A          	lfsr	0,106
  5521   00186C  50DE               	movf	postinc2,w,c
  5522   00186E  26E9               	addwf	fsr0l,f,c
  5523   001870  50DD               	movf	postdec2,w,c
  5524   001872  22EA               	addwfc	fsr0h,f,c
  5525   001874  50EF               	movf	indf0,w,c
  5526   001876  0101               	movlb	1	; () banked
  5527   001878  6F22               	movwf	??_yield& (0+255),b
  5528   00187A  5122               	movf	??_yield& (0+255),w,b
  5529   00187C  0D03               	mullw	3
  5530   00187E  CFF3 F123          	movff	prodl,??_yield+1
  5531   001882  CFF4 F124          	movff	prodh,??_yield+2
  5532   001886  EE23  F0DE         	lfsr	2,_r_queue+537
  5533   00188A  CFDE F125          	movff	postinc2,??_yield+3
  5534   00188E  CFDD F126          	movff	postdec2,??_yield+4
  5535   001892  5123               	movf	(??_yield+1)& (0+255),w,b
  5536   001894  2525               	addwf	(??_yield+3)& (0+255),w,b
  5537   001896  6F27               	movwf	(??_yield+5)& (0+255),b
  5538   001898  5124               	movf	(??_yield+2)& (0+255),w,b
  5539   00189A  2126               	addwfc	(??_yield+4)& (0+255),w,b
  5540   00189C  6F28               	movwf	(??_yield+6)& (0+255),b
  5541   00189E  0E0A               	movlw	10
  5542   0018A0  2527               	addwf	(??_yield+5)& (0+255),w,b
  5543   0018A2  6ED9               	movwf	fsr2l,c
  5544   0018A4  0E00               	movlw	0
  5545   0018A6  2128               	addwfc	(??_yield+6)& (0+255),w,b
  5546   0018A8  6EDA               	movwf	fsr2h,c
  5547   0018AA  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5548   0018AE  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5549   0018B2  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5550   0018B6                     
  5551                           ; BSR set to: 1
  5552   0018B6  EE23  F0DE         	lfsr	2,_r_queue+537
  5553   0018BA  EE00 F06A          	lfsr	0,106
  5554   0018BE  50DE               	movf	postinc2,w,c
  5555   0018C0  26E9               	addwf	fsr0l,f,c
  5556   0018C2  50DD               	movf	postdec2,w,c
  5557   0018C4  22EA               	addwfc	fsr0h,f,c
  5558   0018C6  50EF               	movf	indf0,w,c
  5559   0018C8  A4D8               	btfss	status,2,c
  5560   0018CA  EF69  F00C         	goto	i1u174_21
  5561   0018CE  EF6B  F00C         	goto	i1u174_20
  5562   0018D2                     i1u174_21:
  5563   0018D2  EF28  F00C         	goto	i1l364
  5564   0018D6                     i1u174_20:
  5565   0018D6  EF7F  F00C         	goto	i1l366
  5566   0018DA                     i1l363:
  5567                           
  5568                           ; BSR set to: 1
  5569   0018DA  0005               	push		;# 
  5570   0018DC  EE23  F0DE         	lfsr	2,_r_queue+537
  5571   0018E0  EE00 F003          	lfsr	0,3
  5572   0018E4  50DE               	movf	postinc2,w,c
  5573   0018E6  26E9               	addwf	fsr0l,f,c
  5574   0018E8  50DD               	movf	postdec2,w,c
  5575   0018EA  22EA               	addwfc	fsr0h,f,c
  5576   0018EC  CFEE F122          	movff	postinc0,??_yield
  5577   0018F0  CFED F123          	movff	postdec0,??_yield+1
  5578   0018F4  C122  FFFD         	movff	??_yield,tosl	;volatile
  5579   0018F8  C123  FFFE         	movff	??_yield+1,tosh	;volatile
  5580   0018FC  6AFF               	clrf	255,c	;volatile
  5581   0018FE                     i1l366:
  5582   0018FE  EE23  F0DE         	lfsr	2,_r_queue+537
  5583   001902  EE00 F002          	lfsr	0,2
  5584   001906  50DE               	movf	postinc2,w,c
  5585   001908  26E9               	addwf	fsr0l,f,c
  5586   00190A  50DD               	movf	postdec2,w,c
  5587   00190C  22EA               	addwfc	fsr0h,f,c
  5588   00190E  0E01               	movlw	1
  5589   001910  6EEF               	movwf	indf0,c
  5590   001912                     i1l2762:
  5591                           
  5592                           ;kernel.c: 47:     (INTCONbits.GIE = 1);
  5593   001912  8EF2               	bsf	242,7,c	;volatile
  5594   001914  0012               	return		;funcret
  5595   001916                     __end_of_yield:
  5596                           	callstack 0
  5597                           
  5598 ;; *************** function _pwm_set *****************
  5599 ;; Defined at:
  5600 ;;		line 35 in file "io.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  duty_cycle      1    wreg     unsigned char 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  duty_cycle      1   36[BANK1 ] unsigned char 
  5605 ;;  duty            2   37[BANK1 ] unsigned short 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0
  5616 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5617 ;;      Temps:          0       0       2       0       0       0       0       0       0
  5618 ;;      Totals:         0       0       5       0       0       0       0       0       0
  5619 ;;Total ram usage:        5 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; Hardware stack levels required when called: 3
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_tarefa_injecao_eletronica
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text30
  5630   001F28                     __ptext30:
  5631                           	callstack 0
  5632   001F28                     _pwm_set:
  5633                           	callstack 21
  5634                           
  5635                           ;incstack = 0
  5636                           ;pwm_set@duty_cycle stored from wreg
  5637   001F28  0101               	movlb	1	; () banked
  5638   001F2A  6F24               	movwf	pwm_set@duty_cycle& (0+255),b
  5639   001F2C                     
  5640                           ;io.c: 35: void pwm_set(uint8_t duty_cycle);io.c: 36: {;io.c: 37:     uint16_t duty = du
      +                          ty_cycle;
  5641   001F2C  C124  F125         	movff	pwm_set@duty_cycle,pwm_set@duty
  5642   001F30  0101               	movlb	1	; () banked
  5643   001F32  6B26               	clrf	(pwm_set@duty+1)& (0+255),b
  5644   001F34                     
  5645                           ; BSR set to: 1
  5646                           ;io.c: 38:     duty = duty << 2;
  5647   001F34  C125  F122         	movff	pwm_set@duty,??_pwm_set
  5648   001F38  C126  F123         	movff	pwm_set@duty+1,??_pwm_set+1
  5649   001F3C  90D8               	bcf	status,0,c
  5650   001F3E  3722               	rlcf	??_pwm_set& (0+255),f,b
  5651   001F40  3723               	rlcf	(??_pwm_set+1)& (0+255),f,b
  5652   001F42  90D8               	bcf	status,0,c
  5653   001F44  3722               	rlcf	??_pwm_set& (0+255),f,b
  5654   001F46  3723               	rlcf	(??_pwm_set+1)& (0+255),f,b
  5655   001F48  C122  F125         	movff	??_pwm_set,pwm_set@duty
  5656   001F4C  C123  F126         	movff	??_pwm_set+1,pwm_set@duty+1
  5657                           
  5658                           ;io.c: 40:     if (duty > 1023) duty = 1023;
  5659   001F50  0E04               	movlw	4
  5660   001F52  5D26               	subwf	(pwm_set@duty+1)& (0+255),w,b
  5661   001F54  A0D8               	btfss	status,0,c
  5662   001F56  EFAF  F00F         	goto	i1u103_21
  5663   001F5A  EFB1  F00F         	goto	i1u103_20
  5664   001F5E                     i1u103_21:
  5665   001F5E  EFB4  F00F         	goto	i1l2168
  5666   001F62                     i1u103_20:
  5667   001F62                     
  5668                           ; BSR set to: 1
  5669   001F62  0E03               	movlw	3
  5670   001F64  6F26               	movwf	(pwm_set@duty+1)& (0+255),b
  5671   001F66  6925               	setf	pwm_set@duty& (0+255),b
  5672   001F68                     i1l2168:
  5673                           
  5674                           ; BSR set to: 1
  5675                           ;io.c: 42:     CCPR1L = duty >> 2;
  5676   001F68  C125  F122         	movff	pwm_set@duty,??_pwm_set
  5677   001F6C  C126  F123         	movff	pwm_set@duty+1,??_pwm_set+1
  5678   001F70  90D8               	bcf	status,0,c
  5679   001F72  3323               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5680   001F74  3322               	rrcf	??_pwm_set& (0+255),f,b
  5681   001F76  90D8               	bcf	status,0,c
  5682   001F78  3323               	rrcf	(??_pwm_set+1)& (0+255),f,b
  5683   001F7A  3322               	rrcf	??_pwm_set& (0+255),f,b
  5684   001F7C  5122               	movf	??_pwm_set& (0+255),w,b
  5685   001F7E  6EBE               	movwf	190,c	;volatile
  5686   001F80                     
  5687                           ; BSR set to: 1
  5688                           ;io.c: 43:     CCP1CONbits.DC1B = duty & 0x03;
  5689   001F80  C125  F122         	movff	pwm_set@duty,??_pwm_set
  5690   001F84  0E03               	movlw	3
  5691   001F86  1722               	andwf	??_pwm_set& (0+255),f,b
  5692   001F88  3B22               	swapf	??_pwm_set& (0+255),f,b
  5693   001F8A  50BD               	movf	189,w,c	;volatile
  5694   001F8C  1922               	xorwf	??_pwm_set& (0+255),w,b
  5695   001F8E  0BCF               	andlw	-49
  5696   001F90  1922               	xorwf	??_pwm_set& (0+255),w,b
  5697   001F92  6EBD               	movwf	189,c	;volatile
  5698   001F94                     
  5699                           ; BSR set to: 1
  5700   001F94  0012               	return		;funcret
  5701   001F96                     __end_of_pwm_set:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function _tarefa_estabilidade *****************
  5705 ;; Defined at:
  5706 ;;		line 68 in file "user_app.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5724 ;;Total ram usage:        0 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; Hardware stack levels required when called: 6
  5727 ;; This function calls:
  5728 ;;		_change_state
  5729 ;;		_delay
  5730 ;; This function is called by:
  5731 ;;		_ISR
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text31
  5736   002300                     __ptext31:
  5737                           	callstack 0
  5738   002300                     _tarefa_estabilidade:
  5739                           	callstack 19
  5740   002300                     l296:
  5741   002300                     
  5742                           ;user_app.c: 71:     {;user_app.c: 72:         if (est_flag)
  5743   002300  5024               	movf	_est_flag^0,w,c	;volatile
  5744   002302  B4D8               	btfsc	status,2,c
  5745   002304  EF86  F011         	goto	u186_21
  5746   002308  EF88  F011         	goto	u186_20
  5747   00230C                     u186_21:
  5748   00230C  EF92  F011         	goto	l297
  5749   002310                     u186_20:
  5750   002310                     
  5751                           ;user_app.c: 73:         {;user_app.c: 74:             est_flag = 0;
  5752   002310  6A24               	clrf	_est_flag^0,c	;volatile
  5753                           
  5754                           ;user_app.c: 75:             LATDbits.LATD3 = 1;
  5755   002312  868C               	bsf	140,3,c	;volatile
  5756   002314                     
  5757                           ;user_app.c: 76:             delay(2);
  5758   002314  0E00               	movlw	0
  5759   002316  0101               	movlb	1	; () banked
  5760   002318  6F2D               	movwf	(delay@time+1)& (0+255),b
  5761   00231A  0E02               	movlw	2
  5762   00231C  6F2C               	movwf	delay@time& (0+255),b
  5763   00231E  ECB5  F008         	call	_delay	;wreg free
  5764   002322                     
  5765                           ;user_app.c: 77:             LATDbits.LATD3 = 0;
  5766   002322  968C               	bcf	140,3,c	;volatile
  5767   002324                     l297:
  5768                           
  5769                           ;user_app.c: 79:         change_state(WAITING);
  5770   002324  0E02               	movlw	2
  5771   002326  EC06  F00A         	call	_change_state
  5772   00232A  EF80  F011         	goto	l296
  5773   00232E  0012               	return		;funcret
  5774   002330                     __end_of_tarefa_estabilidade:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function _delay *****************
  5778 ;; Defined at:
  5779 ;;		line 31 in file "kernel.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  time            2   44[BANK1 ] unsigned short 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5793 ;;      Params:         0       0       2       0       0       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5795 ;;      Temps:          0       0       7       0       0       0       0       0       0
  5796 ;;      Totals:         0       0       9       0       0       0       0       0       0
  5797 ;;Total ram usage:        9 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 5
  5800 ;; This function calls:
  5801 ;;		_scheduler
  5802 ;; This function is called by:
  5803 ;;		_tarefa_estabilidade
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text32
  5808   00116A                     __ptext32:
  5809                           	callstack 0
  5810   00116A                     _delay:
  5811                           	callstack 19
  5812   00116A                     
  5813                           ;kernel.c: 31: void delay(uint16_t time);kernel.c: 32: {;kernel.c: 33:     (INTCONbits.G
      +                          IE = 0);
  5814   00116A  9EF2               	bcf	242,7,c	;volatile
  5815   00116C  C3DC  F12E         	movff	_r_queue+535,??_delay
  5816   001170  0101               	movlb	1	; () banked
  5817   001172  512E               	movf	??_delay& (0+255),w,b
  5818   001174  0D6B               	mullw	107
  5819   001176  0EC5               	movlw	low _r_queue
  5820   001178  24F3               	addwf	243,w,c
  5821   00117A  6F2F               	movwf	(??_delay+1)& (0+255),b
  5822   00117C  0E01               	movlw	high _r_queue
  5823   00117E  20F4               	addwfc	prodh,w,c
  5824   001180  6F30               	movwf	(??_delay+2)& (0+255),b
  5825   001182  C12F  F3DE         	movff	??_delay+1,_r_queue+537
  5826   001186  C130  F3DF         	movff	??_delay+2,_r_queue+538
  5827   00118A                     
  5828                           ; BSR set to: 1
  5829   00118A  EE23  F0DE         	lfsr	2,_r_queue+537
  5830   00118E  EE00 F002          	lfsr	0,2
  5831   001192  50DE               	movf	postinc2,w,c
  5832   001194  26E9               	addwf	fsr0l,f,c
  5833   001196  50DD               	movf	postdec2,w,c
  5834   001198  22EA               	addwfc	fsr0h,f,c
  5835   00119A  04EE               	decf	postinc0,w,c
  5836   00119C  A4D8               	btfss	status,2,c
  5837   00119E  EFD3  F008         	goto	i1u175_21
  5838   0011A2  EFD5  F008         	goto	i1u175_20
  5839   0011A6                     i1u175_21:
  5840   0011A6  EF43  F009         	goto	i1l2778
  5841   0011AA                     i1u175_20:
  5842   0011AA                     
  5843                           ; BSR set to: 1
  5844   0011AA  EE23  F0DE         	lfsr	2,_r_queue+537
  5845   0011AE  EE00 F009          	lfsr	0,9
  5846   0011B2  50DE               	movf	postinc2,w,c
  5847   0011B4  26E9               	addwf	fsr0l,f,c
  5848   0011B6  50DD               	movf	postdec2,w,c
  5849   0011B8  22EA               	addwfc	fsr0h,f,c
  5850   0011BA  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5851   0011BE  EE23  F0DE         	lfsr	2,_r_queue+537
  5852   0011C2  EE00 F008          	lfsr	0,8
  5853   0011C6  50DE               	movf	postinc2,w,c
  5854   0011C8  26E9               	addwf	fsr0l,f,c
  5855   0011CA  50DD               	movf	postdec2,w,c
  5856   0011CC  22EA               	addwfc	fsr0h,f,c
  5857   0011CE  CFD8 FFEF          	movff	status,indf0	;volatile
  5858   0011D2  EE23  F0DE         	lfsr	2,_r_queue+537
  5859   0011D6  EE00 F007          	lfsr	0,7
  5860   0011DA  50DE               	movf	postinc2,w,c
  5861   0011DC  26E9               	addwf	fsr0l,f,c
  5862   0011DE  50DD               	movf	postdec2,w,c
  5863   0011E0  22EA               	addwfc	fsr0h,f,c
  5864   0011E2  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5865   0011E6  EE23  F0DE         	lfsr	2,_r_queue+537
  5866   0011EA  EE00 F06A          	lfsr	0,106
  5867   0011EE  50DE               	movf	postinc2,w,c
  5868   0011F0  26E9               	addwf	fsr0l,f,c
  5869   0011F2  50DD               	movf	postdec2,w,c
  5870   0011F4  22EA               	addwfc	fsr0h,f,c
  5871   0011F6  6AEF               	clrf	indf0,c
  5872   0011F8  EE23  F0DE         	lfsr	2,_r_queue+537
  5873   0011FC  EE00 F002          	lfsr	0,2
  5874   001200  50DE               	movf	postinc2,w,c
  5875   001202  26E9               	addwf	fsr0l,f,c
  5876   001204  50DD               	movf	postdec2,w,c
  5877   001206  22EA               	addwfc	fsr0h,f,c
  5878   001208  0E02               	movlw	2
  5879   00120A  6EEF               	movwf	indf0,c
  5880   00120C  EF3B  F009         	goto	i1l2776
  5881   001210                     i1l2772:
  5882   001210  EE23  F0DE         	lfsr	2,_r_queue+537
  5883   001214  EE00 F06A          	lfsr	0,106
  5884   001218  50DE               	movf	postinc2,w,c
  5885   00121A  26E9               	addwf	fsr0l,f,c
  5886   00121C  50DD               	movf	postdec2,w,c
  5887   00121E  22EA               	addwfc	fsr0h,f,c
  5888   001220  50EF               	movf	indf0,w,c
  5889   001222  0101               	movlb	1	; () banked
  5890   001224  6F2E               	movwf	??_delay& (0+255),b
  5891   001226  512E               	movf	??_delay& (0+255),w,b
  5892   001228  0D03               	mullw	3
  5893   00122A  CFF3 F12F          	movff	prodl,??_delay+1
  5894   00122E  CFF4 F130          	movff	prodh,??_delay+2
  5895   001232  EE23  F0DE         	lfsr	2,_r_queue+537
  5896   001236  CFDE F131          	movff	postinc2,??_delay+3
  5897   00123A  CFDD F132          	movff	postdec2,??_delay+4
  5898   00123E  512F               	movf	(??_delay+1)& (0+255),w,b
  5899   001240  2531               	addwf	(??_delay+3)& (0+255),w,b
  5900   001242  6F33               	movwf	(??_delay+5)& (0+255),b
  5901   001244  5130               	movf	(??_delay+2)& (0+255),w,b
  5902   001246  2132               	addwfc	(??_delay+4)& (0+255),w,b
  5903   001248  6F34               	movwf	(??_delay+6)& (0+255),b
  5904   00124A  0E0A               	movlw	10
  5905   00124C  2533               	addwf	(??_delay+5)& (0+255),w,b
  5906   00124E  6ED9               	movwf	fsr2l,c
  5907   001250  0E00               	movlw	0
  5908   001252  2134               	addwfc	(??_delay+6)& (0+255),w,b
  5909   001254  6EDA               	movwf	fsr2h,c
  5910   001256  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5911   00125A  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5912   00125E  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5913   001262                     
  5914                           ; BSR set to: 1
  5915   001262  EE23  F0DE         	lfsr	2,_r_queue+537
  5916   001266  EE00 F06A          	lfsr	0,106
  5917   00126A  50DE               	movf	postinc2,w,c
  5918   00126C  26E9               	addwf	fsr0l,f,c
  5919   00126E  50DD               	movf	postdec2,w,c
  5920   001270  22EA               	addwfc	fsr0h,f,c
  5921   001272  2AEF               	incf	indf0,f,c
  5922   001274  0006               	pop		;# 
  5923   001276                     i1l2776:
  5924   001276  50FC               	movf	252,w,c	;volatile
  5925   001278  A4D8               	btfss	status,2,c
  5926   00127A  EF41  F009         	goto	i1u176_21
  5927   00127E  EF43  F009         	goto	i1u176_20
  5928   001282                     i1u176_21:
  5929   001282  EF08  F009         	goto	i1l2772
  5930   001286                     i1u176_20:
  5931   001286                     i1l2778:
  5932                           
  5933                           ;kernel.c: 35:     r_queue.ready_queue[r_queue.task_running].time_sleeping = time;
  5934   001286  C3DC  F12E         	movff	_r_queue+535,??_delay
  5935   00128A  0101               	movlb	1	; () banked
  5936   00128C  512E               	movf	??_delay& (0+255),w,b
  5937   00128E  0D6B               	mullw	107
  5938   001290  0ECA               	movlw	low (_r_queue+5)
  5939   001292  24F3               	addwf	243,w,c
  5940   001294  6ED9               	movwf	fsr2l,c
  5941   001296  0E01               	movlw	high (_r_queue+5)
  5942   001298  20F4               	addwfc	prodh,w,c
  5943   00129A  6EDA               	movwf	fsr2h,c
  5944   00129C  C12C  FFDE         	movff	delay@time,postinc2
  5945   0012A0  C12D  FFDD         	movff	delay@time+1,postdec2
  5946   0012A4                     
  5947                           ; BSR set to: 1
  5948                           ;kernel.c: 36:     scheduler();
  5949   0012A4  EC15  F012         	call	_scheduler	;wreg free
  5950   0012A8  C3DC  F12E         	movff	_r_queue+535,??_delay
  5951   0012AC  0101               	movlb	1	; () banked
  5952   0012AE  512E               	movf	??_delay& (0+255),w,b
  5953   0012B0  0D6B               	mullw	107
  5954   0012B2  0EC5               	movlw	low _r_queue
  5955   0012B4  24F3               	addwf	243,w,c
  5956   0012B6  6F2F               	movwf	(??_delay+1)& (0+255),b
  5957   0012B8  0E01               	movlw	high _r_queue
  5958   0012BA  20F4               	addwfc	prodh,w,c
  5959   0012BC  6F30               	movwf	(??_delay+2)& (0+255),b
  5960   0012BE  C12F  F3DE         	movff	??_delay+1,_r_queue+537
  5961   0012C2  C130  F3DF         	movff	??_delay+2,_r_queue+538
  5962   0012C6                     
  5963                           ; BSR set to: 1
  5964   0012C6  EE23  F0DE         	lfsr	2,_r_queue+537
  5965   0012CA  EE00 F002          	lfsr	0,2
  5966   0012CE  50DE               	movf	postinc2,w,c
  5967   0012D0  26E9               	addwf	fsr0l,f,c
  5968   0012D2  50DD               	movf	postdec2,w,c
  5969   0012D4  22EA               	addwfc	fsr0h,f,c
  5970   0012D6  50EF               	movf	indf0,w,c
  5971   0012D8  A4D8               	btfss	status,2,c
  5972   0012DA  EF71  F009         	goto	i1u177_21
  5973   0012DE  EF73  F009         	goto	i1u177_20
  5974   0012E2                     i1u177_21:
  5975   0012E2  EF04  F00A         	goto	i1l2798
  5976   0012E6                     i1u177_20:
  5977   0012E6                     
  5978                           ; BSR set to: 1
  5979   0012E6  6AFC               	clrf	252,c	;volatile
  5980   0012E8                     
  5981                           ; BSR set to: 1
  5982   0012E8  EE23  F0DE         	lfsr	2,_r_queue+537
  5983   0012EC  EE00 F06A          	lfsr	0,106
  5984   0012F0  50DE               	movf	postinc2,w,c
  5985   0012F2  26E9               	addwf	fsr0l,f,c
  5986   0012F4  50DD               	movf	postdec2,w,c
  5987   0012F6  22EA               	addwfc	fsr0h,f,c
  5988   0012F8  50EF               	movf	indf0,w,c
  5989   0012FA  B4D8               	btfsc	status,2,c
  5990   0012FC  EF82  F009         	goto	i1u178_21
  5991   001300  EF84  F009         	goto	i1u178_20
  5992   001304                     i1u178_21:
  5993   001304  EFE8  F009         	goto	i1l347
  5994   001308                     i1u178_20:
  5995   001308                     
  5996                           ; BSR set to: 1
  5997   001308  EE23  F0DE         	lfsr	2,_r_queue+537
  5998   00130C  EE00 F009          	lfsr	0,9
  5999   001310  50DE               	movf	postinc2,w,c
  6000   001312  26E9               	addwf	fsr0l,f,c
  6001   001314  50DD               	movf	postdec2,w,c
  6002   001316  22EA               	addwfc	fsr0h,f,c
  6003   001318  50EF               	movf	indf0,w,c
  6004   00131A  6EE0               	movwf	224,c	;volatile
  6005   00131C  EE23  F0DE         	lfsr	2,_r_queue+537
  6006   001320  EE00 F008          	lfsr	0,8
  6007   001324  50DE               	movf	postinc2,w,c
  6008   001326  26E9               	addwf	fsr0l,f,c
  6009   001328  50DD               	movf	postdec2,w,c
  6010   00132A  22EA               	addwfc	fsr0h,f,c
  6011   00132C  50EF               	movf	indf0,w,c
  6012   00132E  6ED8               	movwf	216,c	;volatile
  6013   001330  EE23  F0DE         	lfsr	2,_r_queue+537
  6014   001334  EE00 F007          	lfsr	0,7
  6015   001338  50DE               	movf	postinc2,w,c
  6016   00133A  26E9               	addwf	fsr0l,f,c
  6017   00133C  50DD               	movf	postdec2,w,c
  6018   00133E  22EA               	addwfc	fsr0h,f,c
  6019   001340  50EF               	movf	indf0,w,c
  6020   001342  6F2E               	movwf	??_delay& (0+255),b
  6021   001344  512E               	movf	??_delay& (0+255),w,b
  6022   001346                     i1l348:
  6023                           
  6024                           ; BSR set to: 1
  6025   001346  0005               	push		;# 
  6026   001348  EE23  F0DE         	lfsr	2,_r_queue+537
  6027   00134C  EE00 F06A          	lfsr	0,106
  6028   001350  50DE               	movf	postinc2,w,c
  6029   001352  26E9               	addwf	fsr0l,f,c
  6030   001354  50DD               	movf	postdec2,w,c
  6031   001356  22EA               	addwfc	fsr0h,f,c
  6032   001358  06EF               	decf	indf0,f,c
  6033   00135A  EE23  F0DE         	lfsr	2,_r_queue+537
  6034   00135E  EE00 F06A          	lfsr	0,106
  6035   001362  50DE               	movf	postinc2,w,c
  6036   001364  26E9               	addwf	fsr0l,f,c
  6037   001366  50DD               	movf	postdec2,w,c
  6038   001368  22EA               	addwfc	fsr0h,f,c
  6039   00136A  50EF               	movf	indf0,w,c
  6040   00136C  0101               	movlb	1	; () banked
  6041   00136E  6F2E               	movwf	??_delay& (0+255),b
  6042   001370  512E               	movf	??_delay& (0+255),w,b
  6043   001372  0D03               	mullw	3
  6044   001374  CFF3 F12F          	movff	prodl,??_delay+1
  6045   001378  CFF4 F130          	movff	prodh,??_delay+2
  6046   00137C  EE23  F0DE         	lfsr	2,_r_queue+537
  6047   001380  CFDE F131          	movff	postinc2,??_delay+3
  6048   001384  CFDD F132          	movff	postdec2,??_delay+4
  6049   001388  512F               	movf	(??_delay+1)& (0+255),w,b
  6050   00138A  2531               	addwf	(??_delay+3)& (0+255),w,b
  6051   00138C  6F33               	movwf	(??_delay+5)& (0+255),b
  6052   00138E  5130               	movf	(??_delay+2)& (0+255),w,b
  6053   001390  2132               	addwfc	(??_delay+4)& (0+255),w,b
  6054   001392  6F34               	movwf	(??_delay+6)& (0+255),b
  6055   001394  0E0A               	movlw	10
  6056   001396  2533               	addwf	(??_delay+5)& (0+255),w,b
  6057   001398  6ED9               	movwf	fsr2l,c
  6058   00139A  0E00               	movlw	0
  6059   00139C  2134               	addwfc	(??_delay+6)& (0+255),w,b
  6060   00139E  6EDA               	movwf	fsr2h,c
  6061   0013A0  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6062   0013A4  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6063   0013A8  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6064   0013AC                     
  6065                           ; BSR set to: 1
  6066   0013AC  EE23  F0DE         	lfsr	2,_r_queue+537
  6067   0013B0  EE00 F06A          	lfsr	0,106
  6068   0013B4  50DE               	movf	postinc2,w,c
  6069   0013B6  26E9               	addwf	fsr0l,f,c
  6070   0013B8  50DD               	movf	postdec2,w,c
  6071   0013BA  22EA               	addwfc	fsr0h,f,c
  6072   0013BC  50EF               	movf	indf0,w,c
  6073   0013BE  A4D8               	btfss	status,2,c
  6074   0013C0  EFE4  F009         	goto	i1u179_21
  6075   0013C4  EFE6  F009         	goto	i1u179_20
  6076   0013C8                     i1u179_21:
  6077   0013C8  EFA3  F009         	goto	i1l348
  6078   0013CC                     i1u179_20:
  6079   0013CC  EFFA  F009         	goto	i1l350
  6080   0013D0                     i1l347:
  6081                           
  6082                           ; BSR set to: 1
  6083   0013D0  0005               	push		;# 
  6084   0013D2  EE23  F0DE         	lfsr	2,_r_queue+537
  6085   0013D6  EE00 F003          	lfsr	0,3
  6086   0013DA  50DE               	movf	postinc2,w,c
  6087   0013DC  26E9               	addwf	fsr0l,f,c
  6088   0013DE  50DD               	movf	postdec2,w,c
  6089   0013E0  22EA               	addwfc	fsr0h,f,c
  6090   0013E2  CFEE F12E          	movff	postinc0,??_delay
  6091   0013E6  CFED F12F          	movff	postdec0,??_delay+1
  6092   0013EA  C12E  FFFD         	movff	??_delay,tosl	;volatile
  6093   0013EE  C12F  FFFE         	movff	??_delay+1,tosh	;volatile
  6094   0013F2  6AFF               	clrf	255,c	;volatile
  6095   0013F4                     i1l350:
  6096   0013F4  EE23  F0DE         	lfsr	2,_r_queue+537
  6097   0013F8  EE00 F002          	lfsr	0,2
  6098   0013FC  50DE               	movf	postinc2,w,c
  6099   0013FE  26E9               	addwf	fsr0l,f,c
  6100   001400  50DD               	movf	postdec2,w,c
  6101   001402  22EA               	addwfc	fsr0h,f,c
  6102   001404  0E01               	movlw	1
  6103   001406  6EEF               	movwf	indf0,c
  6104   001408                     i1l2798:
  6105                           
  6106                           ;kernel.c: 38:     (INTCONbits.GIE = 1);
  6107   001408  8EF2               	bsf	242,7,c	;volatile
  6108   00140A  0012               	return		;funcret
  6109   00140C                     __end_of_delay:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function _change_state *****************
  6113 ;; Defined at:
  6114 ;;		line 80 in file "kernel.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  new_state       1    wreg     enum E3348
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  new_state       1   51[BANK1 ] enum E3348
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0
  6129 ;;      Locals:         0       0       1       0       0       0       0       0       0
  6130 ;;      Temps:          0       0       7       0       0       0       0       0       0
  6131 ;;      Totals:         0       0       8       0       0       0       0       0       0
  6132 ;;Total ram usage:        8 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 5
  6135 ;; This function calls:
  6136 ;;		_scheduler
  6137 ;; This function is called by:
  6138 ;;		_tarefa_estabilidade
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text33
  6143   00140C                     __ptext33:
  6144                           	callstack 0
  6145   00140C                     _change_state:
  6146                           	callstack 19
  6147                           
  6148                           ;incstack = 0
  6149                           ;change_state@new_state stored from wreg
  6150   00140C  0101               	movlb	1	; () banked
  6151   00140E  6F33               	movwf	change_state@new_state& (0+255),b
  6152   001410                     
  6153                           ;kernel.c: 80: void change_state(state_t new_state);kernel.c: 81: {;kernel.c: 82:     (I
      +                          NTCONbits.GIE = 0);
  6154   001410  9EF2               	bcf	242,7,c	;volatile
  6155   001412  C3DC  F12C         	movff	_r_queue+535,??_change_state
  6156   001416  0101               	movlb	1	; () banked
  6157   001418  512C               	movf	??_change_state& (0+255),w,b
  6158   00141A  0D6B               	mullw	107
  6159   00141C  0EC5               	movlw	low _r_queue
  6160   00141E  24F3               	addwf	243,w,c
  6161   001420  6F2D               	movwf	(??_change_state+1)& (0+255),b
  6162   001422  0E01               	movlw	high _r_queue
  6163   001424  20F4               	addwfc	prodh,w,c
  6164   001426  6F2E               	movwf	(??_change_state+2)& (0+255),b
  6165   001428  C12D  F3DE         	movff	??_change_state+1,_r_queue+537
  6166   00142C  C12E  F3DF         	movff	??_change_state+2,_r_queue+538
  6167   001430                     
  6168                           ; BSR set to: 1
  6169   001430  EE23  F0DE         	lfsr	2,_r_queue+537
  6170   001434  EE00 F002          	lfsr	0,2
  6171   001438  50DE               	movf	postinc2,w,c
  6172   00143A  26E9               	addwf	fsr0l,f,c
  6173   00143C  50DD               	movf	postdec2,w,c
  6174   00143E  22EA               	addwfc	fsr0h,f,c
  6175   001440  04EE               	decf	postinc0,w,c
  6176   001442  A4D8               	btfss	status,2,c
  6177   001444  EF26  F00A         	goto	i1u180_21
  6178   001448  EF28  F00A         	goto	i1u180_20
  6179   00144C                     i1u180_21:
  6180   00144C  EF96  F00A         	goto	i1l2814
  6181   001450                     i1u180_20:
  6182   001450                     
  6183                           ; BSR set to: 1
  6184   001450  EE23  F0DE         	lfsr	2,_r_queue+537
  6185   001454  EE00 F009          	lfsr	0,9
  6186   001458  50DE               	movf	postinc2,w,c
  6187   00145A  26E9               	addwf	fsr0l,f,c
  6188   00145C  50DD               	movf	postdec2,w,c
  6189   00145E  22EA               	addwfc	fsr0h,f,c
  6190   001460  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6191   001464  EE23  F0DE         	lfsr	2,_r_queue+537
  6192   001468  EE00 F008          	lfsr	0,8
  6193   00146C  50DE               	movf	postinc2,w,c
  6194   00146E  26E9               	addwf	fsr0l,f,c
  6195   001470  50DD               	movf	postdec2,w,c
  6196   001472  22EA               	addwfc	fsr0h,f,c
  6197   001474  CFD8 FFEF          	movff	status,indf0	;volatile
  6198   001478  EE23  F0DE         	lfsr	2,_r_queue+537
  6199   00147C  EE00 F007          	lfsr	0,7
  6200   001480  50DE               	movf	postinc2,w,c
  6201   001482  26E9               	addwf	fsr0l,f,c
  6202   001484  50DD               	movf	postdec2,w,c
  6203   001486  22EA               	addwfc	fsr0h,f,c
  6204   001488  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6205   00148C  EE23  F0DE         	lfsr	2,_r_queue+537
  6206   001490  EE00 F06A          	lfsr	0,106
  6207   001494  50DE               	movf	postinc2,w,c
  6208   001496  26E9               	addwf	fsr0l,f,c
  6209   001498  50DD               	movf	postdec2,w,c
  6210   00149A  22EA               	addwfc	fsr0h,f,c
  6211   00149C  6AEF               	clrf	indf0,c
  6212   00149E  EE23  F0DE         	lfsr	2,_r_queue+537
  6213   0014A2  EE00 F002          	lfsr	0,2
  6214   0014A6  50DE               	movf	postinc2,w,c
  6215   0014A8  26E9               	addwf	fsr0l,f,c
  6216   0014AA  50DD               	movf	postdec2,w,c
  6217   0014AC  22EA               	addwfc	fsr0h,f,c
  6218   0014AE  C133  FFEF         	movff	change_state@new_state,indf0
  6219   0014B2  EF8E  F00A         	goto	i1l2812
  6220   0014B6                     i1l2808:
  6221   0014B6  EE23  F0DE         	lfsr	2,_r_queue+537
  6222   0014BA  EE00 F06A          	lfsr	0,106
  6223   0014BE  50DE               	movf	postinc2,w,c
  6224   0014C0  26E9               	addwf	fsr0l,f,c
  6225   0014C2  50DD               	movf	postdec2,w,c
  6226   0014C4  22EA               	addwfc	fsr0h,f,c
  6227   0014C6  50EF               	movf	indf0,w,c
  6228   0014C8  0101               	movlb	1	; () banked
  6229   0014CA  6F2C               	movwf	??_change_state& (0+255),b
  6230   0014CC  512C               	movf	??_change_state& (0+255),w,b
  6231   0014CE  0D03               	mullw	3
  6232   0014D0  CFF3 F12D          	movff	prodl,??_change_state+1
  6233   0014D4  CFF4 F12E          	movff	prodh,??_change_state+2
  6234   0014D8  EE23  F0DE         	lfsr	2,_r_queue+537
  6235   0014DC  CFDE F12F          	movff	postinc2,??_change_state+3
  6236   0014E0  CFDD F130          	movff	postdec2,??_change_state+4
  6237   0014E4  512D               	movf	(??_change_state+1)& (0+255),w,b
  6238   0014E6  252F               	addwf	(??_change_state+3)& (0+255),w,b
  6239   0014E8  6F31               	movwf	(??_change_state+5)& (0+255),b
  6240   0014EA  512E               	movf	(??_change_state+2)& (0+255),w,b
  6241   0014EC  2130               	addwfc	(??_change_state+4)& (0+255),w,b
  6242   0014EE  6F32               	movwf	(??_change_state+6)& (0+255),b
  6243   0014F0  0E0A               	movlw	10
  6244   0014F2  2531               	addwf	(??_change_state+5)& (0+255),w,b
  6245   0014F4  6ED9               	movwf	fsr2l,c
  6246   0014F6  0E00               	movlw	0
  6247   0014F8  2132               	addwfc	(??_change_state+6)& (0+255),w,b
  6248   0014FA  6EDA               	movwf	fsr2h,c
  6249   0014FC  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6250   001500  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6251   001504  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6252   001508                     
  6253                           ; BSR set to: 1
  6254   001508  EE23  F0DE         	lfsr	2,_r_queue+537
  6255   00150C  EE00 F06A          	lfsr	0,106
  6256   001510  50DE               	movf	postinc2,w,c
  6257   001512  26E9               	addwf	fsr0l,f,c
  6258   001514  50DD               	movf	postdec2,w,c
  6259   001516  22EA               	addwfc	fsr0h,f,c
  6260   001518  2AEF               	incf	indf0,f,c
  6261   00151A  0006               	pop		;# 
  6262   00151C                     i1l2812:
  6263   00151C  50FC               	movf	252,w,c	;volatile
  6264   00151E  A4D8               	btfss	status,2,c
  6265   001520  EF94  F00A         	goto	i1u181_21
  6266   001524  EF96  F00A         	goto	i1u181_20
  6267   001528                     i1u181_21:
  6268   001528  EF5B  F00A         	goto	i1l2808
  6269   00152C                     i1u181_20:
  6270   00152C                     i1l2814:
  6271                           
  6272                           ;kernel.c: 85:     scheduler();
  6273   00152C  EC15  F012         	call	_scheduler	;wreg free
  6274   001530  C3DC  F12C         	movff	_r_queue+535,??_change_state
  6275   001534  0101               	movlb	1	; () banked
  6276   001536  512C               	movf	??_change_state& (0+255),w,b
  6277   001538  0D6B               	mullw	107
  6278   00153A  0EC5               	movlw	low _r_queue
  6279   00153C  24F3               	addwf	243,w,c
  6280   00153E  6F2D               	movwf	(??_change_state+1)& (0+255),b
  6281   001540  0E01               	movlw	high _r_queue
  6282   001542  20F4               	addwfc	prodh,w,c
  6283   001544  6F2E               	movwf	(??_change_state+2)& (0+255),b
  6284   001546  C12D  F3DE         	movff	??_change_state+1,_r_queue+537
  6285   00154A  C12E  F3DF         	movff	??_change_state+2,_r_queue+538
  6286   00154E                     
  6287                           ; BSR set to: 1
  6288   00154E  EE23  F0DE         	lfsr	2,_r_queue+537
  6289   001552  EE00 F002          	lfsr	0,2
  6290   001556  50DE               	movf	postinc2,w,c
  6291   001558  26E9               	addwf	fsr0l,f,c
  6292   00155A  50DD               	movf	postdec2,w,c
  6293   00155C  22EA               	addwfc	fsr0h,f,c
  6294   00155E  50EF               	movf	indf0,w,c
  6295   001560  A4D8               	btfss	status,2,c
  6296   001562  EFB5  F00A         	goto	i1u182_21
  6297   001566  EFB7  F00A         	goto	i1u182_20
  6298   00156A                     i1u182_21:
  6299   00156A  EF48  F00B         	goto	i1l2832
  6300   00156E                     i1u182_20:
  6301   00156E                     
  6302                           ; BSR set to: 1
  6303   00156E  6AFC               	clrf	252,c	;volatile
  6304   001570                     
  6305                           ; BSR set to: 1
  6306   001570  EE23  F0DE         	lfsr	2,_r_queue+537
  6307   001574  EE00 F06A          	lfsr	0,106
  6308   001578  50DE               	movf	postinc2,w,c
  6309   00157A  26E9               	addwf	fsr0l,f,c
  6310   00157C  50DD               	movf	postdec2,w,c
  6311   00157E  22EA               	addwfc	fsr0h,f,c
  6312   001580  50EF               	movf	indf0,w,c
  6313   001582  B4D8               	btfsc	status,2,c
  6314   001584  EFC6  F00A         	goto	i1u183_21
  6315   001588  EFC8  F00A         	goto	i1u183_20
  6316   00158C                     i1u183_21:
  6317   00158C  EF2C  F00B         	goto	i1l385
  6318   001590                     i1u183_20:
  6319   001590                     
  6320                           ; BSR set to: 1
  6321   001590  EE23  F0DE         	lfsr	2,_r_queue+537
  6322   001594  EE00 F009          	lfsr	0,9
  6323   001598  50DE               	movf	postinc2,w,c
  6324   00159A  26E9               	addwf	fsr0l,f,c
  6325   00159C  50DD               	movf	postdec2,w,c
  6326   00159E  22EA               	addwfc	fsr0h,f,c
  6327   0015A0  50EF               	movf	indf0,w,c
  6328   0015A2  6EE0               	movwf	224,c	;volatile
  6329   0015A4  EE23  F0DE         	lfsr	2,_r_queue+537
  6330   0015A8  EE00 F008          	lfsr	0,8
  6331   0015AC  50DE               	movf	postinc2,w,c
  6332   0015AE  26E9               	addwf	fsr0l,f,c
  6333   0015B0  50DD               	movf	postdec2,w,c
  6334   0015B2  22EA               	addwfc	fsr0h,f,c
  6335   0015B4  50EF               	movf	indf0,w,c
  6336   0015B6  6ED8               	movwf	216,c	;volatile
  6337   0015B8  EE23  F0DE         	lfsr	2,_r_queue+537
  6338   0015BC  EE00 F007          	lfsr	0,7
  6339   0015C0  50DE               	movf	postinc2,w,c
  6340   0015C2  26E9               	addwf	fsr0l,f,c
  6341   0015C4  50DD               	movf	postdec2,w,c
  6342   0015C6  22EA               	addwfc	fsr0h,f,c
  6343   0015C8  50EF               	movf	indf0,w,c
  6344   0015CA  6F2C               	movwf	??_change_state& (0+255),b
  6345   0015CC  512C               	movf	??_change_state& (0+255),w,b
  6346   0015CE                     i1l386:
  6347                           
  6348                           ; BSR set to: 1
  6349   0015CE  0005               	push		;# 
  6350   0015D0  EE23  F0DE         	lfsr	2,_r_queue+537
  6351   0015D4  EE00 F06A          	lfsr	0,106
  6352   0015D8  50DE               	movf	postinc2,w,c
  6353   0015DA  26E9               	addwf	fsr0l,f,c
  6354   0015DC  50DD               	movf	postdec2,w,c
  6355   0015DE  22EA               	addwfc	fsr0h,f,c
  6356   0015E0  06EF               	decf	indf0,f,c
  6357   0015E2  EE23  F0DE         	lfsr	2,_r_queue+537
  6358   0015E6  EE00 F06A          	lfsr	0,106
  6359   0015EA  50DE               	movf	postinc2,w,c
  6360   0015EC  26E9               	addwf	fsr0l,f,c
  6361   0015EE  50DD               	movf	postdec2,w,c
  6362   0015F0  22EA               	addwfc	fsr0h,f,c
  6363   0015F2  50EF               	movf	indf0,w,c
  6364   0015F4  0101               	movlb	1	; () banked
  6365   0015F6  6F2C               	movwf	??_change_state& (0+255),b
  6366   0015F8  512C               	movf	??_change_state& (0+255),w,b
  6367   0015FA  0D03               	mullw	3
  6368   0015FC  CFF3 F12D          	movff	prodl,??_change_state+1
  6369   001600  CFF4 F12E          	movff	prodh,??_change_state+2
  6370   001604  EE23  F0DE         	lfsr	2,_r_queue+537
  6371   001608  CFDE F12F          	movff	postinc2,??_change_state+3
  6372   00160C  CFDD F130          	movff	postdec2,??_change_state+4
  6373   001610  512D               	movf	(??_change_state+1)& (0+255),w,b
  6374   001612  252F               	addwf	(??_change_state+3)& (0+255),w,b
  6375   001614  6F31               	movwf	(??_change_state+5)& (0+255),b
  6376   001616  512E               	movf	(??_change_state+2)& (0+255),w,b
  6377   001618  2130               	addwfc	(??_change_state+4)& (0+255),w,b
  6378   00161A  6F32               	movwf	(??_change_state+6)& (0+255),b
  6379   00161C  0E0A               	movlw	10
  6380   00161E  2531               	addwf	(??_change_state+5)& (0+255),w,b
  6381   001620  6ED9               	movwf	fsr2l,c
  6382   001622  0E00               	movlw	0
  6383   001624  2132               	addwfc	(??_change_state+6)& (0+255),w,b
  6384   001626  6EDA               	movwf	fsr2h,c
  6385   001628  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6386   00162C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6387   001630  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6388   001634                     
  6389                           ; BSR set to: 1
  6390   001634  EE23  F0DE         	lfsr	2,_r_queue+537
  6391   001638  EE00 F06A          	lfsr	0,106
  6392   00163C  50DE               	movf	postinc2,w,c
  6393   00163E  26E9               	addwf	fsr0l,f,c
  6394   001640  50DD               	movf	postdec2,w,c
  6395   001642  22EA               	addwfc	fsr0h,f,c
  6396   001644  50EF               	movf	indf0,w,c
  6397   001646  A4D8               	btfss	status,2,c
  6398   001648  EF28  F00B         	goto	i1u184_21
  6399   00164C  EF2A  F00B         	goto	i1u184_20
  6400   001650                     i1u184_21:
  6401   001650  EFE7  F00A         	goto	i1l386
  6402   001654                     i1u184_20:
  6403   001654  EF3E  F00B         	goto	i1l388
  6404   001658                     i1l385:
  6405                           
  6406                           ; BSR set to: 1
  6407   001658  0005               	push		;# 
  6408   00165A  EE23  F0DE         	lfsr	2,_r_queue+537
  6409   00165E  EE00 F003          	lfsr	0,3
  6410   001662  50DE               	movf	postinc2,w,c
  6411   001664  26E9               	addwf	fsr0l,f,c
  6412   001666  50DD               	movf	postdec2,w,c
  6413   001668  22EA               	addwfc	fsr0h,f,c
  6414   00166A  CFEE F12C          	movff	postinc0,??_change_state
  6415   00166E  CFED F12D          	movff	postdec0,??_change_state+1
  6416   001672  C12C  FFFD         	movff	??_change_state,tosl	;volatile
  6417   001676  C12D  FFFE         	movff	??_change_state+1,tosh	;volatile
  6418   00167A  6AFF               	clrf	255,c	;volatile
  6419   00167C                     i1l388:
  6420   00167C  EE23  F0DE         	lfsr	2,_r_queue+537
  6421   001680  EE00 F002          	lfsr	0,2
  6422   001684  50DE               	movf	postinc2,w,c
  6423   001686  26E9               	addwf	fsr0l,f,c
  6424   001688  50DD               	movf	postdec2,w,c
  6425   00168A  22EA               	addwfc	fsr0h,f,c
  6426   00168C  0E01               	movlw	1
  6427   00168E  6EEF               	movwf	indf0,c
  6428   001690                     i1l2832:
  6429                           
  6430                           ;kernel.c: 88:     (INTCONbits.GIE = 1);
  6431   001690  8EF2               	bsf	242,7,c	;volatile
  6432   001692  0012               	return		;funcret
  6433   001694                     __end_of_change_state:
  6434                           	callstack 0
  6435                           
  6436 ;; *************** function _idle *****************
  6437 ;; Defined at:
  6438 ;;		line 92 in file "kernel.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		None
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 3
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_os_init
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text34
  6467   002422                     __ptext34:
  6468                           	callstack 0
  6469   002422                     _idle:
  6470                           	callstack 22
  6471   002422                     l393:
  6472                           
  6473                           ;kernel.c: 99:     {;kernel.c: 103:         __nop();
  6474   002422  0000               	nop	
  6475   002424  EF11  F012         	goto	l393
  6476   002428  0012               	return		;funcret
  6477   00242A                     __end_of_idle:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _ISR *****************
  6481 ;; Defined at:
  6482 ;;		line 12 in file "timer.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  i               1   22[COMRAM] unsigned char 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0
  6497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6498 ;;      Temps:         18       0       0       0       0       0       0       0       0
  6499 ;;      Totals:        19       0       0       0       0       0       0       0       0
  6500 ;;Total ram usage:       19 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; Hardware stack levels required when called: 2
  6503 ;; This function calls:
  6504 ;;		_decrease_time
  6505 ;;		_scheduler
  6506 ;;		i2_create_task
  6507 ;; This function is called by:
  6508 ;;		Interrupt level 2
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	intcode
  6513   000008                     __pintcode:
  6514                           	callstack 0
  6515   000008                     _ISR:
  6516                           	callstack 18
  6517                           
  6518                           ;incstack = 0
  6519   000008  ED01  F004         	call	int_func,f	;refresh shadow registers
  6520                           
  6521                           	psect	intcode_body
  6522   000802                     __pintcode_body:
  6523                           	callstack 18
  6524   000802                     int_func:
  6525                           	callstack 18
  6526   000802  0006               	pop		; remove dummy address from shadow register refresh
  6527   000804  CFE9 F044          	movff	fsr0l,??_ISR+7
  6528   000808  CFEA F045          	movff	fsr0h,??_ISR+8
  6529   00080C  CFE1 F046          	movff	fsr1l,??_ISR+9
  6530   000810  CFE2 F047          	movff	fsr1h,??_ISR+10
  6531   000814  CFD9 F048          	movff	fsr2l,??_ISR+11
  6532   000818  CFDA F049          	movff	fsr2h,??_ISR+12
  6533   00081C  CFF3 F04A          	movff	prodl,??_ISR+13
  6534   000820  CFF4 F04B          	movff	prodh,??_ISR+14
  6535   000824  C001  F04C         	movff	btemp,??_ISR+15
  6536   000828  C00B  F04D         	movff	btemp+10,??_ISR+16
  6537   00082C  C00C  F04E         	movff	btemp+11,??_ISR+17
  6538   000830  EE15  F0F0         	lfsr	1,___inthi_sp
  6539   000834                     
  6540                           ;timer.c: 14:     (INTCONbits.GIE = 0);
  6541   000834  9EF2               	bcf	242,7,c	;volatile
  6542                           
  6543                           ;timer.c: 17:     if (INTCONbits.INT0IF)
  6544   000836  A2F2               	btfss	242,1,c	;volatile
  6545   000838  EF20  F004         	goto	i2u187_41
  6546   00083C  EF22  F004         	goto	i2u187_40
  6547   000840                     i2u187_41:
  6548   000840  EF63  F004         	goto	i2l437
  6549   000844                     i2u187_40:
  6550   000844                     
  6551                           ;timer.c: 18:     {;timer.c: 19:         INTCONbits.INT0IF = 0;
  6552   000844  92F2               	bcf	242,1,c	;volatile
  6553   000846                     
  6554                           ;timer.c: 21:         if (!est_created) {
  6555   000846  5023               	movf	_est_created^0,w,c
  6556   000848  A4D8               	btfss	status,2,c
  6557   00084A  EF29  F004         	goto	i2u188_41
  6558   00084E  EF2B  F004         	goto	i2u188_40
  6559   000852                     i2u188_41:
  6560   000852  EF38  F004         	goto	i2l438
  6561   000856                     i2u188_40:
  6562   000856                     
  6563                           ;timer.c: 23:             create_task(4, 1, tarefa_estabilidade);
  6564   000856  0E01               	movlw	1
  6565   000858  6E39               	movwf	i2create_task@priority^0,c
  6566   00085A  0E00               	movlw	low _tarefa_estabilidade
  6567   00085C  6E3A               	movwf	i2create_task@task^0,c
  6568   00085E  0E23               	movlw	high _tarefa_estabilidade
  6569   000860  6E3B               	movwf	(i2create_task@task+1)^0,c
  6570   000862  0E04               	movlw	4
  6571   000864  EC5D  F010         	call	i2_create_task
  6572   000868                     
  6573                           ;timer.c: 24:             est_created = 1;
  6574   000868  0E01               	movlw	1
  6575   00086A  6E23               	movwf	_est_created^0,c
  6576                           
  6577                           ;timer.c: 25:         } else {
  6578   00086C  EF63  F004         	goto	i2l437
  6579   000870                     i2l438:
  6580                           
  6581                           ;timer.c: 27:             for (uint8_t i = 0; i < r_queue.ready_queue_size; i++) {
  6582   000870  6A4F               	clrf	ISR@i^0,c
  6583   000872  EF58  F004         	goto	i2l2898
  6584   000876                     i2l2892:
  6585                           
  6586                           ;timer.c: 28:                 if (r_queue.ready_queue[i].task_id == 4) {
  6587   000876  504F               	movf	ISR@i^0,w,c
  6588   000878  0D6B               	mullw	107
  6589   00087A  0EC5               	movlw	low _r_queue
  6590   00087C  24F3               	addwf	243,w,c
  6591   00087E  6ED9               	movwf	fsr2l,c
  6592   000880  0E01               	movlw	high _r_queue
  6593   000882  20F4               	addwfc	prodh,w,c
  6594   000884  6EDA               	movwf	fsr2h,c
  6595   000886  0E04               	movlw	4
  6596   000888  18DE               	xorwf	postinc2,w,c
  6597   00088A  A4D8               	btfss	status,2,c
  6598   00088C  EF4A  F004         	goto	i2u189_41
  6599   000890  EF4C  F004         	goto	i2u189_40
  6600   000894                     i2u189_41:
  6601   000894  EF57  F004         	goto	i2l2896
  6602   000898                     i2u189_40:
  6603   000898                     
  6604                           ;timer.c: 29:                     r_queue.ready_queue[i].task_state = READY;
  6605   000898  504F               	movf	ISR@i^0,w,c
  6606   00089A  0D6B               	mullw	107
  6607   00089C  0EC7               	movlw	low (_r_queue+2)
  6608   00089E  24F3               	addwf	243,w,c
  6609   0008A0  6ED9               	movwf	fsr2l,c
  6610   0008A2  0E01               	movlw	high (_r_queue+2)
  6611   0008A4  20F4               	addwfc	prodh,w,c
  6612   0008A6  6EDA               	movwf	fsr2h,c
  6613   0008A8  6ADF               	clrf	indf2,c
  6614                           
  6615                           ;timer.c: 30:                     break;
  6616   0008AA  EF63  F004         	goto	i2l437
  6617   0008AE                     i2l2896:
  6618                           
  6619                           ;timer.c: 32:             }
  6620   0008AE  2A4F               	incf	ISR@i^0,f,c
  6621   0008B0                     i2l2898:
  6622   0008B0  EE23  F0DD         	lfsr	2,_r_queue+536
  6623   0008B4  50DE               	movf	postinc2,w,c
  6624   0008B6  5C4F               	subwf	ISR@i^0,w,c
  6625   0008B8  A0D8               	btfss	status,0,c
  6626   0008BA  EF61  F004         	goto	i2u190_41
  6627   0008BE  EF63  F004         	goto	i2u190_40
  6628   0008C2                     i2u190_41:
  6629   0008C2  EF3B  F004         	goto	i2l2892
  6630   0008C6                     i2u190_40:
  6631   0008C6                     i2l437:
  6632                           
  6633                           ;timer.c: 37:     if (INTCONbits.TMR0IF)
  6634   0008C6  A4F2               	btfss	242,2,c	;volatile
  6635   0008C8  EF68  F004         	goto	i2u191_41
  6636   0008CC  EF6A  F004         	goto	i2u191_40
  6637   0008D0                     i2u191_41:
  6638   0008D0  EFAB  F005         	goto	i2l2936
  6639   0008D4                     i2u191_40:
  6640   0008D4                     
  6641                           ;timer.c: 38:     {;timer.c: 39:         INTCONbits.TMR0IF = 0;
  6642   0008D4  94F2               	bcf	242,2,c	;volatile
  6643   0008D6                     
  6644                           ;timer.c: 40:         TMR0 = 0;
  6645   0008D6  0E00               	movlw	0
  6646   0008D8  6ED7               	movwf	215,c	;volatile
  6647   0008DA  0E00               	movlw	0
  6648   0008DC  6ED6               	movwf	214,c	;volatile
  6649   0008DE                     
  6650                           ;timer.c: 42:         decrease_time();
  6651   0008DE  ECD2  F00E         	call	_decrease_time	;wreg free
  6652   0008E2  C3DC  F03D         	movff	_r_queue+535,??_ISR
  6653   0008E6  503D               	movf	??_ISR^0,w,c
  6654   0008E8  0D6B               	mullw	107
  6655   0008EA  0EC5               	movlw	low _r_queue
  6656   0008EC  24F3               	addwf	243,w,c
  6657   0008EE  6E3E               	movwf	(??_ISR+1)^0,c
  6658   0008F0  0E01               	movlw	high _r_queue
  6659   0008F2  20F4               	addwfc	prodh,w,c
  6660   0008F4  6E3F               	movwf	(??_ISR+2)^0,c
  6661   0008F6  C03E  F3DE         	movff	??_ISR+1,_r_queue+537
  6662   0008FA  C03F  F3DF         	movff	??_ISR+2,_r_queue+538
  6663   0008FE  EE23  F0DE         	lfsr	2,_r_queue+537
  6664   000902  EE00 F002          	lfsr	0,2
  6665   000906  50DE               	movf	postinc2,w,c
  6666   000908  26E9               	addwf	fsr0l,f,c
  6667   00090A  50DD               	movf	postdec2,w,c
  6668   00090C  22EA               	addwfc	fsr0h,f,c
  6669   00090E  04EE               	decf	postinc0,w,c
  6670   000910  A4D8               	btfss	status,2,c
  6671   000912  EF8D  F004         	goto	i2u192_41
  6672   000916  EF8F  F004         	goto	i2u192_40
  6673   00091A                     i2u192_41:
  6674   00091A  EFFB  F004         	goto	i2l2918
  6675   00091E                     i2u192_40:
  6676   00091E  EE23  F0DE         	lfsr	2,_r_queue+537
  6677   000922  EE00 F009          	lfsr	0,9
  6678   000926  50DE               	movf	postinc2,w,c
  6679   000928  26E9               	addwf	fsr0l,f,c
  6680   00092A  50DD               	movf	postdec2,w,c
  6681   00092C  22EA               	addwfc	fsr0h,f,c
  6682   00092E  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6683   000932  EE23  F0DE         	lfsr	2,_r_queue+537
  6684   000936  EE00 F008          	lfsr	0,8
  6685   00093A  50DE               	movf	postinc2,w,c
  6686   00093C  26E9               	addwf	fsr0l,f,c
  6687   00093E  50DD               	movf	postdec2,w,c
  6688   000940  22EA               	addwfc	fsr0h,f,c
  6689   000942  CFD8 FFEF          	movff	status,indf0	;volatile
  6690   000946  EE23  F0DE         	lfsr	2,_r_queue+537
  6691   00094A  EE00 F007          	lfsr	0,7
  6692   00094E  50DE               	movf	postinc2,w,c
  6693   000950  26E9               	addwf	fsr0l,f,c
  6694   000952  50DD               	movf	postdec2,w,c
  6695   000954  22EA               	addwfc	fsr0h,f,c
  6696   000956  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6697   00095A  EE23  F0DE         	lfsr	2,_r_queue+537
  6698   00095E  EE00 F06A          	lfsr	0,106
  6699   000962  50DE               	movf	postinc2,w,c
  6700   000964  26E9               	addwf	fsr0l,f,c
  6701   000966  50DD               	movf	postdec2,w,c
  6702   000968  22EA               	addwfc	fsr0h,f,c
  6703   00096A  6AEF               	clrf	indf0,c
  6704   00096C  EE23  F0DE         	lfsr	2,_r_queue+537
  6705   000970  EE00 F002          	lfsr	0,2
  6706   000974  50DE               	movf	postinc2,w,c
  6707   000976  26E9               	addwf	fsr0l,f,c
  6708   000978  50DD               	movf	postdec2,w,c
  6709   00097A  22EA               	addwfc	fsr0h,f,c
  6710   00097C  6AEF               	clrf	indf0,c
  6711   00097E  EFF3  F004         	goto	i2l2916
  6712   000982                     i2l2912:
  6713   000982  EE23  F0DE         	lfsr	2,_r_queue+537
  6714   000986  EE00 F06A          	lfsr	0,106
  6715   00098A  50DE               	movf	postinc2,w,c
  6716   00098C  26E9               	addwf	fsr0l,f,c
  6717   00098E  50DD               	movf	postdec2,w,c
  6718   000990  22EA               	addwfc	fsr0h,f,c
  6719   000992  50EF               	movf	indf0,w,c
  6720   000994  6E3D               	movwf	??_ISR^0,c
  6721   000996  503D               	movf	??_ISR^0,w,c
  6722   000998  0D03               	mullw	3
  6723   00099A  CFF3 F03E          	movff	prodl,??_ISR+1
  6724   00099E  CFF4 F03F          	movff	prodh,??_ISR+2
  6725   0009A2  EE23  F0DE         	lfsr	2,_r_queue+537
  6726   0009A6  CFDE F040          	movff	postinc2,??_ISR+3
  6727   0009AA  CFDD F041          	movff	postdec2,??_ISR+4
  6728   0009AE  503E               	movf	(??_ISR+1)^0,w,c
  6729   0009B0  2440               	addwf	(??_ISR+3)^0,w,c
  6730   0009B2  6E42               	movwf	(??_ISR+5)^0,c
  6731   0009B4  503F               	movf	(??_ISR+2)^0,w,c
  6732   0009B6  2041               	addwfc	(??_ISR+4)^0,w,c
  6733   0009B8  6E43               	movwf	(??_ISR+6)^0,c
  6734   0009BA  0E0A               	movlw	10
  6735   0009BC  2442               	addwf	(??_ISR+5)^0,w,c
  6736   0009BE  6ED9               	movwf	fsr2l,c
  6737   0009C0  0E00               	movlw	0
  6738   0009C2  2043               	addwfc	(??_ISR+6)^0,w,c
  6739   0009C4  6EDA               	movwf	fsr2h,c
  6740   0009C6  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6741   0009CA  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6742   0009CE  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6743   0009D2  EE23  F0DE         	lfsr	2,_r_queue+537
  6744   0009D6  EE00 F06A          	lfsr	0,106
  6745   0009DA  50DE               	movf	postinc2,w,c
  6746   0009DC  26E9               	addwf	fsr0l,f,c
  6747   0009DE  50DD               	movf	postdec2,w,c
  6748   0009E0  22EA               	addwfc	fsr0h,f,c
  6749   0009E2  2AEF               	incf	indf0,f,c
  6750   0009E4  0006               	pop		;# 
  6751   0009E6                     i2l2916:
  6752   0009E6  50FC               	movf	252,w,c	;volatile
  6753   0009E8  A4D8               	btfss	status,2,c
  6754   0009EA  EFF9  F004         	goto	i2u193_41
  6755   0009EE  EFFB  F004         	goto	i2u193_40
  6756   0009F2                     i2u193_41:
  6757   0009F2  EFC1  F004         	goto	i2l2912
  6758   0009F6                     i2u193_40:
  6759   0009F6                     i2l2918:
  6760                           
  6761                           ;timer.c: 45:         scheduler();
  6762   0009F6  EC15  F012         	call	_scheduler	;wreg free
  6763   0009FA  C3DC  F03D         	movff	_r_queue+535,??_ISR
  6764   0009FE  503D               	movf	??_ISR^0,w,c
  6765   000A00  0D6B               	mullw	107
  6766   000A02  0EC5               	movlw	low _r_queue
  6767   000A04  24F3               	addwf	243,w,c
  6768   000A06  6E3E               	movwf	(??_ISR+1)^0,c
  6769   000A08  0E01               	movlw	high _r_queue
  6770   000A0A  20F4               	addwfc	prodh,w,c
  6771   000A0C  6E3F               	movwf	(??_ISR+2)^0,c
  6772   000A0E  C03E  F3DE         	movff	??_ISR+1,_r_queue+537
  6773   000A12  C03F  F3DF         	movff	??_ISR+2,_r_queue+538
  6774   000A16  EE23  F0DE         	lfsr	2,_r_queue+537
  6775   000A1A  EE00 F002          	lfsr	0,2
  6776   000A1E  50DE               	movf	postinc2,w,c
  6777   000A20  26E9               	addwf	fsr0l,f,c
  6778   000A22  50DD               	movf	postdec2,w,c
  6779   000A24  22EA               	addwfc	fsr0h,f,c
  6780   000A26  50EF               	movf	indf0,w,c
  6781   000A28  A4D8               	btfss	status,2,c
  6782   000A2A  EF19  F005         	goto	i2u194_41
  6783   000A2E  EF1B  F005         	goto	i2u194_40
  6784   000A32                     i2u194_41:
  6785   000A32  EFAB  F005         	goto	i2l2936
  6786   000A36                     i2u194_40:
  6787   000A36  6AFC               	clrf	252,c	;volatile
  6788   000A38  EE23  F0DE         	lfsr	2,_r_queue+537
  6789   000A3C  EE00 F06A          	lfsr	0,106
  6790   000A40  50DE               	movf	postinc2,w,c
  6791   000A42  26E9               	addwf	fsr0l,f,c
  6792   000A44  50DD               	movf	postdec2,w,c
  6793   000A46  22EA               	addwfc	fsr0h,f,c
  6794   000A48  50EF               	movf	indf0,w,c
  6795   000A4A  B4D8               	btfsc	status,2,c
  6796   000A4C  EF2A  F005         	goto	i2u195_41
  6797   000A50  EF2C  F005         	goto	i2u195_40
  6798   000A54                     i2u195_41:
  6799   000A54  EF8F  F005         	goto	i2l453
  6800   000A58                     i2u195_40:
  6801   000A58  EE23  F0DE         	lfsr	2,_r_queue+537
  6802   000A5C  EE00 F009          	lfsr	0,9
  6803   000A60  50DE               	movf	postinc2,w,c
  6804   000A62  26E9               	addwf	fsr0l,f,c
  6805   000A64  50DD               	movf	postdec2,w,c
  6806   000A66  22EA               	addwfc	fsr0h,f,c
  6807   000A68  50EF               	movf	indf0,w,c
  6808   000A6A  6EE0               	movwf	224,c	;volatile
  6809   000A6C  EE23  F0DE         	lfsr	2,_r_queue+537
  6810   000A70  EE00 F008          	lfsr	0,8
  6811   000A74  50DE               	movf	postinc2,w,c
  6812   000A76  26E9               	addwf	fsr0l,f,c
  6813   000A78  50DD               	movf	postdec2,w,c
  6814   000A7A  22EA               	addwfc	fsr0h,f,c
  6815   000A7C  50EF               	movf	indf0,w,c
  6816   000A7E  6ED8               	movwf	216,c	;volatile
  6817   000A80  EE23  F0DE         	lfsr	2,_r_queue+537
  6818   000A84  EE00 F007          	lfsr	0,7
  6819   000A88  50DE               	movf	postinc2,w,c
  6820   000A8A  26E9               	addwf	fsr0l,f,c
  6821   000A8C  50DD               	movf	postdec2,w,c
  6822   000A8E  22EA               	addwfc	fsr0h,f,c
  6823   000A90  50EF               	movf	indf0,w,c
  6824   000A92  6E3D               	movwf	??_ISR^0,c
  6825   000A94  503D               	movf	??_ISR^0,w,c
  6826   000A96                     i2l454:
  6827   000A96  0005               	push		;# 
  6828   000A98  EE23  F0DE         	lfsr	2,_r_queue+537
  6829   000A9C  EE00 F06A          	lfsr	0,106
  6830   000AA0  50DE               	movf	postinc2,w,c
  6831   000AA2  26E9               	addwf	fsr0l,f,c
  6832   000AA4  50DD               	movf	postdec2,w,c
  6833   000AA6  22EA               	addwfc	fsr0h,f,c
  6834   000AA8  06EF               	decf	indf0,f,c
  6835   000AAA  EE23  F0DE         	lfsr	2,_r_queue+537
  6836   000AAE  EE00 F06A          	lfsr	0,106
  6837   000AB2  50DE               	movf	postinc2,w,c
  6838   000AB4  26E9               	addwf	fsr0l,f,c
  6839   000AB6  50DD               	movf	postdec2,w,c
  6840   000AB8  22EA               	addwfc	fsr0h,f,c
  6841   000ABA  50EF               	movf	indf0,w,c
  6842   000ABC  6E3D               	movwf	??_ISR^0,c
  6843   000ABE  503D               	movf	??_ISR^0,w,c
  6844   000AC0  0D03               	mullw	3
  6845   000AC2  CFF3 F03E          	movff	prodl,??_ISR+1
  6846   000AC6  CFF4 F03F          	movff	prodh,??_ISR+2
  6847   000ACA  EE23  F0DE         	lfsr	2,_r_queue+537
  6848   000ACE  CFDE F040          	movff	postinc2,??_ISR+3
  6849   000AD2  CFDD F041          	movff	postdec2,??_ISR+4
  6850   000AD6  503E               	movf	(??_ISR+1)^0,w,c
  6851   000AD8  2440               	addwf	(??_ISR+3)^0,w,c
  6852   000ADA  6E42               	movwf	(??_ISR+5)^0,c
  6853   000ADC  503F               	movf	(??_ISR+2)^0,w,c
  6854   000ADE  2041               	addwfc	(??_ISR+4)^0,w,c
  6855   000AE0  6E43               	movwf	(??_ISR+6)^0,c
  6856   000AE2  0E0A               	movlw	10
  6857   000AE4  2442               	addwf	(??_ISR+5)^0,w,c
  6858   000AE6  6ED9               	movwf	fsr2l,c
  6859   000AE8  0E00               	movlw	0
  6860   000AEA  2043               	addwfc	(??_ISR+6)^0,w,c
  6861   000AEC  6EDA               	movwf	fsr2h,c
  6862   000AEE  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6863   000AF2  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6864   000AF6  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6865   000AFA  EE23  F0DE         	lfsr	2,_r_queue+537
  6866   000AFE  EE00 F06A          	lfsr	0,106
  6867   000B02  50DE               	movf	postinc2,w,c
  6868   000B04  26E9               	addwf	fsr0l,f,c
  6869   000B06  50DD               	movf	postdec2,w,c
  6870   000B08  22EA               	addwfc	fsr0h,f,c
  6871   000B0A  50EF               	movf	indf0,w,c
  6872   000B0C  A4D8               	btfss	status,2,c
  6873   000B0E  EF8B  F005         	goto	i2u196_41
  6874   000B12  EF8D  F005         	goto	i2u196_40
  6875   000B16                     i2u196_41:
  6876   000B16  EF4B  F005         	goto	i2l454
  6877   000B1A                     i2u196_40:
  6878   000B1A  EFA1  F005         	goto	i2l456
  6879   000B1E                     i2l453:
  6880   000B1E  0005               	push		;# 
  6881   000B20  EE23  F0DE         	lfsr	2,_r_queue+537
  6882   000B24  EE00 F003          	lfsr	0,3
  6883   000B28  50DE               	movf	postinc2,w,c
  6884   000B2A  26E9               	addwf	fsr0l,f,c
  6885   000B2C  50DD               	movf	postdec2,w,c
  6886   000B2E  22EA               	addwfc	fsr0h,f,c
  6887   000B30  CFEE F03D          	movff	postinc0,??_ISR
  6888   000B34  CFED F03E          	movff	postdec0,??_ISR+1
  6889   000B38  C03D  FFFD         	movff	??_ISR,tosl	;volatile
  6890   000B3C  C03E  FFFE         	movff	??_ISR+1,tosh	;volatile
  6891   000B40  6AFF               	clrf	255,c	;volatile
  6892   000B42                     i2l456:
  6893   000B42  EE23  F0DE         	lfsr	2,_r_queue+537
  6894   000B46  EE00 F002          	lfsr	0,2
  6895   000B4A  50DE               	movf	postinc2,w,c
  6896   000B4C  26E9               	addwf	fsr0l,f,c
  6897   000B4E  50DD               	movf	postdec2,w,c
  6898   000B50  22EA               	addwfc	fsr0h,f,c
  6899   000B52  0E01               	movlw	1
  6900   000B54  6EEF               	movwf	indf0,c
  6901   000B56                     i2l2936:
  6902                           
  6903                           ;timer.c: 49:     (INTCONbits.GIE = 1);
  6904   000B56  8EF2               	bsf	242,7,c	;volatile
  6905   000B58  C04E  F00C         	movff	??_ISR+17,btemp+11
  6906   000B5C  C04D  F00B         	movff	??_ISR+16,btemp+10
  6907   000B60  C04C  F001         	movff	??_ISR+15,btemp
  6908   000B64  C04B  FFF4         	movff	??_ISR+14,prodh
  6909   000B68  C04A  FFF3         	movff	??_ISR+13,prodl
  6910   000B6C  C049  FFDA         	movff	??_ISR+12,fsr2h
  6911   000B70  C048  FFD9         	movff	??_ISR+11,fsr2l
  6912   000B74  C047  FFE2         	movff	??_ISR+10,fsr1h
  6913   000B78  C046  FFE1         	movff	??_ISR+9,fsr1l
  6914   000B7C  C045  FFEA         	movff	??_ISR+8,fsr0h
  6915   000B80  C044  FFE9         	movff	??_ISR+7,fsr0l
  6916   000B84  0011               	retfie		f
  6917   000B86                     __end_of_ISR:
  6918                           	callstack 0
  6919                           
  6920 ;; *************** function i2_create_task *****************
  6921 ;; Defined at:
  6922 ;;		line 11 in file "kernel.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  id              1    wreg     unsigned char 
  6925 ;;  priority        1    0[COMRAM] unsigned char 
  6926 ;;  task            2    1[COMRAM] PTR FTN()void 
  6927 ;;		 -> idle(1), tarefa_estabilidade(1), tarefa_injecao_eletronica(1), tarefa_controle_central(1), 
  6928 ;;		 -> tarefa_acelerador(1), 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  id              1    0[BANK0 ] unsigned char 
  6931 ;;  new_task      107    1[BANK0 ] struct tcb
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6941 ;;      Params:         3       0       0       0       0       0       0       0       0
  6942 ;;      Locals:         0     108       0       0       0       0       0       0       0
  6943 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6944 ;;      Totals:         4     108       0       0       0       0       0       0       0
  6945 ;;Total ram usage:      112 bytes
  6946 ;; Hardware stack levels used: 1
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_ISR
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text36
  6955   0020BA                     __ptext36:
  6956                           	callstack 0
  6957   0020BA                     i2_create_task:
  6958                           	callstack 19
  6959                           
  6960                           ;incstack = 0
  6961                           ;i2create_task@id stored from wreg
  6962   0020BA  0100               	movlb	0	; () banked
  6963   0020BC  6F60               	movwf	i2create_task@id& (0+255),b
  6964   0020BE                     
  6965                           ;kernel.c: 11: void create_task(uint8_t id, uint8_t priority, f_ptr task);kernel.c: 12: 
      +                          {;kernel.c: 13:     tcb_t new_task;;kernel.c: 15:     new_task.task_id = id;
  6966   0020BE  C060  F061         	movff	i2create_task@id,i2create_task@new_task
  6967   0020C2                     
  6968                           ;kernel.c: 16:     new_task.task_priority = priority;
  6969   0020C2  C039  F062         	movff	i2create_task@priority,i2create_task@new_task+1
  6970   0020C6                     
  6971                           ;kernel.c: 17:     new_task.task_f = task;
  6972   0020C6  C03A  F064         	movff	i2create_task@task,i2create_task@new_task+3
  6973   0020CA  C03B  F065         	movff	i2create_task@task+1,i2create_task@new_task+4
  6974   0020CE                     
  6975                           ;kernel.c: 19:     new_task.task_sp = 0;
  6976   0020CE  0100               	movlb	0	; () banked
  6977   0020D0  6BCB               	clrf	(i2create_task@new_task+106)& (0+255),b
  6978   0020D2                     
  6979                           ; BSR set to: 0
  6980                           ;kernel.c: 20:     new_task.time_sleeping = 0;
  6981   0020D2  0E00               	movlw	0
  6982   0020D4  6F67               	movwf	(i2create_task@new_task+6)& (0+255),b
  6983   0020D6  0E00               	movlw	0
  6984   0020D8  6F66               	movwf	(i2create_task@new_task+5)& (0+255),b
  6985   0020DA                     
  6986                           ; BSR set to: 0
  6987                           ;kernel.c: 21:     new_task.task_state = READY;
  6988   0020DA  6B63               	clrf	(i2create_task@new_task+2)& (0+255),b
  6989   0020DC                     
  6990                           ; BSR set to: 0
  6991                           ;kernel.c: 23:     new_task.BSR_REG = 0x000;
  6992   0020DC  6B6A               	clrf	(i2create_task@new_task+9)& (0+255),b
  6993   0020DE                     
  6994                           ; BSR set to: 0
  6995                           ;kernel.c: 24:     new_task.W_REG = 0x000;
  6996   0020DE  6B68               	clrf	(i2create_task@new_task+7)& (0+255),b
  6997   0020E0                     
  6998                           ; BSR set to: 0
  6999                           ;kernel.c: 25:     new_task.STATUS_REG = 0x000;
  7000   0020E0  6B69               	clrf	(i2create_task@new_task+8)& (0+255),b
  7001   0020E2                     
  7002                           ; BSR set to: 0
  7003                           ;kernel.c: 27:     r_queue.ready_queue[r_queue.ready_queue_size] = new_task;
  7004   0020E2  EE20  F061         	lfsr	2,i2create_task@new_task
  7005   0020E6  C3DD  F03C         	movff	_r_queue+536,??i2_create_task
  7006   0020EA  503C               	movf	??i2_create_task^0,w,c
  7007   0020EC  0D6B               	mullw	107
  7008   0020EE  0EC5               	movlw	low _r_queue
  7009   0020F0  24F3               	addwf	243,w,c
  7010   0020F2  6EE9               	movwf	fsr0l,c
  7011   0020F4  0E01               	movlw	high _r_queue
  7012   0020F6  20F4               	addwfc	prodh,w,c
  7013   0020F8  6EEA               	movwf	fsr0h,c
  7014   0020FA  0E6A               	movlw	106
  7015   0020FC                     i2u128_41:
  7016   0020FC  CFDB FFEB          	movff	plusw2,plusw0
  7017   002100  06E8               	decf	wreg,f,c
  7018   002102  E2FC               	bc	i2u128_41
  7019   002104                     
  7020                           ; BSR set to: 0
  7021                           ;kernel.c: 28:     r_queue.ready_queue_size += 1;
  7022   002104  C3DD  FFE8         	movff	_r_queue+536,wreg
  7023   002108  0F01               	addlw	1
  7024   00210A  CFE8 F3DD          	movff	wreg,_r_queue+536
  7025   00210E                     
  7026                           ; BSR set to: 0
  7027   00210E  0012               	return		;funcret
  7028   002110                     __end_ofi2_create_task:
  7029                           	callstack 0
  7030                           
  7031 ;; *************** function _decrease_time *****************
  7032 ;; Defined at:
  7033 ;;		line 107 in file "kernel.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  i               1    2[COMRAM] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0
  7048 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7049 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7050 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7051 ;;Total ram usage:        3 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_ISR
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text37
  7061   001DA4                     __ptext37:
  7062                           	callstack 0
  7063   001DA4                     _decrease_time:
  7064                           	callstack 19
  7065   001DA4                     
  7066                           ;kernel.c: 109:     for (uint8_t i = 1; i < r_queue.ready_queue_size; i++)
  7067   001DA4  0E01               	movlw	1
  7068   001DA6  6E3B               	movwf	decrease_time@i^0,c
  7069   001DA8  EF0D  F00F         	goto	i2l2286
  7070   001DAC                     i2l2278:
  7071                           
  7072                           ;kernel.c: 110:     {;kernel.c: 111:         if (r_queue.ready_queue[i].time_sleeping > 
      +                          0)
  7073   001DAC  503B               	movf	decrease_time@i^0,w,c
  7074   001DAE  0D6B               	mullw	107
  7075   001DB0  0ECA               	movlw	low (_r_queue+5)
  7076   001DB2  24F3               	addwf	243,w,c
  7077   001DB4  6ED9               	movwf	fsr2l,c
  7078   001DB6  0E01               	movlw	high (_r_queue+5)
  7079   001DB8  20F4               	addwfc	prodh,w,c
  7080   001DBA  6EDA               	movwf	fsr2h,c
  7081   001DBC  50DE               	movf	postinc2,w,c
  7082   001DBE  10DE               	iorwf	postinc2,w,c
  7083   001DC0  B4D8               	btfsc	status,2,c
  7084   001DC2  EFE5  F00E         	goto	i2u119_41
  7085   001DC6  EFE7  F00E         	goto	i2u119_40
  7086   001DCA                     i2u119_41:
  7087   001DCA  EF0C  F00F         	goto	i2l2284
  7088   001DCE                     i2u119_40:
  7089   001DCE                     
  7090                           ;kernel.c: 112:         {;kernel.c: 113:             r_queue.ready_queue[i].time_sleepin
      +                          g--;
  7091   001DCE  503B               	movf	decrease_time@i^0,w,c
  7092   001DD0  0D6B               	mullw	107
  7093   001DD2  0ECA               	movlw	low (_r_queue+5)
  7094   001DD4  24F3               	addwf	243,w,c
  7095   001DD6  6ED9               	movwf	fsr2l,c
  7096   001DD8  0E01               	movlw	high (_r_queue+5)
  7097   001DDA  20F4               	addwfc	prodh,w,c
  7098   001DDC  6EDA               	movwf	fsr2h,c
  7099   001DDE  06DE               	decf	postinc2,f,c
  7100   001DE0  0E00               	movlw	0
  7101   001DE2  5ADD               	subwfb	postdec2,f,c
  7102                           
  7103                           ;kernel.c: 114:             if (r_queue.ready_queue[i].time_sleeping == 0)
  7104   001DE4  503B               	movf	decrease_time@i^0,w,c
  7105   001DE6  0D6B               	mullw	107
  7106   001DE8  0ECA               	movlw	low (_r_queue+5)
  7107   001DEA  24F3               	addwf	243,w,c
  7108   001DEC  6ED9               	movwf	fsr2l,c
  7109   001DEE  0E01               	movlw	high (_r_queue+5)
  7110   001DF0  20F4               	addwfc	prodh,w,c
  7111   001DF2  6EDA               	movwf	fsr2h,c
  7112   001DF4  50DE               	movf	postinc2,w,c
  7113   001DF6  10DE               	iorwf	postinc2,w,c
  7114   001DF8  A4D8               	btfss	status,2,c
  7115   001DFA  EF01  F00F         	goto	i2u120_41
  7116   001DFE  EF03  F00F         	goto	i2u120_40
  7117   001E02                     i2u120_41:
  7118   001E02  EF0C  F00F         	goto	i2l2284
  7119   001E06                     i2u120_40:
  7120   001E06                     
  7121                           ;kernel.c: 115:             {;kernel.c: 116:                 r_queue.ready_queue[i].task
      +                          _state = READY;
  7122   001E06  503B               	movf	decrease_time@i^0,w,c
  7123   001E08  0D6B               	mullw	107
  7124   001E0A  0EC7               	movlw	low (_r_queue+2)
  7125   001E0C  24F3               	addwf	243,w,c
  7126   001E0E  6ED9               	movwf	fsr2l,c
  7127   001E10  0E01               	movlw	high (_r_queue+2)
  7128   001E12  20F4               	addwfc	prodh,w,c
  7129   001E14  6EDA               	movwf	fsr2h,c
  7130   001E16  6ADF               	clrf	indf2,c
  7131   001E18                     i2l2284:
  7132                           
  7133                           ;kernel.c: 119:     }
  7134   001E18  2A3B               	incf	decrease_time@i^0,f,c
  7135   001E1A                     i2l2286:
  7136   001E1A  EE23  F0DD         	lfsr	2,_r_queue+536
  7137   001E1E  50DE               	movf	postinc2,w,c
  7138   001E20  5C3B               	subwf	decrease_time@i^0,w,c
  7139   001E22  A0D8               	btfss	status,0,c
  7140   001E24  EF16  F00F         	goto	i2u121_41
  7141   001E28  EF18  F00F         	goto	i2u121_40
  7142   001E2C                     i2u121_41:
  7143   001E2C  EFD6  F00E         	goto	i2l2278
  7144   001E30                     i2u121_40:
  7145   001E30  0012               	return		;funcret
  7146   001E32                     __end_of_decrease_time:
  7147                           	callstack 0
  7148                           
  7149                           	psect	smallconst
  7150   000800                     __psmallconst:
  7151                           	callstack 0
  7152   000800  00                 	db	0
  7153   000801  00                 	db	0	; dummy byte at the end
  7154   000800                     __smallconst    set	__psmallconst
  7155   000800                     __mediumconst   set	__psmallconst
  7156   000002                     __activetblptr  equ	2
  7157                           
  7158                           	psect	rparam
  7159   000001                     ___rparam_used  equ	1
  7160   000000                     ___param_bank   equ	0
  7161   000000                     __Lparam        equ	__Lrparam
  7162   000000                     __Hparam        equ	__Hrparam
  7163                           
  7164                           	psect	temp
  7165   000001                     btemp:
  7166                           	callstack 0
  7167   000001                     	ds	32
  7168   000001                     wtemp0          set	btemp
  7169   000003                     wtemp1          set	btemp+2
  7170   000005                     wtemp2          set	btemp+4
  7171   000007                     wtemp3          set	btemp+6
  7172   000009                     wtemp4          set	btemp+8
  7173   00000B                     wtemp5          set	btemp+10
  7174   000002                     wtemp8          set	btemp+1
  7175   000001                     ttemp0          set	btemp
  7176   000004                     ttemp1          set	btemp+3
  7177   000007                     ttemp2          set	btemp+6
  7178   00000A                     ttemp3          set	btemp+9
  7179   000002                     ttemp5          set	btemp+1
  7180   000005                     ttemp6          set	btemp+4
  7181   000009                     ttemp7          set	btemp+8
  7182   000001                     ltemp0          set	btemp
  7183   000005                     ltemp1          set	btemp+4
  7184   000009                     ltemp2          set	btemp+8
  7185   000001                     lltemp0         set	btemp
  7186   000009                     lltemp1         set	btemp+8
  7187   000011                     lltemp2         set	btemp+16
  7188   000019                     lltemp3         set	btemp+24
  7189                           tosu	equ	0xFFF
  7190                           tosh	equ	0xFFE
  7191                           tosl	equ	0xFFD
  7192                           stkptr	equ	0xFFC
  7193                           pclatu	equ	0xFFB
  7194                           pclath	equ	0xFFA
  7195                           pcl	equ	0xFF9
  7196                           tblptru	equ	0xFF8
  7197                           tblptrh	equ	0xFF7
  7198                           tblptrl	equ	0xFF6
  7199                           tablat	equ	0xFF5
  7200                           prodh	equ	0xFF4
  7201                           prodl	equ	0xFF3
  7202                           indf0	equ	0xFEF
  7203                           postinc0	equ	0xFEE
  7204                           postdec0	equ	0xFED
  7205                           preinc0	equ	0xFEC
  7206                           plusw0	equ	0xFEB
  7207                           fsr0h	equ	0xFEA
  7208                           fsr0l	equ	0xFE9
  7209                           wreg	equ	0xFE8
  7210                           indf1	equ	0xFE7
  7211                           postinc1	equ	0xFE6
  7212                           postdec1	equ	0xFE5
  7213                           preinc1	equ	0xFE4
  7214                           plusw1	equ	0xFE3
  7215                           fsr1h	equ	0xFE2
  7216                           fsr1l	equ	0xFE1
  7217                           bsr	equ	0xFE0
  7218                           indf2	equ	0xFDF
  7219                           postinc2	equ	0xFDE
  7220                           postdec2	equ	0xFDD
  7221                           preinc2	equ	0xFDC
  7222                           plusw2	equ	0xFDB
  7223                           fsr2h	equ	0xFDA
  7224                           fsr2l	equ	0xFD9
  7225                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         651
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     23      47
    BANK0           160    108     108
    BANK1           256    108     197
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    accel_pipe$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    create_pipe@p	PTR struct pipe size(1) Largest target is 20
		 -> accel_pipe(COMRAM[20]), 

    create_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    create_task@task	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    ext_int_callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2create_task@new_task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    mutex_init@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    mutex_lock@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    mutex_unlock@m	PTR struct mutex size(2) Largest target is 7
		 -> buffer_mutex(BANK1[7]), 

    new_task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$ready_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), r_queue$ready_queue(BIGRAM[535]), 

    r_queue$task$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    r_queue$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    read_pipe@data	PTR unsigned char  size(2) Largest target is 1
		 -> tarefa_controle_central@data(BANK1[1]), 

    read_pipe@p	PTR struct pipe size(1) Largest target is 20
		 -> accel_pipe(COMRAM[20]), 

    read_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    S272pipe$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    S68tcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    S79ready_queue$task	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), 

    sem_init@sem	PTR struct sem size(1) Largest target is 20
		 -> accel_pipe(COMRAM[20]), 

    sem_post@sem	PTR struct sem size(1) Largest target is 20
		 -> accel_pipe(COMRAM[20]), 

    sem_wait@sem	PTR struct sem size(1) Largest target is 20
		 -> accel_pipe(COMRAM[20]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), 

    t	PTR struct tcb size(2) Largest target is 539
		 -> r_queue(BIGRAM[539]), r_queue$ready_queue(BIGRAM[535]), 

    t$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> idle(), tarefa_acelerador(), tarefa_controle_central(), tarefa_estabilidade(), 
		 -> tarefa_injecao_eletronica(), 

    write_pipe@p	PTR struct pipe size(1) Largest target is 20
		 -> accel_pipe(COMRAM[20]), 

    write_pipe@p$pipe_msg	PTR unsigned char  size(2) Largest target is 80
		 -> _uDynamicHeap(BANK1[80]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _user_config->_create_pipe
    _create_pipe->_SRAMalloc
    _SRAMalloc->__SRAMmerge
    _os_init->_SRAMInitHeap
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_injecao_eletronica in COMRAM

    None.

Critical Paths under _tarefa_estabilidade in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _idle in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->i2_create_task

Critical Paths under _main in BANK0

    _create_pipe->_SRAMalloc

Critical Paths under _tarefa_acelerador in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK0

    None.

Critical Paths under _tarefa_estabilidade in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _idle in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->i2_create_task

Critical Paths under _main in BANK1

    _main->_create_task
    _os_init->_create_task

Critical Paths under _tarefa_acelerador in BANK1

    _tarefa_acelerador->_write_pipe

Critical Paths under _tarefa_controle_central in BANK1

    _tarefa_controle_central->_read_pipe
    _read_pipe->_sem_wait

Critical Paths under _tarefa_injecao_eletronica in BANK1

    _tarefa_injecao_eletronica->_mutex_lock

Critical Paths under _tarefa_estabilidade in BANK1

    _tarefa_estabilidade->_delay

Critical Paths under _idle in BANK1

    None.

Critical Paths under _idle in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tarefa_acelerador in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK2

    None.

Critical Paths under _tarefa_estabilidade in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _idle in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tarefa_acelerador in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK3

    None.

Critical Paths under _tarefa_estabilidade in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _idle in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tarefa_acelerador in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK4

    None.

Critical Paths under _tarefa_estabilidade in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _idle in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tarefa_acelerador in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK5

    None.

Critical Paths under _tarefa_estabilidade in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _idle in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tarefa_acelerador in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK6

    None.

Critical Paths under _tarefa_estabilidade in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _idle in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tarefa_acelerador in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_injecao_eletronica in BANK7

    None.

Critical Paths under _tarefa_estabilidade in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _idle in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2445
                        _create_task
                            _os_init
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1695
                       _start_timer0
                        _user_config
 ---------------------------------------------------------------------------------
 (2) _user_config                                          0     0      0    1695
                           _adc_init
                      _config_timer0
                        _create_pipe
                       _int_ext_init
                         _mutex_init
                           _pwm_init
                       _start_timer0
 ---------------------------------------------------------------------------------
 (3) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           2     0      2      67
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _int_ext_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          1     0      1    1628
                                             12 COMRAM     1     0      1
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             3     0      3      92
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                           11     9      2    1378
                                              8 COMRAM     4     2      2
                                              0 BANK0      7     7      0
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           8     6      2     579
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_init                                              0     0      0     454
                       _SRAMInitHeap
                      _config_timer0
                        _create_task
 ---------------------------------------------------------------------------------
 (2) _create_task                                        112   109      3     296
                                              0 COMRAM     4     1      3
                                              0 BANK1    108   108      0
 ---------------------------------------------------------------------------------
 (3) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     158
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_acelerador                                    5     5      0    1012
                                             13 BANK1      5     5      0
                           _adc_read
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     3      2     944
                                              8 BANK1      5     3      2
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             8     7      1     529
                                             18 BANK1      8     7      1
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     337
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  8     8      0     337
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             3     2      1     192
                                             18 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             4     2      2       0
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              2     2      0    2052
                                             32 BANK1      2     2      0
                            ___awmod
                         _mutex_lock
                       _mutex_unlock
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            6     3      3     944
                                             26 BANK1      6     3      3
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             8     7      1     529
                                             18 BANK1      8     7      1
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             3     2      1     192
                                             18 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         6     4      2     179
                                             34 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           9     7      2     529
                                             34 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     337
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  8     8      0     337
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_injecao_eletronica                            1     1      0    1261
                                             43 BANK1      1     1      0
                         _mutex_lock
                       _mutex_unlock
                            _pwm_set
                              _yield
 ---------------------------------------------------------------------------------
 (7) _yield                                                7     7      0     337
                                             34 BANK1      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _pwm_set                                              5     5      0     120
                                             34 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         6     4      2     179
                                             34 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           9     7      2     529
                                             34 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     337
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  8     8      0     337
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_estabilidade                                  0     0      0     755
                       _change_state
                              _delay
 ---------------------------------------------------------------------------------
 (7) _delay                                                9     7      2     371
                                             44 BANK1      9     7      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _change_state                                         8     8      0     384
                                             44 BANK1      8     8      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     337
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  8     8      0     337
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                19    19      0     838
                                              4 COMRAM    19    19      0
                      _decrease_time
                          _scheduler
                      i2_create_task
 ---------------------------------------------------------------------------------
 (12) i2_create_task                                     112   109      3     290
                                              0 COMRAM     4     1      3
                                              0 BANK0    108   108      0
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     337
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  8     8      0     337
 ---------------------------------------------------------------------------------
 (12) _decrease_time                                       3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _create_task
   _os_init
     _SRAMInitHeap
     _config_timer0
     _create_task
   _os_start
     _start_timer0
     _user_config
       _adc_init
       _config_timer0
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _int_ext_init
       _mutex_init
       _pwm_init
       _start_timer0

 _tarefa_acelerador (ROOT)
   _adc_read
   _write_pipe
     _sem_post
     _sem_wait
       _scheduler
         _priority_scheduler

 _tarefa_controle_central (ROOT)
   ___awmod
   _mutex_lock
     _scheduler
       _priority_scheduler
   _mutex_unlock
   _read_pipe
     _sem_post
     _sem_wait
       _scheduler

 _tarefa_injecao_eletronica (ROOT)
   _mutex_lock
     _scheduler
       _priority_scheduler
   _mutex_unlock
   _pwm_set
   _yield
     _scheduler

 _tarefa_estabilidade (ROOT)
   _change_state
     _scheduler
       _priority_scheduler
   _delay
     _scheduler

 _idle (ROOT)

 _idle (ROOT)

 _ISR (ROOT)
   _decrease_time
   _scheduler
     _priority_scheduler
   i2_create_task

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     539     26.3%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256    108     197     77.0%
BITBANK0           160      0       0      0.0%
BANK0              160    108     108     67.5%
BITBIGSFRh          66      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     23      47     74.6%
BITBIGSFRlh         48      0       0      0.0%
BITBIGSFRll         44      0       0      0.0%
STACK                0      0      48      0.0%
DATA                 0      0     939      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 29 16:41:11 2025

                                l17 2288                                  l18 2288  
                                l27 242E                                  l46 1A4A  
                                l65 2380                                  l89 2358  
                      create_pipe@p 0045                       SRAMalloc@temp 0060  
                               l210 2408                                 l141 1B78  
                               l150 1B74                                 l143 1AAA  
                               l127 21B4                                 l303 22FE  
                               l161 2062                                 l226 2420  
                               l219 23F8                                 l166 1BC0  
                               l167 1C50                                 l336 20B8  
                               l281 2110                                 l275 2290  
                               l371 23A8                                 l461 23E4  
                               l374 2414                                 l287 21B6  
                               l296 2300                                 l464 2432  
                               l393 2422                                 l297 2324  
                               _BSR 0FE0                                 _PR2 0FCB  
                               _ISR 0008                                 u821 20A6  
                               u940 2024                                 u941 2020  
                               _TOS 0FFD                       create_task@id 0100  
                      ___awmod@sign 0117                                 prod 0FF3  
                               wreg 0FE8                __end_of_change_state 1694  
                    SRAMalloc@pHeap 0065                   SRAMInitHeap@pHeap 0039  
                _priority_scheduler 1916                                ?_ISR 0039  
                 SRAMInitHeap@count 003B                                ISR@i 004F  
                              l2030 200E                                l2040 2054  
                              l2032 2024                                l2034 2030  
                              l2026 1FFE                                l2036 2038  
                              l2028 2006                                l2038 2048  
                              l2500 1A76                                l2502 1A7E  
                              l2520 1B10                                l2512 1AB8  
                              l2504 1A8C                                l2450 1B7A  
                              l2530 1B38                                l2522 1B1A  
                              l2514 1ACA                                l2506 1A96  
                              l2452 1B92                                l2532 1B44  
                              l2516 1AE6                                l2540 2164  
                              l2550 191E                                l1910 2406  
                              l2462 1BCE                                l2454 1B9E  
                              l2534 1B68                                l2518 1AFE  
                              l2542 2178                                l2630 22DE  
                              l2560 198A                                l2552 1928  
                              l2480 1C22                                l2456 1BAA  
                              l2528 1B2A                                l1840 235A  
                              l2544 2184                                l1920 2416  
                              l1912 23E6                                l2640 22FA  
                              l2632 22EA                                l2570 1A0C  
                              l2562 19B6                                l2554 193C  
                              l1922 23CA                                l1930 206C  
                              l2482 1C2E                                l2490 1C42  
                              l2474 1BF8                                l2458 1BBA  
                              l1842 2368                                l2546 2190  
                              l1914 23E8                                l2634 22EE  
                              l2626 22CC                                l2650 240A  
                              l2572 1A1C                                l2564 19D8  
                              l2556 1944                                l1924 23D4  
                              l1940 2086                                l1932 2070  
                              l1908 23FA                                l2484 1C3C  
                              l2476 1C0E                                l2468 1BE0  
                              l1844 2374                                l2548 21A2  
                              l1916 23EC                                l2636 22F2  
                              l2628 22D6                                l2652 240E  
                              l2574 1A28                                l2566 19EC  
                              l2558 1962                                l1942 2088  
                              l1934 2078                                l2478 1C1A  
                              l2494 1A58                                l1918 23F2  
                              l1926 2430                                l2638 22F6  
                              l2654 2410                                l2576 1A40  
                              l2568 19F0                                l2656 242A  
                              l2840 229E                                l1944 208A  
                              l1936 207C                                l1928 2068  
                              l2496 1A6A                                l2850 213E  
                              l2842 22B8                                l1946 208C  
                              l1938 2084                                l2860 21C6  
                              l2852 214A                                l2844 22C4  
                              l1948 20AE                                l1892 2330  
                              l2870 21F6                                l2862 21CA  
                              l2854 214E                                l2846 2112  
                              l2838 2292                                l1894 233C  
                              l2880 2322                                l2872 21FA  
                              l2864 21D8                                l2856 215C  
                              l2848 2124                                l1896 234A  
                              l2874 2300                                l2866 21EC  
                              l2858 21B8                                l2876 2310  
                              l2868 21F2                                l2980 23A4  
                              l2878 2314                                l2974 2382  
                              l2982 224A                                l2976 238E  
                              l2984 2284                                l2978 23A0  
                              u1410 1BBA                                u1411 1BB6  
                              u1420 1BCE                                u1500 1AE6  
                              u1421 1BCA                                u1501 1AE2  
                              u1430 1BDC                                u1510 1B10  
                              u1431 1BD8                                u1511 1B0C  
                              u1440 1BF4                                _LATD 0F8C  
                              u1441 1BF0                                u1450 1C0E  
                              u1451 1C0A                                u1460 1A6A  
                              u1461 1A66                                u1470 1AA6  
                              u1471 1AA2                                u1480 1AB8  
                              u1481 1AB4                                u1490 1ACA  
                              u1491 1AC6                                i1l80 1152  
                              i1l82 1168                                i1l77 112E  
                              i1l86 1EB6                                i1l78 10A4  
                              _TMR0 0FD6                                _WREG 0FE8  
                       _user_config 22CC                                _idle 2422  
                              _main 224A                                fsr0h 0FEA  
                              fsr1h 0FE2                                indf0 0FEF  
                              fsr2h 0FDA                                fsr0l 0FE9  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9                                btemp 0001  
                      _start_timer0 2430                                prodh 0FF4  
                              prodl 0FF3                                start 000C  
                   SRAMalloc@nBytes 0064     __end_of_tarefa_controle_central 2164  
                      ___param_bank 0000                     SRAMalloc@segLen 0062  
 __end_of_tarefa_injecao_eletronica 2202                               ??_ISR 003D  
                 _tarefa_acelerador 2290                               ?_idle 0039  
                             ?_main 0039               __end_of_decrease_time 1E32  
                   __end_of___awmod 1D02                               _T2CON 0FCA  
                             i1l102 0E48                               i1l103 0DBE  
                             i1l112 1DA2                               i1l105 0E6C  
                             i1l130 1FFC                               i1l107 0E82  
                             i1l133 1F26                               i1l213 23AC  
                             i1l223 1F94                               i1l216 23C8  
                             i1l350 13F4                               i1l352 140A  
                             i1l347 13D0                               i1l363 18DA  
                             i1l348 1346                               i1l364 1850  
                             i1l390 1692                               i1l366 18FE  
                             i1l711 1D00                               i1l368 1914  
                             i1l385 1658                               i1l386 15CE  
                             i2l404 1E30                               i1l388 167C  
                             i2l336 210E                               i2l453 0B1E  
                             i2l437 08C6                               i2l454 0A96  
                             i2l438 0870                               i2l456 0B42  
                             i2l458 0B58                  ?_tarefa_acelerador 0039  
                        __SRAMmerge 1B7A                               _delay 116A  
               ??_tarefa_acelerador 010D                     create_task@task 003A  
                             _yield 1694                     __end_of_os_init 23AA  
                             tablat 0FF5                               ltemp0 0001  
                             ltemp1 0005                               ltemp2 0009  
                             plusw0 0FEB                               plusw1 0FE3  
                             plusw2 0FDB                     __end_of_pwm_set 1F96  
                             ttemp0 0001                               ttemp1 0004  
                             ttemp2 0007                               ttemp3 000A  
                             ttemp5 0002                               ttemp6 0005  
                             ttemp7 0009                               status 0FD8  
                   ??_config_timer0 0039                               wtemp0 0001  
                             wtemp1 0003                               wtemp2 0005  
                             wtemp3 0007                               wtemp4 0009  
                             wtemp5 000B                               wtemp8 0002  
                    write_pipe@data 0109                     __initialization 2202  
                      __end_of_idle 242A                        __end_of_main 2290  
         __end_of_tarefa_acelerador 22CC                              ??_idle 0100  
                            ??_main 0046                       __activetblptr 0002  
                            ?_delay 012C                              _ADCON0 0FC2  
                            _ADCON1 0FC1                              _ADCON2 0FC0  
                            _ADRESH 0FC4                              _ADRESL 0FC3  
                            _CCPR1L 0FBE                              ?_yield 0039  
                  __end_of_adc_init 240A                    __end_of_adc_read 23CA  
                            i1l2120 1D04                              i1l2130 1DA0  
                            i1l2122 1D30                              i1l2300 1C86  
                            i1l2124 1D5C                              i1l2310 1CCC  
                            i1l2302 1C98                              i1l2126 1D6E  
                            i1l2118 1D02                              i1l2320 1CF8  
                            i1l2312 1CD4                              i1l2304 1CA0  
                            i1l2128 1D94                              i1l2170 1F80  
                            i1l2162 1F2C                              i1l2314 1CDA  
                            i1l2306 1CA8                              i1l2164 1F34  
                            i1l2308 1CB6                              i1l2316 1CE0  
                            i1l2166 1F62                              i1l2318 1CF0  
                            i1l2168 1F68                              i1l2600 1024  
                            i1l2290 1C56                              i1l2610 110A  
                            i1l2602 1044                              i1l2292 1C64  
                            i1l2620 1E66                              i1l2612 1130  
                            i1l2604 1046                              i1l2700 1F96  
                            i1l2294 1C6C                              i1l2622 1E96  
                            i1l2606 1066                              i1l2614 1166  
                            i1l2710 1FFA                              i1l2702 1F98  
                            i1l2800 1410                              i1l2296 1C70  
                            i1l2288 1C52                              i1l2720 1F1A  
                            i1l2712 1EB8                              i1l2624 1EB4  
                            i1l2616 1E32                              i1l2608 10B8  
                            i1l2704 1FA4                              i1l2810 1508  
                            i1l2802 1412                              i1l2730 1694  
                            i1l2298 1C7E                              i1l2722 1F24  
                            i1l2714 1EBA                              i1l2618 1E34  
                            i1l2706 1FD2                              i1l2820 156E  
                            i1l2812 151C                              i1l2804 1430  
                            i1l2740 178A                              i1l2732 1696  
                            i1l2660 0B88                              i1l2716 1EC6  
                            i1l2724 23AA                              i1l2580 0E86  
                            i1l2708 1FF0                              i1l2830 165A  
                            i1l2822 1570                              i1l2806 1450  
                            i1l2814 152C                              i1l2750 17F0  
                            i1l2742 179E                              i1l2734 16B4  
                            i1l2670 0C20                              i1l2662 0BA0  
                            i1l2718 1EFC                              i1l2726 23BA  
                            i1l2590 0F8C                              i1l2582 0EAA  
                            i1l2824 1590                              i1l2832 1690  
                            i1l2816 1530                              i1l2808 14B6  
                            i1l2760 18DC                              i1l2752 17F2  
                            i1l2736 16D4                              i1l2744 17AE  
                            i1l2672 0C40                              i1l2680 0D1C  
                            i1l2664 0BAA                              i1l2592 0FDE  
                            i1l2584 0EEA                              i1l2826 15E2  
                            i1l2818 154E                              i1l2770 11AA  
                            i1l2754 1812                              i1l2762 1912  
                            i1l2746 17B2                              i1l2738 1738  
                            i1l2690 0D80                              i1l2682 0D20  
                            i1l2674 0CA6                              i1l2666 0BB0  
                            i1l2658 0B86                              i1l2594 0FF2  
                            i1l2586 0F06                              i1l2578 0E84  
                            i1l2828 1634                              i1l2780 12A4  
                            i1l2772 1210                              i1l2764 116A  
                            i1l2756 1864                              i1l2748 17D0  
                            i1l2692 0DD2                              i1l2684 0D3E  
                            i1l2676 0CF8                              i1l2668 0C04  
                            i1l2588 0F26                              i1l2596 1002  
                            i1l2790 1308                              i1l2782 12A8  
                            i1l2774 1262                              i1l2766 116C  
                            i1l2758 18B6                              i1l2694 0E24  
                            i1l2686 0D5E                              i1l2678 0D0C  
                            i1l2598 1006                              i1l2792 135A  
                            i1l2784 12C6                              i1l2776 1276  
                            i1l2768 118A                              i1l2696 0E4A  
                            i1l2688 0D60                              i2l2330 20CE  
                            i1l2794 13AC                              i1l2786 12E6  
                            i1l2778 1286                              i1l2698 0E80  
                            i2l2340 20E0                              i2l2332 20D2  
                            i2l2324 20BE                              i1l2796 13D2  
                            i1l2788 12E8                              i2l2342 20E2  
                            i2l2334 20DA                              i2l2326 20C2  
                            i1l2798 1408                              i2l2280 1DCE  
                            i2l2344 2104                              i2l2336 20DC  
                            i2l2328 20C6                              i2l2282 1E06  
                            i2l2338 20DE                              i2l2284 1E18  
                            i2l2276 1DA4                              i2l2278 1DAC  
                            i2l2286 1E1A                              i2l2900 08D4  
                            i2l2910 091E                              i2l2902 08D6  
                            i2l2920 09FA                              i2l2912 0982  
                            i2l2904 08DE                              i2l2930 0AAA  
                            i2l2922 0A16                              i2l2914 09D2  
                            i2l2906 08E2                              i2l2932 0AFA  
                            i2l2924 0A36                              i2l2916 09E6  
                            i2l2908 08FE                              i2l2934 0B20  
                            i2l2926 0A38                              i2l2918 09F6  
                            i2l2928 0A58                              i2l2936 0B56  
                            u152_20 198A                              u152_21 1986  
                            i2l2890 0868                              i2l2882 0834  
                            i2l2892 0876                              i2l2884 0844  
                            i2l2894 0898                              i2l2886 0846  
                            i2l2896 08AE                              i2l2888 0856  
                            u153_20 19B6                              u153_21 19B2  
                            i2l2898 08B0                              u154_20 1A0C  
                            u154_21 1A08                              u155_20 1A1C  
                            u155_21 1A18                              u185_20 21EC  
                            u185_21 21E8                              u186_20 2310  
                            u186_21 230C                              _STATUS 0FD8  
                            _STKPTR 0FFC                           ??___awmod 0116  
                 __end_of_SRAMalloc 1B7A                       mutex_unlock@m 0122  
                            clear_0 221C                              clear_1 222E  
                            clear_2 223A                     ___awmod@divisor 0114  
                            isa$std 0001                     ___awmod@counter 0116  
                     ?_int_ext_init 0039         __end_of_tarefa_estabilidade 2330  
                  __end_of_sem_init 2382                    __end_of_sem_wait 116A  
                  __end_of_sem_post 1EB8                    __end_of_os_start 2416  
                            lltemp0 0001                              lltemp1 0009  
                            lltemp2 0011                              lltemp3 0019  
                      __mediumconst 0800                           ??_os_init 003D  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                         ?__SRAMmerge 0039  
                  __end_of_pwm_init 23FA                           ??_pwm_set 0122  
                        __accesstop 0060             __end_of__initialization 2240  
                     ___rparam_used 0001                        _change_state 140C  
                    __pcstackCOMRAM 0039                          ___inthi_sp 05F0  
                      __pidataBANK1 2434                          _accel_data 016C  
                     __end_of_delay 140C                          _accel_pipe 0025  
                     __end_of_yield 1916                      ??_int_ext_init 0039  
                   __SRAMmerge@uSum 003C                             ??_delay 012E  
                           ??_yield 0122                          __pbssBANK1 016C  
                      ?_user_config 0039                       __uDynamicHeap 016D  
                     i2_create_task 20BA                             _CCP1CON 0FBD  
                         ?_adc_init 0039                           ?_adc_read 0100  
          ?_tarefa_controle_central 0039                         sem_init@sem 0039  
                    ?i2_create_task 0039                         sem_wait@sem 0112  
                           __Hparam 0000                         sem_post@sem 0112  
                         ?_sem_init 0039                           ?_sem_wait 0112  
                         ?_sem_post 0112                             __Lparam 0000  
                         ?_os_start 0039                             ___awmod 1C52  
                         ?_pwm_init 0039                        __psmallconst 0800  
        ?_tarefa_injecao_eletronica 0039                             __pcinit 2202  
                           __ramtop 0800                       ?_SRAMInitHeap 0039  
                        ??_adc_init 0039                          ??_adc_read 0102  
                           __ptext0 224A                             __ptext1 240A  
                           __ptext2 22CC                             __ptext3 2430  
                           __ptext4 23E6                             __ptext5 2330  
                           __ptext6 2416                             __ptext7 2164  
                           __ptext8 235A                             __ptext9 1A54  
                         _T0CONbits 0FD5                    ___awmod@dividend 0112  
                 __end_of_read_pipe 1F28                             _r_queue 01C5  
                           _os_init 2382                             _pwm_set 1F28  
                 __end_of_scheduler 2430                      __pintcode_body 0802  
              end_of_initialization 2240                     i2create_task@id 0060  
                     __Lmediumconst 0000                __end_of_int_ext_init 2422  
                           int_func 0802               __end_of_config_timer0 23E6  
                        ??_sem_init 003C                          ??_sem_wait 0113  
                        ??_sem_post 0113                          ??_os_start 0046  
                      _buffer_mutex 01BD                             postdec0 0FED  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc2 0FDE                          ??_pwm_init 0039  
                    ??_SRAMInitHeap 0039                           _SRAMalloc 1A54  
                        _mutex_init 2330                          _mutex_lock 0B86  
                  _ext_int_callback 0021                           _TRISAbits 0F92  
                         _TRISBbits 0F93                           _TRISCbits 0F94  
                         _TRISDbits 0F95                        ??__SRAMmerge 003B  
                     sem_init@value 003A                     ??i2_create_task 003C  
                     ??_create_pipe 0046                       ??_create_task 003C  
                     ?_mutex_unlock 0122                         _CCP1CONbits 0FBD  
             i2create_task@new_task 0061                  __end_of__SRAMmerge 1C52  
                       mutex_init@m 0039                         mutex_lock@m 0122  
                        _write_pipe 1F96               i2create_task@priority 0039  
                     _decrease_time 1DA4                          ?_SRAMalloc 0041  
               start_initialization 2202                  SRAMalloc@segHeader 0063  
                       __end_of_ISR 0B86                    __SRAMmerge@pSegA 0039  
                  __SRAMmerge@pSegB 003D                    __SRAMmerge@uSegA 003F  
                  __SRAMmerge@uSegB 0040                      ??_mutex_unlock 0124  
                     ?_start_timer0 0039                         pwm_set@duty 0125  
               __end_of_create_pipe 21B6                 __end_of_create_task 20BA  
       tarefa_controle_central@data 0121                         __pdataBANK1 01C4  
                 pwm_set@duty_cycle 0124         tarefa_controle_central@duty 0120  
                    ?_decrease_time 0039                          read_pipe@p 011A  
                       __pbssBIGRAM 01C5                         ?_mutex_init 0039  
                       ?_mutex_lock 0122                         __pbssCOMRAM 0021  
                     __pcstackBANK0 0060                       __pcstackBANK1 0100  
                    ??_start_timer0 0039                __end_of_SRAMInitHeap 2064  
                         __pintcode 0008                            ?___awmod 0112  
       ??_tarefa_injecao_eletronica 012B                         ?_write_pipe 0108  
                      _int_ext_init 2416                         __smallconst 0800  
                       ??_SRAMalloc 0043                            ?_os_init 0039  
                          ?_pwm_set 0039                           _read_pipe 1EB8  
                         delay@time 012C                           _scheduler 242A  
                       _create_pipe 2164                         _create_task 2064  
                          _LATDbits 0F8C                            i1u101_20 1D30  
                          i1u101_21 1D2C                            i1u103_20 1F62  
                          i1u103_21 1F5E                            i1u122_20 1C64  
                          i1u122_21 1C60                            i1u123_20 1C7E  
                          i1u123_21 1C7A                            i1u124_20 1C98  
                          i1u124_21 1C94                            i1u125_20 1CB6  
                          i1u125_21 1CB2                            i1u126_20 1CCC  
                          i1u126_21 1CC8                            i1u127_20 1CF0  
                          i1u127_21 1CEC                            i1u160_20 1066  
                          i1u160_21 1062                            i1u161_20 112A  
                          i1u161_21 1126                            i1u170_20 16D4  
                          i1u162_20 1E66                            i1u170_21 16D0  
                          i1u162_21 1E62                            i1u171_20 17AE  
                          i1u163_20 0BA0                            i1u171_21 17AA  
                          i1u163_21 0B9C                            i1u180_20 1450  
                          i1u172_20 17F0                            i1u164_20 0C40  
                          i1u156_20 0EAA                            i1u180_21 144C  
                          i1u172_21 17EC                            i1u164_21 0C3C  
                          i1u156_21 0EA6                            i1u181_20 152C  
                          i1u173_20 1812                            i1u165_20 0D1C  
                          i1u157_20 0F26                            i1u181_21 1528  
                          i1u173_21 180E                            i1u165_21 0D18  
                          i1u157_21 0F22                            i1u182_20 156E  
                          i1u174_20 18D6                            i1u166_20 0D5E  
                          i1u158_20 1002                            i1u182_21 156A  
                          i1u174_21 18D2                            i1u166_21 0D5A  
                          i1u158_21 0FFE                            i1u183_20 1590  
                          i1u175_20 11AA                            i1u167_20 0D80  
                          i1u159_20 1044                            i1u183_21 158C  
                          i1u175_21 11A6                            i1u167_21 0D7C  
                          i1u159_21 1040                            i1u184_20 1654  
                          i1u176_20 1286                            i1u168_20 0E44  
                          i1u184_21 1650                            i1u176_21 1282  
                          i1u168_21 0E40                            i2u120_40 1E06  
                          i2u120_41 1E02                            i1u177_20 12E6  
                          i1u169_20 23BA                            i1u177_21 12E2  
                          i1u169_21 23B6                            i2u121_40 1E30  
                          i2u121_41 1E2C                            i1u178_20 1308  
                          i1u178_21 1304                            i1u179_20 13CC  
                          i1u179_21 13C8                            i2u119_40 1DCE  
                          i2u119_41 1DCA                            i2u128_41 20FC  
                          i2u190_40 08C6                            i2u190_41 08C2  
                          i2u191_40 08D4                            i2u191_41 08D0  
                          i2u192_40 091E                            i2u192_41 091A  
                          i2u193_40 09F6                            i2u193_41 09F2  
                          i2u194_40 0A36                            i2u194_41 0A32  
                          i2u195_40 0A58                            i2u187_40 0844  
                          i2u195_41 0A54                            i2u187_41 0840  
                          i2u196_40 0B1A                            i2u188_40 0856  
                          i2u196_41 0B16                            i2u188_41 0852  
                          i2u189_40 0898                            i2u189_41 0894  
               create_task@new_task 0101          __end_of_priority_scheduler 1A54  
                   ??_decrease_time 0039                __end_of_mutex_unlock 1DA4  
                        _ADCON0bits 0FC2                 create_task@priority 0039  
             change_state@new_state 0133                         write_pipe@p 0108  
                    decrease_time@i 003B                         _INTCON2bits 0FF1  
                        ?_read_pipe 011A           _tarefa_injecao_eletronica 21B6  
                 i2create_task@task 003A               tarefa_acelerador@data 0111  
                          __Hrparam 0000                       ?_change_state 0039  
                          __Lrparam 0000                 _tarefa_estabilidade 2300  
                       _est_created 0023                            _adc_init 23FA  
                          _adc_read 23AA                __end_of_start_timer0 2434  
tarefa_injecao_eletronica@last_duty 01C4                            __ptext10 1B7A  
                          __ptext11 23FA                            __ptext20 1916  
                          __ptext12 2382                            __ptext21 1E32  
                          __ptext13 2064                            __ptext30 1F28  
                          __ptext22 23AA                            __ptext14 23CA  
                          __ptext31 2300                            __ptext23 2110  
                          __ptext15 1FFE                            __ptext32 116A  
                          __ptext24 1EB8                            __ptext16 2290  
                          __ptext33 140C                            __ptext25 1D02  
                          __ptext17 1F96                            __ptext34 2422  
                          __ptext26 0B86                            __ptext18 0E84  
                          __ptext27 1C52                            __ptext19 242A  
                          __ptext36 20BA                            __ptext28 21B6  
                          __ptext37 1DA4                            __ptext29 1694  
              ?_tarefa_estabilidade 0039             _tarefa_controle_central 2110  
                     ??_user_config 0046                            _est_flag 0024  
             __end_ofi2_create_task 2110                     mutex_unlock@tid 0127  
                    ??_change_state 012C                            _sem_init 235A  
                          _sem_wait 0E84                            _sem_post 1E32  
                          _os_start 240A                            isa$xinst 0000  
                          _pwm_init 23E6                        _SRAMInitHeap 1FFE  
                      ??_mutex_init 003B                        ??_mutex_lock 0124  
              tarefa_acelerador@raw 010F                          _INTCONbits 0FF2  
             ??_tarefa_estabilidade 0135                         ??_read_pipe 011D  
                          intlevel1 0000                            intlevel2 0000  
                     _config_timer0 23CA                 __end_of_user_config 2300  
                __end_of_mutex_init 235A                  __end_of_mutex_lock 0E84  
     tarefa_injecao_eletronica@duty 012B                        ??_write_pipe 010A  
                     read_pipe@data 011B           ??_tarefa_controle_central 0120  
                      ?_create_pipe 0045                        ?_create_task 0039  
                      _mutex_unlock 1D02                  __end_of_write_pipe 1FFE  
                    ?_config_timer0 0039  
